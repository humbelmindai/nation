
/**
 * Client
**/

import * as runtime from './runtime/library.js';
import $Types = runtime.Types // general types
import $Public = runtime.Types.Public
import $Utils = runtime.Types.Utils
import $Extensions = runtime.Types.Extensions
import $Result = runtime.Types.Result

export type PrismaPromise<T> = $Public.PrismaPromise<T>


/**
 * Model User
 * 
 */
export type User = $Result.DefaultSelection<Prisma.$UserPayload>
/**
 * Model UserAddress
 * 
 */
export type UserAddress = $Result.DefaultSelection<Prisma.$UserAddressPayload>
/**
 * Model UserSession
 * 
 */
export type UserSession = $Result.DefaultSelection<Prisma.$UserSessionPayload>
/**
 * Model Store
 * 
 */
export type Store = $Result.DefaultSelection<Prisma.$StorePayload>
/**
 * Model StoreStaff
 * 
 */
export type StoreStaff = $Result.DefaultSelection<Prisma.$StoreStaffPayload>
/**
 * Model ProductCategory
 * 
 */
export type ProductCategory = $Result.DefaultSelection<Prisma.$ProductCategoryPayload>
/**
 * Model Product
 * 
 */
export type Product = $Result.DefaultSelection<Prisma.$ProductPayload>
/**
 * Model Order
 * 
 */
export type Order = $Result.DefaultSelection<Prisma.$OrderPayload>
/**
 * Model OrderItem
 * 
 */
export type OrderItem = $Result.DefaultSelection<Prisma.$OrderItemPayload>
/**
 * Model Review
 * 
 */
export type Review = $Result.DefaultSelection<Prisma.$ReviewPayload>
/**
 * Model Professional
 * 
 */
export type Professional = $Result.DefaultSelection<Prisma.$ProfessionalPayload>
/**
 * Model Consultation
 * 
 */
export type Consultation = $Result.DefaultSelection<Prisma.$ConsultationPayload>
/**
 * Model BlogPost
 * 
 */
export type BlogPost = $Result.DefaultSelection<Prisma.$BlogPostPayload>
/**
 * Model AuditLog
 * 
 */
export type AuditLog = $Result.DefaultSelection<Prisma.$AuditLogPayload>

/**
 * Enums
 */
export namespace $Enums {
  export const UserRole: {
  consumer: 'consumer',
  vendor: 'vendor',
  professional: 'professional',
  admin: 'admin'
};

export type UserRole = (typeof UserRole)[keyof typeof UserRole]


export const UserStatus: {
  active: 'active',
  suspended: 'suspended',
  deleted: 'deleted'
};

export type UserStatus = (typeof UserStatus)[keyof typeof UserStatus]


export const AgeVerificationMethod: {
  self_declaration: 'self_declaration',
  id_scan: 'id_scan',
  manual_review: 'manual_review'
};

export type AgeVerificationMethod = (typeof AgeVerificationMethod)[keyof typeof AgeVerificationMethod]


export const AddressType: {
  billing: 'billing',
  shipping: 'shipping',
  primary: 'primary'
};

export type AddressType = (typeof AddressType)[keyof typeof AddressType]


export const BusinessType: {
  dispensary: 'dispensary',
  delivery: 'delivery',
  cultivation: 'cultivation',
  manufacturing: 'manufacturing'
};

export type BusinessType = (typeof BusinessType)[keyof typeof BusinessType]


export const StoreStatus: {
  pending: 'pending',
  active: 'active',
  suspended: 'suspended',
  closed: 'closed'
};

export type StoreStatus = (typeof StoreStatus)[keyof typeof StoreStatus]


export const ComplianceStatus: {
  compliant: 'compliant',
  warning: 'warning',
  violation: 'violation'
};

export type ComplianceStatus = (typeof ComplianceStatus)[keyof typeof ComplianceStatus]


export const TrackTraceSystem: {
  metrc: 'metrc',
  leafdata: 'leafdata',
  biotrack: 'biotrack',
  other: 'other'
};

export type TrackTraceSystem = (typeof TrackTraceSystem)[keyof typeof TrackTraceSystem]


export const ProductType: {
  flower: 'flower',
  edibles: 'edibles',
  concentrates: 'concentrates',
  topicals: 'topicals',
  accessories: 'accessories',
  other: 'other'
};

export type ProductType = (typeof ProductType)[keyof typeof ProductType]


export const StrainType: {
  sativa: 'sativa',
  indica: 'indica',
  hybrid: 'hybrid',
  cbd: 'cbd',
  unknown: 'unknown'
};

export type StrainType = (typeof StrainType)[keyof typeof StrainType]


export const ProductStatus: {
  draft: 'draft',
  active: 'active',
  out_of_stock: 'out_of_stock',
  discontinued: 'discontinued',
  pending_approval: 'pending_approval'
};

export type ProductStatus = (typeof ProductStatus)[keyof typeof ProductStatus]


export const OrderType: {
  pickup: 'pickup',
  delivery: 'delivery',
  curbside: 'curbside'
};

export type OrderType = (typeof OrderType)[keyof typeof OrderType]


export const OrderStatus: {
  pending: 'pending',
  confirmed: 'confirmed',
  preparing: 'preparing',
  ready: 'ready',
  out_for_delivery: 'out_for_delivery',
  delivered: 'delivered',
  completed: 'completed',
  cancelled: 'cancelled'
};

export type OrderStatus = (typeof OrderStatus)[keyof typeof OrderStatus]


export const PaymentStatus: {
  pending: 'pending',
  processing: 'processing',
  paid: 'paid',
  failed: 'failed',
  refunded: 'refunded',
  partially_refunded: 'partially_refunded'
};

export type PaymentStatus = (typeof PaymentStatus)[keyof typeof PaymentStatus]


export const PaymentMethod: {
  cash: 'cash',
  debit: 'debit',
  credit: 'credit',
  bank_transfer: 'bank_transfer',
  cryptocurrency: 'cryptocurrency'
};

export type PaymentMethod = (typeof PaymentMethod)[keyof typeof PaymentMethod]


export const ReviewableType: {
  store: 'store',
  product: 'product',
  order: 'order'
};

export type ReviewableType = (typeof ReviewableType)[keyof typeof ReviewableType]


export const ReviewStatus: {
  pending: 'pending',
  approved: 'approved',
  rejected: 'rejected',
  flagged: 'flagged'
};

export type ReviewStatus = (typeof ReviewStatus)[keyof typeof ReviewStatus]


export const ProfessionalType: {
  doctor: 'doctor',
  psychologist: 'psychologist',
  therapist: 'therapist',
  nutritionist: 'nutritionist',
  pharmacist: 'pharmacist',
  researcher: 'researcher'
};

export type ProfessionalType = (typeof ProfessionalType)[keyof typeof ProfessionalType]


export const ConsultationType: {
  initial: 'initial',
  follow_up: 'follow_up',
  emergency: 'emergency',
  second_opinion: 'second_opinion'
};

export type ConsultationType = (typeof ConsultationType)[keyof typeof ConsultationType]


export const SessionType: {
  in_person: 'in_person',
  video: 'video',
  phone: 'phone',
  chat: 'chat'
};

export type SessionType = (typeof SessionType)[keyof typeof SessionType]


export const BlogCategory: {
  news: 'news',
  education: 'education',
  research: 'research',
  lifestyle: 'lifestyle',
  medical: 'medical',
  legal: 'legal',
  industry: 'industry'
};

export type BlogCategory = (typeof BlogCategory)[keyof typeof BlogCategory]


export const BlogStatus: {
  draft: 'draft',
  published: 'published',
  archived: 'archived',
  scheduled: 'scheduled'
};

export type BlogStatus = (typeof BlogStatus)[keyof typeof BlogStatus]

}

export type UserRole = $Enums.UserRole

export const UserRole: typeof $Enums.UserRole

export type UserStatus = $Enums.UserStatus

export const UserStatus: typeof $Enums.UserStatus

export type AgeVerificationMethod = $Enums.AgeVerificationMethod

export const AgeVerificationMethod: typeof $Enums.AgeVerificationMethod

export type AddressType = $Enums.AddressType

export const AddressType: typeof $Enums.AddressType

export type BusinessType = $Enums.BusinessType

export const BusinessType: typeof $Enums.BusinessType

export type StoreStatus = $Enums.StoreStatus

export const StoreStatus: typeof $Enums.StoreStatus

export type ComplianceStatus = $Enums.ComplianceStatus

export const ComplianceStatus: typeof $Enums.ComplianceStatus

export type TrackTraceSystem = $Enums.TrackTraceSystem

export const TrackTraceSystem: typeof $Enums.TrackTraceSystem

export type ProductType = $Enums.ProductType

export const ProductType: typeof $Enums.ProductType

export type StrainType = $Enums.StrainType

export const StrainType: typeof $Enums.StrainType

export type ProductStatus = $Enums.ProductStatus

export const ProductStatus: typeof $Enums.ProductStatus

export type OrderType = $Enums.OrderType

export const OrderType: typeof $Enums.OrderType

export type OrderStatus = $Enums.OrderStatus

export const OrderStatus: typeof $Enums.OrderStatus

export type PaymentStatus = $Enums.PaymentStatus

export const PaymentStatus: typeof $Enums.PaymentStatus

export type PaymentMethod = $Enums.PaymentMethod

export const PaymentMethod: typeof $Enums.PaymentMethod

export type ReviewableType = $Enums.ReviewableType

export const ReviewableType: typeof $Enums.ReviewableType

export type ReviewStatus = $Enums.ReviewStatus

export const ReviewStatus: typeof $Enums.ReviewStatus

export type ProfessionalType = $Enums.ProfessionalType

export const ProfessionalType: typeof $Enums.ProfessionalType

export type ConsultationType = $Enums.ConsultationType

export const ConsultationType: typeof $Enums.ConsultationType

export type SessionType = $Enums.SessionType

export const SessionType: typeof $Enums.SessionType

export type BlogCategory = $Enums.BlogCategory

export const BlogCategory: typeof $Enums.BlogCategory

export type BlogStatus = $Enums.BlogStatus

export const BlogStatus: typeof $Enums.BlogStatus

/**
 * ##  Prisma Client ʲˢ
 * 
 * Type-safe database client for TypeScript & Node.js
 * @example
 * ```
 * const prisma = new PrismaClient()
 * // Fetch zero or more Users
 * const users = await prisma.user.findMany()
 * ```
 *
 * 
 * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
 */
export class PrismaClient<
  ClientOptions extends Prisma.PrismaClientOptions = Prisma.PrismaClientOptions,
  U = 'log' extends keyof ClientOptions ? ClientOptions['log'] extends Array<Prisma.LogLevel | Prisma.LogDefinition> ? Prisma.GetEvents<ClientOptions['log']> : never : never,
  ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs
> {
  [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['other'] }

    /**
   * ##  Prisma Client ʲˢ
   * 
   * Type-safe database client for TypeScript & Node.js
   * @example
   * ```
   * const prisma = new PrismaClient()
   * // Fetch zero or more Users
   * const users = await prisma.user.findMany()
   * ```
   *
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
   */

  constructor(optionsArg ?: Prisma.Subset<ClientOptions, Prisma.PrismaClientOptions>);
  $on<V extends U>(eventType: V, callback: (event: V extends 'query' ? Prisma.QueryEvent : Prisma.LogEvent) => void): void;

  /**
   * Connect with the database
   */
  $connect(): $Utils.JsPromise<void>;

  /**
   * Disconnect from the database
   */
  $disconnect(): $Utils.JsPromise<void>;

  /**
   * Add a middleware
   * @deprecated since 4.16.0. For new code, prefer client extensions instead.
   * @see https://pris.ly/d/extensions
   */
  $use(cb: Prisma.Middleware): void

/**
   * Executes a prepared raw query and returns the number of affected rows.
   * @example
   * ```
   * const result = await prisma.$executeRaw`UPDATE User SET cool = ${true} WHERE email = ${'user@email.com'};`
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $executeRaw<T = unknown>(query: TemplateStringsArray | Prisma.Sql, ...values: any[]): Prisma.PrismaPromise<number>;

  /**
   * Executes a raw query and returns the number of affected rows.
   * Susceptible to SQL injections, see documentation.
   * @example
   * ```
   * const result = await prisma.$executeRawUnsafe('UPDATE User SET cool = $1 WHERE email = $2 ;', true, 'user@email.com')
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $executeRawUnsafe<T = unknown>(query: string, ...values: any[]): Prisma.PrismaPromise<number>;

  /**
   * Performs a prepared raw query and returns the `SELECT` data.
   * @example
   * ```
   * const result = await prisma.$queryRaw`SELECT * FROM User WHERE id = ${1} OR email = ${'user@email.com'};`
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $queryRaw<T = unknown>(query: TemplateStringsArray | Prisma.Sql, ...values: any[]): Prisma.PrismaPromise<T>;

  /**
   * Performs a raw query and returns the `SELECT` data.
   * Susceptible to SQL injections, see documentation.
   * @example
   * ```
   * const result = await prisma.$queryRawUnsafe('SELECT * FROM User WHERE id = $1 OR email = $2;', 1, 'user@email.com')
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $queryRawUnsafe<T = unknown>(query: string, ...values: any[]): Prisma.PrismaPromise<T>;


  /**
   * Allows the running of a sequence of read/write operations that are guaranteed to either succeed or fail as a whole.
   * @example
   * ```
   * const [george, bob, alice] = await prisma.$transaction([
   *   prisma.user.create({ data: { name: 'George' } }),
   *   prisma.user.create({ data: { name: 'Bob' } }),
   *   prisma.user.create({ data: { name: 'Alice' } }),
   * ])
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/concepts/components/prisma-client/transactions).
   */
  $transaction<P extends Prisma.PrismaPromise<any>[]>(arg: [...P], options?: { isolationLevel?: Prisma.TransactionIsolationLevel }): $Utils.JsPromise<runtime.Types.Utils.UnwrapTuple<P>>

  $transaction<R>(fn: (prisma: Omit<PrismaClient, runtime.ITXClientDenyList>) => $Utils.JsPromise<R>, options?: { maxWait?: number, timeout?: number, isolationLevel?: Prisma.TransactionIsolationLevel }): $Utils.JsPromise<R>


  $extends: $Extensions.ExtendsHook<"extends", Prisma.TypeMapCb, ExtArgs>

      /**
   * `prisma.user`: Exposes CRUD operations for the **User** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Users
    * const users = await prisma.user.findMany()
    * ```
    */
  get user(): Prisma.UserDelegate<ExtArgs>;

  /**
   * `prisma.userAddress`: Exposes CRUD operations for the **UserAddress** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more UserAddresses
    * const userAddresses = await prisma.userAddress.findMany()
    * ```
    */
  get userAddress(): Prisma.UserAddressDelegate<ExtArgs>;

  /**
   * `prisma.userSession`: Exposes CRUD operations for the **UserSession** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more UserSessions
    * const userSessions = await prisma.userSession.findMany()
    * ```
    */
  get userSession(): Prisma.UserSessionDelegate<ExtArgs>;

  /**
   * `prisma.store`: Exposes CRUD operations for the **Store** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Stores
    * const stores = await prisma.store.findMany()
    * ```
    */
  get store(): Prisma.StoreDelegate<ExtArgs>;

  /**
   * `prisma.storeStaff`: Exposes CRUD operations for the **StoreStaff** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more StoreStaffs
    * const storeStaffs = await prisma.storeStaff.findMany()
    * ```
    */
  get storeStaff(): Prisma.StoreStaffDelegate<ExtArgs>;

  /**
   * `prisma.productCategory`: Exposes CRUD operations for the **ProductCategory** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more ProductCategories
    * const productCategories = await prisma.productCategory.findMany()
    * ```
    */
  get productCategory(): Prisma.ProductCategoryDelegate<ExtArgs>;

  /**
   * `prisma.product`: Exposes CRUD operations for the **Product** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Products
    * const products = await prisma.product.findMany()
    * ```
    */
  get product(): Prisma.ProductDelegate<ExtArgs>;

  /**
   * `prisma.order`: Exposes CRUD operations for the **Order** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Orders
    * const orders = await prisma.order.findMany()
    * ```
    */
  get order(): Prisma.OrderDelegate<ExtArgs>;

  /**
   * `prisma.orderItem`: Exposes CRUD operations for the **OrderItem** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more OrderItems
    * const orderItems = await prisma.orderItem.findMany()
    * ```
    */
  get orderItem(): Prisma.OrderItemDelegate<ExtArgs>;

  /**
   * `prisma.review`: Exposes CRUD operations for the **Review** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Reviews
    * const reviews = await prisma.review.findMany()
    * ```
    */
  get review(): Prisma.ReviewDelegate<ExtArgs>;

  /**
   * `prisma.professional`: Exposes CRUD operations for the **Professional** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Professionals
    * const professionals = await prisma.professional.findMany()
    * ```
    */
  get professional(): Prisma.ProfessionalDelegate<ExtArgs>;

  /**
   * `prisma.consultation`: Exposes CRUD operations for the **Consultation** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Consultations
    * const consultations = await prisma.consultation.findMany()
    * ```
    */
  get consultation(): Prisma.ConsultationDelegate<ExtArgs>;

  /**
   * `prisma.blogPost`: Exposes CRUD operations for the **BlogPost** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more BlogPosts
    * const blogPosts = await prisma.blogPost.findMany()
    * ```
    */
  get blogPost(): Prisma.BlogPostDelegate<ExtArgs>;

  /**
   * `prisma.auditLog`: Exposes CRUD operations for the **AuditLog** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more AuditLogs
    * const auditLogs = await prisma.auditLog.findMany()
    * ```
    */
  get auditLog(): Prisma.AuditLogDelegate<ExtArgs>;
}

export namespace Prisma {
  export import DMMF = runtime.DMMF

  export type PrismaPromise<T> = $Public.PrismaPromise<T>

  /**
   * Validator
   */
  export import validator = runtime.Public.validator

  /**
   * Prisma Errors
   */
  export import PrismaClientKnownRequestError = runtime.PrismaClientKnownRequestError
  export import PrismaClientUnknownRequestError = runtime.PrismaClientUnknownRequestError
  export import PrismaClientRustPanicError = runtime.PrismaClientRustPanicError
  export import PrismaClientInitializationError = runtime.PrismaClientInitializationError
  export import PrismaClientValidationError = runtime.PrismaClientValidationError
  export import NotFoundError = runtime.NotFoundError

  /**
   * Re-export of sql-template-tag
   */
  export import sql = runtime.sqltag
  export import empty = runtime.empty
  export import join = runtime.join
  export import raw = runtime.raw
  export import Sql = runtime.Sql



  /**
   * Decimal.js
   */
  export import Decimal = runtime.Decimal

  export type DecimalJsLike = runtime.DecimalJsLike

  /**
   * Metrics 
   */
  export type Metrics = runtime.Metrics
  export type Metric<T> = runtime.Metric<T>
  export type MetricHistogram = runtime.MetricHistogram
  export type MetricHistogramBucket = runtime.MetricHistogramBucket

  /**
  * Extensions
  */
  export import Extension = $Extensions.UserArgs
  export import getExtensionContext = runtime.Extensions.getExtensionContext
  export import Args = $Public.Args
  export import Payload = $Public.Payload
  export import Result = $Public.Result
  export import Exact = $Public.Exact

  /**
   * Prisma Client JS version: 5.22.0
   * Query Engine version: 605197351a3c8bdd595af2d2a9bc3025bca48ea2
   */
  export type PrismaVersion = {
    client: string
  }

  export const prismaVersion: PrismaVersion 

  /**
   * Utility Types
   */


  export import JsonObject = runtime.JsonObject
  export import JsonArray = runtime.JsonArray
  export import JsonValue = runtime.JsonValue
  export import InputJsonObject = runtime.InputJsonObject
  export import InputJsonArray = runtime.InputJsonArray
  export import InputJsonValue = runtime.InputJsonValue

  /**
   * Types of the values used to represent different kinds of `null` values when working with JSON fields.
   * 
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  namespace NullTypes {
    /**
    * Type of `Prisma.DbNull`.
    * 
    * You cannot use other instances of this class. Please use the `Prisma.DbNull` value.
    * 
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class DbNull {
      private DbNull: never
      private constructor()
    }

    /**
    * Type of `Prisma.JsonNull`.
    * 
    * You cannot use other instances of this class. Please use the `Prisma.JsonNull` value.
    * 
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class JsonNull {
      private JsonNull: never
      private constructor()
    }

    /**
    * Type of `Prisma.AnyNull`.
    * 
    * You cannot use other instances of this class. Please use the `Prisma.AnyNull` value.
    * 
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class AnyNull {
      private AnyNull: never
      private constructor()
    }
  }

  /**
   * Helper for filtering JSON entries that have `null` on the database (empty on the db)
   * 
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const DbNull: NullTypes.DbNull

  /**
   * Helper for filtering JSON entries that have JSON `null` values (not empty on the db)
   * 
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const JsonNull: NullTypes.JsonNull

  /**
   * Helper for filtering JSON entries that are `Prisma.DbNull` or `Prisma.JsonNull`
   * 
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const AnyNull: NullTypes.AnyNull

  type SelectAndInclude = {
    select: any
    include: any
  }

  type SelectAndOmit = {
    select: any
    omit: any
  }

  /**
   * Get the type of the value, that the Promise holds.
   */
  export type PromiseType<T extends PromiseLike<any>> = T extends PromiseLike<infer U> ? U : T;

  /**
   * Get the return type of a function which returns a Promise.
   */
  export type PromiseReturnType<T extends (...args: any) => $Utils.JsPromise<any>> = PromiseType<ReturnType<T>>

  /**
   * From T, pick a set of properties whose keys are in the union K
   */
  type Prisma__Pick<T, K extends keyof T> = {
      [P in K]: T[P];
  };


  export type Enumerable<T> = T | Array<T>;

  export type RequiredKeys<T> = {
    [K in keyof T]-?: {} extends Prisma__Pick<T, K> ? never : K
  }[keyof T]

  export type TruthyKeys<T> = keyof {
    [K in keyof T as T[K] extends false | undefined | null ? never : K]: K
  }

  export type TrueKeys<T> = TruthyKeys<Prisma__Pick<T, RequiredKeys<T>>>

  /**
   * Subset
   * @desc From `T` pick properties that exist in `U`. Simple version of Intersection
   */
  export type Subset<T, U> = {
    [key in keyof T]: key extends keyof U ? T[key] : never;
  };

  /**
   * SelectSubset
   * @desc From `T` pick properties that exist in `U`. Simple version of Intersection.
   * Additionally, it validates, if both select and include are present. If the case, it errors.
   */
  export type SelectSubset<T, U> = {
    [key in keyof T]: key extends keyof U ? T[key] : never
  } &
    (T extends SelectAndInclude
      ? 'Please either choose `select` or `include`.'
      : T extends SelectAndOmit
        ? 'Please either choose `select` or `omit`.'
        : {})

  /**
   * Subset + Intersection
   * @desc From `T` pick properties that exist in `U` and intersect `K`
   */
  export type SubsetIntersection<T, U, K> = {
    [key in keyof T]: key extends keyof U ? T[key] : never
  } &
    K

  type Without<T, U> = { [P in Exclude<keyof T, keyof U>]?: never };

  /**
   * XOR is needed to have a real mutually exclusive union type
   * https://stackoverflow.com/questions/42123407/does-typescript-support-mutually-exclusive-types
   */
  type XOR<T, U> =
    T extends object ?
    U extends object ?
      (Without<T, U> & U) | (Without<U, T> & T)
    : U : T


  /**
   * Is T a Record?
   */
  type IsObject<T extends any> = T extends Array<any>
  ? False
  : T extends Date
  ? False
  : T extends Uint8Array
  ? False
  : T extends BigInt
  ? False
  : T extends object
  ? True
  : False


  /**
   * If it's T[], return T
   */
  export type UnEnumerate<T extends unknown> = T extends Array<infer U> ? U : T

  /**
   * From ts-toolbelt
   */

  type __Either<O extends object, K extends Key> = Omit<O, K> &
    {
      // Merge all but K
      [P in K]: Prisma__Pick<O, P & keyof O> // With K possibilities
    }[K]

  type EitherStrict<O extends object, K extends Key> = Strict<__Either<O, K>>

  type EitherLoose<O extends object, K extends Key> = ComputeRaw<__Either<O, K>>

  type _Either<
    O extends object,
    K extends Key,
    strict extends Boolean
  > = {
    1: EitherStrict<O, K>
    0: EitherLoose<O, K>
  }[strict]

  type Either<
    O extends object,
    K extends Key,
    strict extends Boolean = 1
  > = O extends unknown ? _Either<O, K, strict> : never

  export type Union = any

  type PatchUndefined<O extends object, O1 extends object> = {
    [K in keyof O]: O[K] extends undefined ? At<O1, K> : O[K]
  } & {}

  /** Helper Types for "Merge" **/
  export type IntersectOf<U extends Union> = (
    U extends unknown ? (k: U) => void : never
  ) extends (k: infer I) => void
    ? I
    : never

  export type Overwrite<O extends object, O1 extends object> = {
      [K in keyof O]: K extends keyof O1 ? O1[K] : O[K];
  } & {};

  type _Merge<U extends object> = IntersectOf<Overwrite<U, {
      [K in keyof U]-?: At<U, K>;
  }>>;

  type Key = string | number | symbol;
  type AtBasic<O extends object, K extends Key> = K extends keyof O ? O[K] : never;
  type AtStrict<O extends object, K extends Key> = O[K & keyof O];
  type AtLoose<O extends object, K extends Key> = O extends unknown ? AtStrict<O, K> : never;
  export type At<O extends object, K extends Key, strict extends Boolean = 1> = {
      1: AtStrict<O, K>;
      0: AtLoose<O, K>;
  }[strict];

  export type ComputeRaw<A extends any> = A extends Function ? A : {
    [K in keyof A]: A[K];
  } & {};

  export type OptionalFlat<O> = {
    [K in keyof O]?: O[K];
  } & {};

  type _Record<K extends keyof any, T> = {
    [P in K]: T;
  };

  // cause typescript not to expand types and preserve names
  type NoExpand<T> = T extends unknown ? T : never;

  // this type assumes the passed object is entirely optional
  type AtLeast<O extends object, K extends string> = NoExpand<
    O extends unknown
    ? | (K extends keyof O ? { [P in K]: O[P] } & O : O)
      | {[P in keyof O as P extends K ? K : never]-?: O[P]} & O
    : never>;

  type _Strict<U, _U = U> = U extends unknown ? U & OptionalFlat<_Record<Exclude<Keys<_U>, keyof U>, never>> : never;

  export type Strict<U extends object> = ComputeRaw<_Strict<U>>;
  /** End Helper Types for "Merge" **/

  export type Merge<U extends object> = ComputeRaw<_Merge<Strict<U>>>;

  /**
  A [[Boolean]]
  */
  export type Boolean = True | False

  // /**
  // 1
  // */
  export type True = 1

  /**
  0
  */
  export type False = 0

  export type Not<B extends Boolean> = {
    0: 1
    1: 0
  }[B]

  export type Extends<A1 extends any, A2 extends any> = [A1] extends [never]
    ? 0 // anything `never` is false
    : A1 extends A2
    ? 1
    : 0

  export type Has<U extends Union, U1 extends Union> = Not<
    Extends<Exclude<U1, U>, U1>
  >

  export type Or<B1 extends Boolean, B2 extends Boolean> = {
    0: {
      0: 0
      1: 1
    }
    1: {
      0: 1
      1: 1
    }
  }[B1][B2]

  export type Keys<U extends Union> = U extends unknown ? keyof U : never

  type Cast<A, B> = A extends B ? A : B;

  export const type: unique symbol;



  /**
   * Used by group by
   */

  export type GetScalarType<T, O> = O extends object ? {
    [P in keyof T]: P extends keyof O
      ? O[P]
      : never
  } : never

  type FieldPaths<
    T,
    U = Omit<T, '_avg' | '_sum' | '_count' | '_min' | '_max'>
  > = IsObject<T> extends True ? U : T

  type GetHavingFields<T> = {
    [K in keyof T]: Or<
      Or<Extends<'OR', K>, Extends<'AND', K>>,
      Extends<'NOT', K>
    > extends True
      ? // infer is only needed to not hit TS limit
        // based on the brilliant idea of Pierre-Antoine Mills
        // https://github.com/microsoft/TypeScript/issues/30188#issuecomment-478938437
        T[K] extends infer TK
        ? GetHavingFields<UnEnumerate<TK> extends object ? Merge<UnEnumerate<TK>> : never>
        : never
      : {} extends FieldPaths<T[K]>
      ? never
      : K
  }[keyof T]

  /**
   * Convert tuple to union
   */
  type _TupleToUnion<T> = T extends (infer E)[] ? E : never
  type TupleToUnion<K extends readonly any[]> = _TupleToUnion<K>
  type MaybeTupleToUnion<T> = T extends any[] ? TupleToUnion<T> : T

  /**
   * Like `Pick`, but additionally can also accept an array of keys
   */
  type PickEnumerable<T, K extends Enumerable<keyof T> | keyof T> = Prisma__Pick<T, MaybeTupleToUnion<K>>

  /**
   * Exclude all keys with underscores
   */
  type ExcludeUnderscoreKeys<T extends string> = T extends `_${string}` ? never : T


  export type FieldRef<Model, FieldType> = runtime.FieldRef<Model, FieldType>

  type FieldRefInputType<Model, FieldType> = Model extends never ? never : FieldRef<Model, FieldType>


  export const ModelName: {
    User: 'User',
    UserAddress: 'UserAddress',
    UserSession: 'UserSession',
    Store: 'Store',
    StoreStaff: 'StoreStaff',
    ProductCategory: 'ProductCategory',
    Product: 'Product',
    Order: 'Order',
    OrderItem: 'OrderItem',
    Review: 'Review',
    Professional: 'Professional',
    Consultation: 'Consultation',
    BlogPost: 'BlogPost',
    AuditLog: 'AuditLog'
  };

  export type ModelName = (typeof ModelName)[keyof typeof ModelName]


  export type Datasources = {
    db?: Datasource
  }

  interface TypeMapCb extends $Utils.Fn<{extArgs: $Extensions.InternalArgs, clientOptions: PrismaClientOptions }, $Utils.Record<string, any>> {
    returns: Prisma.TypeMap<this['params']['extArgs'], this['params']['clientOptions']>
  }

  export type TypeMap<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, ClientOptions = {}> = {
    meta: {
      modelProps: "user" | "userAddress" | "userSession" | "store" | "storeStaff" | "productCategory" | "product" | "order" | "orderItem" | "review" | "professional" | "consultation" | "blogPost" | "auditLog"
      txIsolationLevel: Prisma.TransactionIsolationLevel
    }
    model: {
      User: {
        payload: Prisma.$UserPayload<ExtArgs>
        fields: Prisma.UserFieldRefs
        operations: {
          findUnique: {
            args: Prisma.UserFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.UserFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>
          }
          findFirst: {
            args: Prisma.UserFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.UserFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>
          }
          findMany: {
            args: Prisma.UserFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>[]
          }
          create: {
            args: Prisma.UserCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>
          }
          createMany: {
            args: Prisma.UserCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.UserCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>[]
          }
          delete: {
            args: Prisma.UserDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>
          }
          update: {
            args: Prisma.UserUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>
          }
          deleteMany: {
            args: Prisma.UserDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.UserUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.UserUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>
          }
          aggregate: {
            args: Prisma.UserAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateUser>
          }
          groupBy: {
            args: Prisma.UserGroupByArgs<ExtArgs>
            result: $Utils.Optional<UserGroupByOutputType>[]
          }
          count: {
            args: Prisma.UserCountArgs<ExtArgs>
            result: $Utils.Optional<UserCountAggregateOutputType> | number
          }
        }
      }
      UserAddress: {
        payload: Prisma.$UserAddressPayload<ExtArgs>
        fields: Prisma.UserAddressFieldRefs
        operations: {
          findUnique: {
            args: Prisma.UserAddressFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserAddressPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.UserAddressFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserAddressPayload>
          }
          findFirst: {
            args: Prisma.UserAddressFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserAddressPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.UserAddressFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserAddressPayload>
          }
          findMany: {
            args: Prisma.UserAddressFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserAddressPayload>[]
          }
          create: {
            args: Prisma.UserAddressCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserAddressPayload>
          }
          createMany: {
            args: Prisma.UserAddressCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.UserAddressCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserAddressPayload>[]
          }
          delete: {
            args: Prisma.UserAddressDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserAddressPayload>
          }
          update: {
            args: Prisma.UserAddressUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserAddressPayload>
          }
          deleteMany: {
            args: Prisma.UserAddressDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.UserAddressUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.UserAddressUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserAddressPayload>
          }
          aggregate: {
            args: Prisma.UserAddressAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateUserAddress>
          }
          groupBy: {
            args: Prisma.UserAddressGroupByArgs<ExtArgs>
            result: $Utils.Optional<UserAddressGroupByOutputType>[]
          }
          count: {
            args: Prisma.UserAddressCountArgs<ExtArgs>
            result: $Utils.Optional<UserAddressCountAggregateOutputType> | number
          }
        }
      }
      UserSession: {
        payload: Prisma.$UserSessionPayload<ExtArgs>
        fields: Prisma.UserSessionFieldRefs
        operations: {
          findUnique: {
            args: Prisma.UserSessionFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserSessionPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.UserSessionFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserSessionPayload>
          }
          findFirst: {
            args: Prisma.UserSessionFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserSessionPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.UserSessionFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserSessionPayload>
          }
          findMany: {
            args: Prisma.UserSessionFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserSessionPayload>[]
          }
          create: {
            args: Prisma.UserSessionCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserSessionPayload>
          }
          createMany: {
            args: Prisma.UserSessionCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.UserSessionCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserSessionPayload>[]
          }
          delete: {
            args: Prisma.UserSessionDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserSessionPayload>
          }
          update: {
            args: Prisma.UserSessionUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserSessionPayload>
          }
          deleteMany: {
            args: Prisma.UserSessionDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.UserSessionUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.UserSessionUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserSessionPayload>
          }
          aggregate: {
            args: Prisma.UserSessionAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateUserSession>
          }
          groupBy: {
            args: Prisma.UserSessionGroupByArgs<ExtArgs>
            result: $Utils.Optional<UserSessionGroupByOutputType>[]
          }
          count: {
            args: Prisma.UserSessionCountArgs<ExtArgs>
            result: $Utils.Optional<UserSessionCountAggregateOutputType> | number
          }
        }
      }
      Store: {
        payload: Prisma.$StorePayload<ExtArgs>
        fields: Prisma.StoreFieldRefs
        operations: {
          findUnique: {
            args: Prisma.StoreFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$StorePayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.StoreFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$StorePayload>
          }
          findFirst: {
            args: Prisma.StoreFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$StorePayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.StoreFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$StorePayload>
          }
          findMany: {
            args: Prisma.StoreFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$StorePayload>[]
          }
          create: {
            args: Prisma.StoreCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$StorePayload>
          }
          createMany: {
            args: Prisma.StoreCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.StoreCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$StorePayload>[]
          }
          delete: {
            args: Prisma.StoreDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$StorePayload>
          }
          update: {
            args: Prisma.StoreUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$StorePayload>
          }
          deleteMany: {
            args: Prisma.StoreDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.StoreUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.StoreUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$StorePayload>
          }
          aggregate: {
            args: Prisma.StoreAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateStore>
          }
          groupBy: {
            args: Prisma.StoreGroupByArgs<ExtArgs>
            result: $Utils.Optional<StoreGroupByOutputType>[]
          }
          count: {
            args: Prisma.StoreCountArgs<ExtArgs>
            result: $Utils.Optional<StoreCountAggregateOutputType> | number
          }
        }
      }
      StoreStaff: {
        payload: Prisma.$StoreStaffPayload<ExtArgs>
        fields: Prisma.StoreStaffFieldRefs
        operations: {
          findUnique: {
            args: Prisma.StoreStaffFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$StoreStaffPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.StoreStaffFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$StoreStaffPayload>
          }
          findFirst: {
            args: Prisma.StoreStaffFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$StoreStaffPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.StoreStaffFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$StoreStaffPayload>
          }
          findMany: {
            args: Prisma.StoreStaffFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$StoreStaffPayload>[]
          }
          create: {
            args: Prisma.StoreStaffCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$StoreStaffPayload>
          }
          createMany: {
            args: Prisma.StoreStaffCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.StoreStaffCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$StoreStaffPayload>[]
          }
          delete: {
            args: Prisma.StoreStaffDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$StoreStaffPayload>
          }
          update: {
            args: Prisma.StoreStaffUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$StoreStaffPayload>
          }
          deleteMany: {
            args: Prisma.StoreStaffDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.StoreStaffUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.StoreStaffUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$StoreStaffPayload>
          }
          aggregate: {
            args: Prisma.StoreStaffAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateStoreStaff>
          }
          groupBy: {
            args: Prisma.StoreStaffGroupByArgs<ExtArgs>
            result: $Utils.Optional<StoreStaffGroupByOutputType>[]
          }
          count: {
            args: Prisma.StoreStaffCountArgs<ExtArgs>
            result: $Utils.Optional<StoreStaffCountAggregateOutputType> | number
          }
        }
      }
      ProductCategory: {
        payload: Prisma.$ProductCategoryPayload<ExtArgs>
        fields: Prisma.ProductCategoryFieldRefs
        operations: {
          findUnique: {
            args: Prisma.ProductCategoryFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductCategoryPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.ProductCategoryFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductCategoryPayload>
          }
          findFirst: {
            args: Prisma.ProductCategoryFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductCategoryPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.ProductCategoryFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductCategoryPayload>
          }
          findMany: {
            args: Prisma.ProductCategoryFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductCategoryPayload>[]
          }
          create: {
            args: Prisma.ProductCategoryCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductCategoryPayload>
          }
          createMany: {
            args: Prisma.ProductCategoryCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.ProductCategoryCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductCategoryPayload>[]
          }
          delete: {
            args: Prisma.ProductCategoryDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductCategoryPayload>
          }
          update: {
            args: Prisma.ProductCategoryUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductCategoryPayload>
          }
          deleteMany: {
            args: Prisma.ProductCategoryDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.ProductCategoryUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.ProductCategoryUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductCategoryPayload>
          }
          aggregate: {
            args: Prisma.ProductCategoryAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateProductCategory>
          }
          groupBy: {
            args: Prisma.ProductCategoryGroupByArgs<ExtArgs>
            result: $Utils.Optional<ProductCategoryGroupByOutputType>[]
          }
          count: {
            args: Prisma.ProductCategoryCountArgs<ExtArgs>
            result: $Utils.Optional<ProductCategoryCountAggregateOutputType> | number
          }
        }
      }
      Product: {
        payload: Prisma.$ProductPayload<ExtArgs>
        fields: Prisma.ProductFieldRefs
        operations: {
          findUnique: {
            args: Prisma.ProductFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.ProductFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductPayload>
          }
          findFirst: {
            args: Prisma.ProductFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.ProductFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductPayload>
          }
          findMany: {
            args: Prisma.ProductFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductPayload>[]
          }
          create: {
            args: Prisma.ProductCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductPayload>
          }
          createMany: {
            args: Prisma.ProductCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.ProductCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductPayload>[]
          }
          delete: {
            args: Prisma.ProductDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductPayload>
          }
          update: {
            args: Prisma.ProductUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductPayload>
          }
          deleteMany: {
            args: Prisma.ProductDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.ProductUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.ProductUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductPayload>
          }
          aggregate: {
            args: Prisma.ProductAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateProduct>
          }
          groupBy: {
            args: Prisma.ProductGroupByArgs<ExtArgs>
            result: $Utils.Optional<ProductGroupByOutputType>[]
          }
          count: {
            args: Prisma.ProductCountArgs<ExtArgs>
            result: $Utils.Optional<ProductCountAggregateOutputType> | number
          }
        }
      }
      Order: {
        payload: Prisma.$OrderPayload<ExtArgs>
        fields: Prisma.OrderFieldRefs
        operations: {
          findUnique: {
            args: Prisma.OrderFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrderPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.OrderFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrderPayload>
          }
          findFirst: {
            args: Prisma.OrderFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrderPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.OrderFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrderPayload>
          }
          findMany: {
            args: Prisma.OrderFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrderPayload>[]
          }
          create: {
            args: Prisma.OrderCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrderPayload>
          }
          createMany: {
            args: Prisma.OrderCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.OrderCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrderPayload>[]
          }
          delete: {
            args: Prisma.OrderDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrderPayload>
          }
          update: {
            args: Prisma.OrderUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrderPayload>
          }
          deleteMany: {
            args: Prisma.OrderDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.OrderUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.OrderUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrderPayload>
          }
          aggregate: {
            args: Prisma.OrderAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateOrder>
          }
          groupBy: {
            args: Prisma.OrderGroupByArgs<ExtArgs>
            result: $Utils.Optional<OrderGroupByOutputType>[]
          }
          count: {
            args: Prisma.OrderCountArgs<ExtArgs>
            result: $Utils.Optional<OrderCountAggregateOutputType> | number
          }
        }
      }
      OrderItem: {
        payload: Prisma.$OrderItemPayload<ExtArgs>
        fields: Prisma.OrderItemFieldRefs
        operations: {
          findUnique: {
            args: Prisma.OrderItemFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrderItemPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.OrderItemFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrderItemPayload>
          }
          findFirst: {
            args: Prisma.OrderItemFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrderItemPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.OrderItemFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrderItemPayload>
          }
          findMany: {
            args: Prisma.OrderItemFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrderItemPayload>[]
          }
          create: {
            args: Prisma.OrderItemCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrderItemPayload>
          }
          createMany: {
            args: Prisma.OrderItemCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.OrderItemCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrderItemPayload>[]
          }
          delete: {
            args: Prisma.OrderItemDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrderItemPayload>
          }
          update: {
            args: Prisma.OrderItemUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrderItemPayload>
          }
          deleteMany: {
            args: Prisma.OrderItemDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.OrderItemUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.OrderItemUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrderItemPayload>
          }
          aggregate: {
            args: Prisma.OrderItemAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateOrderItem>
          }
          groupBy: {
            args: Prisma.OrderItemGroupByArgs<ExtArgs>
            result: $Utils.Optional<OrderItemGroupByOutputType>[]
          }
          count: {
            args: Prisma.OrderItemCountArgs<ExtArgs>
            result: $Utils.Optional<OrderItemCountAggregateOutputType> | number
          }
        }
      }
      Review: {
        payload: Prisma.$ReviewPayload<ExtArgs>
        fields: Prisma.ReviewFieldRefs
        operations: {
          findUnique: {
            args: Prisma.ReviewFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReviewPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.ReviewFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReviewPayload>
          }
          findFirst: {
            args: Prisma.ReviewFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReviewPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.ReviewFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReviewPayload>
          }
          findMany: {
            args: Prisma.ReviewFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReviewPayload>[]
          }
          create: {
            args: Prisma.ReviewCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReviewPayload>
          }
          createMany: {
            args: Prisma.ReviewCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.ReviewCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReviewPayload>[]
          }
          delete: {
            args: Prisma.ReviewDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReviewPayload>
          }
          update: {
            args: Prisma.ReviewUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReviewPayload>
          }
          deleteMany: {
            args: Prisma.ReviewDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.ReviewUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.ReviewUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReviewPayload>
          }
          aggregate: {
            args: Prisma.ReviewAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateReview>
          }
          groupBy: {
            args: Prisma.ReviewGroupByArgs<ExtArgs>
            result: $Utils.Optional<ReviewGroupByOutputType>[]
          }
          count: {
            args: Prisma.ReviewCountArgs<ExtArgs>
            result: $Utils.Optional<ReviewCountAggregateOutputType> | number
          }
        }
      }
      Professional: {
        payload: Prisma.$ProfessionalPayload<ExtArgs>
        fields: Prisma.ProfessionalFieldRefs
        operations: {
          findUnique: {
            args: Prisma.ProfessionalFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProfessionalPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.ProfessionalFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProfessionalPayload>
          }
          findFirst: {
            args: Prisma.ProfessionalFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProfessionalPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.ProfessionalFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProfessionalPayload>
          }
          findMany: {
            args: Prisma.ProfessionalFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProfessionalPayload>[]
          }
          create: {
            args: Prisma.ProfessionalCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProfessionalPayload>
          }
          createMany: {
            args: Prisma.ProfessionalCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.ProfessionalCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProfessionalPayload>[]
          }
          delete: {
            args: Prisma.ProfessionalDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProfessionalPayload>
          }
          update: {
            args: Prisma.ProfessionalUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProfessionalPayload>
          }
          deleteMany: {
            args: Prisma.ProfessionalDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.ProfessionalUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.ProfessionalUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProfessionalPayload>
          }
          aggregate: {
            args: Prisma.ProfessionalAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateProfessional>
          }
          groupBy: {
            args: Prisma.ProfessionalGroupByArgs<ExtArgs>
            result: $Utils.Optional<ProfessionalGroupByOutputType>[]
          }
          count: {
            args: Prisma.ProfessionalCountArgs<ExtArgs>
            result: $Utils.Optional<ProfessionalCountAggregateOutputType> | number
          }
        }
      }
      Consultation: {
        payload: Prisma.$ConsultationPayload<ExtArgs>
        fields: Prisma.ConsultationFieldRefs
        operations: {
          findUnique: {
            args: Prisma.ConsultationFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ConsultationPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.ConsultationFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ConsultationPayload>
          }
          findFirst: {
            args: Prisma.ConsultationFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ConsultationPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.ConsultationFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ConsultationPayload>
          }
          findMany: {
            args: Prisma.ConsultationFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ConsultationPayload>[]
          }
          create: {
            args: Prisma.ConsultationCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ConsultationPayload>
          }
          createMany: {
            args: Prisma.ConsultationCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.ConsultationCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ConsultationPayload>[]
          }
          delete: {
            args: Prisma.ConsultationDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ConsultationPayload>
          }
          update: {
            args: Prisma.ConsultationUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ConsultationPayload>
          }
          deleteMany: {
            args: Prisma.ConsultationDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.ConsultationUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.ConsultationUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ConsultationPayload>
          }
          aggregate: {
            args: Prisma.ConsultationAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateConsultation>
          }
          groupBy: {
            args: Prisma.ConsultationGroupByArgs<ExtArgs>
            result: $Utils.Optional<ConsultationGroupByOutputType>[]
          }
          count: {
            args: Prisma.ConsultationCountArgs<ExtArgs>
            result: $Utils.Optional<ConsultationCountAggregateOutputType> | number
          }
        }
      }
      BlogPost: {
        payload: Prisma.$BlogPostPayload<ExtArgs>
        fields: Prisma.BlogPostFieldRefs
        operations: {
          findUnique: {
            args: Prisma.BlogPostFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BlogPostPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.BlogPostFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BlogPostPayload>
          }
          findFirst: {
            args: Prisma.BlogPostFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BlogPostPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.BlogPostFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BlogPostPayload>
          }
          findMany: {
            args: Prisma.BlogPostFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BlogPostPayload>[]
          }
          create: {
            args: Prisma.BlogPostCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BlogPostPayload>
          }
          createMany: {
            args: Prisma.BlogPostCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.BlogPostCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BlogPostPayload>[]
          }
          delete: {
            args: Prisma.BlogPostDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BlogPostPayload>
          }
          update: {
            args: Prisma.BlogPostUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BlogPostPayload>
          }
          deleteMany: {
            args: Prisma.BlogPostDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.BlogPostUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.BlogPostUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BlogPostPayload>
          }
          aggregate: {
            args: Prisma.BlogPostAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateBlogPost>
          }
          groupBy: {
            args: Prisma.BlogPostGroupByArgs<ExtArgs>
            result: $Utils.Optional<BlogPostGroupByOutputType>[]
          }
          count: {
            args: Prisma.BlogPostCountArgs<ExtArgs>
            result: $Utils.Optional<BlogPostCountAggregateOutputType> | number
          }
        }
      }
      AuditLog: {
        payload: Prisma.$AuditLogPayload<ExtArgs>
        fields: Prisma.AuditLogFieldRefs
        operations: {
          findUnique: {
            args: Prisma.AuditLogFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AuditLogPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.AuditLogFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AuditLogPayload>
          }
          findFirst: {
            args: Prisma.AuditLogFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AuditLogPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.AuditLogFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AuditLogPayload>
          }
          findMany: {
            args: Prisma.AuditLogFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AuditLogPayload>[]
          }
          create: {
            args: Prisma.AuditLogCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AuditLogPayload>
          }
          createMany: {
            args: Prisma.AuditLogCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.AuditLogCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AuditLogPayload>[]
          }
          delete: {
            args: Prisma.AuditLogDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AuditLogPayload>
          }
          update: {
            args: Prisma.AuditLogUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AuditLogPayload>
          }
          deleteMany: {
            args: Prisma.AuditLogDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.AuditLogUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.AuditLogUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AuditLogPayload>
          }
          aggregate: {
            args: Prisma.AuditLogAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateAuditLog>
          }
          groupBy: {
            args: Prisma.AuditLogGroupByArgs<ExtArgs>
            result: $Utils.Optional<AuditLogGroupByOutputType>[]
          }
          count: {
            args: Prisma.AuditLogCountArgs<ExtArgs>
            result: $Utils.Optional<AuditLogCountAggregateOutputType> | number
          }
        }
      }
    }
  } & {
    other: {
      payload: any
      operations: {
        $executeRaw: {
          args: [query: TemplateStringsArray | Prisma.Sql, ...values: any[]],
          result: any
        }
        $executeRawUnsafe: {
          args: [query: string, ...values: any[]],
          result: any
        }
        $queryRaw: {
          args: [query: TemplateStringsArray | Prisma.Sql, ...values: any[]],
          result: any
        }
        $queryRawUnsafe: {
          args: [query: string, ...values: any[]],
          result: any
        }
      }
    }
  }
  export const defineExtension: $Extensions.ExtendsHook<"define", Prisma.TypeMapCb, $Extensions.DefaultArgs>
  export type DefaultPrismaClient = PrismaClient
  export type ErrorFormat = 'pretty' | 'colorless' | 'minimal'
  export interface PrismaClientOptions {
    /**
     * Overwrites the datasource url from your schema.prisma file
     */
    datasources?: Datasources
    /**
     * Overwrites the datasource url from your schema.prisma file
     */
    datasourceUrl?: string
    /**
     * @default "colorless"
     */
    errorFormat?: ErrorFormat
    /**
     * @example
     * ```
     * // Defaults to stdout
     * log: ['query', 'info', 'warn', 'error']
     * 
     * // Emit as events
     * log: [
     *   { emit: 'stdout', level: 'query' },
     *   { emit: 'stdout', level: 'info' },
     *   { emit: 'stdout', level: 'warn' }
     *   { emit: 'stdout', level: 'error' }
     * ]
     * ```
     * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/logging#the-log-option).
     */
    log?: (LogLevel | LogDefinition)[]
    /**
     * The default values for transactionOptions
     * maxWait ?= 2000
     * timeout ?= 5000
     */
    transactionOptions?: {
      maxWait?: number
      timeout?: number
      isolationLevel?: Prisma.TransactionIsolationLevel
    }
  }


  /* Types for Logging */
  export type LogLevel = 'info' | 'query' | 'warn' | 'error'
  export type LogDefinition = {
    level: LogLevel
    emit: 'stdout' | 'event'
  }

  export type GetLogType<T extends LogLevel | LogDefinition> = T extends LogDefinition ? T['emit'] extends 'event' ? T['level'] : never : never
  export type GetEvents<T extends any> = T extends Array<LogLevel | LogDefinition> ?
    GetLogType<T[0]> | GetLogType<T[1]> | GetLogType<T[2]> | GetLogType<T[3]>
    : never

  export type QueryEvent = {
    timestamp: Date
    query: string
    params: string
    duration: number
    target: string
  }

  export type LogEvent = {
    timestamp: Date
    message: string
    target: string
  }
  /* End Types for Logging */


  export type PrismaAction =
    | 'findUnique'
    | 'findUniqueOrThrow'
    | 'findMany'
    | 'findFirst'
    | 'findFirstOrThrow'
    | 'create'
    | 'createMany'
    | 'createManyAndReturn'
    | 'update'
    | 'updateMany'
    | 'upsert'
    | 'delete'
    | 'deleteMany'
    | 'executeRaw'
    | 'queryRaw'
    | 'aggregate'
    | 'count'
    | 'runCommandRaw'
    | 'findRaw'
    | 'groupBy'

  /**
   * These options are being passed into the middleware as "params"
   */
  export type MiddlewareParams = {
    model?: ModelName
    action: PrismaAction
    args: any
    dataPath: string[]
    runInTransaction: boolean
  }

  /**
   * The `T` type makes sure, that the `return proceed` is not forgotten in the middleware implementation
   */
  export type Middleware<T = any> = (
    params: MiddlewareParams,
    next: (params: MiddlewareParams) => $Utils.JsPromise<T>,
  ) => $Utils.JsPromise<T>

  // tested in getLogLevel.test.ts
  export function getLogLevel(log: Array<LogLevel | LogDefinition>): LogLevel | undefined;

  /**
   * `PrismaClient` proxy available in interactive transactions.
   */
  export type TransactionClient = Omit<Prisma.DefaultPrismaClient, runtime.ITXClientDenyList>

  export type Datasource = {
    url?: string
  }

  /**
   * Count Types
   */


  /**
   * Count Type UserCountOutputType
   */

  export type UserCountOutputType = {
    addresses: number
    sessions: number
    stores: number
    orders: number
    reviews: number
    storeStaff: number
    consultationsAsPatient: number
    ageVerifications: number
    blogPosts: number
    factCheckedPosts: number
  }

  export type UserCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    addresses?: boolean | UserCountOutputTypeCountAddressesArgs
    sessions?: boolean | UserCountOutputTypeCountSessionsArgs
    stores?: boolean | UserCountOutputTypeCountStoresArgs
    orders?: boolean | UserCountOutputTypeCountOrdersArgs
    reviews?: boolean | UserCountOutputTypeCountReviewsArgs
    storeStaff?: boolean | UserCountOutputTypeCountStoreStaffArgs
    consultationsAsPatient?: boolean | UserCountOutputTypeCountConsultationsAsPatientArgs
    ageVerifications?: boolean | UserCountOutputTypeCountAgeVerificationsArgs
    blogPosts?: boolean | UserCountOutputTypeCountBlogPostsArgs
    factCheckedPosts?: boolean | UserCountOutputTypeCountFactCheckedPostsArgs
  }

  // Custom InputTypes
  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserCountOutputType
     */
    select?: UserCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountAddressesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: UserAddressWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountSessionsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: UserSessionWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountStoresArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: StoreWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountOrdersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: OrderWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountReviewsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ReviewWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountStoreStaffArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: StoreStaffWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountConsultationsAsPatientArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ConsultationWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountAgeVerificationsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: UserWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountBlogPostsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: BlogPostWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountFactCheckedPostsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: BlogPostWhereInput
  }


  /**
   * Count Type StoreCountOutputType
   */

  export type StoreCountOutputType = {
    staff: number
    products: number
    orders: number
    reviews: number
  }

  export type StoreCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    staff?: boolean | StoreCountOutputTypeCountStaffArgs
    products?: boolean | StoreCountOutputTypeCountProductsArgs
    orders?: boolean | StoreCountOutputTypeCountOrdersArgs
    reviews?: boolean | StoreCountOutputTypeCountReviewsArgs
  }

  // Custom InputTypes
  /**
   * StoreCountOutputType without action
   */
  export type StoreCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the StoreCountOutputType
     */
    select?: StoreCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * StoreCountOutputType without action
   */
  export type StoreCountOutputTypeCountStaffArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: StoreStaffWhereInput
  }

  /**
   * StoreCountOutputType without action
   */
  export type StoreCountOutputTypeCountProductsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ProductWhereInput
  }

  /**
   * StoreCountOutputType without action
   */
  export type StoreCountOutputTypeCountOrdersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: OrderWhereInput
  }

  /**
   * StoreCountOutputType without action
   */
  export type StoreCountOutputTypeCountReviewsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ReviewWhereInput
  }


  /**
   * Count Type ProductCategoryCountOutputType
   */

  export type ProductCategoryCountOutputType = {
    children: number
    products: number
  }

  export type ProductCategoryCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    children?: boolean | ProductCategoryCountOutputTypeCountChildrenArgs
    products?: boolean | ProductCategoryCountOutputTypeCountProductsArgs
  }

  // Custom InputTypes
  /**
   * ProductCategoryCountOutputType without action
   */
  export type ProductCategoryCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductCategoryCountOutputType
     */
    select?: ProductCategoryCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * ProductCategoryCountOutputType without action
   */
  export type ProductCategoryCountOutputTypeCountChildrenArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ProductCategoryWhereInput
  }

  /**
   * ProductCategoryCountOutputType without action
   */
  export type ProductCategoryCountOutputTypeCountProductsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ProductWhereInput
  }


  /**
   * Count Type ProductCountOutputType
   */

  export type ProductCountOutputType = {
    reviews: number
    orderItems: number
  }

  export type ProductCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    reviews?: boolean | ProductCountOutputTypeCountReviewsArgs
    orderItems?: boolean | ProductCountOutputTypeCountOrderItemsArgs
  }

  // Custom InputTypes
  /**
   * ProductCountOutputType without action
   */
  export type ProductCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductCountOutputType
     */
    select?: ProductCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * ProductCountOutputType without action
   */
  export type ProductCountOutputTypeCountReviewsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ReviewWhereInput
  }

  /**
   * ProductCountOutputType without action
   */
  export type ProductCountOutputTypeCountOrderItemsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: OrderItemWhereInput
  }


  /**
   * Count Type OrderCountOutputType
   */

  export type OrderCountOutputType = {
    items: number
    reviews: number
  }

  export type OrderCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    items?: boolean | OrderCountOutputTypeCountItemsArgs
    reviews?: boolean | OrderCountOutputTypeCountReviewsArgs
  }

  // Custom InputTypes
  /**
   * OrderCountOutputType without action
   */
  export type OrderCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OrderCountOutputType
     */
    select?: OrderCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * OrderCountOutputType without action
   */
  export type OrderCountOutputTypeCountItemsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: OrderItemWhereInput
  }

  /**
   * OrderCountOutputType without action
   */
  export type OrderCountOutputTypeCountReviewsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ReviewWhereInput
  }


  /**
   * Count Type ProfessionalCountOutputType
   */

  export type ProfessionalCountOutputType = {
    consultations: number
  }

  export type ProfessionalCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    consultations?: boolean | ProfessionalCountOutputTypeCountConsultationsArgs
  }

  // Custom InputTypes
  /**
   * ProfessionalCountOutputType without action
   */
  export type ProfessionalCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProfessionalCountOutputType
     */
    select?: ProfessionalCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * ProfessionalCountOutputType without action
   */
  export type ProfessionalCountOutputTypeCountConsultationsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ConsultationWhereInput
  }


  /**
   * Models
   */

  /**
   * Model User
   */

  export type AggregateUser = {
    _count: UserCountAggregateOutputType | null
    _avg: UserAvgAggregateOutputType | null
    _sum: UserSumAggregateOutputType | null
    _min: UserMinAggregateOutputType | null
    _max: UserMaxAggregateOutputType | null
  }

  export type UserAvgAggregateOutputType = {
    failedLoginAttempts: number | null
  }

  export type UserSumAggregateOutputType = {
    failedLoginAttempts: number | null
  }

  export type UserMinAggregateOutputType = {
    id: string | null
    email: string | null
    emailVerified: boolean | null
    passwordHash: string | null
    role: $Enums.UserRole | null
    firstName: string | null
    lastName: string | null
    phone: string | null
    dateOfBirth: Date | null
    status: $Enums.UserStatus | null
    lastLoginAt: Date | null
    failedLoginAttempts: number | null
    lockedUntil: Date | null
    ageVerified: boolean | null
    ageVerificationMethod: $Enums.AgeVerificationMethod | null
    ageVerifiedAt: Date | null
    ageVerifiedBy: string | null
    termsAcceptedAt: Date | null
    privacyAcceptedAt: Date | null
    marketingConsent: boolean | null
    gdprConsent: boolean | null
    ccpaOptOut: boolean | null
    createdAt: Date | null
    updatedAt: Date | null
    createdBy: string | null
    updatedBy: string | null
  }

  export type UserMaxAggregateOutputType = {
    id: string | null
    email: string | null
    emailVerified: boolean | null
    passwordHash: string | null
    role: $Enums.UserRole | null
    firstName: string | null
    lastName: string | null
    phone: string | null
    dateOfBirth: Date | null
    status: $Enums.UserStatus | null
    lastLoginAt: Date | null
    failedLoginAttempts: number | null
    lockedUntil: Date | null
    ageVerified: boolean | null
    ageVerificationMethod: $Enums.AgeVerificationMethod | null
    ageVerifiedAt: Date | null
    ageVerifiedBy: string | null
    termsAcceptedAt: Date | null
    privacyAcceptedAt: Date | null
    marketingConsent: boolean | null
    gdprConsent: boolean | null
    ccpaOptOut: boolean | null
    createdAt: Date | null
    updatedAt: Date | null
    createdBy: string | null
    updatedBy: string | null
  }

  export type UserCountAggregateOutputType = {
    id: number
    email: number
    emailVerified: number
    passwordHash: number
    role: number
    firstName: number
    lastName: number
    phone: number
    dateOfBirth: number
    status: number
    lastLoginAt: number
    failedLoginAttempts: number
    lockedUntil: number
    ageVerified: number
    ageVerificationMethod: number
    ageVerifiedAt: number
    ageVerifiedBy: number
    termsAcceptedAt: number
    privacyAcceptedAt: number
    marketingConsent: number
    gdprConsent: number
    ccpaOptOut: number
    createdAt: number
    updatedAt: number
    createdBy: number
    updatedBy: number
    _all: number
  }


  export type UserAvgAggregateInputType = {
    failedLoginAttempts?: true
  }

  export type UserSumAggregateInputType = {
    failedLoginAttempts?: true
  }

  export type UserMinAggregateInputType = {
    id?: true
    email?: true
    emailVerified?: true
    passwordHash?: true
    role?: true
    firstName?: true
    lastName?: true
    phone?: true
    dateOfBirth?: true
    status?: true
    lastLoginAt?: true
    failedLoginAttempts?: true
    lockedUntil?: true
    ageVerified?: true
    ageVerificationMethod?: true
    ageVerifiedAt?: true
    ageVerifiedBy?: true
    termsAcceptedAt?: true
    privacyAcceptedAt?: true
    marketingConsent?: true
    gdprConsent?: true
    ccpaOptOut?: true
    createdAt?: true
    updatedAt?: true
    createdBy?: true
    updatedBy?: true
  }

  export type UserMaxAggregateInputType = {
    id?: true
    email?: true
    emailVerified?: true
    passwordHash?: true
    role?: true
    firstName?: true
    lastName?: true
    phone?: true
    dateOfBirth?: true
    status?: true
    lastLoginAt?: true
    failedLoginAttempts?: true
    lockedUntil?: true
    ageVerified?: true
    ageVerificationMethod?: true
    ageVerifiedAt?: true
    ageVerifiedBy?: true
    termsAcceptedAt?: true
    privacyAcceptedAt?: true
    marketingConsent?: true
    gdprConsent?: true
    ccpaOptOut?: true
    createdAt?: true
    updatedAt?: true
    createdBy?: true
    updatedBy?: true
  }

  export type UserCountAggregateInputType = {
    id?: true
    email?: true
    emailVerified?: true
    passwordHash?: true
    role?: true
    firstName?: true
    lastName?: true
    phone?: true
    dateOfBirth?: true
    status?: true
    lastLoginAt?: true
    failedLoginAttempts?: true
    lockedUntil?: true
    ageVerified?: true
    ageVerificationMethod?: true
    ageVerifiedAt?: true
    ageVerifiedBy?: true
    termsAcceptedAt?: true
    privacyAcceptedAt?: true
    marketingConsent?: true
    gdprConsent?: true
    ccpaOptOut?: true
    createdAt?: true
    updatedAt?: true
    createdBy?: true
    updatedBy?: true
    _all?: true
  }

  export type UserAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which User to aggregate.
     */
    where?: UserWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Users to fetch.
     */
    orderBy?: UserOrderByWithRelationInput | UserOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: UserWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Users.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Users
    **/
    _count?: true | UserCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: UserAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: UserSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: UserMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: UserMaxAggregateInputType
  }

  export type GetUserAggregateType<T extends UserAggregateArgs> = {
        [P in keyof T & keyof AggregateUser]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateUser[P]>
      : GetScalarType<T[P], AggregateUser[P]>
  }




  export type UserGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: UserWhereInput
    orderBy?: UserOrderByWithAggregationInput | UserOrderByWithAggregationInput[]
    by: UserScalarFieldEnum[] | UserScalarFieldEnum
    having?: UserScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: UserCountAggregateInputType | true
    _avg?: UserAvgAggregateInputType
    _sum?: UserSumAggregateInputType
    _min?: UserMinAggregateInputType
    _max?: UserMaxAggregateInputType
  }

  export type UserGroupByOutputType = {
    id: string
    email: string
    emailVerified: boolean
    passwordHash: string
    role: $Enums.UserRole
    firstName: string | null
    lastName: string | null
    phone: string | null
    dateOfBirth: Date | null
    status: $Enums.UserStatus
    lastLoginAt: Date | null
    failedLoginAttempts: number
    lockedUntil: Date | null
    ageVerified: boolean
    ageVerificationMethod: $Enums.AgeVerificationMethod | null
    ageVerifiedAt: Date | null
    ageVerifiedBy: string | null
    termsAcceptedAt: Date | null
    privacyAcceptedAt: Date | null
    marketingConsent: boolean
    gdprConsent: boolean
    ccpaOptOut: boolean
    createdAt: Date
    updatedAt: Date
    createdBy: string | null
    updatedBy: string | null
    _count: UserCountAggregateOutputType | null
    _avg: UserAvgAggregateOutputType | null
    _sum: UserSumAggregateOutputType | null
    _min: UserMinAggregateOutputType | null
    _max: UserMaxAggregateOutputType | null
  }

  type GetUserGroupByPayload<T extends UserGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<UserGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof UserGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], UserGroupByOutputType[P]>
            : GetScalarType<T[P], UserGroupByOutputType[P]>
        }
      >
    >


  export type UserSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    email?: boolean
    emailVerified?: boolean
    passwordHash?: boolean
    role?: boolean
    firstName?: boolean
    lastName?: boolean
    phone?: boolean
    dateOfBirth?: boolean
    status?: boolean
    lastLoginAt?: boolean
    failedLoginAttempts?: boolean
    lockedUntil?: boolean
    ageVerified?: boolean
    ageVerificationMethod?: boolean
    ageVerifiedAt?: boolean
    ageVerifiedBy?: boolean
    termsAcceptedAt?: boolean
    privacyAcceptedAt?: boolean
    marketingConsent?: boolean
    gdprConsent?: boolean
    ccpaOptOut?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    createdBy?: boolean
    updatedBy?: boolean
    addresses?: boolean | User$addressesArgs<ExtArgs>
    sessions?: boolean | User$sessionsArgs<ExtArgs>
    stores?: boolean | User$storesArgs<ExtArgs>
    orders?: boolean | User$ordersArgs<ExtArgs>
    reviews?: boolean | User$reviewsArgs<ExtArgs>
    professional?: boolean | User$professionalArgs<ExtArgs>
    storeStaff?: boolean | User$storeStaffArgs<ExtArgs>
    consultationsAsPatient?: boolean | User$consultationsAsPatientArgs<ExtArgs>
    ageVerifier?: boolean | User$ageVerifierArgs<ExtArgs>
    ageVerifications?: boolean | User$ageVerificationsArgs<ExtArgs>
    blogPosts?: boolean | User$blogPostsArgs<ExtArgs>
    factCheckedPosts?: boolean | User$factCheckedPostsArgs<ExtArgs>
    _count?: boolean | UserCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["user"]>

  export type UserSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    email?: boolean
    emailVerified?: boolean
    passwordHash?: boolean
    role?: boolean
    firstName?: boolean
    lastName?: boolean
    phone?: boolean
    dateOfBirth?: boolean
    status?: boolean
    lastLoginAt?: boolean
    failedLoginAttempts?: boolean
    lockedUntil?: boolean
    ageVerified?: boolean
    ageVerificationMethod?: boolean
    ageVerifiedAt?: boolean
    ageVerifiedBy?: boolean
    termsAcceptedAt?: boolean
    privacyAcceptedAt?: boolean
    marketingConsent?: boolean
    gdprConsent?: boolean
    ccpaOptOut?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    createdBy?: boolean
    updatedBy?: boolean
    ageVerifier?: boolean | User$ageVerifierArgs<ExtArgs>
  }, ExtArgs["result"]["user"]>

  export type UserSelectScalar = {
    id?: boolean
    email?: boolean
    emailVerified?: boolean
    passwordHash?: boolean
    role?: boolean
    firstName?: boolean
    lastName?: boolean
    phone?: boolean
    dateOfBirth?: boolean
    status?: boolean
    lastLoginAt?: boolean
    failedLoginAttempts?: boolean
    lockedUntil?: boolean
    ageVerified?: boolean
    ageVerificationMethod?: boolean
    ageVerifiedAt?: boolean
    ageVerifiedBy?: boolean
    termsAcceptedAt?: boolean
    privacyAcceptedAt?: boolean
    marketingConsent?: boolean
    gdprConsent?: boolean
    ccpaOptOut?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    createdBy?: boolean
    updatedBy?: boolean
  }

  export type UserInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    addresses?: boolean | User$addressesArgs<ExtArgs>
    sessions?: boolean | User$sessionsArgs<ExtArgs>
    stores?: boolean | User$storesArgs<ExtArgs>
    orders?: boolean | User$ordersArgs<ExtArgs>
    reviews?: boolean | User$reviewsArgs<ExtArgs>
    professional?: boolean | User$professionalArgs<ExtArgs>
    storeStaff?: boolean | User$storeStaffArgs<ExtArgs>
    consultationsAsPatient?: boolean | User$consultationsAsPatientArgs<ExtArgs>
    ageVerifier?: boolean | User$ageVerifierArgs<ExtArgs>
    ageVerifications?: boolean | User$ageVerificationsArgs<ExtArgs>
    blogPosts?: boolean | User$blogPostsArgs<ExtArgs>
    factCheckedPosts?: boolean | User$factCheckedPostsArgs<ExtArgs>
    _count?: boolean | UserCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type UserIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    ageVerifier?: boolean | User$ageVerifierArgs<ExtArgs>
  }

  export type $UserPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "User"
    objects: {
      addresses: Prisma.$UserAddressPayload<ExtArgs>[]
      sessions: Prisma.$UserSessionPayload<ExtArgs>[]
      stores: Prisma.$StorePayload<ExtArgs>[]
      orders: Prisma.$OrderPayload<ExtArgs>[]
      reviews: Prisma.$ReviewPayload<ExtArgs>[]
      professional: Prisma.$ProfessionalPayload<ExtArgs> | null
      storeStaff: Prisma.$StoreStaffPayload<ExtArgs>[]
      consultationsAsPatient: Prisma.$ConsultationPayload<ExtArgs>[]
      ageVerifier: Prisma.$UserPayload<ExtArgs> | null
      ageVerifications: Prisma.$UserPayload<ExtArgs>[]
      blogPosts: Prisma.$BlogPostPayload<ExtArgs>[]
      factCheckedPosts: Prisma.$BlogPostPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      email: string
      emailVerified: boolean
      passwordHash: string
      role: $Enums.UserRole
      firstName: string | null
      lastName: string | null
      phone: string | null
      dateOfBirth: Date | null
      status: $Enums.UserStatus
      lastLoginAt: Date | null
      failedLoginAttempts: number
      lockedUntil: Date | null
      ageVerified: boolean
      ageVerificationMethod: $Enums.AgeVerificationMethod | null
      ageVerifiedAt: Date | null
      ageVerifiedBy: string | null
      termsAcceptedAt: Date | null
      privacyAcceptedAt: Date | null
      marketingConsent: boolean
      gdprConsent: boolean
      ccpaOptOut: boolean
      createdAt: Date
      updatedAt: Date
      createdBy: string | null
      updatedBy: string | null
    }, ExtArgs["result"]["user"]>
    composites: {}
  }

  type UserGetPayload<S extends boolean | null | undefined | UserDefaultArgs> = $Result.GetResult<Prisma.$UserPayload, S>

  type UserCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<UserFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: UserCountAggregateInputType | true
    }

  export interface UserDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['User'], meta: { name: 'User' } }
    /**
     * Find zero or one User that matches the filter.
     * @param {UserFindUniqueArgs} args - Arguments to find a User
     * @example
     * // Get one User
     * const user = await prisma.user.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends UserFindUniqueArgs>(args: SelectSubset<T, UserFindUniqueArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one User that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {UserFindUniqueOrThrowArgs} args - Arguments to find a User
     * @example
     * // Get one User
     * const user = await prisma.user.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends UserFindUniqueOrThrowArgs>(args: SelectSubset<T, UserFindUniqueOrThrowArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first User that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserFindFirstArgs} args - Arguments to find a User
     * @example
     * // Get one User
     * const user = await prisma.user.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends UserFindFirstArgs>(args?: SelectSubset<T, UserFindFirstArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first User that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserFindFirstOrThrowArgs} args - Arguments to find a User
     * @example
     * // Get one User
     * const user = await prisma.user.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends UserFindFirstOrThrowArgs>(args?: SelectSubset<T, UserFindFirstOrThrowArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more Users that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Users
     * const users = await prisma.user.findMany()
     * 
     * // Get first 10 Users
     * const users = await prisma.user.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const userWithIdOnly = await prisma.user.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends UserFindManyArgs>(args?: SelectSubset<T, UserFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a User.
     * @param {UserCreateArgs} args - Arguments to create a User.
     * @example
     * // Create one User
     * const User = await prisma.user.create({
     *   data: {
     *     // ... data to create a User
     *   }
     * })
     * 
     */
    create<T extends UserCreateArgs>(args: SelectSubset<T, UserCreateArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many Users.
     * @param {UserCreateManyArgs} args - Arguments to create many Users.
     * @example
     * // Create many Users
     * const user = await prisma.user.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends UserCreateManyArgs>(args?: SelectSubset<T, UserCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Users and returns the data saved in the database.
     * @param {UserCreateManyAndReturnArgs} args - Arguments to create many Users.
     * @example
     * // Create many Users
     * const user = await prisma.user.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Users and only return the `id`
     * const userWithIdOnly = await prisma.user.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends UserCreateManyAndReturnArgs>(args?: SelectSubset<T, UserCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a User.
     * @param {UserDeleteArgs} args - Arguments to delete one User.
     * @example
     * // Delete one User
     * const User = await prisma.user.delete({
     *   where: {
     *     // ... filter to delete one User
     *   }
     * })
     * 
     */
    delete<T extends UserDeleteArgs>(args: SelectSubset<T, UserDeleteArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one User.
     * @param {UserUpdateArgs} args - Arguments to update one User.
     * @example
     * // Update one User
     * const user = await prisma.user.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends UserUpdateArgs>(args: SelectSubset<T, UserUpdateArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more Users.
     * @param {UserDeleteManyArgs} args - Arguments to filter Users to delete.
     * @example
     * // Delete a few Users
     * const { count } = await prisma.user.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends UserDeleteManyArgs>(args?: SelectSubset<T, UserDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Users.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Users
     * const user = await prisma.user.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends UserUpdateManyArgs>(args: SelectSubset<T, UserUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one User.
     * @param {UserUpsertArgs} args - Arguments to update or create a User.
     * @example
     * // Update or create a User
     * const user = await prisma.user.upsert({
     *   create: {
     *     // ... data to create a User
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the User we want to update
     *   }
     * })
     */
    upsert<T extends UserUpsertArgs>(args: SelectSubset<T, UserUpsertArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of Users.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserCountArgs} args - Arguments to filter Users to count.
     * @example
     * // Count the number of Users
     * const count = await prisma.user.count({
     *   where: {
     *     // ... the filter for the Users we want to count
     *   }
     * })
    **/
    count<T extends UserCountArgs>(
      args?: Subset<T, UserCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], UserCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a User.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends UserAggregateArgs>(args: Subset<T, UserAggregateArgs>): Prisma.PrismaPromise<GetUserAggregateType<T>>

    /**
     * Group by User.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends UserGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: UserGroupByArgs['orderBy'] }
        : { orderBy?: UserGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, UserGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetUserGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the User model
   */
  readonly fields: UserFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for User.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__UserClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    addresses<T extends User$addressesArgs<ExtArgs> = {}>(args?: Subset<T, User$addressesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UserAddressPayload<ExtArgs>, T, "findMany"> | Null>
    sessions<T extends User$sessionsArgs<ExtArgs> = {}>(args?: Subset<T, User$sessionsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UserSessionPayload<ExtArgs>, T, "findMany"> | Null>
    stores<T extends User$storesArgs<ExtArgs> = {}>(args?: Subset<T, User$storesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$StorePayload<ExtArgs>, T, "findMany"> | Null>
    orders<T extends User$ordersArgs<ExtArgs> = {}>(args?: Subset<T, User$ordersArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$OrderPayload<ExtArgs>, T, "findMany"> | Null>
    reviews<T extends User$reviewsArgs<ExtArgs> = {}>(args?: Subset<T, User$reviewsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ReviewPayload<ExtArgs>, T, "findMany"> | Null>
    professional<T extends User$professionalArgs<ExtArgs> = {}>(args?: Subset<T, User$professionalArgs<ExtArgs>>): Prisma__ProfessionalClient<$Result.GetResult<Prisma.$ProfessionalPayload<ExtArgs>, T, "findUniqueOrThrow"> | null, null, ExtArgs>
    storeStaff<T extends User$storeStaffArgs<ExtArgs> = {}>(args?: Subset<T, User$storeStaffArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$StoreStaffPayload<ExtArgs>, T, "findMany"> | Null>
    consultationsAsPatient<T extends User$consultationsAsPatientArgs<ExtArgs> = {}>(args?: Subset<T, User$consultationsAsPatientArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ConsultationPayload<ExtArgs>, T, "findMany"> | Null>
    ageVerifier<T extends User$ageVerifierArgs<ExtArgs> = {}>(args?: Subset<T, User$ageVerifierArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow"> | null, null, ExtArgs>
    ageVerifications<T extends User$ageVerificationsArgs<ExtArgs> = {}>(args?: Subset<T, User$ageVerificationsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findMany"> | Null>
    blogPosts<T extends User$blogPostsArgs<ExtArgs> = {}>(args?: Subset<T, User$blogPostsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$BlogPostPayload<ExtArgs>, T, "findMany"> | Null>
    factCheckedPosts<T extends User$factCheckedPostsArgs<ExtArgs> = {}>(args?: Subset<T, User$factCheckedPostsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$BlogPostPayload<ExtArgs>, T, "findMany"> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the User model
   */ 
  interface UserFieldRefs {
    readonly id: FieldRef<"User", 'String'>
    readonly email: FieldRef<"User", 'String'>
    readonly emailVerified: FieldRef<"User", 'Boolean'>
    readonly passwordHash: FieldRef<"User", 'String'>
    readonly role: FieldRef<"User", 'UserRole'>
    readonly firstName: FieldRef<"User", 'String'>
    readonly lastName: FieldRef<"User", 'String'>
    readonly phone: FieldRef<"User", 'String'>
    readonly dateOfBirth: FieldRef<"User", 'DateTime'>
    readonly status: FieldRef<"User", 'UserStatus'>
    readonly lastLoginAt: FieldRef<"User", 'DateTime'>
    readonly failedLoginAttempts: FieldRef<"User", 'Int'>
    readonly lockedUntil: FieldRef<"User", 'DateTime'>
    readonly ageVerified: FieldRef<"User", 'Boolean'>
    readonly ageVerificationMethod: FieldRef<"User", 'AgeVerificationMethod'>
    readonly ageVerifiedAt: FieldRef<"User", 'DateTime'>
    readonly ageVerifiedBy: FieldRef<"User", 'String'>
    readonly termsAcceptedAt: FieldRef<"User", 'DateTime'>
    readonly privacyAcceptedAt: FieldRef<"User", 'DateTime'>
    readonly marketingConsent: FieldRef<"User", 'Boolean'>
    readonly gdprConsent: FieldRef<"User", 'Boolean'>
    readonly ccpaOptOut: FieldRef<"User", 'Boolean'>
    readonly createdAt: FieldRef<"User", 'DateTime'>
    readonly updatedAt: FieldRef<"User", 'DateTime'>
    readonly createdBy: FieldRef<"User", 'String'>
    readonly updatedBy: FieldRef<"User", 'String'>
  }
    

  // Custom InputTypes
  /**
   * User findUnique
   */
  export type UserFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * Filter, which User to fetch.
     */
    where: UserWhereUniqueInput
  }

  /**
   * User findUniqueOrThrow
   */
  export type UserFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * Filter, which User to fetch.
     */
    where: UserWhereUniqueInput
  }

  /**
   * User findFirst
   */
  export type UserFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * Filter, which User to fetch.
     */
    where?: UserWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Users to fetch.
     */
    orderBy?: UserOrderByWithRelationInput | UserOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Users.
     */
    cursor?: UserWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Users.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Users.
     */
    distinct?: UserScalarFieldEnum | UserScalarFieldEnum[]
  }

  /**
   * User findFirstOrThrow
   */
  export type UserFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * Filter, which User to fetch.
     */
    where?: UserWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Users to fetch.
     */
    orderBy?: UserOrderByWithRelationInput | UserOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Users.
     */
    cursor?: UserWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Users.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Users.
     */
    distinct?: UserScalarFieldEnum | UserScalarFieldEnum[]
  }

  /**
   * User findMany
   */
  export type UserFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * Filter, which Users to fetch.
     */
    where?: UserWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Users to fetch.
     */
    orderBy?: UserOrderByWithRelationInput | UserOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Users.
     */
    cursor?: UserWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Users.
     */
    skip?: number
    distinct?: UserScalarFieldEnum | UserScalarFieldEnum[]
  }

  /**
   * User create
   */
  export type UserCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * The data needed to create a User.
     */
    data: XOR<UserCreateInput, UserUncheckedCreateInput>
  }

  /**
   * User createMany
   */
  export type UserCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Users.
     */
    data: UserCreateManyInput | UserCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * User createManyAndReturn
   */
  export type UserCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many Users.
     */
    data: UserCreateManyInput | UserCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * User update
   */
  export type UserUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * The data needed to update a User.
     */
    data: XOR<UserUpdateInput, UserUncheckedUpdateInput>
    /**
     * Choose, which User to update.
     */
    where: UserWhereUniqueInput
  }

  /**
   * User updateMany
   */
  export type UserUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Users.
     */
    data: XOR<UserUpdateManyMutationInput, UserUncheckedUpdateManyInput>
    /**
     * Filter which Users to update
     */
    where?: UserWhereInput
  }

  /**
   * User upsert
   */
  export type UserUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * The filter to search for the User to update in case it exists.
     */
    where: UserWhereUniqueInput
    /**
     * In case the User found by the `where` argument doesn't exist, create a new User with this data.
     */
    create: XOR<UserCreateInput, UserUncheckedCreateInput>
    /**
     * In case the User was found with the provided `where` argument, update it with this data.
     */
    update: XOR<UserUpdateInput, UserUncheckedUpdateInput>
  }

  /**
   * User delete
   */
  export type UserDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * Filter which User to delete.
     */
    where: UserWhereUniqueInput
  }

  /**
   * User deleteMany
   */
  export type UserDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Users to delete
     */
    where?: UserWhereInput
  }

  /**
   * User.addresses
   */
  export type User$addressesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserAddress
     */
    select?: UserAddressSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserAddressInclude<ExtArgs> | null
    where?: UserAddressWhereInput
    orderBy?: UserAddressOrderByWithRelationInput | UserAddressOrderByWithRelationInput[]
    cursor?: UserAddressWhereUniqueInput
    take?: number
    skip?: number
    distinct?: UserAddressScalarFieldEnum | UserAddressScalarFieldEnum[]
  }

  /**
   * User.sessions
   */
  export type User$sessionsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserSession
     */
    select?: UserSessionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserSessionInclude<ExtArgs> | null
    where?: UserSessionWhereInput
    orderBy?: UserSessionOrderByWithRelationInput | UserSessionOrderByWithRelationInput[]
    cursor?: UserSessionWhereUniqueInput
    take?: number
    skip?: number
    distinct?: UserSessionScalarFieldEnum | UserSessionScalarFieldEnum[]
  }

  /**
   * User.stores
   */
  export type User$storesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Store
     */
    select?: StoreSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: StoreInclude<ExtArgs> | null
    where?: StoreWhereInput
    orderBy?: StoreOrderByWithRelationInput | StoreOrderByWithRelationInput[]
    cursor?: StoreWhereUniqueInput
    take?: number
    skip?: number
    distinct?: StoreScalarFieldEnum | StoreScalarFieldEnum[]
  }

  /**
   * User.orders
   */
  export type User$ordersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Order
     */
    select?: OrderSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrderInclude<ExtArgs> | null
    where?: OrderWhereInput
    orderBy?: OrderOrderByWithRelationInput | OrderOrderByWithRelationInput[]
    cursor?: OrderWhereUniqueInput
    take?: number
    skip?: number
    distinct?: OrderScalarFieldEnum | OrderScalarFieldEnum[]
  }

  /**
   * User.reviews
   */
  export type User$reviewsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Review
     */
    select?: ReviewSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReviewInclude<ExtArgs> | null
    where?: ReviewWhereInput
    orderBy?: ReviewOrderByWithRelationInput | ReviewOrderByWithRelationInput[]
    cursor?: ReviewWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ReviewScalarFieldEnum | ReviewScalarFieldEnum[]
  }

  /**
   * User.professional
   */
  export type User$professionalArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Professional
     */
    select?: ProfessionalSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProfessionalInclude<ExtArgs> | null
    where?: ProfessionalWhereInput
  }

  /**
   * User.storeStaff
   */
  export type User$storeStaffArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the StoreStaff
     */
    select?: StoreStaffSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: StoreStaffInclude<ExtArgs> | null
    where?: StoreStaffWhereInput
    orderBy?: StoreStaffOrderByWithRelationInput | StoreStaffOrderByWithRelationInput[]
    cursor?: StoreStaffWhereUniqueInput
    take?: number
    skip?: number
    distinct?: StoreStaffScalarFieldEnum | StoreStaffScalarFieldEnum[]
  }

  /**
   * User.consultationsAsPatient
   */
  export type User$consultationsAsPatientArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Consultation
     */
    select?: ConsultationSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ConsultationInclude<ExtArgs> | null
    where?: ConsultationWhereInput
    orderBy?: ConsultationOrderByWithRelationInput | ConsultationOrderByWithRelationInput[]
    cursor?: ConsultationWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ConsultationScalarFieldEnum | ConsultationScalarFieldEnum[]
  }

  /**
   * User.ageVerifier
   */
  export type User$ageVerifierArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    where?: UserWhereInput
  }

  /**
   * User.ageVerifications
   */
  export type User$ageVerificationsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    where?: UserWhereInput
    orderBy?: UserOrderByWithRelationInput | UserOrderByWithRelationInput[]
    cursor?: UserWhereUniqueInput
    take?: number
    skip?: number
    distinct?: UserScalarFieldEnum | UserScalarFieldEnum[]
  }

  /**
   * User.blogPosts
   */
  export type User$blogPostsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the BlogPost
     */
    select?: BlogPostSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BlogPostInclude<ExtArgs> | null
    where?: BlogPostWhereInput
    orderBy?: BlogPostOrderByWithRelationInput | BlogPostOrderByWithRelationInput[]
    cursor?: BlogPostWhereUniqueInput
    take?: number
    skip?: number
    distinct?: BlogPostScalarFieldEnum | BlogPostScalarFieldEnum[]
  }

  /**
   * User.factCheckedPosts
   */
  export type User$factCheckedPostsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the BlogPost
     */
    select?: BlogPostSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BlogPostInclude<ExtArgs> | null
    where?: BlogPostWhereInput
    orderBy?: BlogPostOrderByWithRelationInput | BlogPostOrderByWithRelationInput[]
    cursor?: BlogPostWhereUniqueInput
    take?: number
    skip?: number
    distinct?: BlogPostScalarFieldEnum | BlogPostScalarFieldEnum[]
  }

  /**
   * User without action
   */
  export type UserDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
  }


  /**
   * Model UserAddress
   */

  export type AggregateUserAddress = {
    _count: UserAddressCountAggregateOutputType | null
    _avg: UserAddressAvgAggregateOutputType | null
    _sum: UserAddressSumAggregateOutputType | null
    _min: UserAddressMinAggregateOutputType | null
    _max: UserAddressMaxAggregateOutputType | null
  }

  export type UserAddressAvgAggregateOutputType = {
    latitude: Decimal | null
    longitude: Decimal | null
  }

  export type UserAddressSumAggregateOutputType = {
    latitude: Decimal | null
    longitude: Decimal | null
  }

  export type UserAddressMinAggregateOutputType = {
    id: string | null
    userId: string | null
    type: $Enums.AddressType | null
    addressLine1: string | null
    addressLine2: string | null
    city: string | null
    state: string | null
    postalCode: string | null
    country: string | null
    latitude: Decimal | null
    longitude: Decimal | null
    isDefault: boolean | null
    verified: boolean | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type UserAddressMaxAggregateOutputType = {
    id: string | null
    userId: string | null
    type: $Enums.AddressType | null
    addressLine1: string | null
    addressLine2: string | null
    city: string | null
    state: string | null
    postalCode: string | null
    country: string | null
    latitude: Decimal | null
    longitude: Decimal | null
    isDefault: boolean | null
    verified: boolean | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type UserAddressCountAggregateOutputType = {
    id: number
    userId: number
    type: number
    addressLine1: number
    addressLine2: number
    city: number
    state: number
    postalCode: number
    country: number
    latitude: number
    longitude: number
    isDefault: number
    verified: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type UserAddressAvgAggregateInputType = {
    latitude?: true
    longitude?: true
  }

  export type UserAddressSumAggregateInputType = {
    latitude?: true
    longitude?: true
  }

  export type UserAddressMinAggregateInputType = {
    id?: true
    userId?: true
    type?: true
    addressLine1?: true
    addressLine2?: true
    city?: true
    state?: true
    postalCode?: true
    country?: true
    latitude?: true
    longitude?: true
    isDefault?: true
    verified?: true
    createdAt?: true
    updatedAt?: true
  }

  export type UserAddressMaxAggregateInputType = {
    id?: true
    userId?: true
    type?: true
    addressLine1?: true
    addressLine2?: true
    city?: true
    state?: true
    postalCode?: true
    country?: true
    latitude?: true
    longitude?: true
    isDefault?: true
    verified?: true
    createdAt?: true
    updatedAt?: true
  }

  export type UserAddressCountAggregateInputType = {
    id?: true
    userId?: true
    type?: true
    addressLine1?: true
    addressLine2?: true
    city?: true
    state?: true
    postalCode?: true
    country?: true
    latitude?: true
    longitude?: true
    isDefault?: true
    verified?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type UserAddressAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which UserAddress to aggregate.
     */
    where?: UserAddressWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of UserAddresses to fetch.
     */
    orderBy?: UserAddressOrderByWithRelationInput | UserAddressOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: UserAddressWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` UserAddresses from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` UserAddresses.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned UserAddresses
    **/
    _count?: true | UserAddressCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: UserAddressAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: UserAddressSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: UserAddressMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: UserAddressMaxAggregateInputType
  }

  export type GetUserAddressAggregateType<T extends UserAddressAggregateArgs> = {
        [P in keyof T & keyof AggregateUserAddress]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateUserAddress[P]>
      : GetScalarType<T[P], AggregateUserAddress[P]>
  }




  export type UserAddressGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: UserAddressWhereInput
    orderBy?: UserAddressOrderByWithAggregationInput | UserAddressOrderByWithAggregationInput[]
    by: UserAddressScalarFieldEnum[] | UserAddressScalarFieldEnum
    having?: UserAddressScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: UserAddressCountAggregateInputType | true
    _avg?: UserAddressAvgAggregateInputType
    _sum?: UserAddressSumAggregateInputType
    _min?: UserAddressMinAggregateInputType
    _max?: UserAddressMaxAggregateInputType
  }

  export type UserAddressGroupByOutputType = {
    id: string
    userId: string
    type: $Enums.AddressType
    addressLine1: string
    addressLine2: string | null
    city: string
    state: string
    postalCode: string
    country: string
    latitude: Decimal | null
    longitude: Decimal | null
    isDefault: boolean
    verified: boolean
    createdAt: Date
    updatedAt: Date
    _count: UserAddressCountAggregateOutputType | null
    _avg: UserAddressAvgAggregateOutputType | null
    _sum: UserAddressSumAggregateOutputType | null
    _min: UserAddressMinAggregateOutputType | null
    _max: UserAddressMaxAggregateOutputType | null
  }

  type GetUserAddressGroupByPayload<T extends UserAddressGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<UserAddressGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof UserAddressGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], UserAddressGroupByOutputType[P]>
            : GetScalarType<T[P], UserAddressGroupByOutputType[P]>
        }
      >
    >


  export type UserAddressSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    userId?: boolean
    type?: boolean
    addressLine1?: boolean
    addressLine2?: boolean
    city?: boolean
    state?: boolean
    postalCode?: boolean
    country?: boolean
    latitude?: boolean
    longitude?: boolean
    isDefault?: boolean
    verified?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    user?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["userAddress"]>

  export type UserAddressSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    userId?: boolean
    type?: boolean
    addressLine1?: boolean
    addressLine2?: boolean
    city?: boolean
    state?: boolean
    postalCode?: boolean
    country?: boolean
    latitude?: boolean
    longitude?: boolean
    isDefault?: boolean
    verified?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    user?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["userAddress"]>

  export type UserAddressSelectScalar = {
    id?: boolean
    userId?: boolean
    type?: boolean
    addressLine1?: boolean
    addressLine2?: boolean
    city?: boolean
    state?: boolean
    postalCode?: boolean
    country?: boolean
    latitude?: boolean
    longitude?: boolean
    isDefault?: boolean
    verified?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type UserAddressInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | UserDefaultArgs<ExtArgs>
  }
  export type UserAddressIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | UserDefaultArgs<ExtArgs>
  }

  export type $UserAddressPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "UserAddress"
    objects: {
      user: Prisma.$UserPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      userId: string
      type: $Enums.AddressType
      addressLine1: string
      addressLine2: string | null
      city: string
      state: string
      postalCode: string
      country: string
      latitude: Prisma.Decimal | null
      longitude: Prisma.Decimal | null
      isDefault: boolean
      verified: boolean
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["userAddress"]>
    composites: {}
  }

  type UserAddressGetPayload<S extends boolean | null | undefined | UserAddressDefaultArgs> = $Result.GetResult<Prisma.$UserAddressPayload, S>

  type UserAddressCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<UserAddressFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: UserAddressCountAggregateInputType | true
    }

  export interface UserAddressDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['UserAddress'], meta: { name: 'UserAddress' } }
    /**
     * Find zero or one UserAddress that matches the filter.
     * @param {UserAddressFindUniqueArgs} args - Arguments to find a UserAddress
     * @example
     * // Get one UserAddress
     * const userAddress = await prisma.userAddress.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends UserAddressFindUniqueArgs>(args: SelectSubset<T, UserAddressFindUniqueArgs<ExtArgs>>): Prisma__UserAddressClient<$Result.GetResult<Prisma.$UserAddressPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one UserAddress that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {UserAddressFindUniqueOrThrowArgs} args - Arguments to find a UserAddress
     * @example
     * // Get one UserAddress
     * const userAddress = await prisma.userAddress.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends UserAddressFindUniqueOrThrowArgs>(args: SelectSubset<T, UserAddressFindUniqueOrThrowArgs<ExtArgs>>): Prisma__UserAddressClient<$Result.GetResult<Prisma.$UserAddressPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first UserAddress that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserAddressFindFirstArgs} args - Arguments to find a UserAddress
     * @example
     * // Get one UserAddress
     * const userAddress = await prisma.userAddress.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends UserAddressFindFirstArgs>(args?: SelectSubset<T, UserAddressFindFirstArgs<ExtArgs>>): Prisma__UserAddressClient<$Result.GetResult<Prisma.$UserAddressPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first UserAddress that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserAddressFindFirstOrThrowArgs} args - Arguments to find a UserAddress
     * @example
     * // Get one UserAddress
     * const userAddress = await prisma.userAddress.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends UserAddressFindFirstOrThrowArgs>(args?: SelectSubset<T, UserAddressFindFirstOrThrowArgs<ExtArgs>>): Prisma__UserAddressClient<$Result.GetResult<Prisma.$UserAddressPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more UserAddresses that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserAddressFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all UserAddresses
     * const userAddresses = await prisma.userAddress.findMany()
     * 
     * // Get first 10 UserAddresses
     * const userAddresses = await prisma.userAddress.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const userAddressWithIdOnly = await prisma.userAddress.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends UserAddressFindManyArgs>(args?: SelectSubset<T, UserAddressFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UserAddressPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a UserAddress.
     * @param {UserAddressCreateArgs} args - Arguments to create a UserAddress.
     * @example
     * // Create one UserAddress
     * const UserAddress = await prisma.userAddress.create({
     *   data: {
     *     // ... data to create a UserAddress
     *   }
     * })
     * 
     */
    create<T extends UserAddressCreateArgs>(args: SelectSubset<T, UserAddressCreateArgs<ExtArgs>>): Prisma__UserAddressClient<$Result.GetResult<Prisma.$UserAddressPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many UserAddresses.
     * @param {UserAddressCreateManyArgs} args - Arguments to create many UserAddresses.
     * @example
     * // Create many UserAddresses
     * const userAddress = await prisma.userAddress.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends UserAddressCreateManyArgs>(args?: SelectSubset<T, UserAddressCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many UserAddresses and returns the data saved in the database.
     * @param {UserAddressCreateManyAndReturnArgs} args - Arguments to create many UserAddresses.
     * @example
     * // Create many UserAddresses
     * const userAddress = await prisma.userAddress.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many UserAddresses and only return the `id`
     * const userAddressWithIdOnly = await prisma.userAddress.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends UserAddressCreateManyAndReturnArgs>(args?: SelectSubset<T, UserAddressCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UserAddressPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a UserAddress.
     * @param {UserAddressDeleteArgs} args - Arguments to delete one UserAddress.
     * @example
     * // Delete one UserAddress
     * const UserAddress = await prisma.userAddress.delete({
     *   where: {
     *     // ... filter to delete one UserAddress
     *   }
     * })
     * 
     */
    delete<T extends UserAddressDeleteArgs>(args: SelectSubset<T, UserAddressDeleteArgs<ExtArgs>>): Prisma__UserAddressClient<$Result.GetResult<Prisma.$UserAddressPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one UserAddress.
     * @param {UserAddressUpdateArgs} args - Arguments to update one UserAddress.
     * @example
     * // Update one UserAddress
     * const userAddress = await prisma.userAddress.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends UserAddressUpdateArgs>(args: SelectSubset<T, UserAddressUpdateArgs<ExtArgs>>): Prisma__UserAddressClient<$Result.GetResult<Prisma.$UserAddressPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more UserAddresses.
     * @param {UserAddressDeleteManyArgs} args - Arguments to filter UserAddresses to delete.
     * @example
     * // Delete a few UserAddresses
     * const { count } = await prisma.userAddress.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends UserAddressDeleteManyArgs>(args?: SelectSubset<T, UserAddressDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more UserAddresses.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserAddressUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many UserAddresses
     * const userAddress = await prisma.userAddress.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends UserAddressUpdateManyArgs>(args: SelectSubset<T, UserAddressUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one UserAddress.
     * @param {UserAddressUpsertArgs} args - Arguments to update or create a UserAddress.
     * @example
     * // Update or create a UserAddress
     * const userAddress = await prisma.userAddress.upsert({
     *   create: {
     *     // ... data to create a UserAddress
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the UserAddress we want to update
     *   }
     * })
     */
    upsert<T extends UserAddressUpsertArgs>(args: SelectSubset<T, UserAddressUpsertArgs<ExtArgs>>): Prisma__UserAddressClient<$Result.GetResult<Prisma.$UserAddressPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of UserAddresses.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserAddressCountArgs} args - Arguments to filter UserAddresses to count.
     * @example
     * // Count the number of UserAddresses
     * const count = await prisma.userAddress.count({
     *   where: {
     *     // ... the filter for the UserAddresses we want to count
     *   }
     * })
    **/
    count<T extends UserAddressCountArgs>(
      args?: Subset<T, UserAddressCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], UserAddressCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a UserAddress.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserAddressAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends UserAddressAggregateArgs>(args: Subset<T, UserAddressAggregateArgs>): Prisma.PrismaPromise<GetUserAddressAggregateType<T>>

    /**
     * Group by UserAddress.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserAddressGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends UserAddressGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: UserAddressGroupByArgs['orderBy'] }
        : { orderBy?: UserAddressGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, UserAddressGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetUserAddressGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the UserAddress model
   */
  readonly fields: UserAddressFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for UserAddress.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__UserAddressClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    user<T extends UserDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UserDefaultArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the UserAddress model
   */ 
  interface UserAddressFieldRefs {
    readonly id: FieldRef<"UserAddress", 'String'>
    readonly userId: FieldRef<"UserAddress", 'String'>
    readonly type: FieldRef<"UserAddress", 'AddressType'>
    readonly addressLine1: FieldRef<"UserAddress", 'String'>
    readonly addressLine2: FieldRef<"UserAddress", 'String'>
    readonly city: FieldRef<"UserAddress", 'String'>
    readonly state: FieldRef<"UserAddress", 'String'>
    readonly postalCode: FieldRef<"UserAddress", 'String'>
    readonly country: FieldRef<"UserAddress", 'String'>
    readonly latitude: FieldRef<"UserAddress", 'Decimal'>
    readonly longitude: FieldRef<"UserAddress", 'Decimal'>
    readonly isDefault: FieldRef<"UserAddress", 'Boolean'>
    readonly verified: FieldRef<"UserAddress", 'Boolean'>
    readonly createdAt: FieldRef<"UserAddress", 'DateTime'>
    readonly updatedAt: FieldRef<"UserAddress", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * UserAddress findUnique
   */
  export type UserAddressFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserAddress
     */
    select?: UserAddressSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserAddressInclude<ExtArgs> | null
    /**
     * Filter, which UserAddress to fetch.
     */
    where: UserAddressWhereUniqueInput
  }

  /**
   * UserAddress findUniqueOrThrow
   */
  export type UserAddressFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserAddress
     */
    select?: UserAddressSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserAddressInclude<ExtArgs> | null
    /**
     * Filter, which UserAddress to fetch.
     */
    where: UserAddressWhereUniqueInput
  }

  /**
   * UserAddress findFirst
   */
  export type UserAddressFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserAddress
     */
    select?: UserAddressSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserAddressInclude<ExtArgs> | null
    /**
     * Filter, which UserAddress to fetch.
     */
    where?: UserAddressWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of UserAddresses to fetch.
     */
    orderBy?: UserAddressOrderByWithRelationInput | UserAddressOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for UserAddresses.
     */
    cursor?: UserAddressWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` UserAddresses from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` UserAddresses.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of UserAddresses.
     */
    distinct?: UserAddressScalarFieldEnum | UserAddressScalarFieldEnum[]
  }

  /**
   * UserAddress findFirstOrThrow
   */
  export type UserAddressFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserAddress
     */
    select?: UserAddressSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserAddressInclude<ExtArgs> | null
    /**
     * Filter, which UserAddress to fetch.
     */
    where?: UserAddressWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of UserAddresses to fetch.
     */
    orderBy?: UserAddressOrderByWithRelationInput | UserAddressOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for UserAddresses.
     */
    cursor?: UserAddressWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` UserAddresses from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` UserAddresses.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of UserAddresses.
     */
    distinct?: UserAddressScalarFieldEnum | UserAddressScalarFieldEnum[]
  }

  /**
   * UserAddress findMany
   */
  export type UserAddressFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserAddress
     */
    select?: UserAddressSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserAddressInclude<ExtArgs> | null
    /**
     * Filter, which UserAddresses to fetch.
     */
    where?: UserAddressWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of UserAddresses to fetch.
     */
    orderBy?: UserAddressOrderByWithRelationInput | UserAddressOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing UserAddresses.
     */
    cursor?: UserAddressWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` UserAddresses from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` UserAddresses.
     */
    skip?: number
    distinct?: UserAddressScalarFieldEnum | UserAddressScalarFieldEnum[]
  }

  /**
   * UserAddress create
   */
  export type UserAddressCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserAddress
     */
    select?: UserAddressSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserAddressInclude<ExtArgs> | null
    /**
     * The data needed to create a UserAddress.
     */
    data: XOR<UserAddressCreateInput, UserAddressUncheckedCreateInput>
  }

  /**
   * UserAddress createMany
   */
  export type UserAddressCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many UserAddresses.
     */
    data: UserAddressCreateManyInput | UserAddressCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * UserAddress createManyAndReturn
   */
  export type UserAddressCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserAddress
     */
    select?: UserAddressSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many UserAddresses.
     */
    data: UserAddressCreateManyInput | UserAddressCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserAddressIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * UserAddress update
   */
  export type UserAddressUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserAddress
     */
    select?: UserAddressSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserAddressInclude<ExtArgs> | null
    /**
     * The data needed to update a UserAddress.
     */
    data: XOR<UserAddressUpdateInput, UserAddressUncheckedUpdateInput>
    /**
     * Choose, which UserAddress to update.
     */
    where: UserAddressWhereUniqueInput
  }

  /**
   * UserAddress updateMany
   */
  export type UserAddressUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update UserAddresses.
     */
    data: XOR<UserAddressUpdateManyMutationInput, UserAddressUncheckedUpdateManyInput>
    /**
     * Filter which UserAddresses to update
     */
    where?: UserAddressWhereInput
  }

  /**
   * UserAddress upsert
   */
  export type UserAddressUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserAddress
     */
    select?: UserAddressSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserAddressInclude<ExtArgs> | null
    /**
     * The filter to search for the UserAddress to update in case it exists.
     */
    where: UserAddressWhereUniqueInput
    /**
     * In case the UserAddress found by the `where` argument doesn't exist, create a new UserAddress with this data.
     */
    create: XOR<UserAddressCreateInput, UserAddressUncheckedCreateInput>
    /**
     * In case the UserAddress was found with the provided `where` argument, update it with this data.
     */
    update: XOR<UserAddressUpdateInput, UserAddressUncheckedUpdateInput>
  }

  /**
   * UserAddress delete
   */
  export type UserAddressDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserAddress
     */
    select?: UserAddressSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserAddressInclude<ExtArgs> | null
    /**
     * Filter which UserAddress to delete.
     */
    where: UserAddressWhereUniqueInput
  }

  /**
   * UserAddress deleteMany
   */
  export type UserAddressDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which UserAddresses to delete
     */
    where?: UserAddressWhereInput
  }

  /**
   * UserAddress without action
   */
  export type UserAddressDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserAddress
     */
    select?: UserAddressSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserAddressInclude<ExtArgs> | null
  }


  /**
   * Model UserSession
   */

  export type AggregateUserSession = {
    _count: UserSessionCountAggregateOutputType | null
    _min: UserSessionMinAggregateOutputType | null
    _max: UserSessionMaxAggregateOutputType | null
  }

  export type UserSessionMinAggregateOutputType = {
    id: string | null
    userId: string | null
    refreshTokenHash: string | null
    deviceFingerprint: string | null
    ipAddress: string | null
    userAgent: string | null
    locationCountry: string | null
    locationRegion: string | null
    locationCity: string | null
    isActive: boolean | null
    expiresAt: Date | null
    lastUsedAt: Date | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type UserSessionMaxAggregateOutputType = {
    id: string | null
    userId: string | null
    refreshTokenHash: string | null
    deviceFingerprint: string | null
    ipAddress: string | null
    userAgent: string | null
    locationCountry: string | null
    locationRegion: string | null
    locationCity: string | null
    isActive: boolean | null
    expiresAt: Date | null
    lastUsedAt: Date | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type UserSessionCountAggregateOutputType = {
    id: number
    userId: number
    refreshTokenHash: number
    deviceFingerprint: number
    ipAddress: number
    userAgent: number
    locationCountry: number
    locationRegion: number
    locationCity: number
    isActive: number
    expiresAt: number
    lastUsedAt: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type UserSessionMinAggregateInputType = {
    id?: true
    userId?: true
    refreshTokenHash?: true
    deviceFingerprint?: true
    ipAddress?: true
    userAgent?: true
    locationCountry?: true
    locationRegion?: true
    locationCity?: true
    isActive?: true
    expiresAt?: true
    lastUsedAt?: true
    createdAt?: true
    updatedAt?: true
  }

  export type UserSessionMaxAggregateInputType = {
    id?: true
    userId?: true
    refreshTokenHash?: true
    deviceFingerprint?: true
    ipAddress?: true
    userAgent?: true
    locationCountry?: true
    locationRegion?: true
    locationCity?: true
    isActive?: true
    expiresAt?: true
    lastUsedAt?: true
    createdAt?: true
    updatedAt?: true
  }

  export type UserSessionCountAggregateInputType = {
    id?: true
    userId?: true
    refreshTokenHash?: true
    deviceFingerprint?: true
    ipAddress?: true
    userAgent?: true
    locationCountry?: true
    locationRegion?: true
    locationCity?: true
    isActive?: true
    expiresAt?: true
    lastUsedAt?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type UserSessionAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which UserSession to aggregate.
     */
    where?: UserSessionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of UserSessions to fetch.
     */
    orderBy?: UserSessionOrderByWithRelationInput | UserSessionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: UserSessionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` UserSessions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` UserSessions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned UserSessions
    **/
    _count?: true | UserSessionCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: UserSessionMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: UserSessionMaxAggregateInputType
  }

  export type GetUserSessionAggregateType<T extends UserSessionAggregateArgs> = {
        [P in keyof T & keyof AggregateUserSession]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateUserSession[P]>
      : GetScalarType<T[P], AggregateUserSession[P]>
  }




  export type UserSessionGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: UserSessionWhereInput
    orderBy?: UserSessionOrderByWithAggregationInput | UserSessionOrderByWithAggregationInput[]
    by: UserSessionScalarFieldEnum[] | UserSessionScalarFieldEnum
    having?: UserSessionScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: UserSessionCountAggregateInputType | true
    _min?: UserSessionMinAggregateInputType
    _max?: UserSessionMaxAggregateInputType
  }

  export type UserSessionGroupByOutputType = {
    id: string
    userId: string
    refreshTokenHash: string
    deviceFingerprint: string | null
    ipAddress: string | null
    userAgent: string | null
    locationCountry: string | null
    locationRegion: string | null
    locationCity: string | null
    isActive: boolean
    expiresAt: Date
    lastUsedAt: Date
    createdAt: Date
    updatedAt: Date
    _count: UserSessionCountAggregateOutputType | null
    _min: UserSessionMinAggregateOutputType | null
    _max: UserSessionMaxAggregateOutputType | null
  }

  type GetUserSessionGroupByPayload<T extends UserSessionGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<UserSessionGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof UserSessionGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], UserSessionGroupByOutputType[P]>
            : GetScalarType<T[P], UserSessionGroupByOutputType[P]>
        }
      >
    >


  export type UserSessionSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    userId?: boolean
    refreshTokenHash?: boolean
    deviceFingerprint?: boolean
    ipAddress?: boolean
    userAgent?: boolean
    locationCountry?: boolean
    locationRegion?: boolean
    locationCity?: boolean
    isActive?: boolean
    expiresAt?: boolean
    lastUsedAt?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    user?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["userSession"]>

  export type UserSessionSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    userId?: boolean
    refreshTokenHash?: boolean
    deviceFingerprint?: boolean
    ipAddress?: boolean
    userAgent?: boolean
    locationCountry?: boolean
    locationRegion?: boolean
    locationCity?: boolean
    isActive?: boolean
    expiresAt?: boolean
    lastUsedAt?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    user?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["userSession"]>

  export type UserSessionSelectScalar = {
    id?: boolean
    userId?: boolean
    refreshTokenHash?: boolean
    deviceFingerprint?: boolean
    ipAddress?: boolean
    userAgent?: boolean
    locationCountry?: boolean
    locationRegion?: boolean
    locationCity?: boolean
    isActive?: boolean
    expiresAt?: boolean
    lastUsedAt?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type UserSessionInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | UserDefaultArgs<ExtArgs>
  }
  export type UserSessionIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | UserDefaultArgs<ExtArgs>
  }

  export type $UserSessionPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "UserSession"
    objects: {
      user: Prisma.$UserPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      userId: string
      refreshTokenHash: string
      deviceFingerprint: string | null
      ipAddress: string | null
      userAgent: string | null
      locationCountry: string | null
      locationRegion: string | null
      locationCity: string | null
      isActive: boolean
      expiresAt: Date
      lastUsedAt: Date
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["userSession"]>
    composites: {}
  }

  type UserSessionGetPayload<S extends boolean | null | undefined | UserSessionDefaultArgs> = $Result.GetResult<Prisma.$UserSessionPayload, S>

  type UserSessionCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<UserSessionFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: UserSessionCountAggregateInputType | true
    }

  export interface UserSessionDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['UserSession'], meta: { name: 'UserSession' } }
    /**
     * Find zero or one UserSession that matches the filter.
     * @param {UserSessionFindUniqueArgs} args - Arguments to find a UserSession
     * @example
     * // Get one UserSession
     * const userSession = await prisma.userSession.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends UserSessionFindUniqueArgs>(args: SelectSubset<T, UserSessionFindUniqueArgs<ExtArgs>>): Prisma__UserSessionClient<$Result.GetResult<Prisma.$UserSessionPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one UserSession that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {UserSessionFindUniqueOrThrowArgs} args - Arguments to find a UserSession
     * @example
     * // Get one UserSession
     * const userSession = await prisma.userSession.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends UserSessionFindUniqueOrThrowArgs>(args: SelectSubset<T, UserSessionFindUniqueOrThrowArgs<ExtArgs>>): Prisma__UserSessionClient<$Result.GetResult<Prisma.$UserSessionPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first UserSession that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserSessionFindFirstArgs} args - Arguments to find a UserSession
     * @example
     * // Get one UserSession
     * const userSession = await prisma.userSession.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends UserSessionFindFirstArgs>(args?: SelectSubset<T, UserSessionFindFirstArgs<ExtArgs>>): Prisma__UserSessionClient<$Result.GetResult<Prisma.$UserSessionPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first UserSession that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserSessionFindFirstOrThrowArgs} args - Arguments to find a UserSession
     * @example
     * // Get one UserSession
     * const userSession = await prisma.userSession.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends UserSessionFindFirstOrThrowArgs>(args?: SelectSubset<T, UserSessionFindFirstOrThrowArgs<ExtArgs>>): Prisma__UserSessionClient<$Result.GetResult<Prisma.$UserSessionPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more UserSessions that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserSessionFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all UserSessions
     * const userSessions = await prisma.userSession.findMany()
     * 
     * // Get first 10 UserSessions
     * const userSessions = await prisma.userSession.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const userSessionWithIdOnly = await prisma.userSession.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends UserSessionFindManyArgs>(args?: SelectSubset<T, UserSessionFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UserSessionPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a UserSession.
     * @param {UserSessionCreateArgs} args - Arguments to create a UserSession.
     * @example
     * // Create one UserSession
     * const UserSession = await prisma.userSession.create({
     *   data: {
     *     // ... data to create a UserSession
     *   }
     * })
     * 
     */
    create<T extends UserSessionCreateArgs>(args: SelectSubset<T, UserSessionCreateArgs<ExtArgs>>): Prisma__UserSessionClient<$Result.GetResult<Prisma.$UserSessionPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many UserSessions.
     * @param {UserSessionCreateManyArgs} args - Arguments to create many UserSessions.
     * @example
     * // Create many UserSessions
     * const userSession = await prisma.userSession.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends UserSessionCreateManyArgs>(args?: SelectSubset<T, UserSessionCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many UserSessions and returns the data saved in the database.
     * @param {UserSessionCreateManyAndReturnArgs} args - Arguments to create many UserSessions.
     * @example
     * // Create many UserSessions
     * const userSession = await prisma.userSession.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many UserSessions and only return the `id`
     * const userSessionWithIdOnly = await prisma.userSession.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends UserSessionCreateManyAndReturnArgs>(args?: SelectSubset<T, UserSessionCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UserSessionPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a UserSession.
     * @param {UserSessionDeleteArgs} args - Arguments to delete one UserSession.
     * @example
     * // Delete one UserSession
     * const UserSession = await prisma.userSession.delete({
     *   where: {
     *     // ... filter to delete one UserSession
     *   }
     * })
     * 
     */
    delete<T extends UserSessionDeleteArgs>(args: SelectSubset<T, UserSessionDeleteArgs<ExtArgs>>): Prisma__UserSessionClient<$Result.GetResult<Prisma.$UserSessionPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one UserSession.
     * @param {UserSessionUpdateArgs} args - Arguments to update one UserSession.
     * @example
     * // Update one UserSession
     * const userSession = await prisma.userSession.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends UserSessionUpdateArgs>(args: SelectSubset<T, UserSessionUpdateArgs<ExtArgs>>): Prisma__UserSessionClient<$Result.GetResult<Prisma.$UserSessionPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more UserSessions.
     * @param {UserSessionDeleteManyArgs} args - Arguments to filter UserSessions to delete.
     * @example
     * // Delete a few UserSessions
     * const { count } = await prisma.userSession.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends UserSessionDeleteManyArgs>(args?: SelectSubset<T, UserSessionDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more UserSessions.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserSessionUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many UserSessions
     * const userSession = await prisma.userSession.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends UserSessionUpdateManyArgs>(args: SelectSubset<T, UserSessionUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one UserSession.
     * @param {UserSessionUpsertArgs} args - Arguments to update or create a UserSession.
     * @example
     * // Update or create a UserSession
     * const userSession = await prisma.userSession.upsert({
     *   create: {
     *     // ... data to create a UserSession
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the UserSession we want to update
     *   }
     * })
     */
    upsert<T extends UserSessionUpsertArgs>(args: SelectSubset<T, UserSessionUpsertArgs<ExtArgs>>): Prisma__UserSessionClient<$Result.GetResult<Prisma.$UserSessionPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of UserSessions.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserSessionCountArgs} args - Arguments to filter UserSessions to count.
     * @example
     * // Count the number of UserSessions
     * const count = await prisma.userSession.count({
     *   where: {
     *     // ... the filter for the UserSessions we want to count
     *   }
     * })
    **/
    count<T extends UserSessionCountArgs>(
      args?: Subset<T, UserSessionCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], UserSessionCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a UserSession.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserSessionAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends UserSessionAggregateArgs>(args: Subset<T, UserSessionAggregateArgs>): Prisma.PrismaPromise<GetUserSessionAggregateType<T>>

    /**
     * Group by UserSession.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserSessionGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends UserSessionGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: UserSessionGroupByArgs['orderBy'] }
        : { orderBy?: UserSessionGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, UserSessionGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetUserSessionGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the UserSession model
   */
  readonly fields: UserSessionFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for UserSession.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__UserSessionClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    user<T extends UserDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UserDefaultArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the UserSession model
   */ 
  interface UserSessionFieldRefs {
    readonly id: FieldRef<"UserSession", 'String'>
    readonly userId: FieldRef<"UserSession", 'String'>
    readonly refreshTokenHash: FieldRef<"UserSession", 'String'>
    readonly deviceFingerprint: FieldRef<"UserSession", 'String'>
    readonly ipAddress: FieldRef<"UserSession", 'String'>
    readonly userAgent: FieldRef<"UserSession", 'String'>
    readonly locationCountry: FieldRef<"UserSession", 'String'>
    readonly locationRegion: FieldRef<"UserSession", 'String'>
    readonly locationCity: FieldRef<"UserSession", 'String'>
    readonly isActive: FieldRef<"UserSession", 'Boolean'>
    readonly expiresAt: FieldRef<"UserSession", 'DateTime'>
    readonly lastUsedAt: FieldRef<"UserSession", 'DateTime'>
    readonly createdAt: FieldRef<"UserSession", 'DateTime'>
    readonly updatedAt: FieldRef<"UserSession", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * UserSession findUnique
   */
  export type UserSessionFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserSession
     */
    select?: UserSessionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserSessionInclude<ExtArgs> | null
    /**
     * Filter, which UserSession to fetch.
     */
    where: UserSessionWhereUniqueInput
  }

  /**
   * UserSession findUniqueOrThrow
   */
  export type UserSessionFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserSession
     */
    select?: UserSessionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserSessionInclude<ExtArgs> | null
    /**
     * Filter, which UserSession to fetch.
     */
    where: UserSessionWhereUniqueInput
  }

  /**
   * UserSession findFirst
   */
  export type UserSessionFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserSession
     */
    select?: UserSessionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserSessionInclude<ExtArgs> | null
    /**
     * Filter, which UserSession to fetch.
     */
    where?: UserSessionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of UserSessions to fetch.
     */
    orderBy?: UserSessionOrderByWithRelationInput | UserSessionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for UserSessions.
     */
    cursor?: UserSessionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` UserSessions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` UserSessions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of UserSessions.
     */
    distinct?: UserSessionScalarFieldEnum | UserSessionScalarFieldEnum[]
  }

  /**
   * UserSession findFirstOrThrow
   */
  export type UserSessionFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserSession
     */
    select?: UserSessionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserSessionInclude<ExtArgs> | null
    /**
     * Filter, which UserSession to fetch.
     */
    where?: UserSessionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of UserSessions to fetch.
     */
    orderBy?: UserSessionOrderByWithRelationInput | UserSessionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for UserSessions.
     */
    cursor?: UserSessionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` UserSessions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` UserSessions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of UserSessions.
     */
    distinct?: UserSessionScalarFieldEnum | UserSessionScalarFieldEnum[]
  }

  /**
   * UserSession findMany
   */
  export type UserSessionFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserSession
     */
    select?: UserSessionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserSessionInclude<ExtArgs> | null
    /**
     * Filter, which UserSessions to fetch.
     */
    where?: UserSessionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of UserSessions to fetch.
     */
    orderBy?: UserSessionOrderByWithRelationInput | UserSessionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing UserSessions.
     */
    cursor?: UserSessionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` UserSessions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` UserSessions.
     */
    skip?: number
    distinct?: UserSessionScalarFieldEnum | UserSessionScalarFieldEnum[]
  }

  /**
   * UserSession create
   */
  export type UserSessionCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserSession
     */
    select?: UserSessionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserSessionInclude<ExtArgs> | null
    /**
     * The data needed to create a UserSession.
     */
    data: XOR<UserSessionCreateInput, UserSessionUncheckedCreateInput>
  }

  /**
   * UserSession createMany
   */
  export type UserSessionCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many UserSessions.
     */
    data: UserSessionCreateManyInput | UserSessionCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * UserSession createManyAndReturn
   */
  export type UserSessionCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserSession
     */
    select?: UserSessionSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many UserSessions.
     */
    data: UserSessionCreateManyInput | UserSessionCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserSessionIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * UserSession update
   */
  export type UserSessionUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserSession
     */
    select?: UserSessionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserSessionInclude<ExtArgs> | null
    /**
     * The data needed to update a UserSession.
     */
    data: XOR<UserSessionUpdateInput, UserSessionUncheckedUpdateInput>
    /**
     * Choose, which UserSession to update.
     */
    where: UserSessionWhereUniqueInput
  }

  /**
   * UserSession updateMany
   */
  export type UserSessionUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update UserSessions.
     */
    data: XOR<UserSessionUpdateManyMutationInput, UserSessionUncheckedUpdateManyInput>
    /**
     * Filter which UserSessions to update
     */
    where?: UserSessionWhereInput
  }

  /**
   * UserSession upsert
   */
  export type UserSessionUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserSession
     */
    select?: UserSessionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserSessionInclude<ExtArgs> | null
    /**
     * The filter to search for the UserSession to update in case it exists.
     */
    where: UserSessionWhereUniqueInput
    /**
     * In case the UserSession found by the `where` argument doesn't exist, create a new UserSession with this data.
     */
    create: XOR<UserSessionCreateInput, UserSessionUncheckedCreateInput>
    /**
     * In case the UserSession was found with the provided `where` argument, update it with this data.
     */
    update: XOR<UserSessionUpdateInput, UserSessionUncheckedUpdateInput>
  }

  /**
   * UserSession delete
   */
  export type UserSessionDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserSession
     */
    select?: UserSessionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserSessionInclude<ExtArgs> | null
    /**
     * Filter which UserSession to delete.
     */
    where: UserSessionWhereUniqueInput
  }

  /**
   * UserSession deleteMany
   */
  export type UserSessionDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which UserSessions to delete
     */
    where?: UserSessionWhereInput
  }

  /**
   * UserSession without action
   */
  export type UserSessionDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserSession
     */
    select?: UserSessionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserSessionInclude<ExtArgs> | null
  }


  /**
   * Model Store
   */

  export type AggregateStore = {
    _count: StoreCountAggregateOutputType | null
    _avg: StoreAvgAggregateOutputType | null
    _sum: StoreSumAggregateOutputType | null
    _min: StoreMinAggregateOutputType | null
    _max: StoreMaxAggregateOutputType | null
  }

  export type StoreAvgAggregateOutputType = {
    latitude: Decimal | null
    longitude: Decimal | null
    deliveryRadius: number | null
    minimumOrder: Decimal | null
    deliveryFee: Decimal | null
    totalProducts: number | null
    averageRating: Decimal | null
    totalReviews: number | null
    totalOrders: number | null
  }

  export type StoreSumAggregateOutputType = {
    latitude: Decimal | null
    longitude: Decimal | null
    deliveryRadius: number | null
    minimumOrder: Decimal | null
    deliveryFee: Decimal | null
    totalProducts: number | null
    averageRating: Decimal | null
    totalReviews: number | null
    totalOrders: number | null
  }

  export type StoreMinAggregateOutputType = {
    id: string | null
    ownerId: string | null
    name: string | null
    slug: string | null
    description: string | null
    email: string | null
    phone: string | null
    website: string | null
    addressLine1: string | null
    addressLine2: string | null
    city: string | null
    state: string | null
    postalCode: string | null
    latitude: Decimal | null
    longitude: Decimal | null
    businessType: $Enums.BusinessType | null
    licenseNumber: string | null
    licenseType: string | null
    licenseState: string | null
    licenseExpiresAt: Date | null
    deliveryRadius: number | null
    minimumOrder: Decimal | null
    deliveryFee: Decimal | null
    status: $Enums.StoreStatus | null
    verified: boolean | null
    verifiedAt: Date | null
    verifiedBy: string | null
    logoUrl: string | null
    coverImageUrl: string | null
    metaTitle: string | null
    metaDescription: string | null
    metrcLicenseId: string | null
    metrcLastSync: Date | null
    complianceStatus: $Enums.ComplianceStatus | null
    trackTraceSystem: $Enums.TrackTraceSystem | null
    totalProducts: number | null
    averageRating: Decimal | null
    totalReviews: number | null
    totalOrders: number | null
    createdAt: Date | null
    updatedAt: Date | null
    createdBy: string | null
    updatedBy: string | null
  }

  export type StoreMaxAggregateOutputType = {
    id: string | null
    ownerId: string | null
    name: string | null
    slug: string | null
    description: string | null
    email: string | null
    phone: string | null
    website: string | null
    addressLine1: string | null
    addressLine2: string | null
    city: string | null
    state: string | null
    postalCode: string | null
    latitude: Decimal | null
    longitude: Decimal | null
    businessType: $Enums.BusinessType | null
    licenseNumber: string | null
    licenseType: string | null
    licenseState: string | null
    licenseExpiresAt: Date | null
    deliveryRadius: number | null
    minimumOrder: Decimal | null
    deliveryFee: Decimal | null
    status: $Enums.StoreStatus | null
    verified: boolean | null
    verifiedAt: Date | null
    verifiedBy: string | null
    logoUrl: string | null
    coverImageUrl: string | null
    metaTitle: string | null
    metaDescription: string | null
    metrcLicenseId: string | null
    metrcLastSync: Date | null
    complianceStatus: $Enums.ComplianceStatus | null
    trackTraceSystem: $Enums.TrackTraceSystem | null
    totalProducts: number | null
    averageRating: Decimal | null
    totalReviews: number | null
    totalOrders: number | null
    createdAt: Date | null
    updatedAt: Date | null
    createdBy: string | null
    updatedBy: string | null
  }

  export type StoreCountAggregateOutputType = {
    id: number
    ownerId: number
    name: number
    slug: number
    description: number
    email: number
    phone: number
    website: number
    addressLine1: number
    addressLine2: number
    city: number
    state: number
    postalCode: number
    latitude: number
    longitude: number
    businessType: number
    licenseNumber: number
    licenseType: number
    licenseState: number
    licenseExpiresAt: number
    features: number
    paymentMethods: number
    deliveryRadius: number
    minimumOrder: number
    deliveryFee: number
    operatingHours: number
    status: number
    verified: number
    verifiedAt: number
    verifiedBy: number
    logoUrl: number
    coverImageUrl: number
    galleryImages: number
    metaTitle: number
    metaDescription: number
    socialMedia: number
    metrcLicenseId: number
    metrcLastSync: number
    complianceStatus: number
    trackTraceSystem: number
    totalProducts: number
    averageRating: number
    totalReviews: number
    totalOrders: number
    createdAt: number
    updatedAt: number
    createdBy: number
    updatedBy: number
    _all: number
  }


  export type StoreAvgAggregateInputType = {
    latitude?: true
    longitude?: true
    deliveryRadius?: true
    minimumOrder?: true
    deliveryFee?: true
    totalProducts?: true
    averageRating?: true
    totalReviews?: true
    totalOrders?: true
  }

  export type StoreSumAggregateInputType = {
    latitude?: true
    longitude?: true
    deliveryRadius?: true
    minimumOrder?: true
    deliveryFee?: true
    totalProducts?: true
    averageRating?: true
    totalReviews?: true
    totalOrders?: true
  }

  export type StoreMinAggregateInputType = {
    id?: true
    ownerId?: true
    name?: true
    slug?: true
    description?: true
    email?: true
    phone?: true
    website?: true
    addressLine1?: true
    addressLine2?: true
    city?: true
    state?: true
    postalCode?: true
    latitude?: true
    longitude?: true
    businessType?: true
    licenseNumber?: true
    licenseType?: true
    licenseState?: true
    licenseExpiresAt?: true
    deliveryRadius?: true
    minimumOrder?: true
    deliveryFee?: true
    status?: true
    verified?: true
    verifiedAt?: true
    verifiedBy?: true
    logoUrl?: true
    coverImageUrl?: true
    metaTitle?: true
    metaDescription?: true
    metrcLicenseId?: true
    metrcLastSync?: true
    complianceStatus?: true
    trackTraceSystem?: true
    totalProducts?: true
    averageRating?: true
    totalReviews?: true
    totalOrders?: true
    createdAt?: true
    updatedAt?: true
    createdBy?: true
    updatedBy?: true
  }

  export type StoreMaxAggregateInputType = {
    id?: true
    ownerId?: true
    name?: true
    slug?: true
    description?: true
    email?: true
    phone?: true
    website?: true
    addressLine1?: true
    addressLine2?: true
    city?: true
    state?: true
    postalCode?: true
    latitude?: true
    longitude?: true
    businessType?: true
    licenseNumber?: true
    licenseType?: true
    licenseState?: true
    licenseExpiresAt?: true
    deliveryRadius?: true
    minimumOrder?: true
    deliveryFee?: true
    status?: true
    verified?: true
    verifiedAt?: true
    verifiedBy?: true
    logoUrl?: true
    coverImageUrl?: true
    metaTitle?: true
    metaDescription?: true
    metrcLicenseId?: true
    metrcLastSync?: true
    complianceStatus?: true
    trackTraceSystem?: true
    totalProducts?: true
    averageRating?: true
    totalReviews?: true
    totalOrders?: true
    createdAt?: true
    updatedAt?: true
    createdBy?: true
    updatedBy?: true
  }

  export type StoreCountAggregateInputType = {
    id?: true
    ownerId?: true
    name?: true
    slug?: true
    description?: true
    email?: true
    phone?: true
    website?: true
    addressLine1?: true
    addressLine2?: true
    city?: true
    state?: true
    postalCode?: true
    latitude?: true
    longitude?: true
    businessType?: true
    licenseNumber?: true
    licenseType?: true
    licenseState?: true
    licenseExpiresAt?: true
    features?: true
    paymentMethods?: true
    deliveryRadius?: true
    minimumOrder?: true
    deliveryFee?: true
    operatingHours?: true
    status?: true
    verified?: true
    verifiedAt?: true
    verifiedBy?: true
    logoUrl?: true
    coverImageUrl?: true
    galleryImages?: true
    metaTitle?: true
    metaDescription?: true
    socialMedia?: true
    metrcLicenseId?: true
    metrcLastSync?: true
    complianceStatus?: true
    trackTraceSystem?: true
    totalProducts?: true
    averageRating?: true
    totalReviews?: true
    totalOrders?: true
    createdAt?: true
    updatedAt?: true
    createdBy?: true
    updatedBy?: true
    _all?: true
  }

  export type StoreAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Store to aggregate.
     */
    where?: StoreWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Stores to fetch.
     */
    orderBy?: StoreOrderByWithRelationInput | StoreOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: StoreWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Stores from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Stores.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Stores
    **/
    _count?: true | StoreCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: StoreAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: StoreSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: StoreMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: StoreMaxAggregateInputType
  }

  export type GetStoreAggregateType<T extends StoreAggregateArgs> = {
        [P in keyof T & keyof AggregateStore]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateStore[P]>
      : GetScalarType<T[P], AggregateStore[P]>
  }




  export type StoreGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: StoreWhereInput
    orderBy?: StoreOrderByWithAggregationInput | StoreOrderByWithAggregationInput[]
    by: StoreScalarFieldEnum[] | StoreScalarFieldEnum
    having?: StoreScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: StoreCountAggregateInputType | true
    _avg?: StoreAvgAggregateInputType
    _sum?: StoreSumAggregateInputType
    _min?: StoreMinAggregateInputType
    _max?: StoreMaxAggregateInputType
  }

  export type StoreGroupByOutputType = {
    id: string
    ownerId: string
    name: string
    slug: string
    description: string | null
    email: string | null
    phone: string | null
    website: string | null
    addressLine1: string
    addressLine2: string | null
    city: string
    state: string
    postalCode: string
    latitude: Decimal
    longitude: Decimal
    businessType: $Enums.BusinessType
    licenseNumber: string
    licenseType: string
    licenseState: string
    licenseExpiresAt: Date
    features: JsonValue | null
    paymentMethods: JsonValue | null
    deliveryRadius: number | null
    minimumOrder: Decimal | null
    deliveryFee: Decimal | null
    operatingHours: JsonValue | null
    status: $Enums.StoreStatus
    verified: boolean
    verifiedAt: Date | null
    verifiedBy: string | null
    logoUrl: string | null
    coverImageUrl: string | null
    galleryImages: JsonValue | null
    metaTitle: string | null
    metaDescription: string | null
    socialMedia: JsonValue | null
    metrcLicenseId: string | null
    metrcLastSync: Date | null
    complianceStatus: $Enums.ComplianceStatus
    trackTraceSystem: $Enums.TrackTraceSystem | null
    totalProducts: number
    averageRating: Decimal
    totalReviews: number
    totalOrders: number
    createdAt: Date
    updatedAt: Date
    createdBy: string | null
    updatedBy: string | null
    _count: StoreCountAggregateOutputType | null
    _avg: StoreAvgAggregateOutputType | null
    _sum: StoreSumAggregateOutputType | null
    _min: StoreMinAggregateOutputType | null
    _max: StoreMaxAggregateOutputType | null
  }

  type GetStoreGroupByPayload<T extends StoreGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<StoreGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof StoreGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], StoreGroupByOutputType[P]>
            : GetScalarType<T[P], StoreGroupByOutputType[P]>
        }
      >
    >


  export type StoreSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    ownerId?: boolean
    name?: boolean
    slug?: boolean
    description?: boolean
    email?: boolean
    phone?: boolean
    website?: boolean
    addressLine1?: boolean
    addressLine2?: boolean
    city?: boolean
    state?: boolean
    postalCode?: boolean
    latitude?: boolean
    longitude?: boolean
    businessType?: boolean
    licenseNumber?: boolean
    licenseType?: boolean
    licenseState?: boolean
    licenseExpiresAt?: boolean
    features?: boolean
    paymentMethods?: boolean
    deliveryRadius?: boolean
    minimumOrder?: boolean
    deliveryFee?: boolean
    operatingHours?: boolean
    status?: boolean
    verified?: boolean
    verifiedAt?: boolean
    verifiedBy?: boolean
    logoUrl?: boolean
    coverImageUrl?: boolean
    galleryImages?: boolean
    metaTitle?: boolean
    metaDescription?: boolean
    socialMedia?: boolean
    metrcLicenseId?: boolean
    metrcLastSync?: boolean
    complianceStatus?: boolean
    trackTraceSystem?: boolean
    totalProducts?: boolean
    averageRating?: boolean
    totalReviews?: boolean
    totalOrders?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    createdBy?: boolean
    updatedBy?: boolean
    owner?: boolean | UserDefaultArgs<ExtArgs>
    staff?: boolean | Store$staffArgs<ExtArgs>
    products?: boolean | Store$productsArgs<ExtArgs>
    orders?: boolean | Store$ordersArgs<ExtArgs>
    reviews?: boolean | Store$reviewsArgs<ExtArgs>
    _count?: boolean | StoreCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["store"]>

  export type StoreSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    ownerId?: boolean
    name?: boolean
    slug?: boolean
    description?: boolean
    email?: boolean
    phone?: boolean
    website?: boolean
    addressLine1?: boolean
    addressLine2?: boolean
    city?: boolean
    state?: boolean
    postalCode?: boolean
    latitude?: boolean
    longitude?: boolean
    businessType?: boolean
    licenseNumber?: boolean
    licenseType?: boolean
    licenseState?: boolean
    licenseExpiresAt?: boolean
    features?: boolean
    paymentMethods?: boolean
    deliveryRadius?: boolean
    minimumOrder?: boolean
    deliveryFee?: boolean
    operatingHours?: boolean
    status?: boolean
    verified?: boolean
    verifiedAt?: boolean
    verifiedBy?: boolean
    logoUrl?: boolean
    coverImageUrl?: boolean
    galleryImages?: boolean
    metaTitle?: boolean
    metaDescription?: boolean
    socialMedia?: boolean
    metrcLicenseId?: boolean
    metrcLastSync?: boolean
    complianceStatus?: boolean
    trackTraceSystem?: boolean
    totalProducts?: boolean
    averageRating?: boolean
    totalReviews?: boolean
    totalOrders?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    createdBy?: boolean
    updatedBy?: boolean
    owner?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["store"]>

  export type StoreSelectScalar = {
    id?: boolean
    ownerId?: boolean
    name?: boolean
    slug?: boolean
    description?: boolean
    email?: boolean
    phone?: boolean
    website?: boolean
    addressLine1?: boolean
    addressLine2?: boolean
    city?: boolean
    state?: boolean
    postalCode?: boolean
    latitude?: boolean
    longitude?: boolean
    businessType?: boolean
    licenseNumber?: boolean
    licenseType?: boolean
    licenseState?: boolean
    licenseExpiresAt?: boolean
    features?: boolean
    paymentMethods?: boolean
    deliveryRadius?: boolean
    minimumOrder?: boolean
    deliveryFee?: boolean
    operatingHours?: boolean
    status?: boolean
    verified?: boolean
    verifiedAt?: boolean
    verifiedBy?: boolean
    logoUrl?: boolean
    coverImageUrl?: boolean
    galleryImages?: boolean
    metaTitle?: boolean
    metaDescription?: boolean
    socialMedia?: boolean
    metrcLicenseId?: boolean
    metrcLastSync?: boolean
    complianceStatus?: boolean
    trackTraceSystem?: boolean
    totalProducts?: boolean
    averageRating?: boolean
    totalReviews?: boolean
    totalOrders?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    createdBy?: boolean
    updatedBy?: boolean
  }

  export type StoreInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    owner?: boolean | UserDefaultArgs<ExtArgs>
    staff?: boolean | Store$staffArgs<ExtArgs>
    products?: boolean | Store$productsArgs<ExtArgs>
    orders?: boolean | Store$ordersArgs<ExtArgs>
    reviews?: boolean | Store$reviewsArgs<ExtArgs>
    _count?: boolean | StoreCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type StoreIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    owner?: boolean | UserDefaultArgs<ExtArgs>
  }

  export type $StorePayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Store"
    objects: {
      owner: Prisma.$UserPayload<ExtArgs>
      staff: Prisma.$StoreStaffPayload<ExtArgs>[]
      products: Prisma.$ProductPayload<ExtArgs>[]
      orders: Prisma.$OrderPayload<ExtArgs>[]
      reviews: Prisma.$ReviewPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      ownerId: string
      name: string
      slug: string
      description: string | null
      email: string | null
      phone: string | null
      website: string | null
      addressLine1: string
      addressLine2: string | null
      city: string
      state: string
      postalCode: string
      latitude: Prisma.Decimal
      longitude: Prisma.Decimal
      businessType: $Enums.BusinessType
      licenseNumber: string
      licenseType: string
      licenseState: string
      licenseExpiresAt: Date
      features: Prisma.JsonValue | null
      paymentMethods: Prisma.JsonValue | null
      deliveryRadius: number | null
      minimumOrder: Prisma.Decimal | null
      deliveryFee: Prisma.Decimal | null
      operatingHours: Prisma.JsonValue | null
      status: $Enums.StoreStatus
      verified: boolean
      verifiedAt: Date | null
      verifiedBy: string | null
      logoUrl: string | null
      coverImageUrl: string | null
      galleryImages: Prisma.JsonValue | null
      metaTitle: string | null
      metaDescription: string | null
      socialMedia: Prisma.JsonValue | null
      metrcLicenseId: string | null
      metrcLastSync: Date | null
      complianceStatus: $Enums.ComplianceStatus
      trackTraceSystem: $Enums.TrackTraceSystem | null
      totalProducts: number
      averageRating: Prisma.Decimal
      totalReviews: number
      totalOrders: number
      createdAt: Date
      updatedAt: Date
      createdBy: string | null
      updatedBy: string | null
    }, ExtArgs["result"]["store"]>
    composites: {}
  }

  type StoreGetPayload<S extends boolean | null | undefined | StoreDefaultArgs> = $Result.GetResult<Prisma.$StorePayload, S>

  type StoreCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<StoreFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: StoreCountAggregateInputType | true
    }

  export interface StoreDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Store'], meta: { name: 'Store' } }
    /**
     * Find zero or one Store that matches the filter.
     * @param {StoreFindUniqueArgs} args - Arguments to find a Store
     * @example
     * // Get one Store
     * const store = await prisma.store.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends StoreFindUniqueArgs>(args: SelectSubset<T, StoreFindUniqueArgs<ExtArgs>>): Prisma__StoreClient<$Result.GetResult<Prisma.$StorePayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one Store that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {StoreFindUniqueOrThrowArgs} args - Arguments to find a Store
     * @example
     * // Get one Store
     * const store = await prisma.store.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends StoreFindUniqueOrThrowArgs>(args: SelectSubset<T, StoreFindUniqueOrThrowArgs<ExtArgs>>): Prisma__StoreClient<$Result.GetResult<Prisma.$StorePayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first Store that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {StoreFindFirstArgs} args - Arguments to find a Store
     * @example
     * // Get one Store
     * const store = await prisma.store.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends StoreFindFirstArgs>(args?: SelectSubset<T, StoreFindFirstArgs<ExtArgs>>): Prisma__StoreClient<$Result.GetResult<Prisma.$StorePayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first Store that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {StoreFindFirstOrThrowArgs} args - Arguments to find a Store
     * @example
     * // Get one Store
     * const store = await prisma.store.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends StoreFindFirstOrThrowArgs>(args?: SelectSubset<T, StoreFindFirstOrThrowArgs<ExtArgs>>): Prisma__StoreClient<$Result.GetResult<Prisma.$StorePayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more Stores that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {StoreFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Stores
     * const stores = await prisma.store.findMany()
     * 
     * // Get first 10 Stores
     * const stores = await prisma.store.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const storeWithIdOnly = await prisma.store.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends StoreFindManyArgs>(args?: SelectSubset<T, StoreFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$StorePayload<ExtArgs>, T, "findMany">>

    /**
     * Create a Store.
     * @param {StoreCreateArgs} args - Arguments to create a Store.
     * @example
     * // Create one Store
     * const Store = await prisma.store.create({
     *   data: {
     *     // ... data to create a Store
     *   }
     * })
     * 
     */
    create<T extends StoreCreateArgs>(args: SelectSubset<T, StoreCreateArgs<ExtArgs>>): Prisma__StoreClient<$Result.GetResult<Prisma.$StorePayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many Stores.
     * @param {StoreCreateManyArgs} args - Arguments to create many Stores.
     * @example
     * // Create many Stores
     * const store = await prisma.store.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends StoreCreateManyArgs>(args?: SelectSubset<T, StoreCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Stores and returns the data saved in the database.
     * @param {StoreCreateManyAndReturnArgs} args - Arguments to create many Stores.
     * @example
     * // Create many Stores
     * const store = await prisma.store.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Stores and only return the `id`
     * const storeWithIdOnly = await prisma.store.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends StoreCreateManyAndReturnArgs>(args?: SelectSubset<T, StoreCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$StorePayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a Store.
     * @param {StoreDeleteArgs} args - Arguments to delete one Store.
     * @example
     * // Delete one Store
     * const Store = await prisma.store.delete({
     *   where: {
     *     // ... filter to delete one Store
     *   }
     * })
     * 
     */
    delete<T extends StoreDeleteArgs>(args: SelectSubset<T, StoreDeleteArgs<ExtArgs>>): Prisma__StoreClient<$Result.GetResult<Prisma.$StorePayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one Store.
     * @param {StoreUpdateArgs} args - Arguments to update one Store.
     * @example
     * // Update one Store
     * const store = await prisma.store.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends StoreUpdateArgs>(args: SelectSubset<T, StoreUpdateArgs<ExtArgs>>): Prisma__StoreClient<$Result.GetResult<Prisma.$StorePayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more Stores.
     * @param {StoreDeleteManyArgs} args - Arguments to filter Stores to delete.
     * @example
     * // Delete a few Stores
     * const { count } = await prisma.store.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends StoreDeleteManyArgs>(args?: SelectSubset<T, StoreDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Stores.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {StoreUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Stores
     * const store = await prisma.store.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends StoreUpdateManyArgs>(args: SelectSubset<T, StoreUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Store.
     * @param {StoreUpsertArgs} args - Arguments to update or create a Store.
     * @example
     * // Update or create a Store
     * const store = await prisma.store.upsert({
     *   create: {
     *     // ... data to create a Store
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Store we want to update
     *   }
     * })
     */
    upsert<T extends StoreUpsertArgs>(args: SelectSubset<T, StoreUpsertArgs<ExtArgs>>): Prisma__StoreClient<$Result.GetResult<Prisma.$StorePayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of Stores.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {StoreCountArgs} args - Arguments to filter Stores to count.
     * @example
     * // Count the number of Stores
     * const count = await prisma.store.count({
     *   where: {
     *     // ... the filter for the Stores we want to count
     *   }
     * })
    **/
    count<T extends StoreCountArgs>(
      args?: Subset<T, StoreCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], StoreCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Store.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {StoreAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends StoreAggregateArgs>(args: Subset<T, StoreAggregateArgs>): Prisma.PrismaPromise<GetStoreAggregateType<T>>

    /**
     * Group by Store.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {StoreGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends StoreGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: StoreGroupByArgs['orderBy'] }
        : { orderBy?: StoreGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, StoreGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetStoreGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Store model
   */
  readonly fields: StoreFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Store.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__StoreClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    owner<T extends UserDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UserDefaultArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    staff<T extends Store$staffArgs<ExtArgs> = {}>(args?: Subset<T, Store$staffArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$StoreStaffPayload<ExtArgs>, T, "findMany"> | Null>
    products<T extends Store$productsArgs<ExtArgs> = {}>(args?: Subset<T, Store$productsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ProductPayload<ExtArgs>, T, "findMany"> | Null>
    orders<T extends Store$ordersArgs<ExtArgs> = {}>(args?: Subset<T, Store$ordersArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$OrderPayload<ExtArgs>, T, "findMany"> | Null>
    reviews<T extends Store$reviewsArgs<ExtArgs> = {}>(args?: Subset<T, Store$reviewsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ReviewPayload<ExtArgs>, T, "findMany"> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Store model
   */ 
  interface StoreFieldRefs {
    readonly id: FieldRef<"Store", 'String'>
    readonly ownerId: FieldRef<"Store", 'String'>
    readonly name: FieldRef<"Store", 'String'>
    readonly slug: FieldRef<"Store", 'String'>
    readonly description: FieldRef<"Store", 'String'>
    readonly email: FieldRef<"Store", 'String'>
    readonly phone: FieldRef<"Store", 'String'>
    readonly website: FieldRef<"Store", 'String'>
    readonly addressLine1: FieldRef<"Store", 'String'>
    readonly addressLine2: FieldRef<"Store", 'String'>
    readonly city: FieldRef<"Store", 'String'>
    readonly state: FieldRef<"Store", 'String'>
    readonly postalCode: FieldRef<"Store", 'String'>
    readonly latitude: FieldRef<"Store", 'Decimal'>
    readonly longitude: FieldRef<"Store", 'Decimal'>
    readonly businessType: FieldRef<"Store", 'BusinessType'>
    readonly licenseNumber: FieldRef<"Store", 'String'>
    readonly licenseType: FieldRef<"Store", 'String'>
    readonly licenseState: FieldRef<"Store", 'String'>
    readonly licenseExpiresAt: FieldRef<"Store", 'DateTime'>
    readonly features: FieldRef<"Store", 'Json'>
    readonly paymentMethods: FieldRef<"Store", 'Json'>
    readonly deliveryRadius: FieldRef<"Store", 'Int'>
    readonly minimumOrder: FieldRef<"Store", 'Decimal'>
    readonly deliveryFee: FieldRef<"Store", 'Decimal'>
    readonly operatingHours: FieldRef<"Store", 'Json'>
    readonly status: FieldRef<"Store", 'StoreStatus'>
    readonly verified: FieldRef<"Store", 'Boolean'>
    readonly verifiedAt: FieldRef<"Store", 'DateTime'>
    readonly verifiedBy: FieldRef<"Store", 'String'>
    readonly logoUrl: FieldRef<"Store", 'String'>
    readonly coverImageUrl: FieldRef<"Store", 'String'>
    readonly galleryImages: FieldRef<"Store", 'Json'>
    readonly metaTitle: FieldRef<"Store", 'String'>
    readonly metaDescription: FieldRef<"Store", 'String'>
    readonly socialMedia: FieldRef<"Store", 'Json'>
    readonly metrcLicenseId: FieldRef<"Store", 'String'>
    readonly metrcLastSync: FieldRef<"Store", 'DateTime'>
    readonly complianceStatus: FieldRef<"Store", 'ComplianceStatus'>
    readonly trackTraceSystem: FieldRef<"Store", 'TrackTraceSystem'>
    readonly totalProducts: FieldRef<"Store", 'Int'>
    readonly averageRating: FieldRef<"Store", 'Decimal'>
    readonly totalReviews: FieldRef<"Store", 'Int'>
    readonly totalOrders: FieldRef<"Store", 'Int'>
    readonly createdAt: FieldRef<"Store", 'DateTime'>
    readonly updatedAt: FieldRef<"Store", 'DateTime'>
    readonly createdBy: FieldRef<"Store", 'String'>
    readonly updatedBy: FieldRef<"Store", 'String'>
  }
    

  // Custom InputTypes
  /**
   * Store findUnique
   */
  export type StoreFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Store
     */
    select?: StoreSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: StoreInclude<ExtArgs> | null
    /**
     * Filter, which Store to fetch.
     */
    where: StoreWhereUniqueInput
  }

  /**
   * Store findUniqueOrThrow
   */
  export type StoreFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Store
     */
    select?: StoreSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: StoreInclude<ExtArgs> | null
    /**
     * Filter, which Store to fetch.
     */
    where: StoreWhereUniqueInput
  }

  /**
   * Store findFirst
   */
  export type StoreFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Store
     */
    select?: StoreSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: StoreInclude<ExtArgs> | null
    /**
     * Filter, which Store to fetch.
     */
    where?: StoreWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Stores to fetch.
     */
    orderBy?: StoreOrderByWithRelationInput | StoreOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Stores.
     */
    cursor?: StoreWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Stores from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Stores.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Stores.
     */
    distinct?: StoreScalarFieldEnum | StoreScalarFieldEnum[]
  }

  /**
   * Store findFirstOrThrow
   */
  export type StoreFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Store
     */
    select?: StoreSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: StoreInclude<ExtArgs> | null
    /**
     * Filter, which Store to fetch.
     */
    where?: StoreWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Stores to fetch.
     */
    orderBy?: StoreOrderByWithRelationInput | StoreOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Stores.
     */
    cursor?: StoreWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Stores from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Stores.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Stores.
     */
    distinct?: StoreScalarFieldEnum | StoreScalarFieldEnum[]
  }

  /**
   * Store findMany
   */
  export type StoreFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Store
     */
    select?: StoreSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: StoreInclude<ExtArgs> | null
    /**
     * Filter, which Stores to fetch.
     */
    where?: StoreWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Stores to fetch.
     */
    orderBy?: StoreOrderByWithRelationInput | StoreOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Stores.
     */
    cursor?: StoreWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Stores from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Stores.
     */
    skip?: number
    distinct?: StoreScalarFieldEnum | StoreScalarFieldEnum[]
  }

  /**
   * Store create
   */
  export type StoreCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Store
     */
    select?: StoreSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: StoreInclude<ExtArgs> | null
    /**
     * The data needed to create a Store.
     */
    data: XOR<StoreCreateInput, StoreUncheckedCreateInput>
  }

  /**
   * Store createMany
   */
  export type StoreCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Stores.
     */
    data: StoreCreateManyInput | StoreCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Store createManyAndReturn
   */
  export type StoreCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Store
     */
    select?: StoreSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many Stores.
     */
    data: StoreCreateManyInput | StoreCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: StoreIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Store update
   */
  export type StoreUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Store
     */
    select?: StoreSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: StoreInclude<ExtArgs> | null
    /**
     * The data needed to update a Store.
     */
    data: XOR<StoreUpdateInput, StoreUncheckedUpdateInput>
    /**
     * Choose, which Store to update.
     */
    where: StoreWhereUniqueInput
  }

  /**
   * Store updateMany
   */
  export type StoreUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Stores.
     */
    data: XOR<StoreUpdateManyMutationInput, StoreUncheckedUpdateManyInput>
    /**
     * Filter which Stores to update
     */
    where?: StoreWhereInput
  }

  /**
   * Store upsert
   */
  export type StoreUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Store
     */
    select?: StoreSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: StoreInclude<ExtArgs> | null
    /**
     * The filter to search for the Store to update in case it exists.
     */
    where: StoreWhereUniqueInput
    /**
     * In case the Store found by the `where` argument doesn't exist, create a new Store with this data.
     */
    create: XOR<StoreCreateInput, StoreUncheckedCreateInput>
    /**
     * In case the Store was found with the provided `where` argument, update it with this data.
     */
    update: XOR<StoreUpdateInput, StoreUncheckedUpdateInput>
  }

  /**
   * Store delete
   */
  export type StoreDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Store
     */
    select?: StoreSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: StoreInclude<ExtArgs> | null
    /**
     * Filter which Store to delete.
     */
    where: StoreWhereUniqueInput
  }

  /**
   * Store deleteMany
   */
  export type StoreDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Stores to delete
     */
    where?: StoreWhereInput
  }

  /**
   * Store.staff
   */
  export type Store$staffArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the StoreStaff
     */
    select?: StoreStaffSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: StoreStaffInclude<ExtArgs> | null
    where?: StoreStaffWhereInput
    orderBy?: StoreStaffOrderByWithRelationInput | StoreStaffOrderByWithRelationInput[]
    cursor?: StoreStaffWhereUniqueInput
    take?: number
    skip?: number
    distinct?: StoreStaffScalarFieldEnum | StoreStaffScalarFieldEnum[]
  }

  /**
   * Store.products
   */
  export type Store$productsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Product
     */
    select?: ProductSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductInclude<ExtArgs> | null
    where?: ProductWhereInput
    orderBy?: ProductOrderByWithRelationInput | ProductOrderByWithRelationInput[]
    cursor?: ProductWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ProductScalarFieldEnum | ProductScalarFieldEnum[]
  }

  /**
   * Store.orders
   */
  export type Store$ordersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Order
     */
    select?: OrderSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrderInclude<ExtArgs> | null
    where?: OrderWhereInput
    orderBy?: OrderOrderByWithRelationInput | OrderOrderByWithRelationInput[]
    cursor?: OrderWhereUniqueInput
    take?: number
    skip?: number
    distinct?: OrderScalarFieldEnum | OrderScalarFieldEnum[]
  }

  /**
   * Store.reviews
   */
  export type Store$reviewsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Review
     */
    select?: ReviewSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReviewInclude<ExtArgs> | null
    where?: ReviewWhereInput
    orderBy?: ReviewOrderByWithRelationInput | ReviewOrderByWithRelationInput[]
    cursor?: ReviewWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ReviewScalarFieldEnum | ReviewScalarFieldEnum[]
  }

  /**
   * Store without action
   */
  export type StoreDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Store
     */
    select?: StoreSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: StoreInclude<ExtArgs> | null
  }


  /**
   * Model StoreStaff
   */

  export type AggregateStoreStaff = {
    _count: StoreStaffCountAggregateOutputType | null
    _avg: StoreStaffAvgAggregateOutputType | null
    _sum: StoreStaffSumAggregateOutputType | null
    _min: StoreStaffMinAggregateOutputType | null
    _max: StoreStaffMaxAggregateOutputType | null
  }

  export type StoreStaffAvgAggregateOutputType = {
    hourlyWage: Decimal | null
    commissionRate: Decimal | null
  }

  export type StoreStaffSumAggregateOutputType = {
    hourlyWage: Decimal | null
    commissionRate: Decimal | null
  }

  export type StoreStaffMinAggregateOutputType = {
    id: string | null
    storeId: string | null
    userId: string | null
    role: string | null
    employeeId: string | null
    startDate: Date | null
    endDate: Date | null
    hourlyWage: Decimal | null
    commissionRate: Decimal | null
    status: string | null
    canAccessPos: boolean | null
    canManageInventory: boolean | null
    canProcessOrders: boolean | null
    complianceTrainingCompleted: boolean | null
    trainingCompletedAt: Date | null
    trainingExpiresAt: Date | null
    createdAt: Date | null
    updatedAt: Date | null
    createdBy: string | null
  }

  export type StoreStaffMaxAggregateOutputType = {
    id: string | null
    storeId: string | null
    userId: string | null
    role: string | null
    employeeId: string | null
    startDate: Date | null
    endDate: Date | null
    hourlyWage: Decimal | null
    commissionRate: Decimal | null
    status: string | null
    canAccessPos: boolean | null
    canManageInventory: boolean | null
    canProcessOrders: boolean | null
    complianceTrainingCompleted: boolean | null
    trainingCompletedAt: Date | null
    trainingExpiresAt: Date | null
    createdAt: Date | null
    updatedAt: Date | null
    createdBy: string | null
  }

  export type StoreStaffCountAggregateOutputType = {
    id: number
    storeId: number
    userId: number
    role: number
    permissions: number
    employeeId: number
    startDate: number
    endDate: number
    hourlyWage: number
    commissionRate: number
    status: number
    canAccessPos: number
    canManageInventory: number
    canProcessOrders: number
    complianceTrainingCompleted: number
    trainingCompletedAt: number
    trainingExpiresAt: number
    createdAt: number
    updatedAt: number
    createdBy: number
    _all: number
  }


  export type StoreStaffAvgAggregateInputType = {
    hourlyWage?: true
    commissionRate?: true
  }

  export type StoreStaffSumAggregateInputType = {
    hourlyWage?: true
    commissionRate?: true
  }

  export type StoreStaffMinAggregateInputType = {
    id?: true
    storeId?: true
    userId?: true
    role?: true
    employeeId?: true
    startDate?: true
    endDate?: true
    hourlyWage?: true
    commissionRate?: true
    status?: true
    canAccessPos?: true
    canManageInventory?: true
    canProcessOrders?: true
    complianceTrainingCompleted?: true
    trainingCompletedAt?: true
    trainingExpiresAt?: true
    createdAt?: true
    updatedAt?: true
    createdBy?: true
  }

  export type StoreStaffMaxAggregateInputType = {
    id?: true
    storeId?: true
    userId?: true
    role?: true
    employeeId?: true
    startDate?: true
    endDate?: true
    hourlyWage?: true
    commissionRate?: true
    status?: true
    canAccessPos?: true
    canManageInventory?: true
    canProcessOrders?: true
    complianceTrainingCompleted?: true
    trainingCompletedAt?: true
    trainingExpiresAt?: true
    createdAt?: true
    updatedAt?: true
    createdBy?: true
  }

  export type StoreStaffCountAggregateInputType = {
    id?: true
    storeId?: true
    userId?: true
    role?: true
    permissions?: true
    employeeId?: true
    startDate?: true
    endDate?: true
    hourlyWage?: true
    commissionRate?: true
    status?: true
    canAccessPos?: true
    canManageInventory?: true
    canProcessOrders?: true
    complianceTrainingCompleted?: true
    trainingCompletedAt?: true
    trainingExpiresAt?: true
    createdAt?: true
    updatedAt?: true
    createdBy?: true
    _all?: true
  }

  export type StoreStaffAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which StoreStaff to aggregate.
     */
    where?: StoreStaffWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of StoreStaffs to fetch.
     */
    orderBy?: StoreStaffOrderByWithRelationInput | StoreStaffOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: StoreStaffWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` StoreStaffs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` StoreStaffs.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned StoreStaffs
    **/
    _count?: true | StoreStaffCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: StoreStaffAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: StoreStaffSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: StoreStaffMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: StoreStaffMaxAggregateInputType
  }

  export type GetStoreStaffAggregateType<T extends StoreStaffAggregateArgs> = {
        [P in keyof T & keyof AggregateStoreStaff]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateStoreStaff[P]>
      : GetScalarType<T[P], AggregateStoreStaff[P]>
  }




  export type StoreStaffGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: StoreStaffWhereInput
    orderBy?: StoreStaffOrderByWithAggregationInput | StoreStaffOrderByWithAggregationInput[]
    by: StoreStaffScalarFieldEnum[] | StoreStaffScalarFieldEnum
    having?: StoreStaffScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: StoreStaffCountAggregateInputType | true
    _avg?: StoreStaffAvgAggregateInputType
    _sum?: StoreStaffSumAggregateInputType
    _min?: StoreStaffMinAggregateInputType
    _max?: StoreStaffMaxAggregateInputType
  }

  export type StoreStaffGroupByOutputType = {
    id: string
    storeId: string
    userId: string
    role: string
    permissions: JsonValue | null
    employeeId: string | null
    startDate: Date
    endDate: Date | null
    hourlyWage: Decimal | null
    commissionRate: Decimal | null
    status: string
    canAccessPos: boolean
    canManageInventory: boolean
    canProcessOrders: boolean
    complianceTrainingCompleted: boolean
    trainingCompletedAt: Date | null
    trainingExpiresAt: Date | null
    createdAt: Date
    updatedAt: Date
    createdBy: string | null
    _count: StoreStaffCountAggregateOutputType | null
    _avg: StoreStaffAvgAggregateOutputType | null
    _sum: StoreStaffSumAggregateOutputType | null
    _min: StoreStaffMinAggregateOutputType | null
    _max: StoreStaffMaxAggregateOutputType | null
  }

  type GetStoreStaffGroupByPayload<T extends StoreStaffGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<StoreStaffGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof StoreStaffGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], StoreStaffGroupByOutputType[P]>
            : GetScalarType<T[P], StoreStaffGroupByOutputType[P]>
        }
      >
    >


  export type StoreStaffSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    storeId?: boolean
    userId?: boolean
    role?: boolean
    permissions?: boolean
    employeeId?: boolean
    startDate?: boolean
    endDate?: boolean
    hourlyWage?: boolean
    commissionRate?: boolean
    status?: boolean
    canAccessPos?: boolean
    canManageInventory?: boolean
    canProcessOrders?: boolean
    complianceTrainingCompleted?: boolean
    trainingCompletedAt?: boolean
    trainingExpiresAt?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    createdBy?: boolean
    store?: boolean | StoreDefaultArgs<ExtArgs>
    user?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["storeStaff"]>

  export type StoreStaffSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    storeId?: boolean
    userId?: boolean
    role?: boolean
    permissions?: boolean
    employeeId?: boolean
    startDate?: boolean
    endDate?: boolean
    hourlyWage?: boolean
    commissionRate?: boolean
    status?: boolean
    canAccessPos?: boolean
    canManageInventory?: boolean
    canProcessOrders?: boolean
    complianceTrainingCompleted?: boolean
    trainingCompletedAt?: boolean
    trainingExpiresAt?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    createdBy?: boolean
    store?: boolean | StoreDefaultArgs<ExtArgs>
    user?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["storeStaff"]>

  export type StoreStaffSelectScalar = {
    id?: boolean
    storeId?: boolean
    userId?: boolean
    role?: boolean
    permissions?: boolean
    employeeId?: boolean
    startDate?: boolean
    endDate?: boolean
    hourlyWage?: boolean
    commissionRate?: boolean
    status?: boolean
    canAccessPos?: boolean
    canManageInventory?: boolean
    canProcessOrders?: boolean
    complianceTrainingCompleted?: boolean
    trainingCompletedAt?: boolean
    trainingExpiresAt?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    createdBy?: boolean
  }

  export type StoreStaffInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    store?: boolean | StoreDefaultArgs<ExtArgs>
    user?: boolean | UserDefaultArgs<ExtArgs>
  }
  export type StoreStaffIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    store?: boolean | StoreDefaultArgs<ExtArgs>
    user?: boolean | UserDefaultArgs<ExtArgs>
  }

  export type $StoreStaffPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "StoreStaff"
    objects: {
      store: Prisma.$StorePayload<ExtArgs>
      user: Prisma.$UserPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      storeId: string
      userId: string
      role: string
      permissions: Prisma.JsonValue | null
      employeeId: string | null
      startDate: Date
      endDate: Date | null
      hourlyWage: Prisma.Decimal | null
      commissionRate: Prisma.Decimal | null
      status: string
      canAccessPos: boolean
      canManageInventory: boolean
      canProcessOrders: boolean
      complianceTrainingCompleted: boolean
      trainingCompletedAt: Date | null
      trainingExpiresAt: Date | null
      createdAt: Date
      updatedAt: Date
      createdBy: string | null
    }, ExtArgs["result"]["storeStaff"]>
    composites: {}
  }

  type StoreStaffGetPayload<S extends boolean | null | undefined | StoreStaffDefaultArgs> = $Result.GetResult<Prisma.$StoreStaffPayload, S>

  type StoreStaffCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<StoreStaffFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: StoreStaffCountAggregateInputType | true
    }

  export interface StoreStaffDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['StoreStaff'], meta: { name: 'StoreStaff' } }
    /**
     * Find zero or one StoreStaff that matches the filter.
     * @param {StoreStaffFindUniqueArgs} args - Arguments to find a StoreStaff
     * @example
     * // Get one StoreStaff
     * const storeStaff = await prisma.storeStaff.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends StoreStaffFindUniqueArgs>(args: SelectSubset<T, StoreStaffFindUniqueArgs<ExtArgs>>): Prisma__StoreStaffClient<$Result.GetResult<Prisma.$StoreStaffPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one StoreStaff that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {StoreStaffFindUniqueOrThrowArgs} args - Arguments to find a StoreStaff
     * @example
     * // Get one StoreStaff
     * const storeStaff = await prisma.storeStaff.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends StoreStaffFindUniqueOrThrowArgs>(args: SelectSubset<T, StoreStaffFindUniqueOrThrowArgs<ExtArgs>>): Prisma__StoreStaffClient<$Result.GetResult<Prisma.$StoreStaffPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first StoreStaff that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {StoreStaffFindFirstArgs} args - Arguments to find a StoreStaff
     * @example
     * // Get one StoreStaff
     * const storeStaff = await prisma.storeStaff.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends StoreStaffFindFirstArgs>(args?: SelectSubset<T, StoreStaffFindFirstArgs<ExtArgs>>): Prisma__StoreStaffClient<$Result.GetResult<Prisma.$StoreStaffPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first StoreStaff that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {StoreStaffFindFirstOrThrowArgs} args - Arguments to find a StoreStaff
     * @example
     * // Get one StoreStaff
     * const storeStaff = await prisma.storeStaff.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends StoreStaffFindFirstOrThrowArgs>(args?: SelectSubset<T, StoreStaffFindFirstOrThrowArgs<ExtArgs>>): Prisma__StoreStaffClient<$Result.GetResult<Prisma.$StoreStaffPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more StoreStaffs that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {StoreStaffFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all StoreStaffs
     * const storeStaffs = await prisma.storeStaff.findMany()
     * 
     * // Get first 10 StoreStaffs
     * const storeStaffs = await prisma.storeStaff.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const storeStaffWithIdOnly = await prisma.storeStaff.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends StoreStaffFindManyArgs>(args?: SelectSubset<T, StoreStaffFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$StoreStaffPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a StoreStaff.
     * @param {StoreStaffCreateArgs} args - Arguments to create a StoreStaff.
     * @example
     * // Create one StoreStaff
     * const StoreStaff = await prisma.storeStaff.create({
     *   data: {
     *     // ... data to create a StoreStaff
     *   }
     * })
     * 
     */
    create<T extends StoreStaffCreateArgs>(args: SelectSubset<T, StoreStaffCreateArgs<ExtArgs>>): Prisma__StoreStaffClient<$Result.GetResult<Prisma.$StoreStaffPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many StoreStaffs.
     * @param {StoreStaffCreateManyArgs} args - Arguments to create many StoreStaffs.
     * @example
     * // Create many StoreStaffs
     * const storeStaff = await prisma.storeStaff.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends StoreStaffCreateManyArgs>(args?: SelectSubset<T, StoreStaffCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many StoreStaffs and returns the data saved in the database.
     * @param {StoreStaffCreateManyAndReturnArgs} args - Arguments to create many StoreStaffs.
     * @example
     * // Create many StoreStaffs
     * const storeStaff = await prisma.storeStaff.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many StoreStaffs and only return the `id`
     * const storeStaffWithIdOnly = await prisma.storeStaff.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends StoreStaffCreateManyAndReturnArgs>(args?: SelectSubset<T, StoreStaffCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$StoreStaffPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a StoreStaff.
     * @param {StoreStaffDeleteArgs} args - Arguments to delete one StoreStaff.
     * @example
     * // Delete one StoreStaff
     * const StoreStaff = await prisma.storeStaff.delete({
     *   where: {
     *     // ... filter to delete one StoreStaff
     *   }
     * })
     * 
     */
    delete<T extends StoreStaffDeleteArgs>(args: SelectSubset<T, StoreStaffDeleteArgs<ExtArgs>>): Prisma__StoreStaffClient<$Result.GetResult<Prisma.$StoreStaffPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one StoreStaff.
     * @param {StoreStaffUpdateArgs} args - Arguments to update one StoreStaff.
     * @example
     * // Update one StoreStaff
     * const storeStaff = await prisma.storeStaff.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends StoreStaffUpdateArgs>(args: SelectSubset<T, StoreStaffUpdateArgs<ExtArgs>>): Prisma__StoreStaffClient<$Result.GetResult<Prisma.$StoreStaffPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more StoreStaffs.
     * @param {StoreStaffDeleteManyArgs} args - Arguments to filter StoreStaffs to delete.
     * @example
     * // Delete a few StoreStaffs
     * const { count } = await prisma.storeStaff.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends StoreStaffDeleteManyArgs>(args?: SelectSubset<T, StoreStaffDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more StoreStaffs.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {StoreStaffUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many StoreStaffs
     * const storeStaff = await prisma.storeStaff.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends StoreStaffUpdateManyArgs>(args: SelectSubset<T, StoreStaffUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one StoreStaff.
     * @param {StoreStaffUpsertArgs} args - Arguments to update or create a StoreStaff.
     * @example
     * // Update or create a StoreStaff
     * const storeStaff = await prisma.storeStaff.upsert({
     *   create: {
     *     // ... data to create a StoreStaff
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the StoreStaff we want to update
     *   }
     * })
     */
    upsert<T extends StoreStaffUpsertArgs>(args: SelectSubset<T, StoreStaffUpsertArgs<ExtArgs>>): Prisma__StoreStaffClient<$Result.GetResult<Prisma.$StoreStaffPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of StoreStaffs.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {StoreStaffCountArgs} args - Arguments to filter StoreStaffs to count.
     * @example
     * // Count the number of StoreStaffs
     * const count = await prisma.storeStaff.count({
     *   where: {
     *     // ... the filter for the StoreStaffs we want to count
     *   }
     * })
    **/
    count<T extends StoreStaffCountArgs>(
      args?: Subset<T, StoreStaffCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], StoreStaffCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a StoreStaff.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {StoreStaffAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends StoreStaffAggregateArgs>(args: Subset<T, StoreStaffAggregateArgs>): Prisma.PrismaPromise<GetStoreStaffAggregateType<T>>

    /**
     * Group by StoreStaff.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {StoreStaffGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends StoreStaffGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: StoreStaffGroupByArgs['orderBy'] }
        : { orderBy?: StoreStaffGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, StoreStaffGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetStoreStaffGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the StoreStaff model
   */
  readonly fields: StoreStaffFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for StoreStaff.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__StoreStaffClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    store<T extends StoreDefaultArgs<ExtArgs> = {}>(args?: Subset<T, StoreDefaultArgs<ExtArgs>>): Prisma__StoreClient<$Result.GetResult<Prisma.$StorePayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    user<T extends UserDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UserDefaultArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the StoreStaff model
   */ 
  interface StoreStaffFieldRefs {
    readonly id: FieldRef<"StoreStaff", 'String'>
    readonly storeId: FieldRef<"StoreStaff", 'String'>
    readonly userId: FieldRef<"StoreStaff", 'String'>
    readonly role: FieldRef<"StoreStaff", 'String'>
    readonly permissions: FieldRef<"StoreStaff", 'Json'>
    readonly employeeId: FieldRef<"StoreStaff", 'String'>
    readonly startDate: FieldRef<"StoreStaff", 'DateTime'>
    readonly endDate: FieldRef<"StoreStaff", 'DateTime'>
    readonly hourlyWage: FieldRef<"StoreStaff", 'Decimal'>
    readonly commissionRate: FieldRef<"StoreStaff", 'Decimal'>
    readonly status: FieldRef<"StoreStaff", 'String'>
    readonly canAccessPos: FieldRef<"StoreStaff", 'Boolean'>
    readonly canManageInventory: FieldRef<"StoreStaff", 'Boolean'>
    readonly canProcessOrders: FieldRef<"StoreStaff", 'Boolean'>
    readonly complianceTrainingCompleted: FieldRef<"StoreStaff", 'Boolean'>
    readonly trainingCompletedAt: FieldRef<"StoreStaff", 'DateTime'>
    readonly trainingExpiresAt: FieldRef<"StoreStaff", 'DateTime'>
    readonly createdAt: FieldRef<"StoreStaff", 'DateTime'>
    readonly updatedAt: FieldRef<"StoreStaff", 'DateTime'>
    readonly createdBy: FieldRef<"StoreStaff", 'String'>
  }
    

  // Custom InputTypes
  /**
   * StoreStaff findUnique
   */
  export type StoreStaffFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the StoreStaff
     */
    select?: StoreStaffSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: StoreStaffInclude<ExtArgs> | null
    /**
     * Filter, which StoreStaff to fetch.
     */
    where: StoreStaffWhereUniqueInput
  }

  /**
   * StoreStaff findUniqueOrThrow
   */
  export type StoreStaffFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the StoreStaff
     */
    select?: StoreStaffSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: StoreStaffInclude<ExtArgs> | null
    /**
     * Filter, which StoreStaff to fetch.
     */
    where: StoreStaffWhereUniqueInput
  }

  /**
   * StoreStaff findFirst
   */
  export type StoreStaffFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the StoreStaff
     */
    select?: StoreStaffSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: StoreStaffInclude<ExtArgs> | null
    /**
     * Filter, which StoreStaff to fetch.
     */
    where?: StoreStaffWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of StoreStaffs to fetch.
     */
    orderBy?: StoreStaffOrderByWithRelationInput | StoreStaffOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for StoreStaffs.
     */
    cursor?: StoreStaffWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` StoreStaffs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` StoreStaffs.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of StoreStaffs.
     */
    distinct?: StoreStaffScalarFieldEnum | StoreStaffScalarFieldEnum[]
  }

  /**
   * StoreStaff findFirstOrThrow
   */
  export type StoreStaffFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the StoreStaff
     */
    select?: StoreStaffSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: StoreStaffInclude<ExtArgs> | null
    /**
     * Filter, which StoreStaff to fetch.
     */
    where?: StoreStaffWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of StoreStaffs to fetch.
     */
    orderBy?: StoreStaffOrderByWithRelationInput | StoreStaffOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for StoreStaffs.
     */
    cursor?: StoreStaffWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` StoreStaffs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` StoreStaffs.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of StoreStaffs.
     */
    distinct?: StoreStaffScalarFieldEnum | StoreStaffScalarFieldEnum[]
  }

  /**
   * StoreStaff findMany
   */
  export type StoreStaffFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the StoreStaff
     */
    select?: StoreStaffSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: StoreStaffInclude<ExtArgs> | null
    /**
     * Filter, which StoreStaffs to fetch.
     */
    where?: StoreStaffWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of StoreStaffs to fetch.
     */
    orderBy?: StoreStaffOrderByWithRelationInput | StoreStaffOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing StoreStaffs.
     */
    cursor?: StoreStaffWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` StoreStaffs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` StoreStaffs.
     */
    skip?: number
    distinct?: StoreStaffScalarFieldEnum | StoreStaffScalarFieldEnum[]
  }

  /**
   * StoreStaff create
   */
  export type StoreStaffCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the StoreStaff
     */
    select?: StoreStaffSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: StoreStaffInclude<ExtArgs> | null
    /**
     * The data needed to create a StoreStaff.
     */
    data: XOR<StoreStaffCreateInput, StoreStaffUncheckedCreateInput>
  }

  /**
   * StoreStaff createMany
   */
  export type StoreStaffCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many StoreStaffs.
     */
    data: StoreStaffCreateManyInput | StoreStaffCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * StoreStaff createManyAndReturn
   */
  export type StoreStaffCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the StoreStaff
     */
    select?: StoreStaffSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many StoreStaffs.
     */
    data: StoreStaffCreateManyInput | StoreStaffCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: StoreStaffIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * StoreStaff update
   */
  export type StoreStaffUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the StoreStaff
     */
    select?: StoreStaffSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: StoreStaffInclude<ExtArgs> | null
    /**
     * The data needed to update a StoreStaff.
     */
    data: XOR<StoreStaffUpdateInput, StoreStaffUncheckedUpdateInput>
    /**
     * Choose, which StoreStaff to update.
     */
    where: StoreStaffWhereUniqueInput
  }

  /**
   * StoreStaff updateMany
   */
  export type StoreStaffUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update StoreStaffs.
     */
    data: XOR<StoreStaffUpdateManyMutationInput, StoreStaffUncheckedUpdateManyInput>
    /**
     * Filter which StoreStaffs to update
     */
    where?: StoreStaffWhereInput
  }

  /**
   * StoreStaff upsert
   */
  export type StoreStaffUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the StoreStaff
     */
    select?: StoreStaffSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: StoreStaffInclude<ExtArgs> | null
    /**
     * The filter to search for the StoreStaff to update in case it exists.
     */
    where: StoreStaffWhereUniqueInput
    /**
     * In case the StoreStaff found by the `where` argument doesn't exist, create a new StoreStaff with this data.
     */
    create: XOR<StoreStaffCreateInput, StoreStaffUncheckedCreateInput>
    /**
     * In case the StoreStaff was found with the provided `where` argument, update it with this data.
     */
    update: XOR<StoreStaffUpdateInput, StoreStaffUncheckedUpdateInput>
  }

  /**
   * StoreStaff delete
   */
  export type StoreStaffDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the StoreStaff
     */
    select?: StoreStaffSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: StoreStaffInclude<ExtArgs> | null
    /**
     * Filter which StoreStaff to delete.
     */
    where: StoreStaffWhereUniqueInput
  }

  /**
   * StoreStaff deleteMany
   */
  export type StoreStaffDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which StoreStaffs to delete
     */
    where?: StoreStaffWhereInput
  }

  /**
   * StoreStaff without action
   */
  export type StoreStaffDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the StoreStaff
     */
    select?: StoreStaffSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: StoreStaffInclude<ExtArgs> | null
  }


  /**
   * Model ProductCategory
   */

  export type AggregateProductCategory = {
    _count: ProductCategoryCountAggregateOutputType | null
    _avg: ProductCategoryAvgAggregateOutputType | null
    _sum: ProductCategorySumAggregateOutputType | null
    _min: ProductCategoryMinAggregateOutputType | null
    _max: ProductCategoryMaxAggregateOutputType | null
  }

  export type ProductCategoryAvgAggregateOutputType = {
    sortOrder: number | null
  }

  export type ProductCategorySumAggregateOutputType = {
    sortOrder: number | null
  }

  export type ProductCategoryMinAggregateOutputType = {
    id: string | null
    parentId: string | null
    name: string | null
    slug: string | null
    description: string | null
    iconName: string | null
    colorHex: string | null
    sortOrder: number | null
    productType: $Enums.ProductType | null
    thcCategory: string | null
    consumptionMethod: string | null
    metaTitle: string | null
    metaDescription: string | null
    isActive: boolean | null
    requiresCompliance: boolean | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type ProductCategoryMaxAggregateOutputType = {
    id: string | null
    parentId: string | null
    name: string | null
    slug: string | null
    description: string | null
    iconName: string | null
    colorHex: string | null
    sortOrder: number | null
    productType: $Enums.ProductType | null
    thcCategory: string | null
    consumptionMethod: string | null
    metaTitle: string | null
    metaDescription: string | null
    isActive: boolean | null
    requiresCompliance: boolean | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type ProductCategoryCountAggregateOutputType = {
    id: number
    parentId: number
    name: number
    slug: number
    description: number
    iconName: number
    colorHex: number
    sortOrder: number
    productType: number
    thcCategory: number
    consumptionMethod: number
    metaTitle: number
    metaDescription: number
    isActive: number
    requiresCompliance: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type ProductCategoryAvgAggregateInputType = {
    sortOrder?: true
  }

  export type ProductCategorySumAggregateInputType = {
    sortOrder?: true
  }

  export type ProductCategoryMinAggregateInputType = {
    id?: true
    parentId?: true
    name?: true
    slug?: true
    description?: true
    iconName?: true
    colorHex?: true
    sortOrder?: true
    productType?: true
    thcCategory?: true
    consumptionMethod?: true
    metaTitle?: true
    metaDescription?: true
    isActive?: true
    requiresCompliance?: true
    createdAt?: true
    updatedAt?: true
  }

  export type ProductCategoryMaxAggregateInputType = {
    id?: true
    parentId?: true
    name?: true
    slug?: true
    description?: true
    iconName?: true
    colorHex?: true
    sortOrder?: true
    productType?: true
    thcCategory?: true
    consumptionMethod?: true
    metaTitle?: true
    metaDescription?: true
    isActive?: true
    requiresCompliance?: true
    createdAt?: true
    updatedAt?: true
  }

  export type ProductCategoryCountAggregateInputType = {
    id?: true
    parentId?: true
    name?: true
    slug?: true
    description?: true
    iconName?: true
    colorHex?: true
    sortOrder?: true
    productType?: true
    thcCategory?: true
    consumptionMethod?: true
    metaTitle?: true
    metaDescription?: true
    isActive?: true
    requiresCompliance?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type ProductCategoryAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which ProductCategory to aggregate.
     */
    where?: ProductCategoryWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ProductCategories to fetch.
     */
    orderBy?: ProductCategoryOrderByWithRelationInput | ProductCategoryOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: ProductCategoryWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ProductCategories from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ProductCategories.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned ProductCategories
    **/
    _count?: true | ProductCategoryCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: ProductCategoryAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: ProductCategorySumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ProductCategoryMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ProductCategoryMaxAggregateInputType
  }

  export type GetProductCategoryAggregateType<T extends ProductCategoryAggregateArgs> = {
        [P in keyof T & keyof AggregateProductCategory]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateProductCategory[P]>
      : GetScalarType<T[P], AggregateProductCategory[P]>
  }




  export type ProductCategoryGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ProductCategoryWhereInput
    orderBy?: ProductCategoryOrderByWithAggregationInput | ProductCategoryOrderByWithAggregationInput[]
    by: ProductCategoryScalarFieldEnum[] | ProductCategoryScalarFieldEnum
    having?: ProductCategoryScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ProductCategoryCountAggregateInputType | true
    _avg?: ProductCategoryAvgAggregateInputType
    _sum?: ProductCategorySumAggregateInputType
    _min?: ProductCategoryMinAggregateInputType
    _max?: ProductCategoryMaxAggregateInputType
  }

  export type ProductCategoryGroupByOutputType = {
    id: string
    parentId: string | null
    name: string
    slug: string
    description: string | null
    iconName: string | null
    colorHex: string | null
    sortOrder: number
    productType: $Enums.ProductType
    thcCategory: string | null
    consumptionMethod: string | null
    metaTitle: string | null
    metaDescription: string | null
    isActive: boolean
    requiresCompliance: boolean
    createdAt: Date
    updatedAt: Date
    _count: ProductCategoryCountAggregateOutputType | null
    _avg: ProductCategoryAvgAggregateOutputType | null
    _sum: ProductCategorySumAggregateOutputType | null
    _min: ProductCategoryMinAggregateOutputType | null
    _max: ProductCategoryMaxAggregateOutputType | null
  }

  type GetProductCategoryGroupByPayload<T extends ProductCategoryGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<ProductCategoryGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ProductCategoryGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ProductCategoryGroupByOutputType[P]>
            : GetScalarType<T[P], ProductCategoryGroupByOutputType[P]>
        }
      >
    >


  export type ProductCategorySelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    parentId?: boolean
    name?: boolean
    slug?: boolean
    description?: boolean
    iconName?: boolean
    colorHex?: boolean
    sortOrder?: boolean
    productType?: boolean
    thcCategory?: boolean
    consumptionMethod?: boolean
    metaTitle?: boolean
    metaDescription?: boolean
    isActive?: boolean
    requiresCompliance?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    parent?: boolean | ProductCategory$parentArgs<ExtArgs>
    children?: boolean | ProductCategory$childrenArgs<ExtArgs>
    products?: boolean | ProductCategory$productsArgs<ExtArgs>
    _count?: boolean | ProductCategoryCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["productCategory"]>

  export type ProductCategorySelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    parentId?: boolean
    name?: boolean
    slug?: boolean
    description?: boolean
    iconName?: boolean
    colorHex?: boolean
    sortOrder?: boolean
    productType?: boolean
    thcCategory?: boolean
    consumptionMethod?: boolean
    metaTitle?: boolean
    metaDescription?: boolean
    isActive?: boolean
    requiresCompliance?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    parent?: boolean | ProductCategory$parentArgs<ExtArgs>
  }, ExtArgs["result"]["productCategory"]>

  export type ProductCategorySelectScalar = {
    id?: boolean
    parentId?: boolean
    name?: boolean
    slug?: boolean
    description?: boolean
    iconName?: boolean
    colorHex?: boolean
    sortOrder?: boolean
    productType?: boolean
    thcCategory?: boolean
    consumptionMethod?: boolean
    metaTitle?: boolean
    metaDescription?: boolean
    isActive?: boolean
    requiresCompliance?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type ProductCategoryInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    parent?: boolean | ProductCategory$parentArgs<ExtArgs>
    children?: boolean | ProductCategory$childrenArgs<ExtArgs>
    products?: boolean | ProductCategory$productsArgs<ExtArgs>
    _count?: boolean | ProductCategoryCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type ProductCategoryIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    parent?: boolean | ProductCategory$parentArgs<ExtArgs>
  }

  export type $ProductCategoryPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "ProductCategory"
    objects: {
      parent: Prisma.$ProductCategoryPayload<ExtArgs> | null
      children: Prisma.$ProductCategoryPayload<ExtArgs>[]
      products: Prisma.$ProductPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      parentId: string | null
      name: string
      slug: string
      description: string | null
      iconName: string | null
      colorHex: string | null
      sortOrder: number
      productType: $Enums.ProductType
      thcCategory: string | null
      consumptionMethod: string | null
      metaTitle: string | null
      metaDescription: string | null
      isActive: boolean
      requiresCompliance: boolean
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["productCategory"]>
    composites: {}
  }

  type ProductCategoryGetPayload<S extends boolean | null | undefined | ProductCategoryDefaultArgs> = $Result.GetResult<Prisma.$ProductCategoryPayload, S>

  type ProductCategoryCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<ProductCategoryFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: ProductCategoryCountAggregateInputType | true
    }

  export interface ProductCategoryDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['ProductCategory'], meta: { name: 'ProductCategory' } }
    /**
     * Find zero or one ProductCategory that matches the filter.
     * @param {ProductCategoryFindUniqueArgs} args - Arguments to find a ProductCategory
     * @example
     * // Get one ProductCategory
     * const productCategory = await prisma.productCategory.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends ProductCategoryFindUniqueArgs>(args: SelectSubset<T, ProductCategoryFindUniqueArgs<ExtArgs>>): Prisma__ProductCategoryClient<$Result.GetResult<Prisma.$ProductCategoryPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one ProductCategory that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {ProductCategoryFindUniqueOrThrowArgs} args - Arguments to find a ProductCategory
     * @example
     * // Get one ProductCategory
     * const productCategory = await prisma.productCategory.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends ProductCategoryFindUniqueOrThrowArgs>(args: SelectSubset<T, ProductCategoryFindUniqueOrThrowArgs<ExtArgs>>): Prisma__ProductCategoryClient<$Result.GetResult<Prisma.$ProductCategoryPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first ProductCategory that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProductCategoryFindFirstArgs} args - Arguments to find a ProductCategory
     * @example
     * // Get one ProductCategory
     * const productCategory = await prisma.productCategory.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends ProductCategoryFindFirstArgs>(args?: SelectSubset<T, ProductCategoryFindFirstArgs<ExtArgs>>): Prisma__ProductCategoryClient<$Result.GetResult<Prisma.$ProductCategoryPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first ProductCategory that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProductCategoryFindFirstOrThrowArgs} args - Arguments to find a ProductCategory
     * @example
     * // Get one ProductCategory
     * const productCategory = await prisma.productCategory.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends ProductCategoryFindFirstOrThrowArgs>(args?: SelectSubset<T, ProductCategoryFindFirstOrThrowArgs<ExtArgs>>): Prisma__ProductCategoryClient<$Result.GetResult<Prisma.$ProductCategoryPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more ProductCategories that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProductCategoryFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all ProductCategories
     * const productCategories = await prisma.productCategory.findMany()
     * 
     * // Get first 10 ProductCategories
     * const productCategories = await prisma.productCategory.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const productCategoryWithIdOnly = await prisma.productCategory.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends ProductCategoryFindManyArgs>(args?: SelectSubset<T, ProductCategoryFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ProductCategoryPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a ProductCategory.
     * @param {ProductCategoryCreateArgs} args - Arguments to create a ProductCategory.
     * @example
     * // Create one ProductCategory
     * const ProductCategory = await prisma.productCategory.create({
     *   data: {
     *     // ... data to create a ProductCategory
     *   }
     * })
     * 
     */
    create<T extends ProductCategoryCreateArgs>(args: SelectSubset<T, ProductCategoryCreateArgs<ExtArgs>>): Prisma__ProductCategoryClient<$Result.GetResult<Prisma.$ProductCategoryPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many ProductCategories.
     * @param {ProductCategoryCreateManyArgs} args - Arguments to create many ProductCategories.
     * @example
     * // Create many ProductCategories
     * const productCategory = await prisma.productCategory.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends ProductCategoryCreateManyArgs>(args?: SelectSubset<T, ProductCategoryCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many ProductCategories and returns the data saved in the database.
     * @param {ProductCategoryCreateManyAndReturnArgs} args - Arguments to create many ProductCategories.
     * @example
     * // Create many ProductCategories
     * const productCategory = await prisma.productCategory.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many ProductCategories and only return the `id`
     * const productCategoryWithIdOnly = await prisma.productCategory.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends ProductCategoryCreateManyAndReturnArgs>(args?: SelectSubset<T, ProductCategoryCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ProductCategoryPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a ProductCategory.
     * @param {ProductCategoryDeleteArgs} args - Arguments to delete one ProductCategory.
     * @example
     * // Delete one ProductCategory
     * const ProductCategory = await prisma.productCategory.delete({
     *   where: {
     *     // ... filter to delete one ProductCategory
     *   }
     * })
     * 
     */
    delete<T extends ProductCategoryDeleteArgs>(args: SelectSubset<T, ProductCategoryDeleteArgs<ExtArgs>>): Prisma__ProductCategoryClient<$Result.GetResult<Prisma.$ProductCategoryPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one ProductCategory.
     * @param {ProductCategoryUpdateArgs} args - Arguments to update one ProductCategory.
     * @example
     * // Update one ProductCategory
     * const productCategory = await prisma.productCategory.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends ProductCategoryUpdateArgs>(args: SelectSubset<T, ProductCategoryUpdateArgs<ExtArgs>>): Prisma__ProductCategoryClient<$Result.GetResult<Prisma.$ProductCategoryPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more ProductCategories.
     * @param {ProductCategoryDeleteManyArgs} args - Arguments to filter ProductCategories to delete.
     * @example
     * // Delete a few ProductCategories
     * const { count } = await prisma.productCategory.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends ProductCategoryDeleteManyArgs>(args?: SelectSubset<T, ProductCategoryDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more ProductCategories.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProductCategoryUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many ProductCategories
     * const productCategory = await prisma.productCategory.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends ProductCategoryUpdateManyArgs>(args: SelectSubset<T, ProductCategoryUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one ProductCategory.
     * @param {ProductCategoryUpsertArgs} args - Arguments to update or create a ProductCategory.
     * @example
     * // Update or create a ProductCategory
     * const productCategory = await prisma.productCategory.upsert({
     *   create: {
     *     // ... data to create a ProductCategory
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the ProductCategory we want to update
     *   }
     * })
     */
    upsert<T extends ProductCategoryUpsertArgs>(args: SelectSubset<T, ProductCategoryUpsertArgs<ExtArgs>>): Prisma__ProductCategoryClient<$Result.GetResult<Prisma.$ProductCategoryPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of ProductCategories.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProductCategoryCountArgs} args - Arguments to filter ProductCategories to count.
     * @example
     * // Count the number of ProductCategories
     * const count = await prisma.productCategory.count({
     *   where: {
     *     // ... the filter for the ProductCategories we want to count
     *   }
     * })
    **/
    count<T extends ProductCategoryCountArgs>(
      args?: Subset<T, ProductCategoryCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ProductCategoryCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a ProductCategory.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProductCategoryAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ProductCategoryAggregateArgs>(args: Subset<T, ProductCategoryAggregateArgs>): Prisma.PrismaPromise<GetProductCategoryAggregateType<T>>

    /**
     * Group by ProductCategory.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProductCategoryGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends ProductCategoryGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: ProductCategoryGroupByArgs['orderBy'] }
        : { orderBy?: ProductCategoryGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, ProductCategoryGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetProductCategoryGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the ProductCategory model
   */
  readonly fields: ProductCategoryFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for ProductCategory.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__ProductCategoryClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    parent<T extends ProductCategory$parentArgs<ExtArgs> = {}>(args?: Subset<T, ProductCategory$parentArgs<ExtArgs>>): Prisma__ProductCategoryClient<$Result.GetResult<Prisma.$ProductCategoryPayload<ExtArgs>, T, "findUniqueOrThrow"> | null, null, ExtArgs>
    children<T extends ProductCategory$childrenArgs<ExtArgs> = {}>(args?: Subset<T, ProductCategory$childrenArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ProductCategoryPayload<ExtArgs>, T, "findMany"> | Null>
    products<T extends ProductCategory$productsArgs<ExtArgs> = {}>(args?: Subset<T, ProductCategory$productsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ProductPayload<ExtArgs>, T, "findMany"> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the ProductCategory model
   */ 
  interface ProductCategoryFieldRefs {
    readonly id: FieldRef<"ProductCategory", 'String'>
    readonly parentId: FieldRef<"ProductCategory", 'String'>
    readonly name: FieldRef<"ProductCategory", 'String'>
    readonly slug: FieldRef<"ProductCategory", 'String'>
    readonly description: FieldRef<"ProductCategory", 'String'>
    readonly iconName: FieldRef<"ProductCategory", 'String'>
    readonly colorHex: FieldRef<"ProductCategory", 'String'>
    readonly sortOrder: FieldRef<"ProductCategory", 'Int'>
    readonly productType: FieldRef<"ProductCategory", 'ProductType'>
    readonly thcCategory: FieldRef<"ProductCategory", 'String'>
    readonly consumptionMethod: FieldRef<"ProductCategory", 'String'>
    readonly metaTitle: FieldRef<"ProductCategory", 'String'>
    readonly metaDescription: FieldRef<"ProductCategory", 'String'>
    readonly isActive: FieldRef<"ProductCategory", 'Boolean'>
    readonly requiresCompliance: FieldRef<"ProductCategory", 'Boolean'>
    readonly createdAt: FieldRef<"ProductCategory", 'DateTime'>
    readonly updatedAt: FieldRef<"ProductCategory", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * ProductCategory findUnique
   */
  export type ProductCategoryFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductCategory
     */
    select?: ProductCategorySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductCategoryInclude<ExtArgs> | null
    /**
     * Filter, which ProductCategory to fetch.
     */
    where: ProductCategoryWhereUniqueInput
  }

  /**
   * ProductCategory findUniqueOrThrow
   */
  export type ProductCategoryFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductCategory
     */
    select?: ProductCategorySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductCategoryInclude<ExtArgs> | null
    /**
     * Filter, which ProductCategory to fetch.
     */
    where: ProductCategoryWhereUniqueInput
  }

  /**
   * ProductCategory findFirst
   */
  export type ProductCategoryFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductCategory
     */
    select?: ProductCategorySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductCategoryInclude<ExtArgs> | null
    /**
     * Filter, which ProductCategory to fetch.
     */
    where?: ProductCategoryWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ProductCategories to fetch.
     */
    orderBy?: ProductCategoryOrderByWithRelationInput | ProductCategoryOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for ProductCategories.
     */
    cursor?: ProductCategoryWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ProductCategories from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ProductCategories.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of ProductCategories.
     */
    distinct?: ProductCategoryScalarFieldEnum | ProductCategoryScalarFieldEnum[]
  }

  /**
   * ProductCategory findFirstOrThrow
   */
  export type ProductCategoryFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductCategory
     */
    select?: ProductCategorySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductCategoryInclude<ExtArgs> | null
    /**
     * Filter, which ProductCategory to fetch.
     */
    where?: ProductCategoryWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ProductCategories to fetch.
     */
    orderBy?: ProductCategoryOrderByWithRelationInput | ProductCategoryOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for ProductCategories.
     */
    cursor?: ProductCategoryWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ProductCategories from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ProductCategories.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of ProductCategories.
     */
    distinct?: ProductCategoryScalarFieldEnum | ProductCategoryScalarFieldEnum[]
  }

  /**
   * ProductCategory findMany
   */
  export type ProductCategoryFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductCategory
     */
    select?: ProductCategorySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductCategoryInclude<ExtArgs> | null
    /**
     * Filter, which ProductCategories to fetch.
     */
    where?: ProductCategoryWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ProductCategories to fetch.
     */
    orderBy?: ProductCategoryOrderByWithRelationInput | ProductCategoryOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing ProductCategories.
     */
    cursor?: ProductCategoryWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ProductCategories from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ProductCategories.
     */
    skip?: number
    distinct?: ProductCategoryScalarFieldEnum | ProductCategoryScalarFieldEnum[]
  }

  /**
   * ProductCategory create
   */
  export type ProductCategoryCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductCategory
     */
    select?: ProductCategorySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductCategoryInclude<ExtArgs> | null
    /**
     * The data needed to create a ProductCategory.
     */
    data: XOR<ProductCategoryCreateInput, ProductCategoryUncheckedCreateInput>
  }

  /**
   * ProductCategory createMany
   */
  export type ProductCategoryCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many ProductCategories.
     */
    data: ProductCategoryCreateManyInput | ProductCategoryCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * ProductCategory createManyAndReturn
   */
  export type ProductCategoryCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductCategory
     */
    select?: ProductCategorySelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many ProductCategories.
     */
    data: ProductCategoryCreateManyInput | ProductCategoryCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductCategoryIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * ProductCategory update
   */
  export type ProductCategoryUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductCategory
     */
    select?: ProductCategorySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductCategoryInclude<ExtArgs> | null
    /**
     * The data needed to update a ProductCategory.
     */
    data: XOR<ProductCategoryUpdateInput, ProductCategoryUncheckedUpdateInput>
    /**
     * Choose, which ProductCategory to update.
     */
    where: ProductCategoryWhereUniqueInput
  }

  /**
   * ProductCategory updateMany
   */
  export type ProductCategoryUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update ProductCategories.
     */
    data: XOR<ProductCategoryUpdateManyMutationInput, ProductCategoryUncheckedUpdateManyInput>
    /**
     * Filter which ProductCategories to update
     */
    where?: ProductCategoryWhereInput
  }

  /**
   * ProductCategory upsert
   */
  export type ProductCategoryUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductCategory
     */
    select?: ProductCategorySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductCategoryInclude<ExtArgs> | null
    /**
     * The filter to search for the ProductCategory to update in case it exists.
     */
    where: ProductCategoryWhereUniqueInput
    /**
     * In case the ProductCategory found by the `where` argument doesn't exist, create a new ProductCategory with this data.
     */
    create: XOR<ProductCategoryCreateInput, ProductCategoryUncheckedCreateInput>
    /**
     * In case the ProductCategory was found with the provided `where` argument, update it with this data.
     */
    update: XOR<ProductCategoryUpdateInput, ProductCategoryUncheckedUpdateInput>
  }

  /**
   * ProductCategory delete
   */
  export type ProductCategoryDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductCategory
     */
    select?: ProductCategorySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductCategoryInclude<ExtArgs> | null
    /**
     * Filter which ProductCategory to delete.
     */
    where: ProductCategoryWhereUniqueInput
  }

  /**
   * ProductCategory deleteMany
   */
  export type ProductCategoryDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which ProductCategories to delete
     */
    where?: ProductCategoryWhereInput
  }

  /**
   * ProductCategory.parent
   */
  export type ProductCategory$parentArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductCategory
     */
    select?: ProductCategorySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductCategoryInclude<ExtArgs> | null
    where?: ProductCategoryWhereInput
  }

  /**
   * ProductCategory.children
   */
  export type ProductCategory$childrenArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductCategory
     */
    select?: ProductCategorySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductCategoryInclude<ExtArgs> | null
    where?: ProductCategoryWhereInput
    orderBy?: ProductCategoryOrderByWithRelationInput | ProductCategoryOrderByWithRelationInput[]
    cursor?: ProductCategoryWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ProductCategoryScalarFieldEnum | ProductCategoryScalarFieldEnum[]
  }

  /**
   * ProductCategory.products
   */
  export type ProductCategory$productsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Product
     */
    select?: ProductSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductInclude<ExtArgs> | null
    where?: ProductWhereInput
    orderBy?: ProductOrderByWithRelationInput | ProductOrderByWithRelationInput[]
    cursor?: ProductWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ProductScalarFieldEnum | ProductScalarFieldEnum[]
  }

  /**
   * ProductCategory without action
   */
  export type ProductCategoryDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductCategory
     */
    select?: ProductCategorySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductCategoryInclude<ExtArgs> | null
  }


  /**
   * Model Product
   */

  export type AggregateProduct = {
    _count: ProductCountAggregateOutputType | null
    _avg: ProductAvgAggregateOutputType | null
    _sum: ProductSumAggregateOutputType | null
    _min: ProductMinAggregateOutputType | null
    _max: ProductMaxAggregateOutputType | null
  }

  export type ProductAvgAggregateOutputType = {
    thcPercentage: Decimal | null
    cbdPercentage: Decimal | null
    thcaPercentage: Decimal | null
    cbdaPercentage: Decimal | null
    totalCannabinoids: Decimal | null
    basePrice: Decimal | null
    salePrice: Decimal | null
    costPrice: Decimal | null
    weightGrams: Decimal | null
    stockQuantity: number | null
    reservedQuantity: number | null
    lowStockThreshold: number | null
    ageRestriction: number | null
    viewCount: number | null
    averageRating: Decimal | null
    reviewCount: number | null
    salesCount: number | null
  }

  export type ProductSumAggregateOutputType = {
    thcPercentage: Decimal | null
    cbdPercentage: Decimal | null
    thcaPercentage: Decimal | null
    cbdaPercentage: Decimal | null
    totalCannabinoids: Decimal | null
    basePrice: Decimal | null
    salePrice: Decimal | null
    costPrice: Decimal | null
    weightGrams: Decimal | null
    stockQuantity: number | null
    reservedQuantity: number | null
    lowStockThreshold: number | null
    ageRestriction: number | null
    viewCount: number | null
    averageRating: Decimal | null
    reviewCount: number | null
    salesCount: number | null
  }

  export type ProductMinAggregateOutputType = {
    id: string | null
    storeId: string | null
    categoryId: string | null
    name: string | null
    slug: string | null
    description: string | null
    shortDescription: string | null
    strainName: string | null
    strainType: $Enums.StrainType | null
    brand: string | null
    manufacturer: string | null
    thcPercentage: Decimal | null
    cbdPercentage: Decimal | null
    thcaPercentage: Decimal | null
    cbdaPercentage: Decimal | null
    totalCannabinoids: Decimal | null
    basePrice: Decimal | null
    salePrice: Decimal | null
    costPrice: Decimal | null
    weightGrams: Decimal | null
    sku: string | null
    barcode: string | null
    stockQuantity: number | null
    reservedQuantity: number | null
    lowStockThreshold: number | null
    metrcId: string | null
    batchNumber: string | null
    harvestDate: Date | null
    packageDate: Date | null
    expirationDate: Date | null
    labTested: boolean | null
    testedDate: Date | null
    testingLab: string | null
    featuredImageUrl: string | null
    status: $Enums.ProductStatus | null
    isFeatured: boolean | null
    isMedicalOnly: boolean | null
    ageRestriction: number | null
    metaTitle: string | null
    metaDescription: string | null
    searchKeywords: string | null
    viewCount: number | null
    averageRating: Decimal | null
    reviewCount: number | null
    salesCount: number | null
    createdAt: Date | null
    updatedAt: Date | null
    createdBy: string | null
    updatedBy: string | null
  }

  export type ProductMaxAggregateOutputType = {
    id: string | null
    storeId: string | null
    categoryId: string | null
    name: string | null
    slug: string | null
    description: string | null
    shortDescription: string | null
    strainName: string | null
    strainType: $Enums.StrainType | null
    brand: string | null
    manufacturer: string | null
    thcPercentage: Decimal | null
    cbdPercentage: Decimal | null
    thcaPercentage: Decimal | null
    cbdaPercentage: Decimal | null
    totalCannabinoids: Decimal | null
    basePrice: Decimal | null
    salePrice: Decimal | null
    costPrice: Decimal | null
    weightGrams: Decimal | null
    sku: string | null
    barcode: string | null
    stockQuantity: number | null
    reservedQuantity: number | null
    lowStockThreshold: number | null
    metrcId: string | null
    batchNumber: string | null
    harvestDate: Date | null
    packageDate: Date | null
    expirationDate: Date | null
    labTested: boolean | null
    testedDate: Date | null
    testingLab: string | null
    featuredImageUrl: string | null
    status: $Enums.ProductStatus | null
    isFeatured: boolean | null
    isMedicalOnly: boolean | null
    ageRestriction: number | null
    metaTitle: string | null
    metaDescription: string | null
    searchKeywords: string | null
    viewCount: number | null
    averageRating: Decimal | null
    reviewCount: number | null
    salesCount: number | null
    createdAt: Date | null
    updatedAt: Date | null
    createdBy: string | null
    updatedBy: string | null
  }

  export type ProductCountAggregateOutputType = {
    id: number
    storeId: number
    categoryId: number
    name: number
    slug: number
    description: number
    shortDescription: number
    strainName: number
    strainType: number
    brand: number
    manufacturer: number
    thcPercentage: number
    cbdPercentage: number
    thcaPercentage: number
    cbdaPercentage: number
    totalCannabinoids: number
    basePrice: number
    salePrice: number
    costPrice: number
    weightGrams: number
    sku: number
    barcode: number
    stockQuantity: number
    reservedQuantity: number
    lowStockThreshold: number
    metrcId: number
    batchNumber: number
    harvestDate: number
    packageDate: number
    expirationDate: number
    labTested: number
    labTestResults: number
    testedDate: number
    testingLab: number
    featuredImageUrl: number
    galleryImages: number
    status: number
    isFeatured: number
    isMedicalOnly: number
    ageRestriction: number
    metaTitle: number
    metaDescription: number
    tags: number
    searchKeywords: number
    viewCount: number
    averageRating: number
    reviewCount: number
    salesCount: number
    createdAt: number
    updatedAt: number
    createdBy: number
    updatedBy: number
    _all: number
  }


  export type ProductAvgAggregateInputType = {
    thcPercentage?: true
    cbdPercentage?: true
    thcaPercentage?: true
    cbdaPercentage?: true
    totalCannabinoids?: true
    basePrice?: true
    salePrice?: true
    costPrice?: true
    weightGrams?: true
    stockQuantity?: true
    reservedQuantity?: true
    lowStockThreshold?: true
    ageRestriction?: true
    viewCount?: true
    averageRating?: true
    reviewCount?: true
    salesCount?: true
  }

  export type ProductSumAggregateInputType = {
    thcPercentage?: true
    cbdPercentage?: true
    thcaPercentage?: true
    cbdaPercentage?: true
    totalCannabinoids?: true
    basePrice?: true
    salePrice?: true
    costPrice?: true
    weightGrams?: true
    stockQuantity?: true
    reservedQuantity?: true
    lowStockThreshold?: true
    ageRestriction?: true
    viewCount?: true
    averageRating?: true
    reviewCount?: true
    salesCount?: true
  }

  export type ProductMinAggregateInputType = {
    id?: true
    storeId?: true
    categoryId?: true
    name?: true
    slug?: true
    description?: true
    shortDescription?: true
    strainName?: true
    strainType?: true
    brand?: true
    manufacturer?: true
    thcPercentage?: true
    cbdPercentage?: true
    thcaPercentage?: true
    cbdaPercentage?: true
    totalCannabinoids?: true
    basePrice?: true
    salePrice?: true
    costPrice?: true
    weightGrams?: true
    sku?: true
    barcode?: true
    stockQuantity?: true
    reservedQuantity?: true
    lowStockThreshold?: true
    metrcId?: true
    batchNumber?: true
    harvestDate?: true
    packageDate?: true
    expirationDate?: true
    labTested?: true
    testedDate?: true
    testingLab?: true
    featuredImageUrl?: true
    status?: true
    isFeatured?: true
    isMedicalOnly?: true
    ageRestriction?: true
    metaTitle?: true
    metaDescription?: true
    searchKeywords?: true
    viewCount?: true
    averageRating?: true
    reviewCount?: true
    salesCount?: true
    createdAt?: true
    updatedAt?: true
    createdBy?: true
    updatedBy?: true
  }

  export type ProductMaxAggregateInputType = {
    id?: true
    storeId?: true
    categoryId?: true
    name?: true
    slug?: true
    description?: true
    shortDescription?: true
    strainName?: true
    strainType?: true
    brand?: true
    manufacturer?: true
    thcPercentage?: true
    cbdPercentage?: true
    thcaPercentage?: true
    cbdaPercentage?: true
    totalCannabinoids?: true
    basePrice?: true
    salePrice?: true
    costPrice?: true
    weightGrams?: true
    sku?: true
    barcode?: true
    stockQuantity?: true
    reservedQuantity?: true
    lowStockThreshold?: true
    metrcId?: true
    batchNumber?: true
    harvestDate?: true
    packageDate?: true
    expirationDate?: true
    labTested?: true
    testedDate?: true
    testingLab?: true
    featuredImageUrl?: true
    status?: true
    isFeatured?: true
    isMedicalOnly?: true
    ageRestriction?: true
    metaTitle?: true
    metaDescription?: true
    searchKeywords?: true
    viewCount?: true
    averageRating?: true
    reviewCount?: true
    salesCount?: true
    createdAt?: true
    updatedAt?: true
    createdBy?: true
    updatedBy?: true
  }

  export type ProductCountAggregateInputType = {
    id?: true
    storeId?: true
    categoryId?: true
    name?: true
    slug?: true
    description?: true
    shortDescription?: true
    strainName?: true
    strainType?: true
    brand?: true
    manufacturer?: true
    thcPercentage?: true
    cbdPercentage?: true
    thcaPercentage?: true
    cbdaPercentage?: true
    totalCannabinoids?: true
    basePrice?: true
    salePrice?: true
    costPrice?: true
    weightGrams?: true
    sku?: true
    barcode?: true
    stockQuantity?: true
    reservedQuantity?: true
    lowStockThreshold?: true
    metrcId?: true
    batchNumber?: true
    harvestDate?: true
    packageDate?: true
    expirationDate?: true
    labTested?: true
    labTestResults?: true
    testedDate?: true
    testingLab?: true
    featuredImageUrl?: true
    galleryImages?: true
    status?: true
    isFeatured?: true
    isMedicalOnly?: true
    ageRestriction?: true
    metaTitle?: true
    metaDescription?: true
    tags?: true
    searchKeywords?: true
    viewCount?: true
    averageRating?: true
    reviewCount?: true
    salesCount?: true
    createdAt?: true
    updatedAt?: true
    createdBy?: true
    updatedBy?: true
    _all?: true
  }

  export type ProductAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Product to aggregate.
     */
    where?: ProductWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Products to fetch.
     */
    orderBy?: ProductOrderByWithRelationInput | ProductOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: ProductWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Products from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Products.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Products
    **/
    _count?: true | ProductCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: ProductAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: ProductSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ProductMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ProductMaxAggregateInputType
  }

  export type GetProductAggregateType<T extends ProductAggregateArgs> = {
        [P in keyof T & keyof AggregateProduct]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateProduct[P]>
      : GetScalarType<T[P], AggregateProduct[P]>
  }




  export type ProductGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ProductWhereInput
    orderBy?: ProductOrderByWithAggregationInput | ProductOrderByWithAggregationInput[]
    by: ProductScalarFieldEnum[] | ProductScalarFieldEnum
    having?: ProductScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ProductCountAggregateInputType | true
    _avg?: ProductAvgAggregateInputType
    _sum?: ProductSumAggregateInputType
    _min?: ProductMinAggregateInputType
    _max?: ProductMaxAggregateInputType
  }

  export type ProductGroupByOutputType = {
    id: string
    storeId: string
    categoryId: string
    name: string
    slug: string
    description: string | null
    shortDescription: string | null
    strainName: string | null
    strainType: $Enums.StrainType | null
    brand: string | null
    manufacturer: string | null
    thcPercentage: Decimal | null
    cbdPercentage: Decimal | null
    thcaPercentage: Decimal | null
    cbdaPercentage: Decimal | null
    totalCannabinoids: Decimal | null
    basePrice: Decimal
    salePrice: Decimal | null
    costPrice: Decimal | null
    weightGrams: Decimal | null
    sku: string
    barcode: string | null
    stockQuantity: number
    reservedQuantity: number
    lowStockThreshold: number
    metrcId: string | null
    batchNumber: string | null
    harvestDate: Date | null
    packageDate: Date | null
    expirationDate: Date | null
    labTested: boolean
    labTestResults: JsonValue | null
    testedDate: Date | null
    testingLab: string | null
    featuredImageUrl: string | null
    galleryImages: JsonValue | null
    status: $Enums.ProductStatus
    isFeatured: boolean
    isMedicalOnly: boolean
    ageRestriction: number
    metaTitle: string | null
    metaDescription: string | null
    tags: JsonValue | null
    searchKeywords: string | null
    viewCount: number
    averageRating: Decimal
    reviewCount: number
    salesCount: number
    createdAt: Date
    updatedAt: Date
    createdBy: string | null
    updatedBy: string | null
    _count: ProductCountAggregateOutputType | null
    _avg: ProductAvgAggregateOutputType | null
    _sum: ProductSumAggregateOutputType | null
    _min: ProductMinAggregateOutputType | null
    _max: ProductMaxAggregateOutputType | null
  }

  type GetProductGroupByPayload<T extends ProductGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<ProductGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ProductGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ProductGroupByOutputType[P]>
            : GetScalarType<T[P], ProductGroupByOutputType[P]>
        }
      >
    >


  export type ProductSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    storeId?: boolean
    categoryId?: boolean
    name?: boolean
    slug?: boolean
    description?: boolean
    shortDescription?: boolean
    strainName?: boolean
    strainType?: boolean
    brand?: boolean
    manufacturer?: boolean
    thcPercentage?: boolean
    cbdPercentage?: boolean
    thcaPercentage?: boolean
    cbdaPercentage?: boolean
    totalCannabinoids?: boolean
    basePrice?: boolean
    salePrice?: boolean
    costPrice?: boolean
    weightGrams?: boolean
    sku?: boolean
    barcode?: boolean
    stockQuantity?: boolean
    reservedQuantity?: boolean
    lowStockThreshold?: boolean
    metrcId?: boolean
    batchNumber?: boolean
    harvestDate?: boolean
    packageDate?: boolean
    expirationDate?: boolean
    labTested?: boolean
    labTestResults?: boolean
    testedDate?: boolean
    testingLab?: boolean
    featuredImageUrl?: boolean
    galleryImages?: boolean
    status?: boolean
    isFeatured?: boolean
    isMedicalOnly?: boolean
    ageRestriction?: boolean
    metaTitle?: boolean
    metaDescription?: boolean
    tags?: boolean
    searchKeywords?: boolean
    viewCount?: boolean
    averageRating?: boolean
    reviewCount?: boolean
    salesCount?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    createdBy?: boolean
    updatedBy?: boolean
    store?: boolean | StoreDefaultArgs<ExtArgs>
    category?: boolean | ProductCategoryDefaultArgs<ExtArgs>
    reviews?: boolean | Product$reviewsArgs<ExtArgs>
    orderItems?: boolean | Product$orderItemsArgs<ExtArgs>
    _count?: boolean | ProductCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["product"]>

  export type ProductSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    storeId?: boolean
    categoryId?: boolean
    name?: boolean
    slug?: boolean
    description?: boolean
    shortDescription?: boolean
    strainName?: boolean
    strainType?: boolean
    brand?: boolean
    manufacturer?: boolean
    thcPercentage?: boolean
    cbdPercentage?: boolean
    thcaPercentage?: boolean
    cbdaPercentage?: boolean
    totalCannabinoids?: boolean
    basePrice?: boolean
    salePrice?: boolean
    costPrice?: boolean
    weightGrams?: boolean
    sku?: boolean
    barcode?: boolean
    stockQuantity?: boolean
    reservedQuantity?: boolean
    lowStockThreshold?: boolean
    metrcId?: boolean
    batchNumber?: boolean
    harvestDate?: boolean
    packageDate?: boolean
    expirationDate?: boolean
    labTested?: boolean
    labTestResults?: boolean
    testedDate?: boolean
    testingLab?: boolean
    featuredImageUrl?: boolean
    galleryImages?: boolean
    status?: boolean
    isFeatured?: boolean
    isMedicalOnly?: boolean
    ageRestriction?: boolean
    metaTitle?: boolean
    metaDescription?: boolean
    tags?: boolean
    searchKeywords?: boolean
    viewCount?: boolean
    averageRating?: boolean
    reviewCount?: boolean
    salesCount?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    createdBy?: boolean
    updatedBy?: boolean
    store?: boolean | StoreDefaultArgs<ExtArgs>
    category?: boolean | ProductCategoryDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["product"]>

  export type ProductSelectScalar = {
    id?: boolean
    storeId?: boolean
    categoryId?: boolean
    name?: boolean
    slug?: boolean
    description?: boolean
    shortDescription?: boolean
    strainName?: boolean
    strainType?: boolean
    brand?: boolean
    manufacturer?: boolean
    thcPercentage?: boolean
    cbdPercentage?: boolean
    thcaPercentage?: boolean
    cbdaPercentage?: boolean
    totalCannabinoids?: boolean
    basePrice?: boolean
    salePrice?: boolean
    costPrice?: boolean
    weightGrams?: boolean
    sku?: boolean
    barcode?: boolean
    stockQuantity?: boolean
    reservedQuantity?: boolean
    lowStockThreshold?: boolean
    metrcId?: boolean
    batchNumber?: boolean
    harvestDate?: boolean
    packageDate?: boolean
    expirationDate?: boolean
    labTested?: boolean
    labTestResults?: boolean
    testedDate?: boolean
    testingLab?: boolean
    featuredImageUrl?: boolean
    galleryImages?: boolean
    status?: boolean
    isFeatured?: boolean
    isMedicalOnly?: boolean
    ageRestriction?: boolean
    metaTitle?: boolean
    metaDescription?: boolean
    tags?: boolean
    searchKeywords?: boolean
    viewCount?: boolean
    averageRating?: boolean
    reviewCount?: boolean
    salesCount?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    createdBy?: boolean
    updatedBy?: boolean
  }

  export type ProductInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    store?: boolean | StoreDefaultArgs<ExtArgs>
    category?: boolean | ProductCategoryDefaultArgs<ExtArgs>
    reviews?: boolean | Product$reviewsArgs<ExtArgs>
    orderItems?: boolean | Product$orderItemsArgs<ExtArgs>
    _count?: boolean | ProductCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type ProductIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    store?: boolean | StoreDefaultArgs<ExtArgs>
    category?: boolean | ProductCategoryDefaultArgs<ExtArgs>
  }

  export type $ProductPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Product"
    objects: {
      store: Prisma.$StorePayload<ExtArgs>
      category: Prisma.$ProductCategoryPayload<ExtArgs>
      reviews: Prisma.$ReviewPayload<ExtArgs>[]
      orderItems: Prisma.$OrderItemPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      storeId: string
      categoryId: string
      name: string
      slug: string
      description: string | null
      shortDescription: string | null
      strainName: string | null
      strainType: $Enums.StrainType | null
      brand: string | null
      manufacturer: string | null
      thcPercentage: Prisma.Decimal | null
      cbdPercentage: Prisma.Decimal | null
      thcaPercentage: Prisma.Decimal | null
      cbdaPercentage: Prisma.Decimal | null
      totalCannabinoids: Prisma.Decimal | null
      basePrice: Prisma.Decimal
      salePrice: Prisma.Decimal | null
      costPrice: Prisma.Decimal | null
      weightGrams: Prisma.Decimal | null
      sku: string
      barcode: string | null
      stockQuantity: number
      reservedQuantity: number
      lowStockThreshold: number
      metrcId: string | null
      batchNumber: string | null
      harvestDate: Date | null
      packageDate: Date | null
      expirationDate: Date | null
      labTested: boolean
      labTestResults: Prisma.JsonValue | null
      testedDate: Date | null
      testingLab: string | null
      featuredImageUrl: string | null
      galleryImages: Prisma.JsonValue | null
      status: $Enums.ProductStatus
      isFeatured: boolean
      isMedicalOnly: boolean
      ageRestriction: number
      metaTitle: string | null
      metaDescription: string | null
      tags: Prisma.JsonValue | null
      searchKeywords: string | null
      viewCount: number
      averageRating: Prisma.Decimal
      reviewCount: number
      salesCount: number
      createdAt: Date
      updatedAt: Date
      createdBy: string | null
      updatedBy: string | null
    }, ExtArgs["result"]["product"]>
    composites: {}
  }

  type ProductGetPayload<S extends boolean | null | undefined | ProductDefaultArgs> = $Result.GetResult<Prisma.$ProductPayload, S>

  type ProductCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<ProductFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: ProductCountAggregateInputType | true
    }

  export interface ProductDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Product'], meta: { name: 'Product' } }
    /**
     * Find zero or one Product that matches the filter.
     * @param {ProductFindUniqueArgs} args - Arguments to find a Product
     * @example
     * // Get one Product
     * const product = await prisma.product.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends ProductFindUniqueArgs>(args: SelectSubset<T, ProductFindUniqueArgs<ExtArgs>>): Prisma__ProductClient<$Result.GetResult<Prisma.$ProductPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one Product that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {ProductFindUniqueOrThrowArgs} args - Arguments to find a Product
     * @example
     * // Get one Product
     * const product = await prisma.product.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends ProductFindUniqueOrThrowArgs>(args: SelectSubset<T, ProductFindUniqueOrThrowArgs<ExtArgs>>): Prisma__ProductClient<$Result.GetResult<Prisma.$ProductPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first Product that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProductFindFirstArgs} args - Arguments to find a Product
     * @example
     * // Get one Product
     * const product = await prisma.product.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends ProductFindFirstArgs>(args?: SelectSubset<T, ProductFindFirstArgs<ExtArgs>>): Prisma__ProductClient<$Result.GetResult<Prisma.$ProductPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first Product that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProductFindFirstOrThrowArgs} args - Arguments to find a Product
     * @example
     * // Get one Product
     * const product = await prisma.product.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends ProductFindFirstOrThrowArgs>(args?: SelectSubset<T, ProductFindFirstOrThrowArgs<ExtArgs>>): Prisma__ProductClient<$Result.GetResult<Prisma.$ProductPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more Products that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProductFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Products
     * const products = await prisma.product.findMany()
     * 
     * // Get first 10 Products
     * const products = await prisma.product.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const productWithIdOnly = await prisma.product.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends ProductFindManyArgs>(args?: SelectSubset<T, ProductFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ProductPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a Product.
     * @param {ProductCreateArgs} args - Arguments to create a Product.
     * @example
     * // Create one Product
     * const Product = await prisma.product.create({
     *   data: {
     *     // ... data to create a Product
     *   }
     * })
     * 
     */
    create<T extends ProductCreateArgs>(args: SelectSubset<T, ProductCreateArgs<ExtArgs>>): Prisma__ProductClient<$Result.GetResult<Prisma.$ProductPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many Products.
     * @param {ProductCreateManyArgs} args - Arguments to create many Products.
     * @example
     * // Create many Products
     * const product = await prisma.product.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends ProductCreateManyArgs>(args?: SelectSubset<T, ProductCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Products and returns the data saved in the database.
     * @param {ProductCreateManyAndReturnArgs} args - Arguments to create many Products.
     * @example
     * // Create many Products
     * const product = await prisma.product.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Products and only return the `id`
     * const productWithIdOnly = await prisma.product.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends ProductCreateManyAndReturnArgs>(args?: SelectSubset<T, ProductCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ProductPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a Product.
     * @param {ProductDeleteArgs} args - Arguments to delete one Product.
     * @example
     * // Delete one Product
     * const Product = await prisma.product.delete({
     *   where: {
     *     // ... filter to delete one Product
     *   }
     * })
     * 
     */
    delete<T extends ProductDeleteArgs>(args: SelectSubset<T, ProductDeleteArgs<ExtArgs>>): Prisma__ProductClient<$Result.GetResult<Prisma.$ProductPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one Product.
     * @param {ProductUpdateArgs} args - Arguments to update one Product.
     * @example
     * // Update one Product
     * const product = await prisma.product.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends ProductUpdateArgs>(args: SelectSubset<T, ProductUpdateArgs<ExtArgs>>): Prisma__ProductClient<$Result.GetResult<Prisma.$ProductPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more Products.
     * @param {ProductDeleteManyArgs} args - Arguments to filter Products to delete.
     * @example
     * // Delete a few Products
     * const { count } = await prisma.product.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends ProductDeleteManyArgs>(args?: SelectSubset<T, ProductDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Products.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProductUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Products
     * const product = await prisma.product.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends ProductUpdateManyArgs>(args: SelectSubset<T, ProductUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Product.
     * @param {ProductUpsertArgs} args - Arguments to update or create a Product.
     * @example
     * // Update or create a Product
     * const product = await prisma.product.upsert({
     *   create: {
     *     // ... data to create a Product
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Product we want to update
     *   }
     * })
     */
    upsert<T extends ProductUpsertArgs>(args: SelectSubset<T, ProductUpsertArgs<ExtArgs>>): Prisma__ProductClient<$Result.GetResult<Prisma.$ProductPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of Products.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProductCountArgs} args - Arguments to filter Products to count.
     * @example
     * // Count the number of Products
     * const count = await prisma.product.count({
     *   where: {
     *     // ... the filter for the Products we want to count
     *   }
     * })
    **/
    count<T extends ProductCountArgs>(
      args?: Subset<T, ProductCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ProductCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Product.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProductAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ProductAggregateArgs>(args: Subset<T, ProductAggregateArgs>): Prisma.PrismaPromise<GetProductAggregateType<T>>

    /**
     * Group by Product.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProductGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends ProductGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: ProductGroupByArgs['orderBy'] }
        : { orderBy?: ProductGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, ProductGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetProductGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Product model
   */
  readonly fields: ProductFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Product.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__ProductClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    store<T extends StoreDefaultArgs<ExtArgs> = {}>(args?: Subset<T, StoreDefaultArgs<ExtArgs>>): Prisma__StoreClient<$Result.GetResult<Prisma.$StorePayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    category<T extends ProductCategoryDefaultArgs<ExtArgs> = {}>(args?: Subset<T, ProductCategoryDefaultArgs<ExtArgs>>): Prisma__ProductCategoryClient<$Result.GetResult<Prisma.$ProductCategoryPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    reviews<T extends Product$reviewsArgs<ExtArgs> = {}>(args?: Subset<T, Product$reviewsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ReviewPayload<ExtArgs>, T, "findMany"> | Null>
    orderItems<T extends Product$orderItemsArgs<ExtArgs> = {}>(args?: Subset<T, Product$orderItemsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$OrderItemPayload<ExtArgs>, T, "findMany"> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Product model
   */ 
  interface ProductFieldRefs {
    readonly id: FieldRef<"Product", 'String'>
    readonly storeId: FieldRef<"Product", 'String'>
    readonly categoryId: FieldRef<"Product", 'String'>
    readonly name: FieldRef<"Product", 'String'>
    readonly slug: FieldRef<"Product", 'String'>
    readonly description: FieldRef<"Product", 'String'>
    readonly shortDescription: FieldRef<"Product", 'String'>
    readonly strainName: FieldRef<"Product", 'String'>
    readonly strainType: FieldRef<"Product", 'StrainType'>
    readonly brand: FieldRef<"Product", 'String'>
    readonly manufacturer: FieldRef<"Product", 'String'>
    readonly thcPercentage: FieldRef<"Product", 'Decimal'>
    readonly cbdPercentage: FieldRef<"Product", 'Decimal'>
    readonly thcaPercentage: FieldRef<"Product", 'Decimal'>
    readonly cbdaPercentage: FieldRef<"Product", 'Decimal'>
    readonly totalCannabinoids: FieldRef<"Product", 'Decimal'>
    readonly basePrice: FieldRef<"Product", 'Decimal'>
    readonly salePrice: FieldRef<"Product", 'Decimal'>
    readonly costPrice: FieldRef<"Product", 'Decimal'>
    readonly weightGrams: FieldRef<"Product", 'Decimal'>
    readonly sku: FieldRef<"Product", 'String'>
    readonly barcode: FieldRef<"Product", 'String'>
    readonly stockQuantity: FieldRef<"Product", 'Int'>
    readonly reservedQuantity: FieldRef<"Product", 'Int'>
    readonly lowStockThreshold: FieldRef<"Product", 'Int'>
    readonly metrcId: FieldRef<"Product", 'String'>
    readonly batchNumber: FieldRef<"Product", 'String'>
    readonly harvestDate: FieldRef<"Product", 'DateTime'>
    readonly packageDate: FieldRef<"Product", 'DateTime'>
    readonly expirationDate: FieldRef<"Product", 'DateTime'>
    readonly labTested: FieldRef<"Product", 'Boolean'>
    readonly labTestResults: FieldRef<"Product", 'Json'>
    readonly testedDate: FieldRef<"Product", 'DateTime'>
    readonly testingLab: FieldRef<"Product", 'String'>
    readonly featuredImageUrl: FieldRef<"Product", 'String'>
    readonly galleryImages: FieldRef<"Product", 'Json'>
    readonly status: FieldRef<"Product", 'ProductStatus'>
    readonly isFeatured: FieldRef<"Product", 'Boolean'>
    readonly isMedicalOnly: FieldRef<"Product", 'Boolean'>
    readonly ageRestriction: FieldRef<"Product", 'Int'>
    readonly metaTitle: FieldRef<"Product", 'String'>
    readonly metaDescription: FieldRef<"Product", 'String'>
    readonly tags: FieldRef<"Product", 'Json'>
    readonly searchKeywords: FieldRef<"Product", 'String'>
    readonly viewCount: FieldRef<"Product", 'Int'>
    readonly averageRating: FieldRef<"Product", 'Decimal'>
    readonly reviewCount: FieldRef<"Product", 'Int'>
    readonly salesCount: FieldRef<"Product", 'Int'>
    readonly createdAt: FieldRef<"Product", 'DateTime'>
    readonly updatedAt: FieldRef<"Product", 'DateTime'>
    readonly createdBy: FieldRef<"Product", 'String'>
    readonly updatedBy: FieldRef<"Product", 'String'>
  }
    

  // Custom InputTypes
  /**
   * Product findUnique
   */
  export type ProductFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Product
     */
    select?: ProductSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductInclude<ExtArgs> | null
    /**
     * Filter, which Product to fetch.
     */
    where: ProductWhereUniqueInput
  }

  /**
   * Product findUniqueOrThrow
   */
  export type ProductFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Product
     */
    select?: ProductSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductInclude<ExtArgs> | null
    /**
     * Filter, which Product to fetch.
     */
    where: ProductWhereUniqueInput
  }

  /**
   * Product findFirst
   */
  export type ProductFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Product
     */
    select?: ProductSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductInclude<ExtArgs> | null
    /**
     * Filter, which Product to fetch.
     */
    where?: ProductWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Products to fetch.
     */
    orderBy?: ProductOrderByWithRelationInput | ProductOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Products.
     */
    cursor?: ProductWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Products from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Products.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Products.
     */
    distinct?: ProductScalarFieldEnum | ProductScalarFieldEnum[]
  }

  /**
   * Product findFirstOrThrow
   */
  export type ProductFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Product
     */
    select?: ProductSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductInclude<ExtArgs> | null
    /**
     * Filter, which Product to fetch.
     */
    where?: ProductWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Products to fetch.
     */
    orderBy?: ProductOrderByWithRelationInput | ProductOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Products.
     */
    cursor?: ProductWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Products from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Products.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Products.
     */
    distinct?: ProductScalarFieldEnum | ProductScalarFieldEnum[]
  }

  /**
   * Product findMany
   */
  export type ProductFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Product
     */
    select?: ProductSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductInclude<ExtArgs> | null
    /**
     * Filter, which Products to fetch.
     */
    where?: ProductWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Products to fetch.
     */
    orderBy?: ProductOrderByWithRelationInput | ProductOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Products.
     */
    cursor?: ProductWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Products from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Products.
     */
    skip?: number
    distinct?: ProductScalarFieldEnum | ProductScalarFieldEnum[]
  }

  /**
   * Product create
   */
  export type ProductCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Product
     */
    select?: ProductSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductInclude<ExtArgs> | null
    /**
     * The data needed to create a Product.
     */
    data: XOR<ProductCreateInput, ProductUncheckedCreateInput>
  }

  /**
   * Product createMany
   */
  export type ProductCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Products.
     */
    data: ProductCreateManyInput | ProductCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Product createManyAndReturn
   */
  export type ProductCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Product
     */
    select?: ProductSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many Products.
     */
    data: ProductCreateManyInput | ProductCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Product update
   */
  export type ProductUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Product
     */
    select?: ProductSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductInclude<ExtArgs> | null
    /**
     * The data needed to update a Product.
     */
    data: XOR<ProductUpdateInput, ProductUncheckedUpdateInput>
    /**
     * Choose, which Product to update.
     */
    where: ProductWhereUniqueInput
  }

  /**
   * Product updateMany
   */
  export type ProductUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Products.
     */
    data: XOR<ProductUpdateManyMutationInput, ProductUncheckedUpdateManyInput>
    /**
     * Filter which Products to update
     */
    where?: ProductWhereInput
  }

  /**
   * Product upsert
   */
  export type ProductUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Product
     */
    select?: ProductSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductInclude<ExtArgs> | null
    /**
     * The filter to search for the Product to update in case it exists.
     */
    where: ProductWhereUniqueInput
    /**
     * In case the Product found by the `where` argument doesn't exist, create a new Product with this data.
     */
    create: XOR<ProductCreateInput, ProductUncheckedCreateInput>
    /**
     * In case the Product was found with the provided `where` argument, update it with this data.
     */
    update: XOR<ProductUpdateInput, ProductUncheckedUpdateInput>
  }

  /**
   * Product delete
   */
  export type ProductDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Product
     */
    select?: ProductSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductInclude<ExtArgs> | null
    /**
     * Filter which Product to delete.
     */
    where: ProductWhereUniqueInput
  }

  /**
   * Product deleteMany
   */
  export type ProductDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Products to delete
     */
    where?: ProductWhereInput
  }

  /**
   * Product.reviews
   */
  export type Product$reviewsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Review
     */
    select?: ReviewSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReviewInclude<ExtArgs> | null
    where?: ReviewWhereInput
    orderBy?: ReviewOrderByWithRelationInput | ReviewOrderByWithRelationInput[]
    cursor?: ReviewWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ReviewScalarFieldEnum | ReviewScalarFieldEnum[]
  }

  /**
   * Product.orderItems
   */
  export type Product$orderItemsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OrderItem
     */
    select?: OrderItemSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrderItemInclude<ExtArgs> | null
    where?: OrderItemWhereInput
    orderBy?: OrderItemOrderByWithRelationInput | OrderItemOrderByWithRelationInput[]
    cursor?: OrderItemWhereUniqueInput
    take?: number
    skip?: number
    distinct?: OrderItemScalarFieldEnum | OrderItemScalarFieldEnum[]
  }

  /**
   * Product without action
   */
  export type ProductDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Product
     */
    select?: ProductSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductInclude<ExtArgs> | null
  }


  /**
   * Model Order
   */

  export type AggregateOrder = {
    _count: OrderCountAggregateOutputType | null
    _avg: OrderAvgAggregateOutputType | null
    _sum: OrderSumAggregateOutputType | null
    _min: OrderMinAggregateOutputType | null
    _max: OrderMaxAggregateOutputType | null
  }

  export type OrderAvgAggregateOutputType = {
    subtotal: Decimal | null
    taxAmount: Decimal | null
    deliveryFee: Decimal | null
    serviceFee: Decimal | null
    discountAmount: Decimal | null
    tipAmount: Decimal | null
    totalAmount: Decimal | null
    refundAmount: Decimal | null
  }

  export type OrderSumAggregateOutputType = {
    subtotal: Decimal | null
    taxAmount: Decimal | null
    deliveryFee: Decimal | null
    serviceFee: Decimal | null
    discountAmount: Decimal | null
    tipAmount: Decimal | null
    totalAmount: Decimal | null
    refundAmount: Decimal | null
  }

  export type OrderMinAggregateOutputType = {
    id: string | null
    orderNumber: string | null
    userId: string | null
    storeId: string | null
    orderType: $Enums.OrderType | null
    fulfillmentStatus: $Enums.OrderStatus | null
    deliveryInstructions: string | null
    deliveryTimeRequested: Date | null
    deliveryTimeActual: Date | null
    deliveryPersonId: string | null
    subtotal: Decimal | null
    taxAmount: Decimal | null
    deliveryFee: Decimal | null
    serviceFee: Decimal | null
    discountAmount: Decimal | null
    tipAmount: Decimal | null
    totalAmount: Decimal | null
    paymentStatus: $Enums.PaymentStatus | null
    paymentMethod: $Enums.PaymentMethod | null
    paymentProvider: string | null
    paymentIntentId: string | null
    ageVerifiedAtDelivery: Date | null
    idCheckedBy: string | null
    customerNotes: string | null
    internalNotes: string | null
    metrcTransferManifest: string | null
    complianceCheckPassed: boolean | null
    complianceCheckedAt: Date | null
    complianceCheckedBy: string | null
    cancelledAt: Date | null
    cancelledBy: string | null
    cancellationReason: string | null
    refundAmount: Decimal | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type OrderMaxAggregateOutputType = {
    id: string | null
    orderNumber: string | null
    userId: string | null
    storeId: string | null
    orderType: $Enums.OrderType | null
    fulfillmentStatus: $Enums.OrderStatus | null
    deliveryInstructions: string | null
    deliveryTimeRequested: Date | null
    deliveryTimeActual: Date | null
    deliveryPersonId: string | null
    subtotal: Decimal | null
    taxAmount: Decimal | null
    deliveryFee: Decimal | null
    serviceFee: Decimal | null
    discountAmount: Decimal | null
    tipAmount: Decimal | null
    totalAmount: Decimal | null
    paymentStatus: $Enums.PaymentStatus | null
    paymentMethod: $Enums.PaymentMethod | null
    paymentProvider: string | null
    paymentIntentId: string | null
    ageVerifiedAtDelivery: Date | null
    idCheckedBy: string | null
    customerNotes: string | null
    internalNotes: string | null
    metrcTransferManifest: string | null
    complianceCheckPassed: boolean | null
    complianceCheckedAt: Date | null
    complianceCheckedBy: string | null
    cancelledAt: Date | null
    cancelledBy: string | null
    cancellationReason: string | null
    refundAmount: Decimal | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type OrderCountAggregateOutputType = {
    id: number
    orderNumber: number
    userId: number
    storeId: number
    orderType: number
    fulfillmentStatus: number
    deliveryAddress: number
    deliveryInstructions: number
    deliveryTimeRequested: number
    deliveryTimeActual: number
    deliveryPersonId: number
    subtotal: number
    taxAmount: number
    deliveryFee: number
    serviceFee: number
    discountAmount: number
    tipAmount: number
    totalAmount: number
    paymentStatus: number
    paymentMethod: number
    paymentProvider: number
    paymentIntentId: number
    ageVerifiedAtDelivery: number
    idCheckedBy: number
    customerNotes: number
    internalNotes: number
    metrcTransferManifest: number
    complianceCheckPassed: number
    complianceCheckedAt: number
    complianceCheckedBy: number
    cancelledAt: number
    cancelledBy: number
    cancellationReason: number
    refundAmount: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type OrderAvgAggregateInputType = {
    subtotal?: true
    taxAmount?: true
    deliveryFee?: true
    serviceFee?: true
    discountAmount?: true
    tipAmount?: true
    totalAmount?: true
    refundAmount?: true
  }

  export type OrderSumAggregateInputType = {
    subtotal?: true
    taxAmount?: true
    deliveryFee?: true
    serviceFee?: true
    discountAmount?: true
    tipAmount?: true
    totalAmount?: true
    refundAmount?: true
  }

  export type OrderMinAggregateInputType = {
    id?: true
    orderNumber?: true
    userId?: true
    storeId?: true
    orderType?: true
    fulfillmentStatus?: true
    deliveryInstructions?: true
    deliveryTimeRequested?: true
    deliveryTimeActual?: true
    deliveryPersonId?: true
    subtotal?: true
    taxAmount?: true
    deliveryFee?: true
    serviceFee?: true
    discountAmount?: true
    tipAmount?: true
    totalAmount?: true
    paymentStatus?: true
    paymentMethod?: true
    paymentProvider?: true
    paymentIntentId?: true
    ageVerifiedAtDelivery?: true
    idCheckedBy?: true
    customerNotes?: true
    internalNotes?: true
    metrcTransferManifest?: true
    complianceCheckPassed?: true
    complianceCheckedAt?: true
    complianceCheckedBy?: true
    cancelledAt?: true
    cancelledBy?: true
    cancellationReason?: true
    refundAmount?: true
    createdAt?: true
    updatedAt?: true
  }

  export type OrderMaxAggregateInputType = {
    id?: true
    orderNumber?: true
    userId?: true
    storeId?: true
    orderType?: true
    fulfillmentStatus?: true
    deliveryInstructions?: true
    deliveryTimeRequested?: true
    deliveryTimeActual?: true
    deliveryPersonId?: true
    subtotal?: true
    taxAmount?: true
    deliveryFee?: true
    serviceFee?: true
    discountAmount?: true
    tipAmount?: true
    totalAmount?: true
    paymentStatus?: true
    paymentMethod?: true
    paymentProvider?: true
    paymentIntentId?: true
    ageVerifiedAtDelivery?: true
    idCheckedBy?: true
    customerNotes?: true
    internalNotes?: true
    metrcTransferManifest?: true
    complianceCheckPassed?: true
    complianceCheckedAt?: true
    complianceCheckedBy?: true
    cancelledAt?: true
    cancelledBy?: true
    cancellationReason?: true
    refundAmount?: true
    createdAt?: true
    updatedAt?: true
  }

  export type OrderCountAggregateInputType = {
    id?: true
    orderNumber?: true
    userId?: true
    storeId?: true
    orderType?: true
    fulfillmentStatus?: true
    deliveryAddress?: true
    deliveryInstructions?: true
    deliveryTimeRequested?: true
    deliveryTimeActual?: true
    deliveryPersonId?: true
    subtotal?: true
    taxAmount?: true
    deliveryFee?: true
    serviceFee?: true
    discountAmount?: true
    tipAmount?: true
    totalAmount?: true
    paymentStatus?: true
    paymentMethod?: true
    paymentProvider?: true
    paymentIntentId?: true
    ageVerifiedAtDelivery?: true
    idCheckedBy?: true
    customerNotes?: true
    internalNotes?: true
    metrcTransferManifest?: true
    complianceCheckPassed?: true
    complianceCheckedAt?: true
    complianceCheckedBy?: true
    cancelledAt?: true
    cancelledBy?: true
    cancellationReason?: true
    refundAmount?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type OrderAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Order to aggregate.
     */
    where?: OrderWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Orders to fetch.
     */
    orderBy?: OrderOrderByWithRelationInput | OrderOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: OrderWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Orders from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Orders.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Orders
    **/
    _count?: true | OrderCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: OrderAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: OrderSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: OrderMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: OrderMaxAggregateInputType
  }

  export type GetOrderAggregateType<T extends OrderAggregateArgs> = {
        [P in keyof T & keyof AggregateOrder]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateOrder[P]>
      : GetScalarType<T[P], AggregateOrder[P]>
  }




  export type OrderGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: OrderWhereInput
    orderBy?: OrderOrderByWithAggregationInput | OrderOrderByWithAggregationInput[]
    by: OrderScalarFieldEnum[] | OrderScalarFieldEnum
    having?: OrderScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: OrderCountAggregateInputType | true
    _avg?: OrderAvgAggregateInputType
    _sum?: OrderSumAggregateInputType
    _min?: OrderMinAggregateInputType
    _max?: OrderMaxAggregateInputType
  }

  export type OrderGroupByOutputType = {
    id: string
    orderNumber: string
    userId: string
    storeId: string
    orderType: $Enums.OrderType
    fulfillmentStatus: $Enums.OrderStatus
    deliveryAddress: JsonValue | null
    deliveryInstructions: string | null
    deliveryTimeRequested: Date | null
    deliveryTimeActual: Date | null
    deliveryPersonId: string | null
    subtotal: Decimal
    taxAmount: Decimal
    deliveryFee: Decimal
    serviceFee: Decimal
    discountAmount: Decimal
    tipAmount: Decimal
    totalAmount: Decimal
    paymentStatus: $Enums.PaymentStatus
    paymentMethod: $Enums.PaymentMethod
    paymentProvider: string | null
    paymentIntentId: string | null
    ageVerifiedAtDelivery: Date | null
    idCheckedBy: string | null
    customerNotes: string | null
    internalNotes: string | null
    metrcTransferManifest: string | null
    complianceCheckPassed: boolean
    complianceCheckedAt: Date | null
    complianceCheckedBy: string | null
    cancelledAt: Date | null
    cancelledBy: string | null
    cancellationReason: string | null
    refundAmount: Decimal
    createdAt: Date
    updatedAt: Date
    _count: OrderCountAggregateOutputType | null
    _avg: OrderAvgAggregateOutputType | null
    _sum: OrderSumAggregateOutputType | null
    _min: OrderMinAggregateOutputType | null
    _max: OrderMaxAggregateOutputType | null
  }

  type GetOrderGroupByPayload<T extends OrderGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<OrderGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof OrderGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], OrderGroupByOutputType[P]>
            : GetScalarType<T[P], OrderGroupByOutputType[P]>
        }
      >
    >


  export type OrderSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    orderNumber?: boolean
    userId?: boolean
    storeId?: boolean
    orderType?: boolean
    fulfillmentStatus?: boolean
    deliveryAddress?: boolean
    deliveryInstructions?: boolean
    deliveryTimeRequested?: boolean
    deliveryTimeActual?: boolean
    deliveryPersonId?: boolean
    subtotal?: boolean
    taxAmount?: boolean
    deliveryFee?: boolean
    serviceFee?: boolean
    discountAmount?: boolean
    tipAmount?: boolean
    totalAmount?: boolean
    paymentStatus?: boolean
    paymentMethod?: boolean
    paymentProvider?: boolean
    paymentIntentId?: boolean
    ageVerifiedAtDelivery?: boolean
    idCheckedBy?: boolean
    customerNotes?: boolean
    internalNotes?: boolean
    metrcTransferManifest?: boolean
    complianceCheckPassed?: boolean
    complianceCheckedAt?: boolean
    complianceCheckedBy?: boolean
    cancelledAt?: boolean
    cancelledBy?: boolean
    cancellationReason?: boolean
    refundAmount?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    user?: boolean | UserDefaultArgs<ExtArgs>
    store?: boolean | StoreDefaultArgs<ExtArgs>
    items?: boolean | Order$itemsArgs<ExtArgs>
    reviews?: boolean | Order$reviewsArgs<ExtArgs>
    _count?: boolean | OrderCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["order"]>

  export type OrderSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    orderNumber?: boolean
    userId?: boolean
    storeId?: boolean
    orderType?: boolean
    fulfillmentStatus?: boolean
    deliveryAddress?: boolean
    deliveryInstructions?: boolean
    deliveryTimeRequested?: boolean
    deliveryTimeActual?: boolean
    deliveryPersonId?: boolean
    subtotal?: boolean
    taxAmount?: boolean
    deliveryFee?: boolean
    serviceFee?: boolean
    discountAmount?: boolean
    tipAmount?: boolean
    totalAmount?: boolean
    paymentStatus?: boolean
    paymentMethod?: boolean
    paymentProvider?: boolean
    paymentIntentId?: boolean
    ageVerifiedAtDelivery?: boolean
    idCheckedBy?: boolean
    customerNotes?: boolean
    internalNotes?: boolean
    metrcTransferManifest?: boolean
    complianceCheckPassed?: boolean
    complianceCheckedAt?: boolean
    complianceCheckedBy?: boolean
    cancelledAt?: boolean
    cancelledBy?: boolean
    cancellationReason?: boolean
    refundAmount?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    user?: boolean | UserDefaultArgs<ExtArgs>
    store?: boolean | StoreDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["order"]>

  export type OrderSelectScalar = {
    id?: boolean
    orderNumber?: boolean
    userId?: boolean
    storeId?: boolean
    orderType?: boolean
    fulfillmentStatus?: boolean
    deliveryAddress?: boolean
    deliveryInstructions?: boolean
    deliveryTimeRequested?: boolean
    deliveryTimeActual?: boolean
    deliveryPersonId?: boolean
    subtotal?: boolean
    taxAmount?: boolean
    deliveryFee?: boolean
    serviceFee?: boolean
    discountAmount?: boolean
    tipAmount?: boolean
    totalAmount?: boolean
    paymentStatus?: boolean
    paymentMethod?: boolean
    paymentProvider?: boolean
    paymentIntentId?: boolean
    ageVerifiedAtDelivery?: boolean
    idCheckedBy?: boolean
    customerNotes?: boolean
    internalNotes?: boolean
    metrcTransferManifest?: boolean
    complianceCheckPassed?: boolean
    complianceCheckedAt?: boolean
    complianceCheckedBy?: boolean
    cancelledAt?: boolean
    cancelledBy?: boolean
    cancellationReason?: boolean
    refundAmount?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type OrderInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | UserDefaultArgs<ExtArgs>
    store?: boolean | StoreDefaultArgs<ExtArgs>
    items?: boolean | Order$itemsArgs<ExtArgs>
    reviews?: boolean | Order$reviewsArgs<ExtArgs>
    _count?: boolean | OrderCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type OrderIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | UserDefaultArgs<ExtArgs>
    store?: boolean | StoreDefaultArgs<ExtArgs>
  }

  export type $OrderPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Order"
    objects: {
      user: Prisma.$UserPayload<ExtArgs>
      store: Prisma.$StorePayload<ExtArgs>
      items: Prisma.$OrderItemPayload<ExtArgs>[]
      reviews: Prisma.$ReviewPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      orderNumber: string
      userId: string
      storeId: string
      orderType: $Enums.OrderType
      fulfillmentStatus: $Enums.OrderStatus
      deliveryAddress: Prisma.JsonValue | null
      deliveryInstructions: string | null
      deliveryTimeRequested: Date | null
      deliveryTimeActual: Date | null
      deliveryPersonId: string | null
      subtotal: Prisma.Decimal
      taxAmount: Prisma.Decimal
      deliveryFee: Prisma.Decimal
      serviceFee: Prisma.Decimal
      discountAmount: Prisma.Decimal
      tipAmount: Prisma.Decimal
      totalAmount: Prisma.Decimal
      paymentStatus: $Enums.PaymentStatus
      paymentMethod: $Enums.PaymentMethod
      paymentProvider: string | null
      paymentIntentId: string | null
      ageVerifiedAtDelivery: Date | null
      idCheckedBy: string | null
      customerNotes: string | null
      internalNotes: string | null
      metrcTransferManifest: string | null
      complianceCheckPassed: boolean
      complianceCheckedAt: Date | null
      complianceCheckedBy: string | null
      cancelledAt: Date | null
      cancelledBy: string | null
      cancellationReason: string | null
      refundAmount: Prisma.Decimal
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["order"]>
    composites: {}
  }

  type OrderGetPayload<S extends boolean | null | undefined | OrderDefaultArgs> = $Result.GetResult<Prisma.$OrderPayload, S>

  type OrderCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<OrderFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: OrderCountAggregateInputType | true
    }

  export interface OrderDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Order'], meta: { name: 'Order' } }
    /**
     * Find zero or one Order that matches the filter.
     * @param {OrderFindUniqueArgs} args - Arguments to find a Order
     * @example
     * // Get one Order
     * const order = await prisma.order.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends OrderFindUniqueArgs>(args: SelectSubset<T, OrderFindUniqueArgs<ExtArgs>>): Prisma__OrderClient<$Result.GetResult<Prisma.$OrderPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one Order that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {OrderFindUniqueOrThrowArgs} args - Arguments to find a Order
     * @example
     * // Get one Order
     * const order = await prisma.order.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends OrderFindUniqueOrThrowArgs>(args: SelectSubset<T, OrderFindUniqueOrThrowArgs<ExtArgs>>): Prisma__OrderClient<$Result.GetResult<Prisma.$OrderPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first Order that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {OrderFindFirstArgs} args - Arguments to find a Order
     * @example
     * // Get one Order
     * const order = await prisma.order.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends OrderFindFirstArgs>(args?: SelectSubset<T, OrderFindFirstArgs<ExtArgs>>): Prisma__OrderClient<$Result.GetResult<Prisma.$OrderPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first Order that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {OrderFindFirstOrThrowArgs} args - Arguments to find a Order
     * @example
     * // Get one Order
     * const order = await prisma.order.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends OrderFindFirstOrThrowArgs>(args?: SelectSubset<T, OrderFindFirstOrThrowArgs<ExtArgs>>): Prisma__OrderClient<$Result.GetResult<Prisma.$OrderPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more Orders that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {OrderFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Orders
     * const orders = await prisma.order.findMany()
     * 
     * // Get first 10 Orders
     * const orders = await prisma.order.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const orderWithIdOnly = await prisma.order.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends OrderFindManyArgs>(args?: SelectSubset<T, OrderFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$OrderPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a Order.
     * @param {OrderCreateArgs} args - Arguments to create a Order.
     * @example
     * // Create one Order
     * const Order = await prisma.order.create({
     *   data: {
     *     // ... data to create a Order
     *   }
     * })
     * 
     */
    create<T extends OrderCreateArgs>(args: SelectSubset<T, OrderCreateArgs<ExtArgs>>): Prisma__OrderClient<$Result.GetResult<Prisma.$OrderPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many Orders.
     * @param {OrderCreateManyArgs} args - Arguments to create many Orders.
     * @example
     * // Create many Orders
     * const order = await prisma.order.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends OrderCreateManyArgs>(args?: SelectSubset<T, OrderCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Orders and returns the data saved in the database.
     * @param {OrderCreateManyAndReturnArgs} args - Arguments to create many Orders.
     * @example
     * // Create many Orders
     * const order = await prisma.order.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Orders and only return the `id`
     * const orderWithIdOnly = await prisma.order.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends OrderCreateManyAndReturnArgs>(args?: SelectSubset<T, OrderCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$OrderPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a Order.
     * @param {OrderDeleteArgs} args - Arguments to delete one Order.
     * @example
     * // Delete one Order
     * const Order = await prisma.order.delete({
     *   where: {
     *     // ... filter to delete one Order
     *   }
     * })
     * 
     */
    delete<T extends OrderDeleteArgs>(args: SelectSubset<T, OrderDeleteArgs<ExtArgs>>): Prisma__OrderClient<$Result.GetResult<Prisma.$OrderPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one Order.
     * @param {OrderUpdateArgs} args - Arguments to update one Order.
     * @example
     * // Update one Order
     * const order = await prisma.order.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends OrderUpdateArgs>(args: SelectSubset<T, OrderUpdateArgs<ExtArgs>>): Prisma__OrderClient<$Result.GetResult<Prisma.$OrderPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more Orders.
     * @param {OrderDeleteManyArgs} args - Arguments to filter Orders to delete.
     * @example
     * // Delete a few Orders
     * const { count } = await prisma.order.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends OrderDeleteManyArgs>(args?: SelectSubset<T, OrderDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Orders.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {OrderUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Orders
     * const order = await prisma.order.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends OrderUpdateManyArgs>(args: SelectSubset<T, OrderUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Order.
     * @param {OrderUpsertArgs} args - Arguments to update or create a Order.
     * @example
     * // Update or create a Order
     * const order = await prisma.order.upsert({
     *   create: {
     *     // ... data to create a Order
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Order we want to update
     *   }
     * })
     */
    upsert<T extends OrderUpsertArgs>(args: SelectSubset<T, OrderUpsertArgs<ExtArgs>>): Prisma__OrderClient<$Result.GetResult<Prisma.$OrderPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of Orders.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {OrderCountArgs} args - Arguments to filter Orders to count.
     * @example
     * // Count the number of Orders
     * const count = await prisma.order.count({
     *   where: {
     *     // ... the filter for the Orders we want to count
     *   }
     * })
    **/
    count<T extends OrderCountArgs>(
      args?: Subset<T, OrderCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], OrderCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Order.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {OrderAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends OrderAggregateArgs>(args: Subset<T, OrderAggregateArgs>): Prisma.PrismaPromise<GetOrderAggregateType<T>>

    /**
     * Group by Order.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {OrderGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends OrderGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: OrderGroupByArgs['orderBy'] }
        : { orderBy?: OrderGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, OrderGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetOrderGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Order model
   */
  readonly fields: OrderFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Order.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__OrderClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    user<T extends UserDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UserDefaultArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    store<T extends StoreDefaultArgs<ExtArgs> = {}>(args?: Subset<T, StoreDefaultArgs<ExtArgs>>): Prisma__StoreClient<$Result.GetResult<Prisma.$StorePayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    items<T extends Order$itemsArgs<ExtArgs> = {}>(args?: Subset<T, Order$itemsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$OrderItemPayload<ExtArgs>, T, "findMany"> | Null>
    reviews<T extends Order$reviewsArgs<ExtArgs> = {}>(args?: Subset<T, Order$reviewsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ReviewPayload<ExtArgs>, T, "findMany"> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Order model
   */ 
  interface OrderFieldRefs {
    readonly id: FieldRef<"Order", 'String'>
    readonly orderNumber: FieldRef<"Order", 'String'>
    readonly userId: FieldRef<"Order", 'String'>
    readonly storeId: FieldRef<"Order", 'String'>
    readonly orderType: FieldRef<"Order", 'OrderType'>
    readonly fulfillmentStatus: FieldRef<"Order", 'OrderStatus'>
    readonly deliveryAddress: FieldRef<"Order", 'Json'>
    readonly deliveryInstructions: FieldRef<"Order", 'String'>
    readonly deliveryTimeRequested: FieldRef<"Order", 'DateTime'>
    readonly deliveryTimeActual: FieldRef<"Order", 'DateTime'>
    readonly deliveryPersonId: FieldRef<"Order", 'String'>
    readonly subtotal: FieldRef<"Order", 'Decimal'>
    readonly taxAmount: FieldRef<"Order", 'Decimal'>
    readonly deliveryFee: FieldRef<"Order", 'Decimal'>
    readonly serviceFee: FieldRef<"Order", 'Decimal'>
    readonly discountAmount: FieldRef<"Order", 'Decimal'>
    readonly tipAmount: FieldRef<"Order", 'Decimal'>
    readonly totalAmount: FieldRef<"Order", 'Decimal'>
    readonly paymentStatus: FieldRef<"Order", 'PaymentStatus'>
    readonly paymentMethod: FieldRef<"Order", 'PaymentMethod'>
    readonly paymentProvider: FieldRef<"Order", 'String'>
    readonly paymentIntentId: FieldRef<"Order", 'String'>
    readonly ageVerifiedAtDelivery: FieldRef<"Order", 'DateTime'>
    readonly idCheckedBy: FieldRef<"Order", 'String'>
    readonly customerNotes: FieldRef<"Order", 'String'>
    readonly internalNotes: FieldRef<"Order", 'String'>
    readonly metrcTransferManifest: FieldRef<"Order", 'String'>
    readonly complianceCheckPassed: FieldRef<"Order", 'Boolean'>
    readonly complianceCheckedAt: FieldRef<"Order", 'DateTime'>
    readonly complianceCheckedBy: FieldRef<"Order", 'String'>
    readonly cancelledAt: FieldRef<"Order", 'DateTime'>
    readonly cancelledBy: FieldRef<"Order", 'String'>
    readonly cancellationReason: FieldRef<"Order", 'String'>
    readonly refundAmount: FieldRef<"Order", 'Decimal'>
    readonly createdAt: FieldRef<"Order", 'DateTime'>
    readonly updatedAt: FieldRef<"Order", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * Order findUnique
   */
  export type OrderFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Order
     */
    select?: OrderSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrderInclude<ExtArgs> | null
    /**
     * Filter, which Order to fetch.
     */
    where: OrderWhereUniqueInput
  }

  /**
   * Order findUniqueOrThrow
   */
  export type OrderFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Order
     */
    select?: OrderSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrderInclude<ExtArgs> | null
    /**
     * Filter, which Order to fetch.
     */
    where: OrderWhereUniqueInput
  }

  /**
   * Order findFirst
   */
  export type OrderFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Order
     */
    select?: OrderSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrderInclude<ExtArgs> | null
    /**
     * Filter, which Order to fetch.
     */
    where?: OrderWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Orders to fetch.
     */
    orderBy?: OrderOrderByWithRelationInput | OrderOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Orders.
     */
    cursor?: OrderWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Orders from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Orders.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Orders.
     */
    distinct?: OrderScalarFieldEnum | OrderScalarFieldEnum[]
  }

  /**
   * Order findFirstOrThrow
   */
  export type OrderFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Order
     */
    select?: OrderSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrderInclude<ExtArgs> | null
    /**
     * Filter, which Order to fetch.
     */
    where?: OrderWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Orders to fetch.
     */
    orderBy?: OrderOrderByWithRelationInput | OrderOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Orders.
     */
    cursor?: OrderWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Orders from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Orders.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Orders.
     */
    distinct?: OrderScalarFieldEnum | OrderScalarFieldEnum[]
  }

  /**
   * Order findMany
   */
  export type OrderFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Order
     */
    select?: OrderSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrderInclude<ExtArgs> | null
    /**
     * Filter, which Orders to fetch.
     */
    where?: OrderWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Orders to fetch.
     */
    orderBy?: OrderOrderByWithRelationInput | OrderOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Orders.
     */
    cursor?: OrderWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Orders from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Orders.
     */
    skip?: number
    distinct?: OrderScalarFieldEnum | OrderScalarFieldEnum[]
  }

  /**
   * Order create
   */
  export type OrderCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Order
     */
    select?: OrderSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrderInclude<ExtArgs> | null
    /**
     * The data needed to create a Order.
     */
    data: XOR<OrderCreateInput, OrderUncheckedCreateInput>
  }

  /**
   * Order createMany
   */
  export type OrderCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Orders.
     */
    data: OrderCreateManyInput | OrderCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Order createManyAndReturn
   */
  export type OrderCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Order
     */
    select?: OrderSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many Orders.
     */
    data: OrderCreateManyInput | OrderCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrderIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Order update
   */
  export type OrderUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Order
     */
    select?: OrderSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrderInclude<ExtArgs> | null
    /**
     * The data needed to update a Order.
     */
    data: XOR<OrderUpdateInput, OrderUncheckedUpdateInput>
    /**
     * Choose, which Order to update.
     */
    where: OrderWhereUniqueInput
  }

  /**
   * Order updateMany
   */
  export type OrderUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Orders.
     */
    data: XOR<OrderUpdateManyMutationInput, OrderUncheckedUpdateManyInput>
    /**
     * Filter which Orders to update
     */
    where?: OrderWhereInput
  }

  /**
   * Order upsert
   */
  export type OrderUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Order
     */
    select?: OrderSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrderInclude<ExtArgs> | null
    /**
     * The filter to search for the Order to update in case it exists.
     */
    where: OrderWhereUniqueInput
    /**
     * In case the Order found by the `where` argument doesn't exist, create a new Order with this data.
     */
    create: XOR<OrderCreateInput, OrderUncheckedCreateInput>
    /**
     * In case the Order was found with the provided `where` argument, update it with this data.
     */
    update: XOR<OrderUpdateInput, OrderUncheckedUpdateInput>
  }

  /**
   * Order delete
   */
  export type OrderDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Order
     */
    select?: OrderSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrderInclude<ExtArgs> | null
    /**
     * Filter which Order to delete.
     */
    where: OrderWhereUniqueInput
  }

  /**
   * Order deleteMany
   */
  export type OrderDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Orders to delete
     */
    where?: OrderWhereInput
  }

  /**
   * Order.items
   */
  export type Order$itemsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OrderItem
     */
    select?: OrderItemSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrderItemInclude<ExtArgs> | null
    where?: OrderItemWhereInput
    orderBy?: OrderItemOrderByWithRelationInput | OrderItemOrderByWithRelationInput[]
    cursor?: OrderItemWhereUniqueInput
    take?: number
    skip?: number
    distinct?: OrderItemScalarFieldEnum | OrderItemScalarFieldEnum[]
  }

  /**
   * Order.reviews
   */
  export type Order$reviewsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Review
     */
    select?: ReviewSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReviewInclude<ExtArgs> | null
    where?: ReviewWhereInput
    orderBy?: ReviewOrderByWithRelationInput | ReviewOrderByWithRelationInput[]
    cursor?: ReviewWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ReviewScalarFieldEnum | ReviewScalarFieldEnum[]
  }

  /**
   * Order without action
   */
  export type OrderDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Order
     */
    select?: OrderSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrderInclude<ExtArgs> | null
  }


  /**
   * Model OrderItem
   */

  export type AggregateOrderItem = {
    _count: OrderItemCountAggregateOutputType | null
    _avg: OrderItemAvgAggregateOutputType | null
    _sum: OrderItemSumAggregateOutputType | null
    _min: OrderItemMinAggregateOutputType | null
    _max: OrderItemMaxAggregateOutputType | null
  }

  export type OrderItemAvgAggregateOutputType = {
    quantity: number | null
    unitPrice: Decimal | null
    totalPrice: Decimal | null
    thcPercentage: Decimal | null
    cbdPercentage: Decimal | null
    weightGrams: Decimal | null
  }

  export type OrderItemSumAggregateOutputType = {
    quantity: number | null
    unitPrice: Decimal | null
    totalPrice: Decimal | null
    thcPercentage: Decimal | null
    cbdPercentage: Decimal | null
    weightGrams: Decimal | null
  }

  export type OrderItemMinAggregateOutputType = {
    id: string | null
    orderId: string | null
    productId: string | null
    quantity: number | null
    unitPrice: Decimal | null
    totalPrice: Decimal | null
    productName: string | null
    productSku: string | null
    productBrand: string | null
    thcPercentage: Decimal | null
    cbdPercentage: Decimal | null
    weightGrams: Decimal | null
    metrcPackageId: string | null
    batchNumber: string | null
    customerNotes: string | null
    createdAt: Date | null
  }

  export type OrderItemMaxAggregateOutputType = {
    id: string | null
    orderId: string | null
    productId: string | null
    quantity: number | null
    unitPrice: Decimal | null
    totalPrice: Decimal | null
    productName: string | null
    productSku: string | null
    productBrand: string | null
    thcPercentage: Decimal | null
    cbdPercentage: Decimal | null
    weightGrams: Decimal | null
    metrcPackageId: string | null
    batchNumber: string | null
    customerNotes: string | null
    createdAt: Date | null
  }

  export type OrderItemCountAggregateOutputType = {
    id: number
    orderId: number
    productId: number
    quantity: number
    unitPrice: number
    totalPrice: number
    productName: number
    productSku: number
    productBrand: number
    thcPercentage: number
    cbdPercentage: number
    weightGrams: number
    metrcPackageId: number
    batchNumber: number
    customerNotes: number
    createdAt: number
    _all: number
  }


  export type OrderItemAvgAggregateInputType = {
    quantity?: true
    unitPrice?: true
    totalPrice?: true
    thcPercentage?: true
    cbdPercentage?: true
    weightGrams?: true
  }

  export type OrderItemSumAggregateInputType = {
    quantity?: true
    unitPrice?: true
    totalPrice?: true
    thcPercentage?: true
    cbdPercentage?: true
    weightGrams?: true
  }

  export type OrderItemMinAggregateInputType = {
    id?: true
    orderId?: true
    productId?: true
    quantity?: true
    unitPrice?: true
    totalPrice?: true
    productName?: true
    productSku?: true
    productBrand?: true
    thcPercentage?: true
    cbdPercentage?: true
    weightGrams?: true
    metrcPackageId?: true
    batchNumber?: true
    customerNotes?: true
    createdAt?: true
  }

  export type OrderItemMaxAggregateInputType = {
    id?: true
    orderId?: true
    productId?: true
    quantity?: true
    unitPrice?: true
    totalPrice?: true
    productName?: true
    productSku?: true
    productBrand?: true
    thcPercentage?: true
    cbdPercentage?: true
    weightGrams?: true
    metrcPackageId?: true
    batchNumber?: true
    customerNotes?: true
    createdAt?: true
  }

  export type OrderItemCountAggregateInputType = {
    id?: true
    orderId?: true
    productId?: true
    quantity?: true
    unitPrice?: true
    totalPrice?: true
    productName?: true
    productSku?: true
    productBrand?: true
    thcPercentage?: true
    cbdPercentage?: true
    weightGrams?: true
    metrcPackageId?: true
    batchNumber?: true
    customerNotes?: true
    createdAt?: true
    _all?: true
  }

  export type OrderItemAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which OrderItem to aggregate.
     */
    where?: OrderItemWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of OrderItems to fetch.
     */
    orderBy?: OrderItemOrderByWithRelationInput | OrderItemOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: OrderItemWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` OrderItems from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` OrderItems.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned OrderItems
    **/
    _count?: true | OrderItemCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: OrderItemAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: OrderItemSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: OrderItemMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: OrderItemMaxAggregateInputType
  }

  export type GetOrderItemAggregateType<T extends OrderItemAggregateArgs> = {
        [P in keyof T & keyof AggregateOrderItem]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateOrderItem[P]>
      : GetScalarType<T[P], AggregateOrderItem[P]>
  }




  export type OrderItemGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: OrderItemWhereInput
    orderBy?: OrderItemOrderByWithAggregationInput | OrderItemOrderByWithAggregationInput[]
    by: OrderItemScalarFieldEnum[] | OrderItemScalarFieldEnum
    having?: OrderItemScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: OrderItemCountAggregateInputType | true
    _avg?: OrderItemAvgAggregateInputType
    _sum?: OrderItemSumAggregateInputType
    _min?: OrderItemMinAggregateInputType
    _max?: OrderItemMaxAggregateInputType
  }

  export type OrderItemGroupByOutputType = {
    id: string
    orderId: string
    productId: string
    quantity: number
    unitPrice: Decimal
    totalPrice: Decimal
    productName: string
    productSku: string | null
    productBrand: string | null
    thcPercentage: Decimal | null
    cbdPercentage: Decimal | null
    weightGrams: Decimal | null
    metrcPackageId: string | null
    batchNumber: string | null
    customerNotes: string | null
    createdAt: Date
    _count: OrderItemCountAggregateOutputType | null
    _avg: OrderItemAvgAggregateOutputType | null
    _sum: OrderItemSumAggregateOutputType | null
    _min: OrderItemMinAggregateOutputType | null
    _max: OrderItemMaxAggregateOutputType | null
  }

  type GetOrderItemGroupByPayload<T extends OrderItemGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<OrderItemGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof OrderItemGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], OrderItemGroupByOutputType[P]>
            : GetScalarType<T[P], OrderItemGroupByOutputType[P]>
        }
      >
    >


  export type OrderItemSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    orderId?: boolean
    productId?: boolean
    quantity?: boolean
    unitPrice?: boolean
    totalPrice?: boolean
    productName?: boolean
    productSku?: boolean
    productBrand?: boolean
    thcPercentage?: boolean
    cbdPercentage?: boolean
    weightGrams?: boolean
    metrcPackageId?: boolean
    batchNumber?: boolean
    customerNotes?: boolean
    createdAt?: boolean
    order?: boolean | OrderDefaultArgs<ExtArgs>
    product?: boolean | ProductDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["orderItem"]>

  export type OrderItemSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    orderId?: boolean
    productId?: boolean
    quantity?: boolean
    unitPrice?: boolean
    totalPrice?: boolean
    productName?: boolean
    productSku?: boolean
    productBrand?: boolean
    thcPercentage?: boolean
    cbdPercentage?: boolean
    weightGrams?: boolean
    metrcPackageId?: boolean
    batchNumber?: boolean
    customerNotes?: boolean
    createdAt?: boolean
    order?: boolean | OrderDefaultArgs<ExtArgs>
    product?: boolean | ProductDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["orderItem"]>

  export type OrderItemSelectScalar = {
    id?: boolean
    orderId?: boolean
    productId?: boolean
    quantity?: boolean
    unitPrice?: boolean
    totalPrice?: boolean
    productName?: boolean
    productSku?: boolean
    productBrand?: boolean
    thcPercentage?: boolean
    cbdPercentage?: boolean
    weightGrams?: boolean
    metrcPackageId?: boolean
    batchNumber?: boolean
    customerNotes?: boolean
    createdAt?: boolean
  }

  export type OrderItemInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    order?: boolean | OrderDefaultArgs<ExtArgs>
    product?: boolean | ProductDefaultArgs<ExtArgs>
  }
  export type OrderItemIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    order?: boolean | OrderDefaultArgs<ExtArgs>
    product?: boolean | ProductDefaultArgs<ExtArgs>
  }

  export type $OrderItemPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "OrderItem"
    objects: {
      order: Prisma.$OrderPayload<ExtArgs>
      product: Prisma.$ProductPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      orderId: string
      productId: string
      quantity: number
      unitPrice: Prisma.Decimal
      totalPrice: Prisma.Decimal
      productName: string
      productSku: string | null
      productBrand: string | null
      thcPercentage: Prisma.Decimal | null
      cbdPercentage: Prisma.Decimal | null
      weightGrams: Prisma.Decimal | null
      metrcPackageId: string | null
      batchNumber: string | null
      customerNotes: string | null
      createdAt: Date
    }, ExtArgs["result"]["orderItem"]>
    composites: {}
  }

  type OrderItemGetPayload<S extends boolean | null | undefined | OrderItemDefaultArgs> = $Result.GetResult<Prisma.$OrderItemPayload, S>

  type OrderItemCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<OrderItemFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: OrderItemCountAggregateInputType | true
    }

  export interface OrderItemDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['OrderItem'], meta: { name: 'OrderItem' } }
    /**
     * Find zero or one OrderItem that matches the filter.
     * @param {OrderItemFindUniqueArgs} args - Arguments to find a OrderItem
     * @example
     * // Get one OrderItem
     * const orderItem = await prisma.orderItem.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends OrderItemFindUniqueArgs>(args: SelectSubset<T, OrderItemFindUniqueArgs<ExtArgs>>): Prisma__OrderItemClient<$Result.GetResult<Prisma.$OrderItemPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one OrderItem that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {OrderItemFindUniqueOrThrowArgs} args - Arguments to find a OrderItem
     * @example
     * // Get one OrderItem
     * const orderItem = await prisma.orderItem.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends OrderItemFindUniqueOrThrowArgs>(args: SelectSubset<T, OrderItemFindUniqueOrThrowArgs<ExtArgs>>): Prisma__OrderItemClient<$Result.GetResult<Prisma.$OrderItemPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first OrderItem that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {OrderItemFindFirstArgs} args - Arguments to find a OrderItem
     * @example
     * // Get one OrderItem
     * const orderItem = await prisma.orderItem.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends OrderItemFindFirstArgs>(args?: SelectSubset<T, OrderItemFindFirstArgs<ExtArgs>>): Prisma__OrderItemClient<$Result.GetResult<Prisma.$OrderItemPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first OrderItem that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {OrderItemFindFirstOrThrowArgs} args - Arguments to find a OrderItem
     * @example
     * // Get one OrderItem
     * const orderItem = await prisma.orderItem.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends OrderItemFindFirstOrThrowArgs>(args?: SelectSubset<T, OrderItemFindFirstOrThrowArgs<ExtArgs>>): Prisma__OrderItemClient<$Result.GetResult<Prisma.$OrderItemPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more OrderItems that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {OrderItemFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all OrderItems
     * const orderItems = await prisma.orderItem.findMany()
     * 
     * // Get first 10 OrderItems
     * const orderItems = await prisma.orderItem.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const orderItemWithIdOnly = await prisma.orderItem.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends OrderItemFindManyArgs>(args?: SelectSubset<T, OrderItemFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$OrderItemPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a OrderItem.
     * @param {OrderItemCreateArgs} args - Arguments to create a OrderItem.
     * @example
     * // Create one OrderItem
     * const OrderItem = await prisma.orderItem.create({
     *   data: {
     *     // ... data to create a OrderItem
     *   }
     * })
     * 
     */
    create<T extends OrderItemCreateArgs>(args: SelectSubset<T, OrderItemCreateArgs<ExtArgs>>): Prisma__OrderItemClient<$Result.GetResult<Prisma.$OrderItemPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many OrderItems.
     * @param {OrderItemCreateManyArgs} args - Arguments to create many OrderItems.
     * @example
     * // Create many OrderItems
     * const orderItem = await prisma.orderItem.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends OrderItemCreateManyArgs>(args?: SelectSubset<T, OrderItemCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many OrderItems and returns the data saved in the database.
     * @param {OrderItemCreateManyAndReturnArgs} args - Arguments to create many OrderItems.
     * @example
     * // Create many OrderItems
     * const orderItem = await prisma.orderItem.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many OrderItems and only return the `id`
     * const orderItemWithIdOnly = await prisma.orderItem.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends OrderItemCreateManyAndReturnArgs>(args?: SelectSubset<T, OrderItemCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$OrderItemPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a OrderItem.
     * @param {OrderItemDeleteArgs} args - Arguments to delete one OrderItem.
     * @example
     * // Delete one OrderItem
     * const OrderItem = await prisma.orderItem.delete({
     *   where: {
     *     // ... filter to delete one OrderItem
     *   }
     * })
     * 
     */
    delete<T extends OrderItemDeleteArgs>(args: SelectSubset<T, OrderItemDeleteArgs<ExtArgs>>): Prisma__OrderItemClient<$Result.GetResult<Prisma.$OrderItemPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one OrderItem.
     * @param {OrderItemUpdateArgs} args - Arguments to update one OrderItem.
     * @example
     * // Update one OrderItem
     * const orderItem = await prisma.orderItem.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends OrderItemUpdateArgs>(args: SelectSubset<T, OrderItemUpdateArgs<ExtArgs>>): Prisma__OrderItemClient<$Result.GetResult<Prisma.$OrderItemPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more OrderItems.
     * @param {OrderItemDeleteManyArgs} args - Arguments to filter OrderItems to delete.
     * @example
     * // Delete a few OrderItems
     * const { count } = await prisma.orderItem.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends OrderItemDeleteManyArgs>(args?: SelectSubset<T, OrderItemDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more OrderItems.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {OrderItemUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many OrderItems
     * const orderItem = await prisma.orderItem.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends OrderItemUpdateManyArgs>(args: SelectSubset<T, OrderItemUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one OrderItem.
     * @param {OrderItemUpsertArgs} args - Arguments to update or create a OrderItem.
     * @example
     * // Update or create a OrderItem
     * const orderItem = await prisma.orderItem.upsert({
     *   create: {
     *     // ... data to create a OrderItem
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the OrderItem we want to update
     *   }
     * })
     */
    upsert<T extends OrderItemUpsertArgs>(args: SelectSubset<T, OrderItemUpsertArgs<ExtArgs>>): Prisma__OrderItemClient<$Result.GetResult<Prisma.$OrderItemPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of OrderItems.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {OrderItemCountArgs} args - Arguments to filter OrderItems to count.
     * @example
     * // Count the number of OrderItems
     * const count = await prisma.orderItem.count({
     *   where: {
     *     // ... the filter for the OrderItems we want to count
     *   }
     * })
    **/
    count<T extends OrderItemCountArgs>(
      args?: Subset<T, OrderItemCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], OrderItemCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a OrderItem.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {OrderItemAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends OrderItemAggregateArgs>(args: Subset<T, OrderItemAggregateArgs>): Prisma.PrismaPromise<GetOrderItemAggregateType<T>>

    /**
     * Group by OrderItem.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {OrderItemGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends OrderItemGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: OrderItemGroupByArgs['orderBy'] }
        : { orderBy?: OrderItemGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, OrderItemGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetOrderItemGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the OrderItem model
   */
  readonly fields: OrderItemFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for OrderItem.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__OrderItemClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    order<T extends OrderDefaultArgs<ExtArgs> = {}>(args?: Subset<T, OrderDefaultArgs<ExtArgs>>): Prisma__OrderClient<$Result.GetResult<Prisma.$OrderPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    product<T extends ProductDefaultArgs<ExtArgs> = {}>(args?: Subset<T, ProductDefaultArgs<ExtArgs>>): Prisma__ProductClient<$Result.GetResult<Prisma.$ProductPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the OrderItem model
   */ 
  interface OrderItemFieldRefs {
    readonly id: FieldRef<"OrderItem", 'String'>
    readonly orderId: FieldRef<"OrderItem", 'String'>
    readonly productId: FieldRef<"OrderItem", 'String'>
    readonly quantity: FieldRef<"OrderItem", 'Int'>
    readonly unitPrice: FieldRef<"OrderItem", 'Decimal'>
    readonly totalPrice: FieldRef<"OrderItem", 'Decimal'>
    readonly productName: FieldRef<"OrderItem", 'String'>
    readonly productSku: FieldRef<"OrderItem", 'String'>
    readonly productBrand: FieldRef<"OrderItem", 'String'>
    readonly thcPercentage: FieldRef<"OrderItem", 'Decimal'>
    readonly cbdPercentage: FieldRef<"OrderItem", 'Decimal'>
    readonly weightGrams: FieldRef<"OrderItem", 'Decimal'>
    readonly metrcPackageId: FieldRef<"OrderItem", 'String'>
    readonly batchNumber: FieldRef<"OrderItem", 'String'>
    readonly customerNotes: FieldRef<"OrderItem", 'String'>
    readonly createdAt: FieldRef<"OrderItem", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * OrderItem findUnique
   */
  export type OrderItemFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OrderItem
     */
    select?: OrderItemSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrderItemInclude<ExtArgs> | null
    /**
     * Filter, which OrderItem to fetch.
     */
    where: OrderItemWhereUniqueInput
  }

  /**
   * OrderItem findUniqueOrThrow
   */
  export type OrderItemFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OrderItem
     */
    select?: OrderItemSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrderItemInclude<ExtArgs> | null
    /**
     * Filter, which OrderItem to fetch.
     */
    where: OrderItemWhereUniqueInput
  }

  /**
   * OrderItem findFirst
   */
  export type OrderItemFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OrderItem
     */
    select?: OrderItemSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrderItemInclude<ExtArgs> | null
    /**
     * Filter, which OrderItem to fetch.
     */
    where?: OrderItemWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of OrderItems to fetch.
     */
    orderBy?: OrderItemOrderByWithRelationInput | OrderItemOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for OrderItems.
     */
    cursor?: OrderItemWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` OrderItems from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` OrderItems.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of OrderItems.
     */
    distinct?: OrderItemScalarFieldEnum | OrderItemScalarFieldEnum[]
  }

  /**
   * OrderItem findFirstOrThrow
   */
  export type OrderItemFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OrderItem
     */
    select?: OrderItemSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrderItemInclude<ExtArgs> | null
    /**
     * Filter, which OrderItem to fetch.
     */
    where?: OrderItemWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of OrderItems to fetch.
     */
    orderBy?: OrderItemOrderByWithRelationInput | OrderItemOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for OrderItems.
     */
    cursor?: OrderItemWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` OrderItems from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` OrderItems.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of OrderItems.
     */
    distinct?: OrderItemScalarFieldEnum | OrderItemScalarFieldEnum[]
  }

  /**
   * OrderItem findMany
   */
  export type OrderItemFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OrderItem
     */
    select?: OrderItemSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrderItemInclude<ExtArgs> | null
    /**
     * Filter, which OrderItems to fetch.
     */
    where?: OrderItemWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of OrderItems to fetch.
     */
    orderBy?: OrderItemOrderByWithRelationInput | OrderItemOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing OrderItems.
     */
    cursor?: OrderItemWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` OrderItems from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` OrderItems.
     */
    skip?: number
    distinct?: OrderItemScalarFieldEnum | OrderItemScalarFieldEnum[]
  }

  /**
   * OrderItem create
   */
  export type OrderItemCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OrderItem
     */
    select?: OrderItemSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrderItemInclude<ExtArgs> | null
    /**
     * The data needed to create a OrderItem.
     */
    data: XOR<OrderItemCreateInput, OrderItemUncheckedCreateInput>
  }

  /**
   * OrderItem createMany
   */
  export type OrderItemCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many OrderItems.
     */
    data: OrderItemCreateManyInput | OrderItemCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * OrderItem createManyAndReturn
   */
  export type OrderItemCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OrderItem
     */
    select?: OrderItemSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many OrderItems.
     */
    data: OrderItemCreateManyInput | OrderItemCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrderItemIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * OrderItem update
   */
  export type OrderItemUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OrderItem
     */
    select?: OrderItemSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrderItemInclude<ExtArgs> | null
    /**
     * The data needed to update a OrderItem.
     */
    data: XOR<OrderItemUpdateInput, OrderItemUncheckedUpdateInput>
    /**
     * Choose, which OrderItem to update.
     */
    where: OrderItemWhereUniqueInput
  }

  /**
   * OrderItem updateMany
   */
  export type OrderItemUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update OrderItems.
     */
    data: XOR<OrderItemUpdateManyMutationInput, OrderItemUncheckedUpdateManyInput>
    /**
     * Filter which OrderItems to update
     */
    where?: OrderItemWhereInput
  }

  /**
   * OrderItem upsert
   */
  export type OrderItemUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OrderItem
     */
    select?: OrderItemSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrderItemInclude<ExtArgs> | null
    /**
     * The filter to search for the OrderItem to update in case it exists.
     */
    where: OrderItemWhereUniqueInput
    /**
     * In case the OrderItem found by the `where` argument doesn't exist, create a new OrderItem with this data.
     */
    create: XOR<OrderItemCreateInput, OrderItemUncheckedCreateInput>
    /**
     * In case the OrderItem was found with the provided `where` argument, update it with this data.
     */
    update: XOR<OrderItemUpdateInput, OrderItemUncheckedUpdateInput>
  }

  /**
   * OrderItem delete
   */
  export type OrderItemDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OrderItem
     */
    select?: OrderItemSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrderItemInclude<ExtArgs> | null
    /**
     * Filter which OrderItem to delete.
     */
    where: OrderItemWhereUniqueInput
  }

  /**
   * OrderItem deleteMany
   */
  export type OrderItemDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which OrderItems to delete
     */
    where?: OrderItemWhereInput
  }

  /**
   * OrderItem without action
   */
  export type OrderItemDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OrderItem
     */
    select?: OrderItemSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrderItemInclude<ExtArgs> | null
  }


  /**
   * Model Review
   */

  export type AggregateReview = {
    _count: ReviewCountAggregateOutputType | null
    _avg: ReviewAvgAggregateOutputType | null
    _sum: ReviewSumAggregateOutputType | null
    _min: ReviewMinAggregateOutputType | null
    _max: ReviewMaxAggregateOutputType | null
  }

  export type ReviewAvgAggregateOutputType = {
    rating: number | null
    qualityRating: number | null
    valueRating: number | null
    serviceRating: number | null
    effectsRating: number | null
    helpfulCount: number | null
    totalVotes: number | null
  }

  export type ReviewSumAggregateOutputType = {
    rating: number | null
    qualityRating: number | null
    valueRating: number | null
    serviceRating: number | null
    effectsRating: number | null
    helpfulCount: number | null
    totalVotes: number | null
  }

  export type ReviewMinAggregateOutputType = {
    id: string | null
    userId: string | null
    reviewableType: $Enums.ReviewableType | null
    reviewableId: string | null
    rating: number | null
    title: string | null
    content: string | null
    qualityRating: number | null
    valueRating: number | null
    serviceRating: number | null
    effectsRating: number | null
    status: $Enums.ReviewStatus | null
    moderatedAt: Date | null
    moderatedBy: string | null
    moderationReason: string | null
    verifiedPurchase: boolean | null
    orderId: string | null
    helpfulCount: number | null
    totalVotes: number | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type ReviewMaxAggregateOutputType = {
    id: string | null
    userId: string | null
    reviewableType: $Enums.ReviewableType | null
    reviewableId: string | null
    rating: number | null
    title: string | null
    content: string | null
    qualityRating: number | null
    valueRating: number | null
    serviceRating: number | null
    effectsRating: number | null
    status: $Enums.ReviewStatus | null
    moderatedAt: Date | null
    moderatedBy: string | null
    moderationReason: string | null
    verifiedPurchase: boolean | null
    orderId: string | null
    helpfulCount: number | null
    totalVotes: number | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type ReviewCountAggregateOutputType = {
    id: number
    userId: number
    reviewableType: number
    reviewableId: number
    rating: number
    title: number
    content: number
    qualityRating: number
    valueRating: number
    serviceRating: number
    effectsRating: number
    effects: number
    medicalBenefits: number
    sideEffects: number
    images: number
    status: number
    moderatedAt: number
    moderatedBy: number
    moderationReason: number
    verifiedPurchase: number
    orderId: number
    helpfulCount: number
    totalVotes: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type ReviewAvgAggregateInputType = {
    rating?: true
    qualityRating?: true
    valueRating?: true
    serviceRating?: true
    effectsRating?: true
    helpfulCount?: true
    totalVotes?: true
  }

  export type ReviewSumAggregateInputType = {
    rating?: true
    qualityRating?: true
    valueRating?: true
    serviceRating?: true
    effectsRating?: true
    helpfulCount?: true
    totalVotes?: true
  }

  export type ReviewMinAggregateInputType = {
    id?: true
    userId?: true
    reviewableType?: true
    reviewableId?: true
    rating?: true
    title?: true
    content?: true
    qualityRating?: true
    valueRating?: true
    serviceRating?: true
    effectsRating?: true
    status?: true
    moderatedAt?: true
    moderatedBy?: true
    moderationReason?: true
    verifiedPurchase?: true
    orderId?: true
    helpfulCount?: true
    totalVotes?: true
    createdAt?: true
    updatedAt?: true
  }

  export type ReviewMaxAggregateInputType = {
    id?: true
    userId?: true
    reviewableType?: true
    reviewableId?: true
    rating?: true
    title?: true
    content?: true
    qualityRating?: true
    valueRating?: true
    serviceRating?: true
    effectsRating?: true
    status?: true
    moderatedAt?: true
    moderatedBy?: true
    moderationReason?: true
    verifiedPurchase?: true
    orderId?: true
    helpfulCount?: true
    totalVotes?: true
    createdAt?: true
    updatedAt?: true
  }

  export type ReviewCountAggregateInputType = {
    id?: true
    userId?: true
    reviewableType?: true
    reviewableId?: true
    rating?: true
    title?: true
    content?: true
    qualityRating?: true
    valueRating?: true
    serviceRating?: true
    effectsRating?: true
    effects?: true
    medicalBenefits?: true
    sideEffects?: true
    images?: true
    status?: true
    moderatedAt?: true
    moderatedBy?: true
    moderationReason?: true
    verifiedPurchase?: true
    orderId?: true
    helpfulCount?: true
    totalVotes?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type ReviewAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Review to aggregate.
     */
    where?: ReviewWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Reviews to fetch.
     */
    orderBy?: ReviewOrderByWithRelationInput | ReviewOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: ReviewWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Reviews from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Reviews.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Reviews
    **/
    _count?: true | ReviewCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: ReviewAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: ReviewSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ReviewMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ReviewMaxAggregateInputType
  }

  export type GetReviewAggregateType<T extends ReviewAggregateArgs> = {
        [P in keyof T & keyof AggregateReview]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateReview[P]>
      : GetScalarType<T[P], AggregateReview[P]>
  }




  export type ReviewGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ReviewWhereInput
    orderBy?: ReviewOrderByWithAggregationInput | ReviewOrderByWithAggregationInput[]
    by: ReviewScalarFieldEnum[] | ReviewScalarFieldEnum
    having?: ReviewScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ReviewCountAggregateInputType | true
    _avg?: ReviewAvgAggregateInputType
    _sum?: ReviewSumAggregateInputType
    _min?: ReviewMinAggregateInputType
    _max?: ReviewMaxAggregateInputType
  }

  export type ReviewGroupByOutputType = {
    id: string
    userId: string
    reviewableType: $Enums.ReviewableType
    reviewableId: string
    rating: number
    title: string | null
    content: string
    qualityRating: number | null
    valueRating: number | null
    serviceRating: number | null
    effectsRating: number | null
    effects: JsonValue | null
    medicalBenefits: JsonValue | null
    sideEffects: JsonValue | null
    images: JsonValue | null
    status: $Enums.ReviewStatus
    moderatedAt: Date | null
    moderatedBy: string | null
    moderationReason: string | null
    verifiedPurchase: boolean
    orderId: string | null
    helpfulCount: number
    totalVotes: number
    createdAt: Date
    updatedAt: Date
    _count: ReviewCountAggregateOutputType | null
    _avg: ReviewAvgAggregateOutputType | null
    _sum: ReviewSumAggregateOutputType | null
    _min: ReviewMinAggregateOutputType | null
    _max: ReviewMaxAggregateOutputType | null
  }

  type GetReviewGroupByPayload<T extends ReviewGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<ReviewGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ReviewGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ReviewGroupByOutputType[P]>
            : GetScalarType<T[P], ReviewGroupByOutputType[P]>
        }
      >
    >


  export type ReviewSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    userId?: boolean
    reviewableType?: boolean
    reviewableId?: boolean
    rating?: boolean
    title?: boolean
    content?: boolean
    qualityRating?: boolean
    valueRating?: boolean
    serviceRating?: boolean
    effectsRating?: boolean
    effects?: boolean
    medicalBenefits?: boolean
    sideEffects?: boolean
    images?: boolean
    status?: boolean
    moderatedAt?: boolean
    moderatedBy?: boolean
    moderationReason?: boolean
    verifiedPurchase?: boolean
    orderId?: boolean
    helpfulCount?: boolean
    totalVotes?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    user?: boolean | UserDefaultArgs<ExtArgs>
    order?: boolean | Review$orderArgs<ExtArgs>
    store?: boolean | Review$storeArgs<ExtArgs>
    product?: boolean | Review$productArgs<ExtArgs>
  }, ExtArgs["result"]["review"]>

  export type ReviewSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    userId?: boolean
    reviewableType?: boolean
    reviewableId?: boolean
    rating?: boolean
    title?: boolean
    content?: boolean
    qualityRating?: boolean
    valueRating?: boolean
    serviceRating?: boolean
    effectsRating?: boolean
    effects?: boolean
    medicalBenefits?: boolean
    sideEffects?: boolean
    images?: boolean
    status?: boolean
    moderatedAt?: boolean
    moderatedBy?: boolean
    moderationReason?: boolean
    verifiedPurchase?: boolean
    orderId?: boolean
    helpfulCount?: boolean
    totalVotes?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    user?: boolean | UserDefaultArgs<ExtArgs>
    order?: boolean | Review$orderArgs<ExtArgs>
    store?: boolean | Review$storeArgs<ExtArgs>
    product?: boolean | Review$productArgs<ExtArgs>
  }, ExtArgs["result"]["review"]>

  export type ReviewSelectScalar = {
    id?: boolean
    userId?: boolean
    reviewableType?: boolean
    reviewableId?: boolean
    rating?: boolean
    title?: boolean
    content?: boolean
    qualityRating?: boolean
    valueRating?: boolean
    serviceRating?: boolean
    effectsRating?: boolean
    effects?: boolean
    medicalBenefits?: boolean
    sideEffects?: boolean
    images?: boolean
    status?: boolean
    moderatedAt?: boolean
    moderatedBy?: boolean
    moderationReason?: boolean
    verifiedPurchase?: boolean
    orderId?: boolean
    helpfulCount?: boolean
    totalVotes?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type ReviewInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | UserDefaultArgs<ExtArgs>
    order?: boolean | Review$orderArgs<ExtArgs>
    store?: boolean | Review$storeArgs<ExtArgs>
    product?: boolean | Review$productArgs<ExtArgs>
  }
  export type ReviewIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | UserDefaultArgs<ExtArgs>
    order?: boolean | Review$orderArgs<ExtArgs>
    store?: boolean | Review$storeArgs<ExtArgs>
    product?: boolean | Review$productArgs<ExtArgs>
  }

  export type $ReviewPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Review"
    objects: {
      user: Prisma.$UserPayload<ExtArgs>
      order: Prisma.$OrderPayload<ExtArgs> | null
      store: Prisma.$StorePayload<ExtArgs> | null
      product: Prisma.$ProductPayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      userId: string
      reviewableType: $Enums.ReviewableType
      reviewableId: string
      rating: number
      title: string | null
      content: string
      qualityRating: number | null
      valueRating: number | null
      serviceRating: number | null
      effectsRating: number | null
      effects: Prisma.JsonValue | null
      medicalBenefits: Prisma.JsonValue | null
      sideEffects: Prisma.JsonValue | null
      images: Prisma.JsonValue | null
      status: $Enums.ReviewStatus
      moderatedAt: Date | null
      moderatedBy: string | null
      moderationReason: string | null
      verifiedPurchase: boolean
      orderId: string | null
      helpfulCount: number
      totalVotes: number
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["review"]>
    composites: {}
  }

  type ReviewGetPayload<S extends boolean | null | undefined | ReviewDefaultArgs> = $Result.GetResult<Prisma.$ReviewPayload, S>

  type ReviewCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<ReviewFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: ReviewCountAggregateInputType | true
    }

  export interface ReviewDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Review'], meta: { name: 'Review' } }
    /**
     * Find zero or one Review that matches the filter.
     * @param {ReviewFindUniqueArgs} args - Arguments to find a Review
     * @example
     * // Get one Review
     * const review = await prisma.review.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends ReviewFindUniqueArgs>(args: SelectSubset<T, ReviewFindUniqueArgs<ExtArgs>>): Prisma__ReviewClient<$Result.GetResult<Prisma.$ReviewPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one Review that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {ReviewFindUniqueOrThrowArgs} args - Arguments to find a Review
     * @example
     * // Get one Review
     * const review = await prisma.review.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends ReviewFindUniqueOrThrowArgs>(args: SelectSubset<T, ReviewFindUniqueOrThrowArgs<ExtArgs>>): Prisma__ReviewClient<$Result.GetResult<Prisma.$ReviewPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first Review that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ReviewFindFirstArgs} args - Arguments to find a Review
     * @example
     * // Get one Review
     * const review = await prisma.review.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends ReviewFindFirstArgs>(args?: SelectSubset<T, ReviewFindFirstArgs<ExtArgs>>): Prisma__ReviewClient<$Result.GetResult<Prisma.$ReviewPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first Review that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ReviewFindFirstOrThrowArgs} args - Arguments to find a Review
     * @example
     * // Get one Review
     * const review = await prisma.review.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends ReviewFindFirstOrThrowArgs>(args?: SelectSubset<T, ReviewFindFirstOrThrowArgs<ExtArgs>>): Prisma__ReviewClient<$Result.GetResult<Prisma.$ReviewPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more Reviews that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ReviewFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Reviews
     * const reviews = await prisma.review.findMany()
     * 
     * // Get first 10 Reviews
     * const reviews = await prisma.review.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const reviewWithIdOnly = await prisma.review.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends ReviewFindManyArgs>(args?: SelectSubset<T, ReviewFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ReviewPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a Review.
     * @param {ReviewCreateArgs} args - Arguments to create a Review.
     * @example
     * // Create one Review
     * const Review = await prisma.review.create({
     *   data: {
     *     // ... data to create a Review
     *   }
     * })
     * 
     */
    create<T extends ReviewCreateArgs>(args: SelectSubset<T, ReviewCreateArgs<ExtArgs>>): Prisma__ReviewClient<$Result.GetResult<Prisma.$ReviewPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many Reviews.
     * @param {ReviewCreateManyArgs} args - Arguments to create many Reviews.
     * @example
     * // Create many Reviews
     * const review = await prisma.review.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends ReviewCreateManyArgs>(args?: SelectSubset<T, ReviewCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Reviews and returns the data saved in the database.
     * @param {ReviewCreateManyAndReturnArgs} args - Arguments to create many Reviews.
     * @example
     * // Create many Reviews
     * const review = await prisma.review.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Reviews and only return the `id`
     * const reviewWithIdOnly = await prisma.review.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends ReviewCreateManyAndReturnArgs>(args?: SelectSubset<T, ReviewCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ReviewPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a Review.
     * @param {ReviewDeleteArgs} args - Arguments to delete one Review.
     * @example
     * // Delete one Review
     * const Review = await prisma.review.delete({
     *   where: {
     *     // ... filter to delete one Review
     *   }
     * })
     * 
     */
    delete<T extends ReviewDeleteArgs>(args: SelectSubset<T, ReviewDeleteArgs<ExtArgs>>): Prisma__ReviewClient<$Result.GetResult<Prisma.$ReviewPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one Review.
     * @param {ReviewUpdateArgs} args - Arguments to update one Review.
     * @example
     * // Update one Review
     * const review = await prisma.review.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends ReviewUpdateArgs>(args: SelectSubset<T, ReviewUpdateArgs<ExtArgs>>): Prisma__ReviewClient<$Result.GetResult<Prisma.$ReviewPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more Reviews.
     * @param {ReviewDeleteManyArgs} args - Arguments to filter Reviews to delete.
     * @example
     * // Delete a few Reviews
     * const { count } = await prisma.review.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends ReviewDeleteManyArgs>(args?: SelectSubset<T, ReviewDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Reviews.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ReviewUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Reviews
     * const review = await prisma.review.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends ReviewUpdateManyArgs>(args: SelectSubset<T, ReviewUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Review.
     * @param {ReviewUpsertArgs} args - Arguments to update or create a Review.
     * @example
     * // Update or create a Review
     * const review = await prisma.review.upsert({
     *   create: {
     *     // ... data to create a Review
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Review we want to update
     *   }
     * })
     */
    upsert<T extends ReviewUpsertArgs>(args: SelectSubset<T, ReviewUpsertArgs<ExtArgs>>): Prisma__ReviewClient<$Result.GetResult<Prisma.$ReviewPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of Reviews.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ReviewCountArgs} args - Arguments to filter Reviews to count.
     * @example
     * // Count the number of Reviews
     * const count = await prisma.review.count({
     *   where: {
     *     // ... the filter for the Reviews we want to count
     *   }
     * })
    **/
    count<T extends ReviewCountArgs>(
      args?: Subset<T, ReviewCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ReviewCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Review.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ReviewAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ReviewAggregateArgs>(args: Subset<T, ReviewAggregateArgs>): Prisma.PrismaPromise<GetReviewAggregateType<T>>

    /**
     * Group by Review.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ReviewGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends ReviewGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: ReviewGroupByArgs['orderBy'] }
        : { orderBy?: ReviewGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, ReviewGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetReviewGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Review model
   */
  readonly fields: ReviewFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Review.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__ReviewClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    user<T extends UserDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UserDefaultArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    order<T extends Review$orderArgs<ExtArgs> = {}>(args?: Subset<T, Review$orderArgs<ExtArgs>>): Prisma__OrderClient<$Result.GetResult<Prisma.$OrderPayload<ExtArgs>, T, "findUniqueOrThrow"> | null, null, ExtArgs>
    store<T extends Review$storeArgs<ExtArgs> = {}>(args?: Subset<T, Review$storeArgs<ExtArgs>>): Prisma__StoreClient<$Result.GetResult<Prisma.$StorePayload<ExtArgs>, T, "findUniqueOrThrow"> | null, null, ExtArgs>
    product<T extends Review$productArgs<ExtArgs> = {}>(args?: Subset<T, Review$productArgs<ExtArgs>>): Prisma__ProductClient<$Result.GetResult<Prisma.$ProductPayload<ExtArgs>, T, "findUniqueOrThrow"> | null, null, ExtArgs>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Review model
   */ 
  interface ReviewFieldRefs {
    readonly id: FieldRef<"Review", 'String'>
    readonly userId: FieldRef<"Review", 'String'>
    readonly reviewableType: FieldRef<"Review", 'ReviewableType'>
    readonly reviewableId: FieldRef<"Review", 'String'>
    readonly rating: FieldRef<"Review", 'Int'>
    readonly title: FieldRef<"Review", 'String'>
    readonly content: FieldRef<"Review", 'String'>
    readonly qualityRating: FieldRef<"Review", 'Int'>
    readonly valueRating: FieldRef<"Review", 'Int'>
    readonly serviceRating: FieldRef<"Review", 'Int'>
    readonly effectsRating: FieldRef<"Review", 'Int'>
    readonly effects: FieldRef<"Review", 'Json'>
    readonly medicalBenefits: FieldRef<"Review", 'Json'>
    readonly sideEffects: FieldRef<"Review", 'Json'>
    readonly images: FieldRef<"Review", 'Json'>
    readonly status: FieldRef<"Review", 'ReviewStatus'>
    readonly moderatedAt: FieldRef<"Review", 'DateTime'>
    readonly moderatedBy: FieldRef<"Review", 'String'>
    readonly moderationReason: FieldRef<"Review", 'String'>
    readonly verifiedPurchase: FieldRef<"Review", 'Boolean'>
    readonly orderId: FieldRef<"Review", 'String'>
    readonly helpfulCount: FieldRef<"Review", 'Int'>
    readonly totalVotes: FieldRef<"Review", 'Int'>
    readonly createdAt: FieldRef<"Review", 'DateTime'>
    readonly updatedAt: FieldRef<"Review", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * Review findUnique
   */
  export type ReviewFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Review
     */
    select?: ReviewSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReviewInclude<ExtArgs> | null
    /**
     * Filter, which Review to fetch.
     */
    where: ReviewWhereUniqueInput
  }

  /**
   * Review findUniqueOrThrow
   */
  export type ReviewFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Review
     */
    select?: ReviewSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReviewInclude<ExtArgs> | null
    /**
     * Filter, which Review to fetch.
     */
    where: ReviewWhereUniqueInput
  }

  /**
   * Review findFirst
   */
  export type ReviewFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Review
     */
    select?: ReviewSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReviewInclude<ExtArgs> | null
    /**
     * Filter, which Review to fetch.
     */
    where?: ReviewWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Reviews to fetch.
     */
    orderBy?: ReviewOrderByWithRelationInput | ReviewOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Reviews.
     */
    cursor?: ReviewWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Reviews from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Reviews.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Reviews.
     */
    distinct?: ReviewScalarFieldEnum | ReviewScalarFieldEnum[]
  }

  /**
   * Review findFirstOrThrow
   */
  export type ReviewFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Review
     */
    select?: ReviewSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReviewInclude<ExtArgs> | null
    /**
     * Filter, which Review to fetch.
     */
    where?: ReviewWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Reviews to fetch.
     */
    orderBy?: ReviewOrderByWithRelationInput | ReviewOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Reviews.
     */
    cursor?: ReviewWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Reviews from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Reviews.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Reviews.
     */
    distinct?: ReviewScalarFieldEnum | ReviewScalarFieldEnum[]
  }

  /**
   * Review findMany
   */
  export type ReviewFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Review
     */
    select?: ReviewSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReviewInclude<ExtArgs> | null
    /**
     * Filter, which Reviews to fetch.
     */
    where?: ReviewWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Reviews to fetch.
     */
    orderBy?: ReviewOrderByWithRelationInput | ReviewOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Reviews.
     */
    cursor?: ReviewWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Reviews from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Reviews.
     */
    skip?: number
    distinct?: ReviewScalarFieldEnum | ReviewScalarFieldEnum[]
  }

  /**
   * Review create
   */
  export type ReviewCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Review
     */
    select?: ReviewSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReviewInclude<ExtArgs> | null
    /**
     * The data needed to create a Review.
     */
    data: XOR<ReviewCreateInput, ReviewUncheckedCreateInput>
  }

  /**
   * Review createMany
   */
  export type ReviewCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Reviews.
     */
    data: ReviewCreateManyInput | ReviewCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Review createManyAndReturn
   */
  export type ReviewCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Review
     */
    select?: ReviewSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many Reviews.
     */
    data: ReviewCreateManyInput | ReviewCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReviewIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Review update
   */
  export type ReviewUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Review
     */
    select?: ReviewSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReviewInclude<ExtArgs> | null
    /**
     * The data needed to update a Review.
     */
    data: XOR<ReviewUpdateInput, ReviewUncheckedUpdateInput>
    /**
     * Choose, which Review to update.
     */
    where: ReviewWhereUniqueInput
  }

  /**
   * Review updateMany
   */
  export type ReviewUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Reviews.
     */
    data: XOR<ReviewUpdateManyMutationInput, ReviewUncheckedUpdateManyInput>
    /**
     * Filter which Reviews to update
     */
    where?: ReviewWhereInput
  }

  /**
   * Review upsert
   */
  export type ReviewUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Review
     */
    select?: ReviewSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReviewInclude<ExtArgs> | null
    /**
     * The filter to search for the Review to update in case it exists.
     */
    where: ReviewWhereUniqueInput
    /**
     * In case the Review found by the `where` argument doesn't exist, create a new Review with this data.
     */
    create: XOR<ReviewCreateInput, ReviewUncheckedCreateInput>
    /**
     * In case the Review was found with the provided `where` argument, update it with this data.
     */
    update: XOR<ReviewUpdateInput, ReviewUncheckedUpdateInput>
  }

  /**
   * Review delete
   */
  export type ReviewDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Review
     */
    select?: ReviewSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReviewInclude<ExtArgs> | null
    /**
     * Filter which Review to delete.
     */
    where: ReviewWhereUniqueInput
  }

  /**
   * Review deleteMany
   */
  export type ReviewDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Reviews to delete
     */
    where?: ReviewWhereInput
  }

  /**
   * Review.order
   */
  export type Review$orderArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Order
     */
    select?: OrderSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrderInclude<ExtArgs> | null
    where?: OrderWhereInput
  }

  /**
   * Review.store
   */
  export type Review$storeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Store
     */
    select?: StoreSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: StoreInclude<ExtArgs> | null
    where?: StoreWhereInput
  }

  /**
   * Review.product
   */
  export type Review$productArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Product
     */
    select?: ProductSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductInclude<ExtArgs> | null
    where?: ProductWhereInput
  }

  /**
   * Review without action
   */
  export type ReviewDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Review
     */
    select?: ReviewSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReviewInclude<ExtArgs> | null
  }


  /**
   * Model Professional
   */

  export type AggregateProfessional = {
    _count: ProfessionalCountAggregateOutputType | null
    _avg: ProfessionalAvgAggregateOutputType | null
    _sum: ProfessionalSumAggregateOutputType | null
    _min: ProfessionalMinAggregateOutputType | null
    _max: ProfessionalMaxAggregateOutputType | null
  }

  export type ProfessionalAvgAggregateOutputType = {
    cannabisExperienceYears: number | null
    hourlyRate: Decimal | null
    consultationCount: number | null
    averageRating: Decimal | null
    reviewCount: number | null
  }

  export type ProfessionalSumAggregateOutputType = {
    cannabisExperienceYears: number | null
    hourlyRate: Decimal | null
    consultationCount: number | null
    averageRating: Decimal | null
    reviewCount: number | null
  }

  export type ProfessionalMinAggregateOutputType = {
    id: string | null
    userId: string | null
    professionalType: $Enums.ProfessionalType | null
    licenseNumber: string | null
    licenseState: string | null
    licenseExpiresAt: Date | null
    practiceName: string | null
    practicePhone: string | null
    practiceWebsite: string | null
    cannabisExperienceYears: number | null
    hourlyRate: Decimal | null
    acceptsInsurance: boolean | null
    verified: boolean | null
    verifiedAt: Date | null
    verifiedBy: string | null
    consultationCount: number | null
    averageRating: Decimal | null
    reviewCount: number | null
    status: string | null
    acceptingNewPatients: boolean | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type ProfessionalMaxAggregateOutputType = {
    id: string | null
    userId: string | null
    professionalType: $Enums.ProfessionalType | null
    licenseNumber: string | null
    licenseState: string | null
    licenseExpiresAt: Date | null
    practiceName: string | null
    practicePhone: string | null
    practiceWebsite: string | null
    cannabisExperienceYears: number | null
    hourlyRate: Decimal | null
    acceptsInsurance: boolean | null
    verified: boolean | null
    verifiedAt: Date | null
    verifiedBy: string | null
    consultationCount: number | null
    averageRating: Decimal | null
    reviewCount: number | null
    status: string | null
    acceptingNewPatients: boolean | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type ProfessionalCountAggregateOutputType = {
    id: number
    userId: number
    professionalType: number
    licenseNumber: number
    licenseState: number
    licenseExpiresAt: number
    specializations: number
    certifications: number
    practiceName: number
    practiceAddress: number
    practicePhone: number
    practiceWebsite: number
    cannabisExperienceYears: number
    cannabisCertifications: number
    preferredProducts: number
    treatmentApproaches: number
    consultationTypes: number
    hourlyRate: number
    acceptsInsurance: number
    insuranceProviders: number
    verified: number
    verifiedAt: number
    verifiedBy: number
    verificationDocuments: number
    consultationCount: number
    averageRating: number
    reviewCount: number
    status: number
    acceptingNewPatients: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type ProfessionalAvgAggregateInputType = {
    cannabisExperienceYears?: true
    hourlyRate?: true
    consultationCount?: true
    averageRating?: true
    reviewCount?: true
  }

  export type ProfessionalSumAggregateInputType = {
    cannabisExperienceYears?: true
    hourlyRate?: true
    consultationCount?: true
    averageRating?: true
    reviewCount?: true
  }

  export type ProfessionalMinAggregateInputType = {
    id?: true
    userId?: true
    professionalType?: true
    licenseNumber?: true
    licenseState?: true
    licenseExpiresAt?: true
    practiceName?: true
    practicePhone?: true
    practiceWebsite?: true
    cannabisExperienceYears?: true
    hourlyRate?: true
    acceptsInsurance?: true
    verified?: true
    verifiedAt?: true
    verifiedBy?: true
    consultationCount?: true
    averageRating?: true
    reviewCount?: true
    status?: true
    acceptingNewPatients?: true
    createdAt?: true
    updatedAt?: true
  }

  export type ProfessionalMaxAggregateInputType = {
    id?: true
    userId?: true
    professionalType?: true
    licenseNumber?: true
    licenseState?: true
    licenseExpiresAt?: true
    practiceName?: true
    practicePhone?: true
    practiceWebsite?: true
    cannabisExperienceYears?: true
    hourlyRate?: true
    acceptsInsurance?: true
    verified?: true
    verifiedAt?: true
    verifiedBy?: true
    consultationCount?: true
    averageRating?: true
    reviewCount?: true
    status?: true
    acceptingNewPatients?: true
    createdAt?: true
    updatedAt?: true
  }

  export type ProfessionalCountAggregateInputType = {
    id?: true
    userId?: true
    professionalType?: true
    licenseNumber?: true
    licenseState?: true
    licenseExpiresAt?: true
    specializations?: true
    certifications?: true
    practiceName?: true
    practiceAddress?: true
    practicePhone?: true
    practiceWebsite?: true
    cannabisExperienceYears?: true
    cannabisCertifications?: true
    preferredProducts?: true
    treatmentApproaches?: true
    consultationTypes?: true
    hourlyRate?: true
    acceptsInsurance?: true
    insuranceProviders?: true
    verified?: true
    verifiedAt?: true
    verifiedBy?: true
    verificationDocuments?: true
    consultationCount?: true
    averageRating?: true
    reviewCount?: true
    status?: true
    acceptingNewPatients?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type ProfessionalAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Professional to aggregate.
     */
    where?: ProfessionalWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Professionals to fetch.
     */
    orderBy?: ProfessionalOrderByWithRelationInput | ProfessionalOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: ProfessionalWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Professionals from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Professionals.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Professionals
    **/
    _count?: true | ProfessionalCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: ProfessionalAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: ProfessionalSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ProfessionalMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ProfessionalMaxAggregateInputType
  }

  export type GetProfessionalAggregateType<T extends ProfessionalAggregateArgs> = {
        [P in keyof T & keyof AggregateProfessional]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateProfessional[P]>
      : GetScalarType<T[P], AggregateProfessional[P]>
  }




  export type ProfessionalGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ProfessionalWhereInput
    orderBy?: ProfessionalOrderByWithAggregationInput | ProfessionalOrderByWithAggregationInput[]
    by: ProfessionalScalarFieldEnum[] | ProfessionalScalarFieldEnum
    having?: ProfessionalScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ProfessionalCountAggregateInputType | true
    _avg?: ProfessionalAvgAggregateInputType
    _sum?: ProfessionalSumAggregateInputType
    _min?: ProfessionalMinAggregateInputType
    _max?: ProfessionalMaxAggregateInputType
  }

  export type ProfessionalGroupByOutputType = {
    id: string
    userId: string
    professionalType: $Enums.ProfessionalType
    licenseNumber: string
    licenseState: string
    licenseExpiresAt: Date
    specializations: JsonValue | null
    certifications: JsonValue | null
    practiceName: string | null
    practiceAddress: JsonValue | null
    practicePhone: string | null
    practiceWebsite: string | null
    cannabisExperienceYears: number | null
    cannabisCertifications: JsonValue | null
    preferredProducts: JsonValue | null
    treatmentApproaches: JsonValue | null
    consultationTypes: JsonValue | null
    hourlyRate: Decimal | null
    acceptsInsurance: boolean
    insuranceProviders: JsonValue | null
    verified: boolean
    verifiedAt: Date | null
    verifiedBy: string | null
    verificationDocuments: JsonValue | null
    consultationCount: number
    averageRating: Decimal
    reviewCount: number
    status: string
    acceptingNewPatients: boolean
    createdAt: Date
    updatedAt: Date
    _count: ProfessionalCountAggregateOutputType | null
    _avg: ProfessionalAvgAggregateOutputType | null
    _sum: ProfessionalSumAggregateOutputType | null
    _min: ProfessionalMinAggregateOutputType | null
    _max: ProfessionalMaxAggregateOutputType | null
  }

  type GetProfessionalGroupByPayload<T extends ProfessionalGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<ProfessionalGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ProfessionalGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ProfessionalGroupByOutputType[P]>
            : GetScalarType<T[P], ProfessionalGroupByOutputType[P]>
        }
      >
    >


  export type ProfessionalSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    userId?: boolean
    professionalType?: boolean
    licenseNumber?: boolean
    licenseState?: boolean
    licenseExpiresAt?: boolean
    specializations?: boolean
    certifications?: boolean
    practiceName?: boolean
    practiceAddress?: boolean
    practicePhone?: boolean
    practiceWebsite?: boolean
    cannabisExperienceYears?: boolean
    cannabisCertifications?: boolean
    preferredProducts?: boolean
    treatmentApproaches?: boolean
    consultationTypes?: boolean
    hourlyRate?: boolean
    acceptsInsurance?: boolean
    insuranceProviders?: boolean
    verified?: boolean
    verifiedAt?: boolean
    verifiedBy?: boolean
    verificationDocuments?: boolean
    consultationCount?: boolean
    averageRating?: boolean
    reviewCount?: boolean
    status?: boolean
    acceptingNewPatients?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    user?: boolean | UserDefaultArgs<ExtArgs>
    consultations?: boolean | Professional$consultationsArgs<ExtArgs>
    _count?: boolean | ProfessionalCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["professional"]>

  export type ProfessionalSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    userId?: boolean
    professionalType?: boolean
    licenseNumber?: boolean
    licenseState?: boolean
    licenseExpiresAt?: boolean
    specializations?: boolean
    certifications?: boolean
    practiceName?: boolean
    practiceAddress?: boolean
    practicePhone?: boolean
    practiceWebsite?: boolean
    cannabisExperienceYears?: boolean
    cannabisCertifications?: boolean
    preferredProducts?: boolean
    treatmentApproaches?: boolean
    consultationTypes?: boolean
    hourlyRate?: boolean
    acceptsInsurance?: boolean
    insuranceProviders?: boolean
    verified?: boolean
    verifiedAt?: boolean
    verifiedBy?: boolean
    verificationDocuments?: boolean
    consultationCount?: boolean
    averageRating?: boolean
    reviewCount?: boolean
    status?: boolean
    acceptingNewPatients?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    user?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["professional"]>

  export type ProfessionalSelectScalar = {
    id?: boolean
    userId?: boolean
    professionalType?: boolean
    licenseNumber?: boolean
    licenseState?: boolean
    licenseExpiresAt?: boolean
    specializations?: boolean
    certifications?: boolean
    practiceName?: boolean
    practiceAddress?: boolean
    practicePhone?: boolean
    practiceWebsite?: boolean
    cannabisExperienceYears?: boolean
    cannabisCertifications?: boolean
    preferredProducts?: boolean
    treatmentApproaches?: boolean
    consultationTypes?: boolean
    hourlyRate?: boolean
    acceptsInsurance?: boolean
    insuranceProviders?: boolean
    verified?: boolean
    verifiedAt?: boolean
    verifiedBy?: boolean
    verificationDocuments?: boolean
    consultationCount?: boolean
    averageRating?: boolean
    reviewCount?: boolean
    status?: boolean
    acceptingNewPatients?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type ProfessionalInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | UserDefaultArgs<ExtArgs>
    consultations?: boolean | Professional$consultationsArgs<ExtArgs>
    _count?: boolean | ProfessionalCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type ProfessionalIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | UserDefaultArgs<ExtArgs>
  }

  export type $ProfessionalPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Professional"
    objects: {
      user: Prisma.$UserPayload<ExtArgs>
      consultations: Prisma.$ConsultationPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      userId: string
      professionalType: $Enums.ProfessionalType
      licenseNumber: string
      licenseState: string
      licenseExpiresAt: Date
      specializations: Prisma.JsonValue | null
      certifications: Prisma.JsonValue | null
      practiceName: string | null
      practiceAddress: Prisma.JsonValue | null
      practicePhone: string | null
      practiceWebsite: string | null
      cannabisExperienceYears: number | null
      cannabisCertifications: Prisma.JsonValue | null
      preferredProducts: Prisma.JsonValue | null
      treatmentApproaches: Prisma.JsonValue | null
      consultationTypes: Prisma.JsonValue | null
      hourlyRate: Prisma.Decimal | null
      acceptsInsurance: boolean
      insuranceProviders: Prisma.JsonValue | null
      verified: boolean
      verifiedAt: Date | null
      verifiedBy: string | null
      verificationDocuments: Prisma.JsonValue | null
      consultationCount: number
      averageRating: Prisma.Decimal
      reviewCount: number
      status: string
      acceptingNewPatients: boolean
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["professional"]>
    composites: {}
  }

  type ProfessionalGetPayload<S extends boolean | null | undefined | ProfessionalDefaultArgs> = $Result.GetResult<Prisma.$ProfessionalPayload, S>

  type ProfessionalCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<ProfessionalFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: ProfessionalCountAggregateInputType | true
    }

  export interface ProfessionalDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Professional'], meta: { name: 'Professional' } }
    /**
     * Find zero or one Professional that matches the filter.
     * @param {ProfessionalFindUniqueArgs} args - Arguments to find a Professional
     * @example
     * // Get one Professional
     * const professional = await prisma.professional.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends ProfessionalFindUniqueArgs>(args: SelectSubset<T, ProfessionalFindUniqueArgs<ExtArgs>>): Prisma__ProfessionalClient<$Result.GetResult<Prisma.$ProfessionalPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one Professional that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {ProfessionalFindUniqueOrThrowArgs} args - Arguments to find a Professional
     * @example
     * // Get one Professional
     * const professional = await prisma.professional.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends ProfessionalFindUniqueOrThrowArgs>(args: SelectSubset<T, ProfessionalFindUniqueOrThrowArgs<ExtArgs>>): Prisma__ProfessionalClient<$Result.GetResult<Prisma.$ProfessionalPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first Professional that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProfessionalFindFirstArgs} args - Arguments to find a Professional
     * @example
     * // Get one Professional
     * const professional = await prisma.professional.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends ProfessionalFindFirstArgs>(args?: SelectSubset<T, ProfessionalFindFirstArgs<ExtArgs>>): Prisma__ProfessionalClient<$Result.GetResult<Prisma.$ProfessionalPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first Professional that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProfessionalFindFirstOrThrowArgs} args - Arguments to find a Professional
     * @example
     * // Get one Professional
     * const professional = await prisma.professional.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends ProfessionalFindFirstOrThrowArgs>(args?: SelectSubset<T, ProfessionalFindFirstOrThrowArgs<ExtArgs>>): Prisma__ProfessionalClient<$Result.GetResult<Prisma.$ProfessionalPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more Professionals that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProfessionalFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Professionals
     * const professionals = await prisma.professional.findMany()
     * 
     * // Get first 10 Professionals
     * const professionals = await prisma.professional.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const professionalWithIdOnly = await prisma.professional.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends ProfessionalFindManyArgs>(args?: SelectSubset<T, ProfessionalFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ProfessionalPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a Professional.
     * @param {ProfessionalCreateArgs} args - Arguments to create a Professional.
     * @example
     * // Create one Professional
     * const Professional = await prisma.professional.create({
     *   data: {
     *     // ... data to create a Professional
     *   }
     * })
     * 
     */
    create<T extends ProfessionalCreateArgs>(args: SelectSubset<T, ProfessionalCreateArgs<ExtArgs>>): Prisma__ProfessionalClient<$Result.GetResult<Prisma.$ProfessionalPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many Professionals.
     * @param {ProfessionalCreateManyArgs} args - Arguments to create many Professionals.
     * @example
     * // Create many Professionals
     * const professional = await prisma.professional.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends ProfessionalCreateManyArgs>(args?: SelectSubset<T, ProfessionalCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Professionals and returns the data saved in the database.
     * @param {ProfessionalCreateManyAndReturnArgs} args - Arguments to create many Professionals.
     * @example
     * // Create many Professionals
     * const professional = await prisma.professional.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Professionals and only return the `id`
     * const professionalWithIdOnly = await prisma.professional.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends ProfessionalCreateManyAndReturnArgs>(args?: SelectSubset<T, ProfessionalCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ProfessionalPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a Professional.
     * @param {ProfessionalDeleteArgs} args - Arguments to delete one Professional.
     * @example
     * // Delete one Professional
     * const Professional = await prisma.professional.delete({
     *   where: {
     *     // ... filter to delete one Professional
     *   }
     * })
     * 
     */
    delete<T extends ProfessionalDeleteArgs>(args: SelectSubset<T, ProfessionalDeleteArgs<ExtArgs>>): Prisma__ProfessionalClient<$Result.GetResult<Prisma.$ProfessionalPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one Professional.
     * @param {ProfessionalUpdateArgs} args - Arguments to update one Professional.
     * @example
     * // Update one Professional
     * const professional = await prisma.professional.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends ProfessionalUpdateArgs>(args: SelectSubset<T, ProfessionalUpdateArgs<ExtArgs>>): Prisma__ProfessionalClient<$Result.GetResult<Prisma.$ProfessionalPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more Professionals.
     * @param {ProfessionalDeleteManyArgs} args - Arguments to filter Professionals to delete.
     * @example
     * // Delete a few Professionals
     * const { count } = await prisma.professional.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends ProfessionalDeleteManyArgs>(args?: SelectSubset<T, ProfessionalDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Professionals.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProfessionalUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Professionals
     * const professional = await prisma.professional.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends ProfessionalUpdateManyArgs>(args: SelectSubset<T, ProfessionalUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Professional.
     * @param {ProfessionalUpsertArgs} args - Arguments to update or create a Professional.
     * @example
     * // Update or create a Professional
     * const professional = await prisma.professional.upsert({
     *   create: {
     *     // ... data to create a Professional
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Professional we want to update
     *   }
     * })
     */
    upsert<T extends ProfessionalUpsertArgs>(args: SelectSubset<T, ProfessionalUpsertArgs<ExtArgs>>): Prisma__ProfessionalClient<$Result.GetResult<Prisma.$ProfessionalPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of Professionals.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProfessionalCountArgs} args - Arguments to filter Professionals to count.
     * @example
     * // Count the number of Professionals
     * const count = await prisma.professional.count({
     *   where: {
     *     // ... the filter for the Professionals we want to count
     *   }
     * })
    **/
    count<T extends ProfessionalCountArgs>(
      args?: Subset<T, ProfessionalCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ProfessionalCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Professional.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProfessionalAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ProfessionalAggregateArgs>(args: Subset<T, ProfessionalAggregateArgs>): Prisma.PrismaPromise<GetProfessionalAggregateType<T>>

    /**
     * Group by Professional.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProfessionalGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends ProfessionalGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: ProfessionalGroupByArgs['orderBy'] }
        : { orderBy?: ProfessionalGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, ProfessionalGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetProfessionalGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Professional model
   */
  readonly fields: ProfessionalFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Professional.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__ProfessionalClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    user<T extends UserDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UserDefaultArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    consultations<T extends Professional$consultationsArgs<ExtArgs> = {}>(args?: Subset<T, Professional$consultationsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ConsultationPayload<ExtArgs>, T, "findMany"> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Professional model
   */ 
  interface ProfessionalFieldRefs {
    readonly id: FieldRef<"Professional", 'String'>
    readonly userId: FieldRef<"Professional", 'String'>
    readonly professionalType: FieldRef<"Professional", 'ProfessionalType'>
    readonly licenseNumber: FieldRef<"Professional", 'String'>
    readonly licenseState: FieldRef<"Professional", 'String'>
    readonly licenseExpiresAt: FieldRef<"Professional", 'DateTime'>
    readonly specializations: FieldRef<"Professional", 'Json'>
    readonly certifications: FieldRef<"Professional", 'Json'>
    readonly practiceName: FieldRef<"Professional", 'String'>
    readonly practiceAddress: FieldRef<"Professional", 'Json'>
    readonly practicePhone: FieldRef<"Professional", 'String'>
    readonly practiceWebsite: FieldRef<"Professional", 'String'>
    readonly cannabisExperienceYears: FieldRef<"Professional", 'Int'>
    readonly cannabisCertifications: FieldRef<"Professional", 'Json'>
    readonly preferredProducts: FieldRef<"Professional", 'Json'>
    readonly treatmentApproaches: FieldRef<"Professional", 'Json'>
    readonly consultationTypes: FieldRef<"Professional", 'Json'>
    readonly hourlyRate: FieldRef<"Professional", 'Decimal'>
    readonly acceptsInsurance: FieldRef<"Professional", 'Boolean'>
    readonly insuranceProviders: FieldRef<"Professional", 'Json'>
    readonly verified: FieldRef<"Professional", 'Boolean'>
    readonly verifiedAt: FieldRef<"Professional", 'DateTime'>
    readonly verifiedBy: FieldRef<"Professional", 'String'>
    readonly verificationDocuments: FieldRef<"Professional", 'Json'>
    readonly consultationCount: FieldRef<"Professional", 'Int'>
    readonly averageRating: FieldRef<"Professional", 'Decimal'>
    readonly reviewCount: FieldRef<"Professional", 'Int'>
    readonly status: FieldRef<"Professional", 'String'>
    readonly acceptingNewPatients: FieldRef<"Professional", 'Boolean'>
    readonly createdAt: FieldRef<"Professional", 'DateTime'>
    readonly updatedAt: FieldRef<"Professional", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * Professional findUnique
   */
  export type ProfessionalFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Professional
     */
    select?: ProfessionalSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProfessionalInclude<ExtArgs> | null
    /**
     * Filter, which Professional to fetch.
     */
    where: ProfessionalWhereUniqueInput
  }

  /**
   * Professional findUniqueOrThrow
   */
  export type ProfessionalFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Professional
     */
    select?: ProfessionalSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProfessionalInclude<ExtArgs> | null
    /**
     * Filter, which Professional to fetch.
     */
    where: ProfessionalWhereUniqueInput
  }

  /**
   * Professional findFirst
   */
  export type ProfessionalFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Professional
     */
    select?: ProfessionalSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProfessionalInclude<ExtArgs> | null
    /**
     * Filter, which Professional to fetch.
     */
    where?: ProfessionalWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Professionals to fetch.
     */
    orderBy?: ProfessionalOrderByWithRelationInput | ProfessionalOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Professionals.
     */
    cursor?: ProfessionalWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Professionals from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Professionals.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Professionals.
     */
    distinct?: ProfessionalScalarFieldEnum | ProfessionalScalarFieldEnum[]
  }

  /**
   * Professional findFirstOrThrow
   */
  export type ProfessionalFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Professional
     */
    select?: ProfessionalSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProfessionalInclude<ExtArgs> | null
    /**
     * Filter, which Professional to fetch.
     */
    where?: ProfessionalWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Professionals to fetch.
     */
    orderBy?: ProfessionalOrderByWithRelationInput | ProfessionalOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Professionals.
     */
    cursor?: ProfessionalWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Professionals from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Professionals.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Professionals.
     */
    distinct?: ProfessionalScalarFieldEnum | ProfessionalScalarFieldEnum[]
  }

  /**
   * Professional findMany
   */
  export type ProfessionalFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Professional
     */
    select?: ProfessionalSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProfessionalInclude<ExtArgs> | null
    /**
     * Filter, which Professionals to fetch.
     */
    where?: ProfessionalWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Professionals to fetch.
     */
    orderBy?: ProfessionalOrderByWithRelationInput | ProfessionalOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Professionals.
     */
    cursor?: ProfessionalWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Professionals from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Professionals.
     */
    skip?: number
    distinct?: ProfessionalScalarFieldEnum | ProfessionalScalarFieldEnum[]
  }

  /**
   * Professional create
   */
  export type ProfessionalCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Professional
     */
    select?: ProfessionalSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProfessionalInclude<ExtArgs> | null
    /**
     * The data needed to create a Professional.
     */
    data: XOR<ProfessionalCreateInput, ProfessionalUncheckedCreateInput>
  }

  /**
   * Professional createMany
   */
  export type ProfessionalCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Professionals.
     */
    data: ProfessionalCreateManyInput | ProfessionalCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Professional createManyAndReturn
   */
  export type ProfessionalCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Professional
     */
    select?: ProfessionalSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many Professionals.
     */
    data: ProfessionalCreateManyInput | ProfessionalCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProfessionalIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Professional update
   */
  export type ProfessionalUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Professional
     */
    select?: ProfessionalSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProfessionalInclude<ExtArgs> | null
    /**
     * The data needed to update a Professional.
     */
    data: XOR<ProfessionalUpdateInput, ProfessionalUncheckedUpdateInput>
    /**
     * Choose, which Professional to update.
     */
    where: ProfessionalWhereUniqueInput
  }

  /**
   * Professional updateMany
   */
  export type ProfessionalUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Professionals.
     */
    data: XOR<ProfessionalUpdateManyMutationInput, ProfessionalUncheckedUpdateManyInput>
    /**
     * Filter which Professionals to update
     */
    where?: ProfessionalWhereInput
  }

  /**
   * Professional upsert
   */
  export type ProfessionalUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Professional
     */
    select?: ProfessionalSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProfessionalInclude<ExtArgs> | null
    /**
     * The filter to search for the Professional to update in case it exists.
     */
    where: ProfessionalWhereUniqueInput
    /**
     * In case the Professional found by the `where` argument doesn't exist, create a new Professional with this data.
     */
    create: XOR<ProfessionalCreateInput, ProfessionalUncheckedCreateInput>
    /**
     * In case the Professional was found with the provided `where` argument, update it with this data.
     */
    update: XOR<ProfessionalUpdateInput, ProfessionalUncheckedUpdateInput>
  }

  /**
   * Professional delete
   */
  export type ProfessionalDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Professional
     */
    select?: ProfessionalSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProfessionalInclude<ExtArgs> | null
    /**
     * Filter which Professional to delete.
     */
    where: ProfessionalWhereUniqueInput
  }

  /**
   * Professional deleteMany
   */
  export type ProfessionalDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Professionals to delete
     */
    where?: ProfessionalWhereInput
  }

  /**
   * Professional.consultations
   */
  export type Professional$consultationsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Consultation
     */
    select?: ConsultationSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ConsultationInclude<ExtArgs> | null
    where?: ConsultationWhereInput
    orderBy?: ConsultationOrderByWithRelationInput | ConsultationOrderByWithRelationInput[]
    cursor?: ConsultationWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ConsultationScalarFieldEnum | ConsultationScalarFieldEnum[]
  }

  /**
   * Professional without action
   */
  export type ProfessionalDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Professional
     */
    select?: ProfessionalSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProfessionalInclude<ExtArgs> | null
  }


  /**
   * Model Consultation
   */

  export type AggregateConsultation = {
    _count: ConsultationCountAggregateOutputType | null
    _avg: ConsultationAvgAggregateOutputType | null
    _sum: ConsultationSumAggregateOutputType | null
    _min: ConsultationMinAggregateOutputType | null
    _max: ConsultationMaxAggregateOutputType | null
  }

  export type ConsultationAvgAggregateOutputType = {
    durationMinutes: number | null
    consultationFee: Decimal | null
  }

  export type ConsultationSumAggregateOutputType = {
    durationMinutes: number | null
    consultationFee: Decimal | null
  }

  export type ConsultationMinAggregateOutputType = {
    id: string | null
    patientId: string | null
    professionalId: string | null
    consultationType: $Enums.ConsultationType | null
    sessionType: $Enums.SessionType | null
    scheduledAt: Date | null
    durationMinutes: number | null
    timezone: string | null
    status: string | null
    meetingUrl: string | null
    meetingId: string | null
    meetingPassword: string | null
    chiefComplaint: string | null
    cannabisExperience: string | null
    previousCannabisUse: string | null
    assessment: string | null
    recommendations: string | null
    followUpNeeded: boolean | null
    followUpDate: Date | null
    consultationFee: Decimal | null
    paymentStatus: string | null
    paymentId: string | null
    medicalConsentSigned: boolean | null
    privacyConsentSigned: boolean | null
    consultationAgreementSigned: boolean | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type ConsultationMaxAggregateOutputType = {
    id: string | null
    patientId: string | null
    professionalId: string | null
    consultationType: $Enums.ConsultationType | null
    sessionType: $Enums.SessionType | null
    scheduledAt: Date | null
    durationMinutes: number | null
    timezone: string | null
    status: string | null
    meetingUrl: string | null
    meetingId: string | null
    meetingPassword: string | null
    chiefComplaint: string | null
    cannabisExperience: string | null
    previousCannabisUse: string | null
    assessment: string | null
    recommendations: string | null
    followUpNeeded: boolean | null
    followUpDate: Date | null
    consultationFee: Decimal | null
    paymentStatus: string | null
    paymentId: string | null
    medicalConsentSigned: boolean | null
    privacyConsentSigned: boolean | null
    consultationAgreementSigned: boolean | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type ConsultationCountAggregateOutputType = {
    id: number
    patientId: number
    professionalId: number
    consultationType: number
    sessionType: number
    scheduledAt: number
    durationMinutes: number
    timezone: number
    status: number
    meetingUrl: number
    meetingId: number
    meetingPassword: number
    chiefComplaint: number
    symptoms: number
    currentMedications: number
    cannabisExperience: number
    previousCannabisUse: number
    assessment: number
    recommendations: number
    prescribedProducts: number
    followUpNeeded: number
    followUpDate: number
    consultationFee: number
    paymentStatus: number
    paymentId: number
    medicalConsentSigned: number
    privacyConsentSigned: number
    consultationAgreementSigned: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type ConsultationAvgAggregateInputType = {
    durationMinutes?: true
    consultationFee?: true
  }

  export type ConsultationSumAggregateInputType = {
    durationMinutes?: true
    consultationFee?: true
  }

  export type ConsultationMinAggregateInputType = {
    id?: true
    patientId?: true
    professionalId?: true
    consultationType?: true
    sessionType?: true
    scheduledAt?: true
    durationMinutes?: true
    timezone?: true
    status?: true
    meetingUrl?: true
    meetingId?: true
    meetingPassword?: true
    chiefComplaint?: true
    cannabisExperience?: true
    previousCannabisUse?: true
    assessment?: true
    recommendations?: true
    followUpNeeded?: true
    followUpDate?: true
    consultationFee?: true
    paymentStatus?: true
    paymentId?: true
    medicalConsentSigned?: true
    privacyConsentSigned?: true
    consultationAgreementSigned?: true
    createdAt?: true
    updatedAt?: true
  }

  export type ConsultationMaxAggregateInputType = {
    id?: true
    patientId?: true
    professionalId?: true
    consultationType?: true
    sessionType?: true
    scheduledAt?: true
    durationMinutes?: true
    timezone?: true
    status?: true
    meetingUrl?: true
    meetingId?: true
    meetingPassword?: true
    chiefComplaint?: true
    cannabisExperience?: true
    previousCannabisUse?: true
    assessment?: true
    recommendations?: true
    followUpNeeded?: true
    followUpDate?: true
    consultationFee?: true
    paymentStatus?: true
    paymentId?: true
    medicalConsentSigned?: true
    privacyConsentSigned?: true
    consultationAgreementSigned?: true
    createdAt?: true
    updatedAt?: true
  }

  export type ConsultationCountAggregateInputType = {
    id?: true
    patientId?: true
    professionalId?: true
    consultationType?: true
    sessionType?: true
    scheduledAt?: true
    durationMinutes?: true
    timezone?: true
    status?: true
    meetingUrl?: true
    meetingId?: true
    meetingPassword?: true
    chiefComplaint?: true
    symptoms?: true
    currentMedications?: true
    cannabisExperience?: true
    previousCannabisUse?: true
    assessment?: true
    recommendations?: true
    prescribedProducts?: true
    followUpNeeded?: true
    followUpDate?: true
    consultationFee?: true
    paymentStatus?: true
    paymentId?: true
    medicalConsentSigned?: true
    privacyConsentSigned?: true
    consultationAgreementSigned?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type ConsultationAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Consultation to aggregate.
     */
    where?: ConsultationWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Consultations to fetch.
     */
    orderBy?: ConsultationOrderByWithRelationInput | ConsultationOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: ConsultationWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Consultations from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Consultations.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Consultations
    **/
    _count?: true | ConsultationCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: ConsultationAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: ConsultationSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ConsultationMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ConsultationMaxAggregateInputType
  }

  export type GetConsultationAggregateType<T extends ConsultationAggregateArgs> = {
        [P in keyof T & keyof AggregateConsultation]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateConsultation[P]>
      : GetScalarType<T[P], AggregateConsultation[P]>
  }




  export type ConsultationGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ConsultationWhereInput
    orderBy?: ConsultationOrderByWithAggregationInput | ConsultationOrderByWithAggregationInput[]
    by: ConsultationScalarFieldEnum[] | ConsultationScalarFieldEnum
    having?: ConsultationScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ConsultationCountAggregateInputType | true
    _avg?: ConsultationAvgAggregateInputType
    _sum?: ConsultationSumAggregateInputType
    _min?: ConsultationMinAggregateInputType
    _max?: ConsultationMaxAggregateInputType
  }

  export type ConsultationGroupByOutputType = {
    id: string
    patientId: string
    professionalId: string
    consultationType: $Enums.ConsultationType
    sessionType: $Enums.SessionType
    scheduledAt: Date
    durationMinutes: number
    timezone: string
    status: string
    meetingUrl: string | null
    meetingId: string | null
    meetingPassword: string | null
    chiefComplaint: string | null
    symptoms: JsonValue | null
    currentMedications: JsonValue | null
    cannabisExperience: string | null
    previousCannabisUse: string | null
    assessment: string | null
    recommendations: string | null
    prescribedProducts: JsonValue | null
    followUpNeeded: boolean
    followUpDate: Date | null
    consultationFee: Decimal
    paymentStatus: string
    paymentId: string | null
    medicalConsentSigned: boolean
    privacyConsentSigned: boolean
    consultationAgreementSigned: boolean
    createdAt: Date
    updatedAt: Date
    _count: ConsultationCountAggregateOutputType | null
    _avg: ConsultationAvgAggregateOutputType | null
    _sum: ConsultationSumAggregateOutputType | null
    _min: ConsultationMinAggregateOutputType | null
    _max: ConsultationMaxAggregateOutputType | null
  }

  type GetConsultationGroupByPayload<T extends ConsultationGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<ConsultationGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ConsultationGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ConsultationGroupByOutputType[P]>
            : GetScalarType<T[P], ConsultationGroupByOutputType[P]>
        }
      >
    >


  export type ConsultationSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    patientId?: boolean
    professionalId?: boolean
    consultationType?: boolean
    sessionType?: boolean
    scheduledAt?: boolean
    durationMinutes?: boolean
    timezone?: boolean
    status?: boolean
    meetingUrl?: boolean
    meetingId?: boolean
    meetingPassword?: boolean
    chiefComplaint?: boolean
    symptoms?: boolean
    currentMedications?: boolean
    cannabisExperience?: boolean
    previousCannabisUse?: boolean
    assessment?: boolean
    recommendations?: boolean
    prescribedProducts?: boolean
    followUpNeeded?: boolean
    followUpDate?: boolean
    consultationFee?: boolean
    paymentStatus?: boolean
    paymentId?: boolean
    medicalConsentSigned?: boolean
    privacyConsentSigned?: boolean
    consultationAgreementSigned?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    patient?: boolean | UserDefaultArgs<ExtArgs>
    professional?: boolean | ProfessionalDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["consultation"]>

  export type ConsultationSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    patientId?: boolean
    professionalId?: boolean
    consultationType?: boolean
    sessionType?: boolean
    scheduledAt?: boolean
    durationMinutes?: boolean
    timezone?: boolean
    status?: boolean
    meetingUrl?: boolean
    meetingId?: boolean
    meetingPassword?: boolean
    chiefComplaint?: boolean
    symptoms?: boolean
    currentMedications?: boolean
    cannabisExperience?: boolean
    previousCannabisUse?: boolean
    assessment?: boolean
    recommendations?: boolean
    prescribedProducts?: boolean
    followUpNeeded?: boolean
    followUpDate?: boolean
    consultationFee?: boolean
    paymentStatus?: boolean
    paymentId?: boolean
    medicalConsentSigned?: boolean
    privacyConsentSigned?: boolean
    consultationAgreementSigned?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    patient?: boolean | UserDefaultArgs<ExtArgs>
    professional?: boolean | ProfessionalDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["consultation"]>

  export type ConsultationSelectScalar = {
    id?: boolean
    patientId?: boolean
    professionalId?: boolean
    consultationType?: boolean
    sessionType?: boolean
    scheduledAt?: boolean
    durationMinutes?: boolean
    timezone?: boolean
    status?: boolean
    meetingUrl?: boolean
    meetingId?: boolean
    meetingPassword?: boolean
    chiefComplaint?: boolean
    symptoms?: boolean
    currentMedications?: boolean
    cannabisExperience?: boolean
    previousCannabisUse?: boolean
    assessment?: boolean
    recommendations?: boolean
    prescribedProducts?: boolean
    followUpNeeded?: boolean
    followUpDate?: boolean
    consultationFee?: boolean
    paymentStatus?: boolean
    paymentId?: boolean
    medicalConsentSigned?: boolean
    privacyConsentSigned?: boolean
    consultationAgreementSigned?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type ConsultationInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    patient?: boolean | UserDefaultArgs<ExtArgs>
    professional?: boolean | ProfessionalDefaultArgs<ExtArgs>
  }
  export type ConsultationIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    patient?: boolean | UserDefaultArgs<ExtArgs>
    professional?: boolean | ProfessionalDefaultArgs<ExtArgs>
  }

  export type $ConsultationPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Consultation"
    objects: {
      patient: Prisma.$UserPayload<ExtArgs>
      professional: Prisma.$ProfessionalPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      patientId: string
      professionalId: string
      consultationType: $Enums.ConsultationType
      sessionType: $Enums.SessionType
      scheduledAt: Date
      durationMinutes: number
      timezone: string
      status: string
      meetingUrl: string | null
      meetingId: string | null
      meetingPassword: string | null
      chiefComplaint: string | null
      symptoms: Prisma.JsonValue | null
      currentMedications: Prisma.JsonValue | null
      cannabisExperience: string | null
      previousCannabisUse: string | null
      assessment: string | null
      recommendations: string | null
      prescribedProducts: Prisma.JsonValue | null
      followUpNeeded: boolean
      followUpDate: Date | null
      consultationFee: Prisma.Decimal
      paymentStatus: string
      paymentId: string | null
      medicalConsentSigned: boolean
      privacyConsentSigned: boolean
      consultationAgreementSigned: boolean
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["consultation"]>
    composites: {}
  }

  type ConsultationGetPayload<S extends boolean | null | undefined | ConsultationDefaultArgs> = $Result.GetResult<Prisma.$ConsultationPayload, S>

  type ConsultationCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<ConsultationFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: ConsultationCountAggregateInputType | true
    }

  export interface ConsultationDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Consultation'], meta: { name: 'Consultation' } }
    /**
     * Find zero or one Consultation that matches the filter.
     * @param {ConsultationFindUniqueArgs} args - Arguments to find a Consultation
     * @example
     * // Get one Consultation
     * const consultation = await prisma.consultation.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends ConsultationFindUniqueArgs>(args: SelectSubset<T, ConsultationFindUniqueArgs<ExtArgs>>): Prisma__ConsultationClient<$Result.GetResult<Prisma.$ConsultationPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one Consultation that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {ConsultationFindUniqueOrThrowArgs} args - Arguments to find a Consultation
     * @example
     * // Get one Consultation
     * const consultation = await prisma.consultation.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends ConsultationFindUniqueOrThrowArgs>(args: SelectSubset<T, ConsultationFindUniqueOrThrowArgs<ExtArgs>>): Prisma__ConsultationClient<$Result.GetResult<Prisma.$ConsultationPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first Consultation that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ConsultationFindFirstArgs} args - Arguments to find a Consultation
     * @example
     * // Get one Consultation
     * const consultation = await prisma.consultation.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends ConsultationFindFirstArgs>(args?: SelectSubset<T, ConsultationFindFirstArgs<ExtArgs>>): Prisma__ConsultationClient<$Result.GetResult<Prisma.$ConsultationPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first Consultation that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ConsultationFindFirstOrThrowArgs} args - Arguments to find a Consultation
     * @example
     * // Get one Consultation
     * const consultation = await prisma.consultation.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends ConsultationFindFirstOrThrowArgs>(args?: SelectSubset<T, ConsultationFindFirstOrThrowArgs<ExtArgs>>): Prisma__ConsultationClient<$Result.GetResult<Prisma.$ConsultationPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more Consultations that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ConsultationFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Consultations
     * const consultations = await prisma.consultation.findMany()
     * 
     * // Get first 10 Consultations
     * const consultations = await prisma.consultation.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const consultationWithIdOnly = await prisma.consultation.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends ConsultationFindManyArgs>(args?: SelectSubset<T, ConsultationFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ConsultationPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a Consultation.
     * @param {ConsultationCreateArgs} args - Arguments to create a Consultation.
     * @example
     * // Create one Consultation
     * const Consultation = await prisma.consultation.create({
     *   data: {
     *     // ... data to create a Consultation
     *   }
     * })
     * 
     */
    create<T extends ConsultationCreateArgs>(args: SelectSubset<T, ConsultationCreateArgs<ExtArgs>>): Prisma__ConsultationClient<$Result.GetResult<Prisma.$ConsultationPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many Consultations.
     * @param {ConsultationCreateManyArgs} args - Arguments to create many Consultations.
     * @example
     * // Create many Consultations
     * const consultation = await prisma.consultation.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends ConsultationCreateManyArgs>(args?: SelectSubset<T, ConsultationCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Consultations and returns the data saved in the database.
     * @param {ConsultationCreateManyAndReturnArgs} args - Arguments to create many Consultations.
     * @example
     * // Create many Consultations
     * const consultation = await prisma.consultation.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Consultations and only return the `id`
     * const consultationWithIdOnly = await prisma.consultation.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends ConsultationCreateManyAndReturnArgs>(args?: SelectSubset<T, ConsultationCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ConsultationPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a Consultation.
     * @param {ConsultationDeleteArgs} args - Arguments to delete one Consultation.
     * @example
     * // Delete one Consultation
     * const Consultation = await prisma.consultation.delete({
     *   where: {
     *     // ... filter to delete one Consultation
     *   }
     * })
     * 
     */
    delete<T extends ConsultationDeleteArgs>(args: SelectSubset<T, ConsultationDeleteArgs<ExtArgs>>): Prisma__ConsultationClient<$Result.GetResult<Prisma.$ConsultationPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one Consultation.
     * @param {ConsultationUpdateArgs} args - Arguments to update one Consultation.
     * @example
     * // Update one Consultation
     * const consultation = await prisma.consultation.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends ConsultationUpdateArgs>(args: SelectSubset<T, ConsultationUpdateArgs<ExtArgs>>): Prisma__ConsultationClient<$Result.GetResult<Prisma.$ConsultationPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more Consultations.
     * @param {ConsultationDeleteManyArgs} args - Arguments to filter Consultations to delete.
     * @example
     * // Delete a few Consultations
     * const { count } = await prisma.consultation.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends ConsultationDeleteManyArgs>(args?: SelectSubset<T, ConsultationDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Consultations.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ConsultationUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Consultations
     * const consultation = await prisma.consultation.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends ConsultationUpdateManyArgs>(args: SelectSubset<T, ConsultationUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Consultation.
     * @param {ConsultationUpsertArgs} args - Arguments to update or create a Consultation.
     * @example
     * // Update or create a Consultation
     * const consultation = await prisma.consultation.upsert({
     *   create: {
     *     // ... data to create a Consultation
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Consultation we want to update
     *   }
     * })
     */
    upsert<T extends ConsultationUpsertArgs>(args: SelectSubset<T, ConsultationUpsertArgs<ExtArgs>>): Prisma__ConsultationClient<$Result.GetResult<Prisma.$ConsultationPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of Consultations.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ConsultationCountArgs} args - Arguments to filter Consultations to count.
     * @example
     * // Count the number of Consultations
     * const count = await prisma.consultation.count({
     *   where: {
     *     // ... the filter for the Consultations we want to count
     *   }
     * })
    **/
    count<T extends ConsultationCountArgs>(
      args?: Subset<T, ConsultationCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ConsultationCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Consultation.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ConsultationAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ConsultationAggregateArgs>(args: Subset<T, ConsultationAggregateArgs>): Prisma.PrismaPromise<GetConsultationAggregateType<T>>

    /**
     * Group by Consultation.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ConsultationGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends ConsultationGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: ConsultationGroupByArgs['orderBy'] }
        : { orderBy?: ConsultationGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, ConsultationGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetConsultationGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Consultation model
   */
  readonly fields: ConsultationFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Consultation.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__ConsultationClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    patient<T extends UserDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UserDefaultArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    professional<T extends ProfessionalDefaultArgs<ExtArgs> = {}>(args?: Subset<T, ProfessionalDefaultArgs<ExtArgs>>): Prisma__ProfessionalClient<$Result.GetResult<Prisma.$ProfessionalPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Consultation model
   */ 
  interface ConsultationFieldRefs {
    readonly id: FieldRef<"Consultation", 'String'>
    readonly patientId: FieldRef<"Consultation", 'String'>
    readonly professionalId: FieldRef<"Consultation", 'String'>
    readonly consultationType: FieldRef<"Consultation", 'ConsultationType'>
    readonly sessionType: FieldRef<"Consultation", 'SessionType'>
    readonly scheduledAt: FieldRef<"Consultation", 'DateTime'>
    readonly durationMinutes: FieldRef<"Consultation", 'Int'>
    readonly timezone: FieldRef<"Consultation", 'String'>
    readonly status: FieldRef<"Consultation", 'String'>
    readonly meetingUrl: FieldRef<"Consultation", 'String'>
    readonly meetingId: FieldRef<"Consultation", 'String'>
    readonly meetingPassword: FieldRef<"Consultation", 'String'>
    readonly chiefComplaint: FieldRef<"Consultation", 'String'>
    readonly symptoms: FieldRef<"Consultation", 'Json'>
    readonly currentMedications: FieldRef<"Consultation", 'Json'>
    readonly cannabisExperience: FieldRef<"Consultation", 'String'>
    readonly previousCannabisUse: FieldRef<"Consultation", 'String'>
    readonly assessment: FieldRef<"Consultation", 'String'>
    readonly recommendations: FieldRef<"Consultation", 'String'>
    readonly prescribedProducts: FieldRef<"Consultation", 'Json'>
    readonly followUpNeeded: FieldRef<"Consultation", 'Boolean'>
    readonly followUpDate: FieldRef<"Consultation", 'DateTime'>
    readonly consultationFee: FieldRef<"Consultation", 'Decimal'>
    readonly paymentStatus: FieldRef<"Consultation", 'String'>
    readonly paymentId: FieldRef<"Consultation", 'String'>
    readonly medicalConsentSigned: FieldRef<"Consultation", 'Boolean'>
    readonly privacyConsentSigned: FieldRef<"Consultation", 'Boolean'>
    readonly consultationAgreementSigned: FieldRef<"Consultation", 'Boolean'>
    readonly createdAt: FieldRef<"Consultation", 'DateTime'>
    readonly updatedAt: FieldRef<"Consultation", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * Consultation findUnique
   */
  export type ConsultationFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Consultation
     */
    select?: ConsultationSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ConsultationInclude<ExtArgs> | null
    /**
     * Filter, which Consultation to fetch.
     */
    where: ConsultationWhereUniqueInput
  }

  /**
   * Consultation findUniqueOrThrow
   */
  export type ConsultationFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Consultation
     */
    select?: ConsultationSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ConsultationInclude<ExtArgs> | null
    /**
     * Filter, which Consultation to fetch.
     */
    where: ConsultationWhereUniqueInput
  }

  /**
   * Consultation findFirst
   */
  export type ConsultationFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Consultation
     */
    select?: ConsultationSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ConsultationInclude<ExtArgs> | null
    /**
     * Filter, which Consultation to fetch.
     */
    where?: ConsultationWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Consultations to fetch.
     */
    orderBy?: ConsultationOrderByWithRelationInput | ConsultationOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Consultations.
     */
    cursor?: ConsultationWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Consultations from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Consultations.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Consultations.
     */
    distinct?: ConsultationScalarFieldEnum | ConsultationScalarFieldEnum[]
  }

  /**
   * Consultation findFirstOrThrow
   */
  export type ConsultationFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Consultation
     */
    select?: ConsultationSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ConsultationInclude<ExtArgs> | null
    /**
     * Filter, which Consultation to fetch.
     */
    where?: ConsultationWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Consultations to fetch.
     */
    orderBy?: ConsultationOrderByWithRelationInput | ConsultationOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Consultations.
     */
    cursor?: ConsultationWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Consultations from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Consultations.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Consultations.
     */
    distinct?: ConsultationScalarFieldEnum | ConsultationScalarFieldEnum[]
  }

  /**
   * Consultation findMany
   */
  export type ConsultationFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Consultation
     */
    select?: ConsultationSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ConsultationInclude<ExtArgs> | null
    /**
     * Filter, which Consultations to fetch.
     */
    where?: ConsultationWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Consultations to fetch.
     */
    orderBy?: ConsultationOrderByWithRelationInput | ConsultationOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Consultations.
     */
    cursor?: ConsultationWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Consultations from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Consultations.
     */
    skip?: number
    distinct?: ConsultationScalarFieldEnum | ConsultationScalarFieldEnum[]
  }

  /**
   * Consultation create
   */
  export type ConsultationCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Consultation
     */
    select?: ConsultationSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ConsultationInclude<ExtArgs> | null
    /**
     * The data needed to create a Consultation.
     */
    data: XOR<ConsultationCreateInput, ConsultationUncheckedCreateInput>
  }

  /**
   * Consultation createMany
   */
  export type ConsultationCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Consultations.
     */
    data: ConsultationCreateManyInput | ConsultationCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Consultation createManyAndReturn
   */
  export type ConsultationCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Consultation
     */
    select?: ConsultationSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many Consultations.
     */
    data: ConsultationCreateManyInput | ConsultationCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ConsultationIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Consultation update
   */
  export type ConsultationUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Consultation
     */
    select?: ConsultationSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ConsultationInclude<ExtArgs> | null
    /**
     * The data needed to update a Consultation.
     */
    data: XOR<ConsultationUpdateInput, ConsultationUncheckedUpdateInput>
    /**
     * Choose, which Consultation to update.
     */
    where: ConsultationWhereUniqueInput
  }

  /**
   * Consultation updateMany
   */
  export type ConsultationUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Consultations.
     */
    data: XOR<ConsultationUpdateManyMutationInput, ConsultationUncheckedUpdateManyInput>
    /**
     * Filter which Consultations to update
     */
    where?: ConsultationWhereInput
  }

  /**
   * Consultation upsert
   */
  export type ConsultationUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Consultation
     */
    select?: ConsultationSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ConsultationInclude<ExtArgs> | null
    /**
     * The filter to search for the Consultation to update in case it exists.
     */
    where: ConsultationWhereUniqueInput
    /**
     * In case the Consultation found by the `where` argument doesn't exist, create a new Consultation with this data.
     */
    create: XOR<ConsultationCreateInput, ConsultationUncheckedCreateInput>
    /**
     * In case the Consultation was found with the provided `where` argument, update it with this data.
     */
    update: XOR<ConsultationUpdateInput, ConsultationUncheckedUpdateInput>
  }

  /**
   * Consultation delete
   */
  export type ConsultationDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Consultation
     */
    select?: ConsultationSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ConsultationInclude<ExtArgs> | null
    /**
     * Filter which Consultation to delete.
     */
    where: ConsultationWhereUniqueInput
  }

  /**
   * Consultation deleteMany
   */
  export type ConsultationDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Consultations to delete
     */
    where?: ConsultationWhereInput
  }

  /**
   * Consultation without action
   */
  export type ConsultationDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Consultation
     */
    select?: ConsultationSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ConsultationInclude<ExtArgs> | null
  }


  /**
   * Model BlogPost
   */

  export type AggregateBlogPost = {
    _count: BlogPostCountAggregateOutputType | null
    _avg: BlogPostAvgAggregateOutputType | null
    _sum: BlogPostSumAggregateOutputType | null
    _min: BlogPostMinAggregateOutputType | null
    _max: BlogPostMaxAggregateOutputType | null
  }

  export type BlogPostAvgAggregateOutputType = {
    viewCount: number | null
    likeCount: number | null
    commentCount: number | null
    shareCount: number | null
  }

  export type BlogPostSumAggregateOutputType = {
    viewCount: number | null
    likeCount: number | null
    commentCount: number | null
    shareCount: number | null
  }

  export type BlogPostMinAggregateOutputType = {
    id: string | null
    authorId: string | null
    title: string | null
    slug: string | null
    excerpt: string | null
    content: string | null
    featuredImageUrl: string | null
    category: $Enums.BlogCategory | null
    metaTitle: string | null
    metaDescription: string | null
    metaKeywords: string | null
    status: $Enums.BlogStatus | null
    publishedAt: Date | null
    scheduledFor: Date | null
    viewCount: number | null
    likeCount: number | null
    commentCount: number | null
    shareCount: number | null
    factChecked: boolean | null
    factCheckedBy: string | null
    factCheckedAt: Date | null
    medicalDisclaimer: boolean | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type BlogPostMaxAggregateOutputType = {
    id: string | null
    authorId: string | null
    title: string | null
    slug: string | null
    excerpt: string | null
    content: string | null
    featuredImageUrl: string | null
    category: $Enums.BlogCategory | null
    metaTitle: string | null
    metaDescription: string | null
    metaKeywords: string | null
    status: $Enums.BlogStatus | null
    publishedAt: Date | null
    scheduledFor: Date | null
    viewCount: number | null
    likeCount: number | null
    commentCount: number | null
    shareCount: number | null
    factChecked: boolean | null
    factCheckedBy: string | null
    factCheckedAt: Date | null
    medicalDisclaimer: boolean | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type BlogPostCountAggregateOutputType = {
    id: number
    authorId: number
    title: number
    slug: number
    excerpt: number
    content: number
    featuredImageUrl: number
    category: number
    tags: number
    metaTitle: number
    metaDescription: number
    metaKeywords: number
    status: number
    publishedAt: number
    scheduledFor: number
    viewCount: number
    likeCount: number
    commentCount: number
    shareCount: number
    factChecked: number
    factCheckedBy: number
    factCheckedAt: number
    medicalDisclaimer: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type BlogPostAvgAggregateInputType = {
    viewCount?: true
    likeCount?: true
    commentCount?: true
    shareCount?: true
  }

  export type BlogPostSumAggregateInputType = {
    viewCount?: true
    likeCount?: true
    commentCount?: true
    shareCount?: true
  }

  export type BlogPostMinAggregateInputType = {
    id?: true
    authorId?: true
    title?: true
    slug?: true
    excerpt?: true
    content?: true
    featuredImageUrl?: true
    category?: true
    metaTitle?: true
    metaDescription?: true
    metaKeywords?: true
    status?: true
    publishedAt?: true
    scheduledFor?: true
    viewCount?: true
    likeCount?: true
    commentCount?: true
    shareCount?: true
    factChecked?: true
    factCheckedBy?: true
    factCheckedAt?: true
    medicalDisclaimer?: true
    createdAt?: true
    updatedAt?: true
  }

  export type BlogPostMaxAggregateInputType = {
    id?: true
    authorId?: true
    title?: true
    slug?: true
    excerpt?: true
    content?: true
    featuredImageUrl?: true
    category?: true
    metaTitle?: true
    metaDescription?: true
    metaKeywords?: true
    status?: true
    publishedAt?: true
    scheduledFor?: true
    viewCount?: true
    likeCount?: true
    commentCount?: true
    shareCount?: true
    factChecked?: true
    factCheckedBy?: true
    factCheckedAt?: true
    medicalDisclaimer?: true
    createdAt?: true
    updatedAt?: true
  }

  export type BlogPostCountAggregateInputType = {
    id?: true
    authorId?: true
    title?: true
    slug?: true
    excerpt?: true
    content?: true
    featuredImageUrl?: true
    category?: true
    tags?: true
    metaTitle?: true
    metaDescription?: true
    metaKeywords?: true
    status?: true
    publishedAt?: true
    scheduledFor?: true
    viewCount?: true
    likeCount?: true
    commentCount?: true
    shareCount?: true
    factChecked?: true
    factCheckedBy?: true
    factCheckedAt?: true
    medicalDisclaimer?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type BlogPostAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which BlogPost to aggregate.
     */
    where?: BlogPostWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of BlogPosts to fetch.
     */
    orderBy?: BlogPostOrderByWithRelationInput | BlogPostOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: BlogPostWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` BlogPosts from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` BlogPosts.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned BlogPosts
    **/
    _count?: true | BlogPostCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: BlogPostAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: BlogPostSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: BlogPostMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: BlogPostMaxAggregateInputType
  }

  export type GetBlogPostAggregateType<T extends BlogPostAggregateArgs> = {
        [P in keyof T & keyof AggregateBlogPost]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateBlogPost[P]>
      : GetScalarType<T[P], AggregateBlogPost[P]>
  }




  export type BlogPostGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: BlogPostWhereInput
    orderBy?: BlogPostOrderByWithAggregationInput | BlogPostOrderByWithAggregationInput[]
    by: BlogPostScalarFieldEnum[] | BlogPostScalarFieldEnum
    having?: BlogPostScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: BlogPostCountAggregateInputType | true
    _avg?: BlogPostAvgAggregateInputType
    _sum?: BlogPostSumAggregateInputType
    _min?: BlogPostMinAggregateInputType
    _max?: BlogPostMaxAggregateInputType
  }

  export type BlogPostGroupByOutputType = {
    id: string
    authorId: string
    title: string
    slug: string
    excerpt: string | null
    content: string
    featuredImageUrl: string | null
    category: $Enums.BlogCategory
    tags: JsonValue | null
    metaTitle: string | null
    metaDescription: string | null
    metaKeywords: string | null
    status: $Enums.BlogStatus
    publishedAt: Date | null
    scheduledFor: Date | null
    viewCount: number
    likeCount: number
    commentCount: number
    shareCount: number
    factChecked: boolean
    factCheckedBy: string | null
    factCheckedAt: Date | null
    medicalDisclaimer: boolean
    createdAt: Date
    updatedAt: Date
    _count: BlogPostCountAggregateOutputType | null
    _avg: BlogPostAvgAggregateOutputType | null
    _sum: BlogPostSumAggregateOutputType | null
    _min: BlogPostMinAggregateOutputType | null
    _max: BlogPostMaxAggregateOutputType | null
  }

  type GetBlogPostGroupByPayload<T extends BlogPostGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<BlogPostGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof BlogPostGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], BlogPostGroupByOutputType[P]>
            : GetScalarType<T[P], BlogPostGroupByOutputType[P]>
        }
      >
    >


  export type BlogPostSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    authorId?: boolean
    title?: boolean
    slug?: boolean
    excerpt?: boolean
    content?: boolean
    featuredImageUrl?: boolean
    category?: boolean
    tags?: boolean
    metaTitle?: boolean
    metaDescription?: boolean
    metaKeywords?: boolean
    status?: boolean
    publishedAt?: boolean
    scheduledFor?: boolean
    viewCount?: boolean
    likeCount?: boolean
    commentCount?: boolean
    shareCount?: boolean
    factChecked?: boolean
    factCheckedBy?: boolean
    factCheckedAt?: boolean
    medicalDisclaimer?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    author?: boolean | UserDefaultArgs<ExtArgs>
    factChecker?: boolean | BlogPost$factCheckerArgs<ExtArgs>
  }, ExtArgs["result"]["blogPost"]>

  export type BlogPostSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    authorId?: boolean
    title?: boolean
    slug?: boolean
    excerpt?: boolean
    content?: boolean
    featuredImageUrl?: boolean
    category?: boolean
    tags?: boolean
    metaTitle?: boolean
    metaDescription?: boolean
    metaKeywords?: boolean
    status?: boolean
    publishedAt?: boolean
    scheduledFor?: boolean
    viewCount?: boolean
    likeCount?: boolean
    commentCount?: boolean
    shareCount?: boolean
    factChecked?: boolean
    factCheckedBy?: boolean
    factCheckedAt?: boolean
    medicalDisclaimer?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    author?: boolean | UserDefaultArgs<ExtArgs>
    factChecker?: boolean | BlogPost$factCheckerArgs<ExtArgs>
  }, ExtArgs["result"]["blogPost"]>

  export type BlogPostSelectScalar = {
    id?: boolean
    authorId?: boolean
    title?: boolean
    slug?: boolean
    excerpt?: boolean
    content?: boolean
    featuredImageUrl?: boolean
    category?: boolean
    tags?: boolean
    metaTitle?: boolean
    metaDescription?: boolean
    metaKeywords?: boolean
    status?: boolean
    publishedAt?: boolean
    scheduledFor?: boolean
    viewCount?: boolean
    likeCount?: boolean
    commentCount?: boolean
    shareCount?: boolean
    factChecked?: boolean
    factCheckedBy?: boolean
    factCheckedAt?: boolean
    medicalDisclaimer?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type BlogPostInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    author?: boolean | UserDefaultArgs<ExtArgs>
    factChecker?: boolean | BlogPost$factCheckerArgs<ExtArgs>
  }
  export type BlogPostIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    author?: boolean | UserDefaultArgs<ExtArgs>
    factChecker?: boolean | BlogPost$factCheckerArgs<ExtArgs>
  }

  export type $BlogPostPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "BlogPost"
    objects: {
      author: Prisma.$UserPayload<ExtArgs>
      factChecker: Prisma.$UserPayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      authorId: string
      title: string
      slug: string
      excerpt: string | null
      content: string
      featuredImageUrl: string | null
      category: $Enums.BlogCategory
      tags: Prisma.JsonValue | null
      metaTitle: string | null
      metaDescription: string | null
      metaKeywords: string | null
      status: $Enums.BlogStatus
      publishedAt: Date | null
      scheduledFor: Date | null
      viewCount: number
      likeCount: number
      commentCount: number
      shareCount: number
      factChecked: boolean
      factCheckedBy: string | null
      factCheckedAt: Date | null
      medicalDisclaimer: boolean
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["blogPost"]>
    composites: {}
  }

  type BlogPostGetPayload<S extends boolean | null | undefined | BlogPostDefaultArgs> = $Result.GetResult<Prisma.$BlogPostPayload, S>

  type BlogPostCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<BlogPostFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: BlogPostCountAggregateInputType | true
    }

  export interface BlogPostDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['BlogPost'], meta: { name: 'BlogPost' } }
    /**
     * Find zero or one BlogPost that matches the filter.
     * @param {BlogPostFindUniqueArgs} args - Arguments to find a BlogPost
     * @example
     * // Get one BlogPost
     * const blogPost = await prisma.blogPost.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends BlogPostFindUniqueArgs>(args: SelectSubset<T, BlogPostFindUniqueArgs<ExtArgs>>): Prisma__BlogPostClient<$Result.GetResult<Prisma.$BlogPostPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one BlogPost that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {BlogPostFindUniqueOrThrowArgs} args - Arguments to find a BlogPost
     * @example
     * // Get one BlogPost
     * const blogPost = await prisma.blogPost.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends BlogPostFindUniqueOrThrowArgs>(args: SelectSubset<T, BlogPostFindUniqueOrThrowArgs<ExtArgs>>): Prisma__BlogPostClient<$Result.GetResult<Prisma.$BlogPostPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first BlogPost that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {BlogPostFindFirstArgs} args - Arguments to find a BlogPost
     * @example
     * // Get one BlogPost
     * const blogPost = await prisma.blogPost.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends BlogPostFindFirstArgs>(args?: SelectSubset<T, BlogPostFindFirstArgs<ExtArgs>>): Prisma__BlogPostClient<$Result.GetResult<Prisma.$BlogPostPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first BlogPost that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {BlogPostFindFirstOrThrowArgs} args - Arguments to find a BlogPost
     * @example
     * // Get one BlogPost
     * const blogPost = await prisma.blogPost.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends BlogPostFindFirstOrThrowArgs>(args?: SelectSubset<T, BlogPostFindFirstOrThrowArgs<ExtArgs>>): Prisma__BlogPostClient<$Result.GetResult<Prisma.$BlogPostPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more BlogPosts that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {BlogPostFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all BlogPosts
     * const blogPosts = await prisma.blogPost.findMany()
     * 
     * // Get first 10 BlogPosts
     * const blogPosts = await prisma.blogPost.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const blogPostWithIdOnly = await prisma.blogPost.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends BlogPostFindManyArgs>(args?: SelectSubset<T, BlogPostFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$BlogPostPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a BlogPost.
     * @param {BlogPostCreateArgs} args - Arguments to create a BlogPost.
     * @example
     * // Create one BlogPost
     * const BlogPost = await prisma.blogPost.create({
     *   data: {
     *     // ... data to create a BlogPost
     *   }
     * })
     * 
     */
    create<T extends BlogPostCreateArgs>(args: SelectSubset<T, BlogPostCreateArgs<ExtArgs>>): Prisma__BlogPostClient<$Result.GetResult<Prisma.$BlogPostPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many BlogPosts.
     * @param {BlogPostCreateManyArgs} args - Arguments to create many BlogPosts.
     * @example
     * // Create many BlogPosts
     * const blogPost = await prisma.blogPost.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends BlogPostCreateManyArgs>(args?: SelectSubset<T, BlogPostCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many BlogPosts and returns the data saved in the database.
     * @param {BlogPostCreateManyAndReturnArgs} args - Arguments to create many BlogPosts.
     * @example
     * // Create many BlogPosts
     * const blogPost = await prisma.blogPost.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many BlogPosts and only return the `id`
     * const blogPostWithIdOnly = await prisma.blogPost.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends BlogPostCreateManyAndReturnArgs>(args?: SelectSubset<T, BlogPostCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$BlogPostPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a BlogPost.
     * @param {BlogPostDeleteArgs} args - Arguments to delete one BlogPost.
     * @example
     * // Delete one BlogPost
     * const BlogPost = await prisma.blogPost.delete({
     *   where: {
     *     // ... filter to delete one BlogPost
     *   }
     * })
     * 
     */
    delete<T extends BlogPostDeleteArgs>(args: SelectSubset<T, BlogPostDeleteArgs<ExtArgs>>): Prisma__BlogPostClient<$Result.GetResult<Prisma.$BlogPostPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one BlogPost.
     * @param {BlogPostUpdateArgs} args - Arguments to update one BlogPost.
     * @example
     * // Update one BlogPost
     * const blogPost = await prisma.blogPost.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends BlogPostUpdateArgs>(args: SelectSubset<T, BlogPostUpdateArgs<ExtArgs>>): Prisma__BlogPostClient<$Result.GetResult<Prisma.$BlogPostPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more BlogPosts.
     * @param {BlogPostDeleteManyArgs} args - Arguments to filter BlogPosts to delete.
     * @example
     * // Delete a few BlogPosts
     * const { count } = await prisma.blogPost.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends BlogPostDeleteManyArgs>(args?: SelectSubset<T, BlogPostDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more BlogPosts.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {BlogPostUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many BlogPosts
     * const blogPost = await prisma.blogPost.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends BlogPostUpdateManyArgs>(args: SelectSubset<T, BlogPostUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one BlogPost.
     * @param {BlogPostUpsertArgs} args - Arguments to update or create a BlogPost.
     * @example
     * // Update or create a BlogPost
     * const blogPost = await prisma.blogPost.upsert({
     *   create: {
     *     // ... data to create a BlogPost
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the BlogPost we want to update
     *   }
     * })
     */
    upsert<T extends BlogPostUpsertArgs>(args: SelectSubset<T, BlogPostUpsertArgs<ExtArgs>>): Prisma__BlogPostClient<$Result.GetResult<Prisma.$BlogPostPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of BlogPosts.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {BlogPostCountArgs} args - Arguments to filter BlogPosts to count.
     * @example
     * // Count the number of BlogPosts
     * const count = await prisma.blogPost.count({
     *   where: {
     *     // ... the filter for the BlogPosts we want to count
     *   }
     * })
    **/
    count<T extends BlogPostCountArgs>(
      args?: Subset<T, BlogPostCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], BlogPostCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a BlogPost.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {BlogPostAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends BlogPostAggregateArgs>(args: Subset<T, BlogPostAggregateArgs>): Prisma.PrismaPromise<GetBlogPostAggregateType<T>>

    /**
     * Group by BlogPost.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {BlogPostGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends BlogPostGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: BlogPostGroupByArgs['orderBy'] }
        : { orderBy?: BlogPostGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, BlogPostGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetBlogPostGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the BlogPost model
   */
  readonly fields: BlogPostFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for BlogPost.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__BlogPostClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    author<T extends UserDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UserDefaultArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    factChecker<T extends BlogPost$factCheckerArgs<ExtArgs> = {}>(args?: Subset<T, BlogPost$factCheckerArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow"> | null, null, ExtArgs>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the BlogPost model
   */ 
  interface BlogPostFieldRefs {
    readonly id: FieldRef<"BlogPost", 'String'>
    readonly authorId: FieldRef<"BlogPost", 'String'>
    readonly title: FieldRef<"BlogPost", 'String'>
    readonly slug: FieldRef<"BlogPost", 'String'>
    readonly excerpt: FieldRef<"BlogPost", 'String'>
    readonly content: FieldRef<"BlogPost", 'String'>
    readonly featuredImageUrl: FieldRef<"BlogPost", 'String'>
    readonly category: FieldRef<"BlogPost", 'BlogCategory'>
    readonly tags: FieldRef<"BlogPost", 'Json'>
    readonly metaTitle: FieldRef<"BlogPost", 'String'>
    readonly metaDescription: FieldRef<"BlogPost", 'String'>
    readonly metaKeywords: FieldRef<"BlogPost", 'String'>
    readonly status: FieldRef<"BlogPost", 'BlogStatus'>
    readonly publishedAt: FieldRef<"BlogPost", 'DateTime'>
    readonly scheduledFor: FieldRef<"BlogPost", 'DateTime'>
    readonly viewCount: FieldRef<"BlogPost", 'Int'>
    readonly likeCount: FieldRef<"BlogPost", 'Int'>
    readonly commentCount: FieldRef<"BlogPost", 'Int'>
    readonly shareCount: FieldRef<"BlogPost", 'Int'>
    readonly factChecked: FieldRef<"BlogPost", 'Boolean'>
    readonly factCheckedBy: FieldRef<"BlogPost", 'String'>
    readonly factCheckedAt: FieldRef<"BlogPost", 'DateTime'>
    readonly medicalDisclaimer: FieldRef<"BlogPost", 'Boolean'>
    readonly createdAt: FieldRef<"BlogPost", 'DateTime'>
    readonly updatedAt: FieldRef<"BlogPost", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * BlogPost findUnique
   */
  export type BlogPostFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the BlogPost
     */
    select?: BlogPostSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BlogPostInclude<ExtArgs> | null
    /**
     * Filter, which BlogPost to fetch.
     */
    where: BlogPostWhereUniqueInput
  }

  /**
   * BlogPost findUniqueOrThrow
   */
  export type BlogPostFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the BlogPost
     */
    select?: BlogPostSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BlogPostInclude<ExtArgs> | null
    /**
     * Filter, which BlogPost to fetch.
     */
    where: BlogPostWhereUniqueInput
  }

  /**
   * BlogPost findFirst
   */
  export type BlogPostFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the BlogPost
     */
    select?: BlogPostSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BlogPostInclude<ExtArgs> | null
    /**
     * Filter, which BlogPost to fetch.
     */
    where?: BlogPostWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of BlogPosts to fetch.
     */
    orderBy?: BlogPostOrderByWithRelationInput | BlogPostOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for BlogPosts.
     */
    cursor?: BlogPostWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` BlogPosts from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` BlogPosts.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of BlogPosts.
     */
    distinct?: BlogPostScalarFieldEnum | BlogPostScalarFieldEnum[]
  }

  /**
   * BlogPost findFirstOrThrow
   */
  export type BlogPostFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the BlogPost
     */
    select?: BlogPostSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BlogPostInclude<ExtArgs> | null
    /**
     * Filter, which BlogPost to fetch.
     */
    where?: BlogPostWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of BlogPosts to fetch.
     */
    orderBy?: BlogPostOrderByWithRelationInput | BlogPostOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for BlogPosts.
     */
    cursor?: BlogPostWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` BlogPosts from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` BlogPosts.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of BlogPosts.
     */
    distinct?: BlogPostScalarFieldEnum | BlogPostScalarFieldEnum[]
  }

  /**
   * BlogPost findMany
   */
  export type BlogPostFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the BlogPost
     */
    select?: BlogPostSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BlogPostInclude<ExtArgs> | null
    /**
     * Filter, which BlogPosts to fetch.
     */
    where?: BlogPostWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of BlogPosts to fetch.
     */
    orderBy?: BlogPostOrderByWithRelationInput | BlogPostOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing BlogPosts.
     */
    cursor?: BlogPostWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` BlogPosts from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` BlogPosts.
     */
    skip?: number
    distinct?: BlogPostScalarFieldEnum | BlogPostScalarFieldEnum[]
  }

  /**
   * BlogPost create
   */
  export type BlogPostCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the BlogPost
     */
    select?: BlogPostSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BlogPostInclude<ExtArgs> | null
    /**
     * The data needed to create a BlogPost.
     */
    data: XOR<BlogPostCreateInput, BlogPostUncheckedCreateInput>
  }

  /**
   * BlogPost createMany
   */
  export type BlogPostCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many BlogPosts.
     */
    data: BlogPostCreateManyInput | BlogPostCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * BlogPost createManyAndReturn
   */
  export type BlogPostCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the BlogPost
     */
    select?: BlogPostSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many BlogPosts.
     */
    data: BlogPostCreateManyInput | BlogPostCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BlogPostIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * BlogPost update
   */
  export type BlogPostUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the BlogPost
     */
    select?: BlogPostSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BlogPostInclude<ExtArgs> | null
    /**
     * The data needed to update a BlogPost.
     */
    data: XOR<BlogPostUpdateInput, BlogPostUncheckedUpdateInput>
    /**
     * Choose, which BlogPost to update.
     */
    where: BlogPostWhereUniqueInput
  }

  /**
   * BlogPost updateMany
   */
  export type BlogPostUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update BlogPosts.
     */
    data: XOR<BlogPostUpdateManyMutationInput, BlogPostUncheckedUpdateManyInput>
    /**
     * Filter which BlogPosts to update
     */
    where?: BlogPostWhereInput
  }

  /**
   * BlogPost upsert
   */
  export type BlogPostUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the BlogPost
     */
    select?: BlogPostSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BlogPostInclude<ExtArgs> | null
    /**
     * The filter to search for the BlogPost to update in case it exists.
     */
    where: BlogPostWhereUniqueInput
    /**
     * In case the BlogPost found by the `where` argument doesn't exist, create a new BlogPost with this data.
     */
    create: XOR<BlogPostCreateInput, BlogPostUncheckedCreateInput>
    /**
     * In case the BlogPost was found with the provided `where` argument, update it with this data.
     */
    update: XOR<BlogPostUpdateInput, BlogPostUncheckedUpdateInput>
  }

  /**
   * BlogPost delete
   */
  export type BlogPostDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the BlogPost
     */
    select?: BlogPostSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BlogPostInclude<ExtArgs> | null
    /**
     * Filter which BlogPost to delete.
     */
    where: BlogPostWhereUniqueInput
  }

  /**
   * BlogPost deleteMany
   */
  export type BlogPostDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which BlogPosts to delete
     */
    where?: BlogPostWhereInput
  }

  /**
   * BlogPost.factChecker
   */
  export type BlogPost$factCheckerArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    where?: UserWhereInput
  }

  /**
   * BlogPost without action
   */
  export type BlogPostDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the BlogPost
     */
    select?: BlogPostSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BlogPostInclude<ExtArgs> | null
  }


  /**
   * Model AuditLog
   */

  export type AggregateAuditLog = {
    _count: AuditLogCountAggregateOutputType | null
    _min: AuditLogMinAggregateOutputType | null
    _max: AuditLogMaxAggregateOutputType | null
  }

  export type AuditLogMinAggregateOutputType = {
    id: string | null
    action: string | null
    resourceType: string | null
    resourceId: string | null
    userId: string | null
    sessionId: string | null
    ipAddress: string | null
    userAgent: string | null
    requestId: string | null
    endpoint: string | null
    httpMethod: string | null
    riskLevel: string | null
    complianceRelevant: boolean | null
    result: string | null
    errorMessage: string | null
    timestamp: Date | null
  }

  export type AuditLogMaxAggregateOutputType = {
    id: string | null
    action: string | null
    resourceType: string | null
    resourceId: string | null
    userId: string | null
    sessionId: string | null
    ipAddress: string | null
    userAgent: string | null
    requestId: string | null
    endpoint: string | null
    httpMethod: string | null
    riskLevel: string | null
    complianceRelevant: boolean | null
    result: string | null
    errorMessage: string | null
    timestamp: Date | null
  }

  export type AuditLogCountAggregateOutputType = {
    id: number
    action: number
    resourceType: number
    resourceId: number
    userId: number
    sessionId: number
    ipAddress: number
    userAgent: number
    oldValues: number
    newValues: number
    requestId: number
    endpoint: number
    httpMethod: number
    riskLevel: number
    complianceRelevant: number
    result: number
    errorMessage: number
    timestamp: number
    _all: number
  }


  export type AuditLogMinAggregateInputType = {
    id?: true
    action?: true
    resourceType?: true
    resourceId?: true
    userId?: true
    sessionId?: true
    ipAddress?: true
    userAgent?: true
    requestId?: true
    endpoint?: true
    httpMethod?: true
    riskLevel?: true
    complianceRelevant?: true
    result?: true
    errorMessage?: true
    timestamp?: true
  }

  export type AuditLogMaxAggregateInputType = {
    id?: true
    action?: true
    resourceType?: true
    resourceId?: true
    userId?: true
    sessionId?: true
    ipAddress?: true
    userAgent?: true
    requestId?: true
    endpoint?: true
    httpMethod?: true
    riskLevel?: true
    complianceRelevant?: true
    result?: true
    errorMessage?: true
    timestamp?: true
  }

  export type AuditLogCountAggregateInputType = {
    id?: true
    action?: true
    resourceType?: true
    resourceId?: true
    userId?: true
    sessionId?: true
    ipAddress?: true
    userAgent?: true
    oldValues?: true
    newValues?: true
    requestId?: true
    endpoint?: true
    httpMethod?: true
    riskLevel?: true
    complianceRelevant?: true
    result?: true
    errorMessage?: true
    timestamp?: true
    _all?: true
  }

  export type AuditLogAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which AuditLog to aggregate.
     */
    where?: AuditLogWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of AuditLogs to fetch.
     */
    orderBy?: AuditLogOrderByWithRelationInput | AuditLogOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: AuditLogWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` AuditLogs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` AuditLogs.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned AuditLogs
    **/
    _count?: true | AuditLogCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: AuditLogMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: AuditLogMaxAggregateInputType
  }

  export type GetAuditLogAggregateType<T extends AuditLogAggregateArgs> = {
        [P in keyof T & keyof AggregateAuditLog]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateAuditLog[P]>
      : GetScalarType<T[P], AggregateAuditLog[P]>
  }




  export type AuditLogGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: AuditLogWhereInput
    orderBy?: AuditLogOrderByWithAggregationInput | AuditLogOrderByWithAggregationInput[]
    by: AuditLogScalarFieldEnum[] | AuditLogScalarFieldEnum
    having?: AuditLogScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: AuditLogCountAggregateInputType | true
    _min?: AuditLogMinAggregateInputType
    _max?: AuditLogMaxAggregateInputType
  }

  export type AuditLogGroupByOutputType = {
    id: string
    action: string
    resourceType: string
    resourceId: string | null
    userId: string | null
    sessionId: string | null
    ipAddress: string | null
    userAgent: string | null
    oldValues: JsonValue | null
    newValues: JsonValue | null
    requestId: string | null
    endpoint: string | null
    httpMethod: string | null
    riskLevel: string
    complianceRelevant: boolean
    result: string
    errorMessage: string | null
    timestamp: Date
    _count: AuditLogCountAggregateOutputType | null
    _min: AuditLogMinAggregateOutputType | null
    _max: AuditLogMaxAggregateOutputType | null
  }

  type GetAuditLogGroupByPayload<T extends AuditLogGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<AuditLogGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof AuditLogGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], AuditLogGroupByOutputType[P]>
            : GetScalarType<T[P], AuditLogGroupByOutputType[P]>
        }
      >
    >


  export type AuditLogSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    action?: boolean
    resourceType?: boolean
    resourceId?: boolean
    userId?: boolean
    sessionId?: boolean
    ipAddress?: boolean
    userAgent?: boolean
    oldValues?: boolean
    newValues?: boolean
    requestId?: boolean
    endpoint?: boolean
    httpMethod?: boolean
    riskLevel?: boolean
    complianceRelevant?: boolean
    result?: boolean
    errorMessage?: boolean
    timestamp?: boolean
  }, ExtArgs["result"]["auditLog"]>

  export type AuditLogSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    action?: boolean
    resourceType?: boolean
    resourceId?: boolean
    userId?: boolean
    sessionId?: boolean
    ipAddress?: boolean
    userAgent?: boolean
    oldValues?: boolean
    newValues?: boolean
    requestId?: boolean
    endpoint?: boolean
    httpMethod?: boolean
    riskLevel?: boolean
    complianceRelevant?: boolean
    result?: boolean
    errorMessage?: boolean
    timestamp?: boolean
  }, ExtArgs["result"]["auditLog"]>

  export type AuditLogSelectScalar = {
    id?: boolean
    action?: boolean
    resourceType?: boolean
    resourceId?: boolean
    userId?: boolean
    sessionId?: boolean
    ipAddress?: boolean
    userAgent?: boolean
    oldValues?: boolean
    newValues?: boolean
    requestId?: boolean
    endpoint?: boolean
    httpMethod?: boolean
    riskLevel?: boolean
    complianceRelevant?: boolean
    result?: boolean
    errorMessage?: boolean
    timestamp?: boolean
  }


  export type $AuditLogPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "AuditLog"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      id: string
      action: string
      resourceType: string
      resourceId: string | null
      userId: string | null
      sessionId: string | null
      ipAddress: string | null
      userAgent: string | null
      oldValues: Prisma.JsonValue | null
      newValues: Prisma.JsonValue | null
      requestId: string | null
      endpoint: string | null
      httpMethod: string | null
      riskLevel: string
      complianceRelevant: boolean
      result: string
      errorMessage: string | null
      timestamp: Date
    }, ExtArgs["result"]["auditLog"]>
    composites: {}
  }

  type AuditLogGetPayload<S extends boolean | null | undefined | AuditLogDefaultArgs> = $Result.GetResult<Prisma.$AuditLogPayload, S>

  type AuditLogCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<AuditLogFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: AuditLogCountAggregateInputType | true
    }

  export interface AuditLogDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['AuditLog'], meta: { name: 'AuditLog' } }
    /**
     * Find zero or one AuditLog that matches the filter.
     * @param {AuditLogFindUniqueArgs} args - Arguments to find a AuditLog
     * @example
     * // Get one AuditLog
     * const auditLog = await prisma.auditLog.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends AuditLogFindUniqueArgs>(args: SelectSubset<T, AuditLogFindUniqueArgs<ExtArgs>>): Prisma__AuditLogClient<$Result.GetResult<Prisma.$AuditLogPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one AuditLog that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {AuditLogFindUniqueOrThrowArgs} args - Arguments to find a AuditLog
     * @example
     * // Get one AuditLog
     * const auditLog = await prisma.auditLog.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends AuditLogFindUniqueOrThrowArgs>(args: SelectSubset<T, AuditLogFindUniqueOrThrowArgs<ExtArgs>>): Prisma__AuditLogClient<$Result.GetResult<Prisma.$AuditLogPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first AuditLog that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AuditLogFindFirstArgs} args - Arguments to find a AuditLog
     * @example
     * // Get one AuditLog
     * const auditLog = await prisma.auditLog.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends AuditLogFindFirstArgs>(args?: SelectSubset<T, AuditLogFindFirstArgs<ExtArgs>>): Prisma__AuditLogClient<$Result.GetResult<Prisma.$AuditLogPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first AuditLog that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AuditLogFindFirstOrThrowArgs} args - Arguments to find a AuditLog
     * @example
     * // Get one AuditLog
     * const auditLog = await prisma.auditLog.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends AuditLogFindFirstOrThrowArgs>(args?: SelectSubset<T, AuditLogFindFirstOrThrowArgs<ExtArgs>>): Prisma__AuditLogClient<$Result.GetResult<Prisma.$AuditLogPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more AuditLogs that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AuditLogFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all AuditLogs
     * const auditLogs = await prisma.auditLog.findMany()
     * 
     * // Get first 10 AuditLogs
     * const auditLogs = await prisma.auditLog.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const auditLogWithIdOnly = await prisma.auditLog.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends AuditLogFindManyArgs>(args?: SelectSubset<T, AuditLogFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AuditLogPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a AuditLog.
     * @param {AuditLogCreateArgs} args - Arguments to create a AuditLog.
     * @example
     * // Create one AuditLog
     * const AuditLog = await prisma.auditLog.create({
     *   data: {
     *     // ... data to create a AuditLog
     *   }
     * })
     * 
     */
    create<T extends AuditLogCreateArgs>(args: SelectSubset<T, AuditLogCreateArgs<ExtArgs>>): Prisma__AuditLogClient<$Result.GetResult<Prisma.$AuditLogPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many AuditLogs.
     * @param {AuditLogCreateManyArgs} args - Arguments to create many AuditLogs.
     * @example
     * // Create many AuditLogs
     * const auditLog = await prisma.auditLog.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends AuditLogCreateManyArgs>(args?: SelectSubset<T, AuditLogCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many AuditLogs and returns the data saved in the database.
     * @param {AuditLogCreateManyAndReturnArgs} args - Arguments to create many AuditLogs.
     * @example
     * // Create many AuditLogs
     * const auditLog = await prisma.auditLog.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many AuditLogs and only return the `id`
     * const auditLogWithIdOnly = await prisma.auditLog.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends AuditLogCreateManyAndReturnArgs>(args?: SelectSubset<T, AuditLogCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AuditLogPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a AuditLog.
     * @param {AuditLogDeleteArgs} args - Arguments to delete one AuditLog.
     * @example
     * // Delete one AuditLog
     * const AuditLog = await prisma.auditLog.delete({
     *   where: {
     *     // ... filter to delete one AuditLog
     *   }
     * })
     * 
     */
    delete<T extends AuditLogDeleteArgs>(args: SelectSubset<T, AuditLogDeleteArgs<ExtArgs>>): Prisma__AuditLogClient<$Result.GetResult<Prisma.$AuditLogPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one AuditLog.
     * @param {AuditLogUpdateArgs} args - Arguments to update one AuditLog.
     * @example
     * // Update one AuditLog
     * const auditLog = await prisma.auditLog.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends AuditLogUpdateArgs>(args: SelectSubset<T, AuditLogUpdateArgs<ExtArgs>>): Prisma__AuditLogClient<$Result.GetResult<Prisma.$AuditLogPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more AuditLogs.
     * @param {AuditLogDeleteManyArgs} args - Arguments to filter AuditLogs to delete.
     * @example
     * // Delete a few AuditLogs
     * const { count } = await prisma.auditLog.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends AuditLogDeleteManyArgs>(args?: SelectSubset<T, AuditLogDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more AuditLogs.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AuditLogUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many AuditLogs
     * const auditLog = await prisma.auditLog.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends AuditLogUpdateManyArgs>(args: SelectSubset<T, AuditLogUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one AuditLog.
     * @param {AuditLogUpsertArgs} args - Arguments to update or create a AuditLog.
     * @example
     * // Update or create a AuditLog
     * const auditLog = await prisma.auditLog.upsert({
     *   create: {
     *     // ... data to create a AuditLog
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the AuditLog we want to update
     *   }
     * })
     */
    upsert<T extends AuditLogUpsertArgs>(args: SelectSubset<T, AuditLogUpsertArgs<ExtArgs>>): Prisma__AuditLogClient<$Result.GetResult<Prisma.$AuditLogPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of AuditLogs.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AuditLogCountArgs} args - Arguments to filter AuditLogs to count.
     * @example
     * // Count the number of AuditLogs
     * const count = await prisma.auditLog.count({
     *   where: {
     *     // ... the filter for the AuditLogs we want to count
     *   }
     * })
    **/
    count<T extends AuditLogCountArgs>(
      args?: Subset<T, AuditLogCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], AuditLogCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a AuditLog.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AuditLogAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends AuditLogAggregateArgs>(args: Subset<T, AuditLogAggregateArgs>): Prisma.PrismaPromise<GetAuditLogAggregateType<T>>

    /**
     * Group by AuditLog.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AuditLogGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends AuditLogGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: AuditLogGroupByArgs['orderBy'] }
        : { orderBy?: AuditLogGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, AuditLogGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetAuditLogGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the AuditLog model
   */
  readonly fields: AuditLogFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for AuditLog.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__AuditLogClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the AuditLog model
   */ 
  interface AuditLogFieldRefs {
    readonly id: FieldRef<"AuditLog", 'String'>
    readonly action: FieldRef<"AuditLog", 'String'>
    readonly resourceType: FieldRef<"AuditLog", 'String'>
    readonly resourceId: FieldRef<"AuditLog", 'String'>
    readonly userId: FieldRef<"AuditLog", 'String'>
    readonly sessionId: FieldRef<"AuditLog", 'String'>
    readonly ipAddress: FieldRef<"AuditLog", 'String'>
    readonly userAgent: FieldRef<"AuditLog", 'String'>
    readonly oldValues: FieldRef<"AuditLog", 'Json'>
    readonly newValues: FieldRef<"AuditLog", 'Json'>
    readonly requestId: FieldRef<"AuditLog", 'String'>
    readonly endpoint: FieldRef<"AuditLog", 'String'>
    readonly httpMethod: FieldRef<"AuditLog", 'String'>
    readonly riskLevel: FieldRef<"AuditLog", 'String'>
    readonly complianceRelevant: FieldRef<"AuditLog", 'Boolean'>
    readonly result: FieldRef<"AuditLog", 'String'>
    readonly errorMessage: FieldRef<"AuditLog", 'String'>
    readonly timestamp: FieldRef<"AuditLog", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * AuditLog findUnique
   */
  export type AuditLogFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AuditLog
     */
    select?: AuditLogSelect<ExtArgs> | null
    /**
     * Filter, which AuditLog to fetch.
     */
    where: AuditLogWhereUniqueInput
  }

  /**
   * AuditLog findUniqueOrThrow
   */
  export type AuditLogFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AuditLog
     */
    select?: AuditLogSelect<ExtArgs> | null
    /**
     * Filter, which AuditLog to fetch.
     */
    where: AuditLogWhereUniqueInput
  }

  /**
   * AuditLog findFirst
   */
  export type AuditLogFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AuditLog
     */
    select?: AuditLogSelect<ExtArgs> | null
    /**
     * Filter, which AuditLog to fetch.
     */
    where?: AuditLogWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of AuditLogs to fetch.
     */
    orderBy?: AuditLogOrderByWithRelationInput | AuditLogOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for AuditLogs.
     */
    cursor?: AuditLogWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` AuditLogs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` AuditLogs.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of AuditLogs.
     */
    distinct?: AuditLogScalarFieldEnum | AuditLogScalarFieldEnum[]
  }

  /**
   * AuditLog findFirstOrThrow
   */
  export type AuditLogFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AuditLog
     */
    select?: AuditLogSelect<ExtArgs> | null
    /**
     * Filter, which AuditLog to fetch.
     */
    where?: AuditLogWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of AuditLogs to fetch.
     */
    orderBy?: AuditLogOrderByWithRelationInput | AuditLogOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for AuditLogs.
     */
    cursor?: AuditLogWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` AuditLogs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` AuditLogs.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of AuditLogs.
     */
    distinct?: AuditLogScalarFieldEnum | AuditLogScalarFieldEnum[]
  }

  /**
   * AuditLog findMany
   */
  export type AuditLogFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AuditLog
     */
    select?: AuditLogSelect<ExtArgs> | null
    /**
     * Filter, which AuditLogs to fetch.
     */
    where?: AuditLogWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of AuditLogs to fetch.
     */
    orderBy?: AuditLogOrderByWithRelationInput | AuditLogOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing AuditLogs.
     */
    cursor?: AuditLogWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` AuditLogs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` AuditLogs.
     */
    skip?: number
    distinct?: AuditLogScalarFieldEnum | AuditLogScalarFieldEnum[]
  }

  /**
   * AuditLog create
   */
  export type AuditLogCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AuditLog
     */
    select?: AuditLogSelect<ExtArgs> | null
    /**
     * The data needed to create a AuditLog.
     */
    data: XOR<AuditLogCreateInput, AuditLogUncheckedCreateInput>
  }

  /**
   * AuditLog createMany
   */
  export type AuditLogCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many AuditLogs.
     */
    data: AuditLogCreateManyInput | AuditLogCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * AuditLog createManyAndReturn
   */
  export type AuditLogCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AuditLog
     */
    select?: AuditLogSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many AuditLogs.
     */
    data: AuditLogCreateManyInput | AuditLogCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * AuditLog update
   */
  export type AuditLogUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AuditLog
     */
    select?: AuditLogSelect<ExtArgs> | null
    /**
     * The data needed to update a AuditLog.
     */
    data: XOR<AuditLogUpdateInput, AuditLogUncheckedUpdateInput>
    /**
     * Choose, which AuditLog to update.
     */
    where: AuditLogWhereUniqueInput
  }

  /**
   * AuditLog updateMany
   */
  export type AuditLogUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update AuditLogs.
     */
    data: XOR<AuditLogUpdateManyMutationInput, AuditLogUncheckedUpdateManyInput>
    /**
     * Filter which AuditLogs to update
     */
    where?: AuditLogWhereInput
  }

  /**
   * AuditLog upsert
   */
  export type AuditLogUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AuditLog
     */
    select?: AuditLogSelect<ExtArgs> | null
    /**
     * The filter to search for the AuditLog to update in case it exists.
     */
    where: AuditLogWhereUniqueInput
    /**
     * In case the AuditLog found by the `where` argument doesn't exist, create a new AuditLog with this data.
     */
    create: XOR<AuditLogCreateInput, AuditLogUncheckedCreateInput>
    /**
     * In case the AuditLog was found with the provided `where` argument, update it with this data.
     */
    update: XOR<AuditLogUpdateInput, AuditLogUncheckedUpdateInput>
  }

  /**
   * AuditLog delete
   */
  export type AuditLogDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AuditLog
     */
    select?: AuditLogSelect<ExtArgs> | null
    /**
     * Filter which AuditLog to delete.
     */
    where: AuditLogWhereUniqueInput
  }

  /**
   * AuditLog deleteMany
   */
  export type AuditLogDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which AuditLogs to delete
     */
    where?: AuditLogWhereInput
  }

  /**
   * AuditLog without action
   */
  export type AuditLogDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AuditLog
     */
    select?: AuditLogSelect<ExtArgs> | null
  }


  /**
   * Enums
   */

  export const TransactionIsolationLevel: {
    ReadUncommitted: 'ReadUncommitted',
    ReadCommitted: 'ReadCommitted',
    RepeatableRead: 'RepeatableRead',
    Serializable: 'Serializable'
  };

  export type TransactionIsolationLevel = (typeof TransactionIsolationLevel)[keyof typeof TransactionIsolationLevel]


  export const UserScalarFieldEnum: {
    id: 'id',
    email: 'email',
    emailVerified: 'emailVerified',
    passwordHash: 'passwordHash',
    role: 'role',
    firstName: 'firstName',
    lastName: 'lastName',
    phone: 'phone',
    dateOfBirth: 'dateOfBirth',
    status: 'status',
    lastLoginAt: 'lastLoginAt',
    failedLoginAttempts: 'failedLoginAttempts',
    lockedUntil: 'lockedUntil',
    ageVerified: 'ageVerified',
    ageVerificationMethod: 'ageVerificationMethod',
    ageVerifiedAt: 'ageVerifiedAt',
    ageVerifiedBy: 'ageVerifiedBy',
    termsAcceptedAt: 'termsAcceptedAt',
    privacyAcceptedAt: 'privacyAcceptedAt',
    marketingConsent: 'marketingConsent',
    gdprConsent: 'gdprConsent',
    ccpaOptOut: 'ccpaOptOut',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt',
    createdBy: 'createdBy',
    updatedBy: 'updatedBy'
  };

  export type UserScalarFieldEnum = (typeof UserScalarFieldEnum)[keyof typeof UserScalarFieldEnum]


  export const UserAddressScalarFieldEnum: {
    id: 'id',
    userId: 'userId',
    type: 'type',
    addressLine1: 'addressLine1',
    addressLine2: 'addressLine2',
    city: 'city',
    state: 'state',
    postalCode: 'postalCode',
    country: 'country',
    latitude: 'latitude',
    longitude: 'longitude',
    isDefault: 'isDefault',
    verified: 'verified',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type UserAddressScalarFieldEnum = (typeof UserAddressScalarFieldEnum)[keyof typeof UserAddressScalarFieldEnum]


  export const UserSessionScalarFieldEnum: {
    id: 'id',
    userId: 'userId',
    refreshTokenHash: 'refreshTokenHash',
    deviceFingerprint: 'deviceFingerprint',
    ipAddress: 'ipAddress',
    userAgent: 'userAgent',
    locationCountry: 'locationCountry',
    locationRegion: 'locationRegion',
    locationCity: 'locationCity',
    isActive: 'isActive',
    expiresAt: 'expiresAt',
    lastUsedAt: 'lastUsedAt',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type UserSessionScalarFieldEnum = (typeof UserSessionScalarFieldEnum)[keyof typeof UserSessionScalarFieldEnum]


  export const StoreScalarFieldEnum: {
    id: 'id',
    ownerId: 'ownerId',
    name: 'name',
    slug: 'slug',
    description: 'description',
    email: 'email',
    phone: 'phone',
    website: 'website',
    addressLine1: 'addressLine1',
    addressLine2: 'addressLine2',
    city: 'city',
    state: 'state',
    postalCode: 'postalCode',
    latitude: 'latitude',
    longitude: 'longitude',
    businessType: 'businessType',
    licenseNumber: 'licenseNumber',
    licenseType: 'licenseType',
    licenseState: 'licenseState',
    licenseExpiresAt: 'licenseExpiresAt',
    features: 'features',
    paymentMethods: 'paymentMethods',
    deliveryRadius: 'deliveryRadius',
    minimumOrder: 'minimumOrder',
    deliveryFee: 'deliveryFee',
    operatingHours: 'operatingHours',
    status: 'status',
    verified: 'verified',
    verifiedAt: 'verifiedAt',
    verifiedBy: 'verifiedBy',
    logoUrl: 'logoUrl',
    coverImageUrl: 'coverImageUrl',
    galleryImages: 'galleryImages',
    metaTitle: 'metaTitle',
    metaDescription: 'metaDescription',
    socialMedia: 'socialMedia',
    metrcLicenseId: 'metrcLicenseId',
    metrcLastSync: 'metrcLastSync',
    complianceStatus: 'complianceStatus',
    trackTraceSystem: 'trackTraceSystem',
    totalProducts: 'totalProducts',
    averageRating: 'averageRating',
    totalReviews: 'totalReviews',
    totalOrders: 'totalOrders',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt',
    createdBy: 'createdBy',
    updatedBy: 'updatedBy'
  };

  export type StoreScalarFieldEnum = (typeof StoreScalarFieldEnum)[keyof typeof StoreScalarFieldEnum]


  export const StoreStaffScalarFieldEnum: {
    id: 'id',
    storeId: 'storeId',
    userId: 'userId',
    role: 'role',
    permissions: 'permissions',
    employeeId: 'employeeId',
    startDate: 'startDate',
    endDate: 'endDate',
    hourlyWage: 'hourlyWage',
    commissionRate: 'commissionRate',
    status: 'status',
    canAccessPos: 'canAccessPos',
    canManageInventory: 'canManageInventory',
    canProcessOrders: 'canProcessOrders',
    complianceTrainingCompleted: 'complianceTrainingCompleted',
    trainingCompletedAt: 'trainingCompletedAt',
    trainingExpiresAt: 'trainingExpiresAt',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt',
    createdBy: 'createdBy'
  };

  export type StoreStaffScalarFieldEnum = (typeof StoreStaffScalarFieldEnum)[keyof typeof StoreStaffScalarFieldEnum]


  export const ProductCategoryScalarFieldEnum: {
    id: 'id',
    parentId: 'parentId',
    name: 'name',
    slug: 'slug',
    description: 'description',
    iconName: 'iconName',
    colorHex: 'colorHex',
    sortOrder: 'sortOrder',
    productType: 'productType',
    thcCategory: 'thcCategory',
    consumptionMethod: 'consumptionMethod',
    metaTitle: 'metaTitle',
    metaDescription: 'metaDescription',
    isActive: 'isActive',
    requiresCompliance: 'requiresCompliance',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type ProductCategoryScalarFieldEnum = (typeof ProductCategoryScalarFieldEnum)[keyof typeof ProductCategoryScalarFieldEnum]


  export const ProductScalarFieldEnum: {
    id: 'id',
    storeId: 'storeId',
    categoryId: 'categoryId',
    name: 'name',
    slug: 'slug',
    description: 'description',
    shortDescription: 'shortDescription',
    strainName: 'strainName',
    strainType: 'strainType',
    brand: 'brand',
    manufacturer: 'manufacturer',
    thcPercentage: 'thcPercentage',
    cbdPercentage: 'cbdPercentage',
    thcaPercentage: 'thcaPercentage',
    cbdaPercentage: 'cbdaPercentage',
    totalCannabinoids: 'totalCannabinoids',
    basePrice: 'basePrice',
    salePrice: 'salePrice',
    costPrice: 'costPrice',
    weightGrams: 'weightGrams',
    sku: 'sku',
    barcode: 'barcode',
    stockQuantity: 'stockQuantity',
    reservedQuantity: 'reservedQuantity',
    lowStockThreshold: 'lowStockThreshold',
    metrcId: 'metrcId',
    batchNumber: 'batchNumber',
    harvestDate: 'harvestDate',
    packageDate: 'packageDate',
    expirationDate: 'expirationDate',
    labTested: 'labTested',
    labTestResults: 'labTestResults',
    testedDate: 'testedDate',
    testingLab: 'testingLab',
    featuredImageUrl: 'featuredImageUrl',
    galleryImages: 'galleryImages',
    status: 'status',
    isFeatured: 'isFeatured',
    isMedicalOnly: 'isMedicalOnly',
    ageRestriction: 'ageRestriction',
    metaTitle: 'metaTitle',
    metaDescription: 'metaDescription',
    tags: 'tags',
    searchKeywords: 'searchKeywords',
    viewCount: 'viewCount',
    averageRating: 'averageRating',
    reviewCount: 'reviewCount',
    salesCount: 'salesCount',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt',
    createdBy: 'createdBy',
    updatedBy: 'updatedBy'
  };

  export type ProductScalarFieldEnum = (typeof ProductScalarFieldEnum)[keyof typeof ProductScalarFieldEnum]


  export const OrderScalarFieldEnum: {
    id: 'id',
    orderNumber: 'orderNumber',
    userId: 'userId',
    storeId: 'storeId',
    orderType: 'orderType',
    fulfillmentStatus: 'fulfillmentStatus',
    deliveryAddress: 'deliveryAddress',
    deliveryInstructions: 'deliveryInstructions',
    deliveryTimeRequested: 'deliveryTimeRequested',
    deliveryTimeActual: 'deliveryTimeActual',
    deliveryPersonId: 'deliveryPersonId',
    subtotal: 'subtotal',
    taxAmount: 'taxAmount',
    deliveryFee: 'deliveryFee',
    serviceFee: 'serviceFee',
    discountAmount: 'discountAmount',
    tipAmount: 'tipAmount',
    totalAmount: 'totalAmount',
    paymentStatus: 'paymentStatus',
    paymentMethod: 'paymentMethod',
    paymentProvider: 'paymentProvider',
    paymentIntentId: 'paymentIntentId',
    ageVerifiedAtDelivery: 'ageVerifiedAtDelivery',
    idCheckedBy: 'idCheckedBy',
    customerNotes: 'customerNotes',
    internalNotes: 'internalNotes',
    metrcTransferManifest: 'metrcTransferManifest',
    complianceCheckPassed: 'complianceCheckPassed',
    complianceCheckedAt: 'complianceCheckedAt',
    complianceCheckedBy: 'complianceCheckedBy',
    cancelledAt: 'cancelledAt',
    cancelledBy: 'cancelledBy',
    cancellationReason: 'cancellationReason',
    refundAmount: 'refundAmount',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type OrderScalarFieldEnum = (typeof OrderScalarFieldEnum)[keyof typeof OrderScalarFieldEnum]


  export const OrderItemScalarFieldEnum: {
    id: 'id',
    orderId: 'orderId',
    productId: 'productId',
    quantity: 'quantity',
    unitPrice: 'unitPrice',
    totalPrice: 'totalPrice',
    productName: 'productName',
    productSku: 'productSku',
    productBrand: 'productBrand',
    thcPercentage: 'thcPercentage',
    cbdPercentage: 'cbdPercentage',
    weightGrams: 'weightGrams',
    metrcPackageId: 'metrcPackageId',
    batchNumber: 'batchNumber',
    customerNotes: 'customerNotes',
    createdAt: 'createdAt'
  };

  export type OrderItemScalarFieldEnum = (typeof OrderItemScalarFieldEnum)[keyof typeof OrderItemScalarFieldEnum]


  export const ReviewScalarFieldEnum: {
    id: 'id',
    userId: 'userId',
    reviewableType: 'reviewableType',
    reviewableId: 'reviewableId',
    rating: 'rating',
    title: 'title',
    content: 'content',
    qualityRating: 'qualityRating',
    valueRating: 'valueRating',
    serviceRating: 'serviceRating',
    effectsRating: 'effectsRating',
    effects: 'effects',
    medicalBenefits: 'medicalBenefits',
    sideEffects: 'sideEffects',
    images: 'images',
    status: 'status',
    moderatedAt: 'moderatedAt',
    moderatedBy: 'moderatedBy',
    moderationReason: 'moderationReason',
    verifiedPurchase: 'verifiedPurchase',
    orderId: 'orderId',
    helpfulCount: 'helpfulCount',
    totalVotes: 'totalVotes',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type ReviewScalarFieldEnum = (typeof ReviewScalarFieldEnum)[keyof typeof ReviewScalarFieldEnum]


  export const ProfessionalScalarFieldEnum: {
    id: 'id',
    userId: 'userId',
    professionalType: 'professionalType',
    licenseNumber: 'licenseNumber',
    licenseState: 'licenseState',
    licenseExpiresAt: 'licenseExpiresAt',
    specializations: 'specializations',
    certifications: 'certifications',
    practiceName: 'practiceName',
    practiceAddress: 'practiceAddress',
    practicePhone: 'practicePhone',
    practiceWebsite: 'practiceWebsite',
    cannabisExperienceYears: 'cannabisExperienceYears',
    cannabisCertifications: 'cannabisCertifications',
    preferredProducts: 'preferredProducts',
    treatmentApproaches: 'treatmentApproaches',
    consultationTypes: 'consultationTypes',
    hourlyRate: 'hourlyRate',
    acceptsInsurance: 'acceptsInsurance',
    insuranceProviders: 'insuranceProviders',
    verified: 'verified',
    verifiedAt: 'verifiedAt',
    verifiedBy: 'verifiedBy',
    verificationDocuments: 'verificationDocuments',
    consultationCount: 'consultationCount',
    averageRating: 'averageRating',
    reviewCount: 'reviewCount',
    status: 'status',
    acceptingNewPatients: 'acceptingNewPatients',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type ProfessionalScalarFieldEnum = (typeof ProfessionalScalarFieldEnum)[keyof typeof ProfessionalScalarFieldEnum]


  export const ConsultationScalarFieldEnum: {
    id: 'id',
    patientId: 'patientId',
    professionalId: 'professionalId',
    consultationType: 'consultationType',
    sessionType: 'sessionType',
    scheduledAt: 'scheduledAt',
    durationMinutes: 'durationMinutes',
    timezone: 'timezone',
    status: 'status',
    meetingUrl: 'meetingUrl',
    meetingId: 'meetingId',
    meetingPassword: 'meetingPassword',
    chiefComplaint: 'chiefComplaint',
    symptoms: 'symptoms',
    currentMedications: 'currentMedications',
    cannabisExperience: 'cannabisExperience',
    previousCannabisUse: 'previousCannabisUse',
    assessment: 'assessment',
    recommendations: 'recommendations',
    prescribedProducts: 'prescribedProducts',
    followUpNeeded: 'followUpNeeded',
    followUpDate: 'followUpDate',
    consultationFee: 'consultationFee',
    paymentStatus: 'paymentStatus',
    paymentId: 'paymentId',
    medicalConsentSigned: 'medicalConsentSigned',
    privacyConsentSigned: 'privacyConsentSigned',
    consultationAgreementSigned: 'consultationAgreementSigned',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type ConsultationScalarFieldEnum = (typeof ConsultationScalarFieldEnum)[keyof typeof ConsultationScalarFieldEnum]


  export const BlogPostScalarFieldEnum: {
    id: 'id',
    authorId: 'authorId',
    title: 'title',
    slug: 'slug',
    excerpt: 'excerpt',
    content: 'content',
    featuredImageUrl: 'featuredImageUrl',
    category: 'category',
    tags: 'tags',
    metaTitle: 'metaTitle',
    metaDescription: 'metaDescription',
    metaKeywords: 'metaKeywords',
    status: 'status',
    publishedAt: 'publishedAt',
    scheduledFor: 'scheduledFor',
    viewCount: 'viewCount',
    likeCount: 'likeCount',
    commentCount: 'commentCount',
    shareCount: 'shareCount',
    factChecked: 'factChecked',
    factCheckedBy: 'factCheckedBy',
    factCheckedAt: 'factCheckedAt',
    medicalDisclaimer: 'medicalDisclaimer',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type BlogPostScalarFieldEnum = (typeof BlogPostScalarFieldEnum)[keyof typeof BlogPostScalarFieldEnum]


  export const AuditLogScalarFieldEnum: {
    id: 'id',
    action: 'action',
    resourceType: 'resourceType',
    resourceId: 'resourceId',
    userId: 'userId',
    sessionId: 'sessionId',
    ipAddress: 'ipAddress',
    userAgent: 'userAgent',
    oldValues: 'oldValues',
    newValues: 'newValues',
    requestId: 'requestId',
    endpoint: 'endpoint',
    httpMethod: 'httpMethod',
    riskLevel: 'riskLevel',
    complianceRelevant: 'complianceRelevant',
    result: 'result',
    errorMessage: 'errorMessage',
    timestamp: 'timestamp'
  };

  export type AuditLogScalarFieldEnum = (typeof AuditLogScalarFieldEnum)[keyof typeof AuditLogScalarFieldEnum]


  export const SortOrder: {
    asc: 'asc',
    desc: 'desc'
  };

  export type SortOrder = (typeof SortOrder)[keyof typeof SortOrder]


  export const NullableJsonNullValueInput: {
    DbNull: typeof DbNull,
    JsonNull: typeof JsonNull
  };

  export type NullableJsonNullValueInput = (typeof NullableJsonNullValueInput)[keyof typeof NullableJsonNullValueInput]


  export const QueryMode: {
    default: 'default',
    insensitive: 'insensitive'
  };

  export type QueryMode = (typeof QueryMode)[keyof typeof QueryMode]


  export const NullsOrder: {
    first: 'first',
    last: 'last'
  };

  export type NullsOrder = (typeof NullsOrder)[keyof typeof NullsOrder]


  export const JsonNullValueFilter: {
    DbNull: typeof DbNull,
    JsonNull: typeof JsonNull,
    AnyNull: typeof AnyNull
  };

  export type JsonNullValueFilter = (typeof JsonNullValueFilter)[keyof typeof JsonNullValueFilter]


  /**
   * Field references 
   */


  /**
   * Reference to a field of type 'String'
   */
  export type StringFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'String'>
    


  /**
   * Reference to a field of type 'String[]'
   */
  export type ListStringFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'String[]'>
    


  /**
   * Reference to a field of type 'Boolean'
   */
  export type BooleanFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Boolean'>
    


  /**
   * Reference to a field of type 'UserRole'
   */
  export type EnumUserRoleFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'UserRole'>
    


  /**
   * Reference to a field of type 'UserRole[]'
   */
  export type ListEnumUserRoleFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'UserRole[]'>
    


  /**
   * Reference to a field of type 'DateTime'
   */
  export type DateTimeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'DateTime'>
    


  /**
   * Reference to a field of type 'DateTime[]'
   */
  export type ListDateTimeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'DateTime[]'>
    


  /**
   * Reference to a field of type 'UserStatus'
   */
  export type EnumUserStatusFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'UserStatus'>
    


  /**
   * Reference to a field of type 'UserStatus[]'
   */
  export type ListEnumUserStatusFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'UserStatus[]'>
    


  /**
   * Reference to a field of type 'Int'
   */
  export type IntFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Int'>
    


  /**
   * Reference to a field of type 'Int[]'
   */
  export type ListIntFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Int[]'>
    


  /**
   * Reference to a field of type 'AgeVerificationMethod'
   */
  export type EnumAgeVerificationMethodFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'AgeVerificationMethod'>
    


  /**
   * Reference to a field of type 'AgeVerificationMethod[]'
   */
  export type ListEnumAgeVerificationMethodFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'AgeVerificationMethod[]'>
    


  /**
   * Reference to a field of type 'AddressType'
   */
  export type EnumAddressTypeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'AddressType'>
    


  /**
   * Reference to a field of type 'AddressType[]'
   */
  export type ListEnumAddressTypeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'AddressType[]'>
    


  /**
   * Reference to a field of type 'Decimal'
   */
  export type DecimalFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Decimal'>
    


  /**
   * Reference to a field of type 'Decimal[]'
   */
  export type ListDecimalFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Decimal[]'>
    


  /**
   * Reference to a field of type 'BusinessType'
   */
  export type EnumBusinessTypeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'BusinessType'>
    


  /**
   * Reference to a field of type 'BusinessType[]'
   */
  export type ListEnumBusinessTypeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'BusinessType[]'>
    


  /**
   * Reference to a field of type 'Json'
   */
  export type JsonFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Json'>
    


  /**
   * Reference to a field of type 'StoreStatus'
   */
  export type EnumStoreStatusFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'StoreStatus'>
    


  /**
   * Reference to a field of type 'StoreStatus[]'
   */
  export type ListEnumStoreStatusFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'StoreStatus[]'>
    


  /**
   * Reference to a field of type 'ComplianceStatus'
   */
  export type EnumComplianceStatusFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'ComplianceStatus'>
    


  /**
   * Reference to a field of type 'ComplianceStatus[]'
   */
  export type ListEnumComplianceStatusFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'ComplianceStatus[]'>
    


  /**
   * Reference to a field of type 'TrackTraceSystem'
   */
  export type EnumTrackTraceSystemFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'TrackTraceSystem'>
    


  /**
   * Reference to a field of type 'TrackTraceSystem[]'
   */
  export type ListEnumTrackTraceSystemFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'TrackTraceSystem[]'>
    


  /**
   * Reference to a field of type 'ProductType'
   */
  export type EnumProductTypeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'ProductType'>
    


  /**
   * Reference to a field of type 'ProductType[]'
   */
  export type ListEnumProductTypeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'ProductType[]'>
    


  /**
   * Reference to a field of type 'StrainType'
   */
  export type EnumStrainTypeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'StrainType'>
    


  /**
   * Reference to a field of type 'StrainType[]'
   */
  export type ListEnumStrainTypeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'StrainType[]'>
    


  /**
   * Reference to a field of type 'ProductStatus'
   */
  export type EnumProductStatusFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'ProductStatus'>
    


  /**
   * Reference to a field of type 'ProductStatus[]'
   */
  export type ListEnumProductStatusFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'ProductStatus[]'>
    


  /**
   * Reference to a field of type 'OrderType'
   */
  export type EnumOrderTypeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'OrderType'>
    


  /**
   * Reference to a field of type 'OrderType[]'
   */
  export type ListEnumOrderTypeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'OrderType[]'>
    


  /**
   * Reference to a field of type 'OrderStatus'
   */
  export type EnumOrderStatusFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'OrderStatus'>
    


  /**
   * Reference to a field of type 'OrderStatus[]'
   */
  export type ListEnumOrderStatusFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'OrderStatus[]'>
    


  /**
   * Reference to a field of type 'PaymentStatus'
   */
  export type EnumPaymentStatusFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'PaymentStatus'>
    


  /**
   * Reference to a field of type 'PaymentStatus[]'
   */
  export type ListEnumPaymentStatusFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'PaymentStatus[]'>
    


  /**
   * Reference to a field of type 'PaymentMethod'
   */
  export type EnumPaymentMethodFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'PaymentMethod'>
    


  /**
   * Reference to a field of type 'PaymentMethod[]'
   */
  export type ListEnumPaymentMethodFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'PaymentMethod[]'>
    


  /**
   * Reference to a field of type 'ReviewableType'
   */
  export type EnumReviewableTypeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'ReviewableType'>
    


  /**
   * Reference to a field of type 'ReviewableType[]'
   */
  export type ListEnumReviewableTypeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'ReviewableType[]'>
    


  /**
   * Reference to a field of type 'ReviewStatus'
   */
  export type EnumReviewStatusFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'ReviewStatus'>
    


  /**
   * Reference to a field of type 'ReviewStatus[]'
   */
  export type ListEnumReviewStatusFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'ReviewStatus[]'>
    


  /**
   * Reference to a field of type 'ProfessionalType'
   */
  export type EnumProfessionalTypeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'ProfessionalType'>
    


  /**
   * Reference to a field of type 'ProfessionalType[]'
   */
  export type ListEnumProfessionalTypeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'ProfessionalType[]'>
    


  /**
   * Reference to a field of type 'ConsultationType'
   */
  export type EnumConsultationTypeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'ConsultationType'>
    


  /**
   * Reference to a field of type 'ConsultationType[]'
   */
  export type ListEnumConsultationTypeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'ConsultationType[]'>
    


  /**
   * Reference to a field of type 'SessionType'
   */
  export type EnumSessionTypeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'SessionType'>
    


  /**
   * Reference to a field of type 'SessionType[]'
   */
  export type ListEnumSessionTypeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'SessionType[]'>
    


  /**
   * Reference to a field of type 'BlogCategory'
   */
  export type EnumBlogCategoryFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'BlogCategory'>
    


  /**
   * Reference to a field of type 'BlogCategory[]'
   */
  export type ListEnumBlogCategoryFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'BlogCategory[]'>
    


  /**
   * Reference to a field of type 'BlogStatus'
   */
  export type EnumBlogStatusFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'BlogStatus'>
    


  /**
   * Reference to a field of type 'BlogStatus[]'
   */
  export type ListEnumBlogStatusFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'BlogStatus[]'>
    


  /**
   * Reference to a field of type 'Float'
   */
  export type FloatFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Float'>
    


  /**
   * Reference to a field of type 'Float[]'
   */
  export type ListFloatFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Float[]'>
    
  /**
   * Deep Input Types
   */


  export type UserWhereInput = {
    AND?: UserWhereInput | UserWhereInput[]
    OR?: UserWhereInput[]
    NOT?: UserWhereInput | UserWhereInput[]
    id?: StringFilter<"User"> | string
    email?: StringFilter<"User"> | string
    emailVerified?: BoolFilter<"User"> | boolean
    passwordHash?: StringFilter<"User"> | string
    role?: EnumUserRoleFilter<"User"> | $Enums.UserRole
    firstName?: StringNullableFilter<"User"> | string | null
    lastName?: StringNullableFilter<"User"> | string | null
    phone?: StringNullableFilter<"User"> | string | null
    dateOfBirth?: DateTimeNullableFilter<"User"> | Date | string | null
    status?: EnumUserStatusFilter<"User"> | $Enums.UserStatus
    lastLoginAt?: DateTimeNullableFilter<"User"> | Date | string | null
    failedLoginAttempts?: IntFilter<"User"> | number
    lockedUntil?: DateTimeNullableFilter<"User"> | Date | string | null
    ageVerified?: BoolFilter<"User"> | boolean
    ageVerificationMethod?: EnumAgeVerificationMethodNullableFilter<"User"> | $Enums.AgeVerificationMethod | null
    ageVerifiedAt?: DateTimeNullableFilter<"User"> | Date | string | null
    ageVerifiedBy?: StringNullableFilter<"User"> | string | null
    termsAcceptedAt?: DateTimeNullableFilter<"User"> | Date | string | null
    privacyAcceptedAt?: DateTimeNullableFilter<"User"> | Date | string | null
    marketingConsent?: BoolFilter<"User"> | boolean
    gdprConsent?: BoolFilter<"User"> | boolean
    ccpaOptOut?: BoolFilter<"User"> | boolean
    createdAt?: DateTimeFilter<"User"> | Date | string
    updatedAt?: DateTimeFilter<"User"> | Date | string
    createdBy?: StringNullableFilter<"User"> | string | null
    updatedBy?: StringNullableFilter<"User"> | string | null
    addresses?: UserAddressListRelationFilter
    sessions?: UserSessionListRelationFilter
    stores?: StoreListRelationFilter
    orders?: OrderListRelationFilter
    reviews?: ReviewListRelationFilter
    professional?: XOR<ProfessionalNullableRelationFilter, ProfessionalWhereInput> | null
    storeStaff?: StoreStaffListRelationFilter
    consultationsAsPatient?: ConsultationListRelationFilter
    ageVerifier?: XOR<UserNullableRelationFilter, UserWhereInput> | null
    ageVerifications?: UserListRelationFilter
    blogPosts?: BlogPostListRelationFilter
    factCheckedPosts?: BlogPostListRelationFilter
  }

  export type UserOrderByWithRelationInput = {
    id?: SortOrder
    email?: SortOrder
    emailVerified?: SortOrder
    passwordHash?: SortOrder
    role?: SortOrder
    firstName?: SortOrderInput | SortOrder
    lastName?: SortOrderInput | SortOrder
    phone?: SortOrderInput | SortOrder
    dateOfBirth?: SortOrderInput | SortOrder
    status?: SortOrder
    lastLoginAt?: SortOrderInput | SortOrder
    failedLoginAttempts?: SortOrder
    lockedUntil?: SortOrderInput | SortOrder
    ageVerified?: SortOrder
    ageVerificationMethod?: SortOrderInput | SortOrder
    ageVerifiedAt?: SortOrderInput | SortOrder
    ageVerifiedBy?: SortOrderInput | SortOrder
    termsAcceptedAt?: SortOrderInput | SortOrder
    privacyAcceptedAt?: SortOrderInput | SortOrder
    marketingConsent?: SortOrder
    gdprConsent?: SortOrder
    ccpaOptOut?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    createdBy?: SortOrderInput | SortOrder
    updatedBy?: SortOrderInput | SortOrder
    addresses?: UserAddressOrderByRelationAggregateInput
    sessions?: UserSessionOrderByRelationAggregateInput
    stores?: StoreOrderByRelationAggregateInput
    orders?: OrderOrderByRelationAggregateInput
    reviews?: ReviewOrderByRelationAggregateInput
    professional?: ProfessionalOrderByWithRelationInput
    storeStaff?: StoreStaffOrderByRelationAggregateInput
    consultationsAsPatient?: ConsultationOrderByRelationAggregateInput
    ageVerifier?: UserOrderByWithRelationInput
    ageVerifications?: UserOrderByRelationAggregateInput
    blogPosts?: BlogPostOrderByRelationAggregateInput
    factCheckedPosts?: BlogPostOrderByRelationAggregateInput
  }

  export type UserWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    email?: string
    AND?: UserWhereInput | UserWhereInput[]
    OR?: UserWhereInput[]
    NOT?: UserWhereInput | UserWhereInput[]
    emailVerified?: BoolFilter<"User"> | boolean
    passwordHash?: StringFilter<"User"> | string
    role?: EnumUserRoleFilter<"User"> | $Enums.UserRole
    firstName?: StringNullableFilter<"User"> | string | null
    lastName?: StringNullableFilter<"User"> | string | null
    phone?: StringNullableFilter<"User"> | string | null
    dateOfBirth?: DateTimeNullableFilter<"User"> | Date | string | null
    status?: EnumUserStatusFilter<"User"> | $Enums.UserStatus
    lastLoginAt?: DateTimeNullableFilter<"User"> | Date | string | null
    failedLoginAttempts?: IntFilter<"User"> | number
    lockedUntil?: DateTimeNullableFilter<"User"> | Date | string | null
    ageVerified?: BoolFilter<"User"> | boolean
    ageVerificationMethod?: EnumAgeVerificationMethodNullableFilter<"User"> | $Enums.AgeVerificationMethod | null
    ageVerifiedAt?: DateTimeNullableFilter<"User"> | Date | string | null
    ageVerifiedBy?: StringNullableFilter<"User"> | string | null
    termsAcceptedAt?: DateTimeNullableFilter<"User"> | Date | string | null
    privacyAcceptedAt?: DateTimeNullableFilter<"User"> | Date | string | null
    marketingConsent?: BoolFilter<"User"> | boolean
    gdprConsent?: BoolFilter<"User"> | boolean
    ccpaOptOut?: BoolFilter<"User"> | boolean
    createdAt?: DateTimeFilter<"User"> | Date | string
    updatedAt?: DateTimeFilter<"User"> | Date | string
    createdBy?: StringNullableFilter<"User"> | string | null
    updatedBy?: StringNullableFilter<"User"> | string | null
    addresses?: UserAddressListRelationFilter
    sessions?: UserSessionListRelationFilter
    stores?: StoreListRelationFilter
    orders?: OrderListRelationFilter
    reviews?: ReviewListRelationFilter
    professional?: XOR<ProfessionalNullableRelationFilter, ProfessionalWhereInput> | null
    storeStaff?: StoreStaffListRelationFilter
    consultationsAsPatient?: ConsultationListRelationFilter
    ageVerifier?: XOR<UserNullableRelationFilter, UserWhereInput> | null
    ageVerifications?: UserListRelationFilter
    blogPosts?: BlogPostListRelationFilter
    factCheckedPosts?: BlogPostListRelationFilter
  }, "id" | "email">

  export type UserOrderByWithAggregationInput = {
    id?: SortOrder
    email?: SortOrder
    emailVerified?: SortOrder
    passwordHash?: SortOrder
    role?: SortOrder
    firstName?: SortOrderInput | SortOrder
    lastName?: SortOrderInput | SortOrder
    phone?: SortOrderInput | SortOrder
    dateOfBirth?: SortOrderInput | SortOrder
    status?: SortOrder
    lastLoginAt?: SortOrderInput | SortOrder
    failedLoginAttempts?: SortOrder
    lockedUntil?: SortOrderInput | SortOrder
    ageVerified?: SortOrder
    ageVerificationMethod?: SortOrderInput | SortOrder
    ageVerifiedAt?: SortOrderInput | SortOrder
    ageVerifiedBy?: SortOrderInput | SortOrder
    termsAcceptedAt?: SortOrderInput | SortOrder
    privacyAcceptedAt?: SortOrderInput | SortOrder
    marketingConsent?: SortOrder
    gdprConsent?: SortOrder
    ccpaOptOut?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    createdBy?: SortOrderInput | SortOrder
    updatedBy?: SortOrderInput | SortOrder
    _count?: UserCountOrderByAggregateInput
    _avg?: UserAvgOrderByAggregateInput
    _max?: UserMaxOrderByAggregateInput
    _min?: UserMinOrderByAggregateInput
    _sum?: UserSumOrderByAggregateInput
  }

  export type UserScalarWhereWithAggregatesInput = {
    AND?: UserScalarWhereWithAggregatesInput | UserScalarWhereWithAggregatesInput[]
    OR?: UserScalarWhereWithAggregatesInput[]
    NOT?: UserScalarWhereWithAggregatesInput | UserScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"User"> | string
    email?: StringWithAggregatesFilter<"User"> | string
    emailVerified?: BoolWithAggregatesFilter<"User"> | boolean
    passwordHash?: StringWithAggregatesFilter<"User"> | string
    role?: EnumUserRoleWithAggregatesFilter<"User"> | $Enums.UserRole
    firstName?: StringNullableWithAggregatesFilter<"User"> | string | null
    lastName?: StringNullableWithAggregatesFilter<"User"> | string | null
    phone?: StringNullableWithAggregatesFilter<"User"> | string | null
    dateOfBirth?: DateTimeNullableWithAggregatesFilter<"User"> | Date | string | null
    status?: EnumUserStatusWithAggregatesFilter<"User"> | $Enums.UserStatus
    lastLoginAt?: DateTimeNullableWithAggregatesFilter<"User"> | Date | string | null
    failedLoginAttempts?: IntWithAggregatesFilter<"User"> | number
    lockedUntil?: DateTimeNullableWithAggregatesFilter<"User"> | Date | string | null
    ageVerified?: BoolWithAggregatesFilter<"User"> | boolean
    ageVerificationMethod?: EnumAgeVerificationMethodNullableWithAggregatesFilter<"User"> | $Enums.AgeVerificationMethod | null
    ageVerifiedAt?: DateTimeNullableWithAggregatesFilter<"User"> | Date | string | null
    ageVerifiedBy?: StringNullableWithAggregatesFilter<"User"> | string | null
    termsAcceptedAt?: DateTimeNullableWithAggregatesFilter<"User"> | Date | string | null
    privacyAcceptedAt?: DateTimeNullableWithAggregatesFilter<"User"> | Date | string | null
    marketingConsent?: BoolWithAggregatesFilter<"User"> | boolean
    gdprConsent?: BoolWithAggregatesFilter<"User"> | boolean
    ccpaOptOut?: BoolWithAggregatesFilter<"User"> | boolean
    createdAt?: DateTimeWithAggregatesFilter<"User"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"User"> | Date | string
    createdBy?: StringNullableWithAggregatesFilter<"User"> | string | null
    updatedBy?: StringNullableWithAggregatesFilter<"User"> | string | null
  }

  export type UserAddressWhereInput = {
    AND?: UserAddressWhereInput | UserAddressWhereInput[]
    OR?: UserAddressWhereInput[]
    NOT?: UserAddressWhereInput | UserAddressWhereInput[]
    id?: StringFilter<"UserAddress"> | string
    userId?: StringFilter<"UserAddress"> | string
    type?: EnumAddressTypeFilter<"UserAddress"> | $Enums.AddressType
    addressLine1?: StringFilter<"UserAddress"> | string
    addressLine2?: StringNullableFilter<"UserAddress"> | string | null
    city?: StringFilter<"UserAddress"> | string
    state?: StringFilter<"UserAddress"> | string
    postalCode?: StringFilter<"UserAddress"> | string
    country?: StringFilter<"UserAddress"> | string
    latitude?: DecimalNullableFilter<"UserAddress"> | Decimal | DecimalJsLike | number | string | null
    longitude?: DecimalNullableFilter<"UserAddress"> | Decimal | DecimalJsLike | number | string | null
    isDefault?: BoolFilter<"UserAddress"> | boolean
    verified?: BoolFilter<"UserAddress"> | boolean
    createdAt?: DateTimeFilter<"UserAddress"> | Date | string
    updatedAt?: DateTimeFilter<"UserAddress"> | Date | string
    user?: XOR<UserRelationFilter, UserWhereInput>
  }

  export type UserAddressOrderByWithRelationInput = {
    id?: SortOrder
    userId?: SortOrder
    type?: SortOrder
    addressLine1?: SortOrder
    addressLine2?: SortOrderInput | SortOrder
    city?: SortOrder
    state?: SortOrder
    postalCode?: SortOrder
    country?: SortOrder
    latitude?: SortOrderInput | SortOrder
    longitude?: SortOrderInput | SortOrder
    isDefault?: SortOrder
    verified?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    user?: UserOrderByWithRelationInput
  }

  export type UserAddressWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: UserAddressWhereInput | UserAddressWhereInput[]
    OR?: UserAddressWhereInput[]
    NOT?: UserAddressWhereInput | UserAddressWhereInput[]
    userId?: StringFilter<"UserAddress"> | string
    type?: EnumAddressTypeFilter<"UserAddress"> | $Enums.AddressType
    addressLine1?: StringFilter<"UserAddress"> | string
    addressLine2?: StringNullableFilter<"UserAddress"> | string | null
    city?: StringFilter<"UserAddress"> | string
    state?: StringFilter<"UserAddress"> | string
    postalCode?: StringFilter<"UserAddress"> | string
    country?: StringFilter<"UserAddress"> | string
    latitude?: DecimalNullableFilter<"UserAddress"> | Decimal | DecimalJsLike | number | string | null
    longitude?: DecimalNullableFilter<"UserAddress"> | Decimal | DecimalJsLike | number | string | null
    isDefault?: BoolFilter<"UserAddress"> | boolean
    verified?: BoolFilter<"UserAddress"> | boolean
    createdAt?: DateTimeFilter<"UserAddress"> | Date | string
    updatedAt?: DateTimeFilter<"UserAddress"> | Date | string
    user?: XOR<UserRelationFilter, UserWhereInput>
  }, "id">

  export type UserAddressOrderByWithAggregationInput = {
    id?: SortOrder
    userId?: SortOrder
    type?: SortOrder
    addressLine1?: SortOrder
    addressLine2?: SortOrderInput | SortOrder
    city?: SortOrder
    state?: SortOrder
    postalCode?: SortOrder
    country?: SortOrder
    latitude?: SortOrderInput | SortOrder
    longitude?: SortOrderInput | SortOrder
    isDefault?: SortOrder
    verified?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: UserAddressCountOrderByAggregateInput
    _avg?: UserAddressAvgOrderByAggregateInput
    _max?: UserAddressMaxOrderByAggregateInput
    _min?: UserAddressMinOrderByAggregateInput
    _sum?: UserAddressSumOrderByAggregateInput
  }

  export type UserAddressScalarWhereWithAggregatesInput = {
    AND?: UserAddressScalarWhereWithAggregatesInput | UserAddressScalarWhereWithAggregatesInput[]
    OR?: UserAddressScalarWhereWithAggregatesInput[]
    NOT?: UserAddressScalarWhereWithAggregatesInput | UserAddressScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"UserAddress"> | string
    userId?: StringWithAggregatesFilter<"UserAddress"> | string
    type?: EnumAddressTypeWithAggregatesFilter<"UserAddress"> | $Enums.AddressType
    addressLine1?: StringWithAggregatesFilter<"UserAddress"> | string
    addressLine2?: StringNullableWithAggregatesFilter<"UserAddress"> | string | null
    city?: StringWithAggregatesFilter<"UserAddress"> | string
    state?: StringWithAggregatesFilter<"UserAddress"> | string
    postalCode?: StringWithAggregatesFilter<"UserAddress"> | string
    country?: StringWithAggregatesFilter<"UserAddress"> | string
    latitude?: DecimalNullableWithAggregatesFilter<"UserAddress"> | Decimal | DecimalJsLike | number | string | null
    longitude?: DecimalNullableWithAggregatesFilter<"UserAddress"> | Decimal | DecimalJsLike | number | string | null
    isDefault?: BoolWithAggregatesFilter<"UserAddress"> | boolean
    verified?: BoolWithAggregatesFilter<"UserAddress"> | boolean
    createdAt?: DateTimeWithAggregatesFilter<"UserAddress"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"UserAddress"> | Date | string
  }

  export type UserSessionWhereInput = {
    AND?: UserSessionWhereInput | UserSessionWhereInput[]
    OR?: UserSessionWhereInput[]
    NOT?: UserSessionWhereInput | UserSessionWhereInput[]
    id?: StringFilter<"UserSession"> | string
    userId?: StringFilter<"UserSession"> | string
    refreshTokenHash?: StringFilter<"UserSession"> | string
    deviceFingerprint?: StringNullableFilter<"UserSession"> | string | null
    ipAddress?: StringNullableFilter<"UserSession"> | string | null
    userAgent?: StringNullableFilter<"UserSession"> | string | null
    locationCountry?: StringNullableFilter<"UserSession"> | string | null
    locationRegion?: StringNullableFilter<"UserSession"> | string | null
    locationCity?: StringNullableFilter<"UserSession"> | string | null
    isActive?: BoolFilter<"UserSession"> | boolean
    expiresAt?: DateTimeFilter<"UserSession"> | Date | string
    lastUsedAt?: DateTimeFilter<"UserSession"> | Date | string
    createdAt?: DateTimeFilter<"UserSession"> | Date | string
    updatedAt?: DateTimeFilter<"UserSession"> | Date | string
    user?: XOR<UserRelationFilter, UserWhereInput>
  }

  export type UserSessionOrderByWithRelationInput = {
    id?: SortOrder
    userId?: SortOrder
    refreshTokenHash?: SortOrder
    deviceFingerprint?: SortOrderInput | SortOrder
    ipAddress?: SortOrderInput | SortOrder
    userAgent?: SortOrderInput | SortOrder
    locationCountry?: SortOrderInput | SortOrder
    locationRegion?: SortOrderInput | SortOrder
    locationCity?: SortOrderInput | SortOrder
    isActive?: SortOrder
    expiresAt?: SortOrder
    lastUsedAt?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    user?: UserOrderByWithRelationInput
  }

  export type UserSessionWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    refreshTokenHash?: string
    AND?: UserSessionWhereInput | UserSessionWhereInput[]
    OR?: UserSessionWhereInput[]
    NOT?: UserSessionWhereInput | UserSessionWhereInput[]
    userId?: StringFilter<"UserSession"> | string
    deviceFingerprint?: StringNullableFilter<"UserSession"> | string | null
    ipAddress?: StringNullableFilter<"UserSession"> | string | null
    userAgent?: StringNullableFilter<"UserSession"> | string | null
    locationCountry?: StringNullableFilter<"UserSession"> | string | null
    locationRegion?: StringNullableFilter<"UserSession"> | string | null
    locationCity?: StringNullableFilter<"UserSession"> | string | null
    isActive?: BoolFilter<"UserSession"> | boolean
    expiresAt?: DateTimeFilter<"UserSession"> | Date | string
    lastUsedAt?: DateTimeFilter<"UserSession"> | Date | string
    createdAt?: DateTimeFilter<"UserSession"> | Date | string
    updatedAt?: DateTimeFilter<"UserSession"> | Date | string
    user?: XOR<UserRelationFilter, UserWhereInput>
  }, "id" | "refreshTokenHash">

  export type UserSessionOrderByWithAggregationInput = {
    id?: SortOrder
    userId?: SortOrder
    refreshTokenHash?: SortOrder
    deviceFingerprint?: SortOrderInput | SortOrder
    ipAddress?: SortOrderInput | SortOrder
    userAgent?: SortOrderInput | SortOrder
    locationCountry?: SortOrderInput | SortOrder
    locationRegion?: SortOrderInput | SortOrder
    locationCity?: SortOrderInput | SortOrder
    isActive?: SortOrder
    expiresAt?: SortOrder
    lastUsedAt?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: UserSessionCountOrderByAggregateInput
    _max?: UserSessionMaxOrderByAggregateInput
    _min?: UserSessionMinOrderByAggregateInput
  }

  export type UserSessionScalarWhereWithAggregatesInput = {
    AND?: UserSessionScalarWhereWithAggregatesInput | UserSessionScalarWhereWithAggregatesInput[]
    OR?: UserSessionScalarWhereWithAggregatesInput[]
    NOT?: UserSessionScalarWhereWithAggregatesInput | UserSessionScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"UserSession"> | string
    userId?: StringWithAggregatesFilter<"UserSession"> | string
    refreshTokenHash?: StringWithAggregatesFilter<"UserSession"> | string
    deviceFingerprint?: StringNullableWithAggregatesFilter<"UserSession"> | string | null
    ipAddress?: StringNullableWithAggregatesFilter<"UserSession"> | string | null
    userAgent?: StringNullableWithAggregatesFilter<"UserSession"> | string | null
    locationCountry?: StringNullableWithAggregatesFilter<"UserSession"> | string | null
    locationRegion?: StringNullableWithAggregatesFilter<"UserSession"> | string | null
    locationCity?: StringNullableWithAggregatesFilter<"UserSession"> | string | null
    isActive?: BoolWithAggregatesFilter<"UserSession"> | boolean
    expiresAt?: DateTimeWithAggregatesFilter<"UserSession"> | Date | string
    lastUsedAt?: DateTimeWithAggregatesFilter<"UserSession"> | Date | string
    createdAt?: DateTimeWithAggregatesFilter<"UserSession"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"UserSession"> | Date | string
  }

  export type StoreWhereInput = {
    AND?: StoreWhereInput | StoreWhereInput[]
    OR?: StoreWhereInput[]
    NOT?: StoreWhereInput | StoreWhereInput[]
    id?: StringFilter<"Store"> | string
    ownerId?: StringFilter<"Store"> | string
    name?: StringFilter<"Store"> | string
    slug?: StringFilter<"Store"> | string
    description?: StringNullableFilter<"Store"> | string | null
    email?: StringNullableFilter<"Store"> | string | null
    phone?: StringNullableFilter<"Store"> | string | null
    website?: StringNullableFilter<"Store"> | string | null
    addressLine1?: StringFilter<"Store"> | string
    addressLine2?: StringNullableFilter<"Store"> | string | null
    city?: StringFilter<"Store"> | string
    state?: StringFilter<"Store"> | string
    postalCode?: StringFilter<"Store"> | string
    latitude?: DecimalFilter<"Store"> | Decimal | DecimalJsLike | number | string
    longitude?: DecimalFilter<"Store"> | Decimal | DecimalJsLike | number | string
    businessType?: EnumBusinessTypeFilter<"Store"> | $Enums.BusinessType
    licenseNumber?: StringFilter<"Store"> | string
    licenseType?: StringFilter<"Store"> | string
    licenseState?: StringFilter<"Store"> | string
    licenseExpiresAt?: DateTimeFilter<"Store"> | Date | string
    features?: JsonNullableFilter<"Store">
    paymentMethods?: JsonNullableFilter<"Store">
    deliveryRadius?: IntNullableFilter<"Store"> | number | null
    minimumOrder?: DecimalNullableFilter<"Store"> | Decimal | DecimalJsLike | number | string | null
    deliveryFee?: DecimalNullableFilter<"Store"> | Decimal | DecimalJsLike | number | string | null
    operatingHours?: JsonNullableFilter<"Store">
    status?: EnumStoreStatusFilter<"Store"> | $Enums.StoreStatus
    verified?: BoolFilter<"Store"> | boolean
    verifiedAt?: DateTimeNullableFilter<"Store"> | Date | string | null
    verifiedBy?: StringNullableFilter<"Store"> | string | null
    logoUrl?: StringNullableFilter<"Store"> | string | null
    coverImageUrl?: StringNullableFilter<"Store"> | string | null
    galleryImages?: JsonNullableFilter<"Store">
    metaTitle?: StringNullableFilter<"Store"> | string | null
    metaDescription?: StringNullableFilter<"Store"> | string | null
    socialMedia?: JsonNullableFilter<"Store">
    metrcLicenseId?: StringNullableFilter<"Store"> | string | null
    metrcLastSync?: DateTimeNullableFilter<"Store"> | Date | string | null
    complianceStatus?: EnumComplianceStatusFilter<"Store"> | $Enums.ComplianceStatus
    trackTraceSystem?: EnumTrackTraceSystemNullableFilter<"Store"> | $Enums.TrackTraceSystem | null
    totalProducts?: IntFilter<"Store"> | number
    averageRating?: DecimalFilter<"Store"> | Decimal | DecimalJsLike | number | string
    totalReviews?: IntFilter<"Store"> | number
    totalOrders?: IntFilter<"Store"> | number
    createdAt?: DateTimeFilter<"Store"> | Date | string
    updatedAt?: DateTimeFilter<"Store"> | Date | string
    createdBy?: StringNullableFilter<"Store"> | string | null
    updatedBy?: StringNullableFilter<"Store"> | string | null
    owner?: XOR<UserRelationFilter, UserWhereInput>
    staff?: StoreStaffListRelationFilter
    products?: ProductListRelationFilter
    orders?: OrderListRelationFilter
    reviews?: ReviewListRelationFilter
  }

  export type StoreOrderByWithRelationInput = {
    id?: SortOrder
    ownerId?: SortOrder
    name?: SortOrder
    slug?: SortOrder
    description?: SortOrderInput | SortOrder
    email?: SortOrderInput | SortOrder
    phone?: SortOrderInput | SortOrder
    website?: SortOrderInput | SortOrder
    addressLine1?: SortOrder
    addressLine2?: SortOrderInput | SortOrder
    city?: SortOrder
    state?: SortOrder
    postalCode?: SortOrder
    latitude?: SortOrder
    longitude?: SortOrder
    businessType?: SortOrder
    licenseNumber?: SortOrder
    licenseType?: SortOrder
    licenseState?: SortOrder
    licenseExpiresAt?: SortOrder
    features?: SortOrderInput | SortOrder
    paymentMethods?: SortOrderInput | SortOrder
    deliveryRadius?: SortOrderInput | SortOrder
    minimumOrder?: SortOrderInput | SortOrder
    deliveryFee?: SortOrderInput | SortOrder
    operatingHours?: SortOrderInput | SortOrder
    status?: SortOrder
    verified?: SortOrder
    verifiedAt?: SortOrderInput | SortOrder
    verifiedBy?: SortOrderInput | SortOrder
    logoUrl?: SortOrderInput | SortOrder
    coverImageUrl?: SortOrderInput | SortOrder
    galleryImages?: SortOrderInput | SortOrder
    metaTitle?: SortOrderInput | SortOrder
    metaDescription?: SortOrderInput | SortOrder
    socialMedia?: SortOrderInput | SortOrder
    metrcLicenseId?: SortOrderInput | SortOrder
    metrcLastSync?: SortOrderInput | SortOrder
    complianceStatus?: SortOrder
    trackTraceSystem?: SortOrderInput | SortOrder
    totalProducts?: SortOrder
    averageRating?: SortOrder
    totalReviews?: SortOrder
    totalOrders?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    createdBy?: SortOrderInput | SortOrder
    updatedBy?: SortOrderInput | SortOrder
    owner?: UserOrderByWithRelationInput
    staff?: StoreStaffOrderByRelationAggregateInput
    products?: ProductOrderByRelationAggregateInput
    orders?: OrderOrderByRelationAggregateInput
    reviews?: ReviewOrderByRelationAggregateInput
  }

  export type StoreWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    slug?: string
    licenseNumber?: string
    AND?: StoreWhereInput | StoreWhereInput[]
    OR?: StoreWhereInput[]
    NOT?: StoreWhereInput | StoreWhereInput[]
    ownerId?: StringFilter<"Store"> | string
    name?: StringFilter<"Store"> | string
    description?: StringNullableFilter<"Store"> | string | null
    email?: StringNullableFilter<"Store"> | string | null
    phone?: StringNullableFilter<"Store"> | string | null
    website?: StringNullableFilter<"Store"> | string | null
    addressLine1?: StringFilter<"Store"> | string
    addressLine2?: StringNullableFilter<"Store"> | string | null
    city?: StringFilter<"Store"> | string
    state?: StringFilter<"Store"> | string
    postalCode?: StringFilter<"Store"> | string
    latitude?: DecimalFilter<"Store"> | Decimal | DecimalJsLike | number | string
    longitude?: DecimalFilter<"Store"> | Decimal | DecimalJsLike | number | string
    businessType?: EnumBusinessTypeFilter<"Store"> | $Enums.BusinessType
    licenseType?: StringFilter<"Store"> | string
    licenseState?: StringFilter<"Store"> | string
    licenseExpiresAt?: DateTimeFilter<"Store"> | Date | string
    features?: JsonNullableFilter<"Store">
    paymentMethods?: JsonNullableFilter<"Store">
    deliveryRadius?: IntNullableFilter<"Store"> | number | null
    minimumOrder?: DecimalNullableFilter<"Store"> | Decimal | DecimalJsLike | number | string | null
    deliveryFee?: DecimalNullableFilter<"Store"> | Decimal | DecimalJsLike | number | string | null
    operatingHours?: JsonNullableFilter<"Store">
    status?: EnumStoreStatusFilter<"Store"> | $Enums.StoreStatus
    verified?: BoolFilter<"Store"> | boolean
    verifiedAt?: DateTimeNullableFilter<"Store"> | Date | string | null
    verifiedBy?: StringNullableFilter<"Store"> | string | null
    logoUrl?: StringNullableFilter<"Store"> | string | null
    coverImageUrl?: StringNullableFilter<"Store"> | string | null
    galleryImages?: JsonNullableFilter<"Store">
    metaTitle?: StringNullableFilter<"Store"> | string | null
    metaDescription?: StringNullableFilter<"Store"> | string | null
    socialMedia?: JsonNullableFilter<"Store">
    metrcLicenseId?: StringNullableFilter<"Store"> | string | null
    metrcLastSync?: DateTimeNullableFilter<"Store"> | Date | string | null
    complianceStatus?: EnumComplianceStatusFilter<"Store"> | $Enums.ComplianceStatus
    trackTraceSystem?: EnumTrackTraceSystemNullableFilter<"Store"> | $Enums.TrackTraceSystem | null
    totalProducts?: IntFilter<"Store"> | number
    averageRating?: DecimalFilter<"Store"> | Decimal | DecimalJsLike | number | string
    totalReviews?: IntFilter<"Store"> | number
    totalOrders?: IntFilter<"Store"> | number
    createdAt?: DateTimeFilter<"Store"> | Date | string
    updatedAt?: DateTimeFilter<"Store"> | Date | string
    createdBy?: StringNullableFilter<"Store"> | string | null
    updatedBy?: StringNullableFilter<"Store"> | string | null
    owner?: XOR<UserRelationFilter, UserWhereInput>
    staff?: StoreStaffListRelationFilter
    products?: ProductListRelationFilter
    orders?: OrderListRelationFilter
    reviews?: ReviewListRelationFilter
  }, "id" | "slug" | "licenseNumber">

  export type StoreOrderByWithAggregationInput = {
    id?: SortOrder
    ownerId?: SortOrder
    name?: SortOrder
    slug?: SortOrder
    description?: SortOrderInput | SortOrder
    email?: SortOrderInput | SortOrder
    phone?: SortOrderInput | SortOrder
    website?: SortOrderInput | SortOrder
    addressLine1?: SortOrder
    addressLine2?: SortOrderInput | SortOrder
    city?: SortOrder
    state?: SortOrder
    postalCode?: SortOrder
    latitude?: SortOrder
    longitude?: SortOrder
    businessType?: SortOrder
    licenseNumber?: SortOrder
    licenseType?: SortOrder
    licenseState?: SortOrder
    licenseExpiresAt?: SortOrder
    features?: SortOrderInput | SortOrder
    paymentMethods?: SortOrderInput | SortOrder
    deliveryRadius?: SortOrderInput | SortOrder
    minimumOrder?: SortOrderInput | SortOrder
    deliveryFee?: SortOrderInput | SortOrder
    operatingHours?: SortOrderInput | SortOrder
    status?: SortOrder
    verified?: SortOrder
    verifiedAt?: SortOrderInput | SortOrder
    verifiedBy?: SortOrderInput | SortOrder
    logoUrl?: SortOrderInput | SortOrder
    coverImageUrl?: SortOrderInput | SortOrder
    galleryImages?: SortOrderInput | SortOrder
    metaTitle?: SortOrderInput | SortOrder
    metaDescription?: SortOrderInput | SortOrder
    socialMedia?: SortOrderInput | SortOrder
    metrcLicenseId?: SortOrderInput | SortOrder
    metrcLastSync?: SortOrderInput | SortOrder
    complianceStatus?: SortOrder
    trackTraceSystem?: SortOrderInput | SortOrder
    totalProducts?: SortOrder
    averageRating?: SortOrder
    totalReviews?: SortOrder
    totalOrders?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    createdBy?: SortOrderInput | SortOrder
    updatedBy?: SortOrderInput | SortOrder
    _count?: StoreCountOrderByAggregateInput
    _avg?: StoreAvgOrderByAggregateInput
    _max?: StoreMaxOrderByAggregateInput
    _min?: StoreMinOrderByAggregateInput
    _sum?: StoreSumOrderByAggregateInput
  }

  export type StoreScalarWhereWithAggregatesInput = {
    AND?: StoreScalarWhereWithAggregatesInput | StoreScalarWhereWithAggregatesInput[]
    OR?: StoreScalarWhereWithAggregatesInput[]
    NOT?: StoreScalarWhereWithAggregatesInput | StoreScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"Store"> | string
    ownerId?: StringWithAggregatesFilter<"Store"> | string
    name?: StringWithAggregatesFilter<"Store"> | string
    slug?: StringWithAggregatesFilter<"Store"> | string
    description?: StringNullableWithAggregatesFilter<"Store"> | string | null
    email?: StringNullableWithAggregatesFilter<"Store"> | string | null
    phone?: StringNullableWithAggregatesFilter<"Store"> | string | null
    website?: StringNullableWithAggregatesFilter<"Store"> | string | null
    addressLine1?: StringWithAggregatesFilter<"Store"> | string
    addressLine2?: StringNullableWithAggregatesFilter<"Store"> | string | null
    city?: StringWithAggregatesFilter<"Store"> | string
    state?: StringWithAggregatesFilter<"Store"> | string
    postalCode?: StringWithAggregatesFilter<"Store"> | string
    latitude?: DecimalWithAggregatesFilter<"Store"> | Decimal | DecimalJsLike | number | string
    longitude?: DecimalWithAggregatesFilter<"Store"> | Decimal | DecimalJsLike | number | string
    businessType?: EnumBusinessTypeWithAggregatesFilter<"Store"> | $Enums.BusinessType
    licenseNumber?: StringWithAggregatesFilter<"Store"> | string
    licenseType?: StringWithAggregatesFilter<"Store"> | string
    licenseState?: StringWithAggregatesFilter<"Store"> | string
    licenseExpiresAt?: DateTimeWithAggregatesFilter<"Store"> | Date | string
    features?: JsonNullableWithAggregatesFilter<"Store">
    paymentMethods?: JsonNullableWithAggregatesFilter<"Store">
    deliveryRadius?: IntNullableWithAggregatesFilter<"Store"> | number | null
    minimumOrder?: DecimalNullableWithAggregatesFilter<"Store"> | Decimal | DecimalJsLike | number | string | null
    deliveryFee?: DecimalNullableWithAggregatesFilter<"Store"> | Decimal | DecimalJsLike | number | string | null
    operatingHours?: JsonNullableWithAggregatesFilter<"Store">
    status?: EnumStoreStatusWithAggregatesFilter<"Store"> | $Enums.StoreStatus
    verified?: BoolWithAggregatesFilter<"Store"> | boolean
    verifiedAt?: DateTimeNullableWithAggregatesFilter<"Store"> | Date | string | null
    verifiedBy?: StringNullableWithAggregatesFilter<"Store"> | string | null
    logoUrl?: StringNullableWithAggregatesFilter<"Store"> | string | null
    coverImageUrl?: StringNullableWithAggregatesFilter<"Store"> | string | null
    galleryImages?: JsonNullableWithAggregatesFilter<"Store">
    metaTitle?: StringNullableWithAggregatesFilter<"Store"> | string | null
    metaDescription?: StringNullableWithAggregatesFilter<"Store"> | string | null
    socialMedia?: JsonNullableWithAggregatesFilter<"Store">
    metrcLicenseId?: StringNullableWithAggregatesFilter<"Store"> | string | null
    metrcLastSync?: DateTimeNullableWithAggregatesFilter<"Store"> | Date | string | null
    complianceStatus?: EnumComplianceStatusWithAggregatesFilter<"Store"> | $Enums.ComplianceStatus
    trackTraceSystem?: EnumTrackTraceSystemNullableWithAggregatesFilter<"Store"> | $Enums.TrackTraceSystem | null
    totalProducts?: IntWithAggregatesFilter<"Store"> | number
    averageRating?: DecimalWithAggregatesFilter<"Store"> | Decimal | DecimalJsLike | number | string
    totalReviews?: IntWithAggregatesFilter<"Store"> | number
    totalOrders?: IntWithAggregatesFilter<"Store"> | number
    createdAt?: DateTimeWithAggregatesFilter<"Store"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"Store"> | Date | string
    createdBy?: StringNullableWithAggregatesFilter<"Store"> | string | null
    updatedBy?: StringNullableWithAggregatesFilter<"Store"> | string | null
  }

  export type StoreStaffWhereInput = {
    AND?: StoreStaffWhereInput | StoreStaffWhereInput[]
    OR?: StoreStaffWhereInput[]
    NOT?: StoreStaffWhereInput | StoreStaffWhereInput[]
    id?: StringFilter<"StoreStaff"> | string
    storeId?: StringFilter<"StoreStaff"> | string
    userId?: StringFilter<"StoreStaff"> | string
    role?: StringFilter<"StoreStaff"> | string
    permissions?: JsonNullableFilter<"StoreStaff">
    employeeId?: StringNullableFilter<"StoreStaff"> | string | null
    startDate?: DateTimeFilter<"StoreStaff"> | Date | string
    endDate?: DateTimeNullableFilter<"StoreStaff"> | Date | string | null
    hourlyWage?: DecimalNullableFilter<"StoreStaff"> | Decimal | DecimalJsLike | number | string | null
    commissionRate?: DecimalNullableFilter<"StoreStaff"> | Decimal | DecimalJsLike | number | string | null
    status?: StringFilter<"StoreStaff"> | string
    canAccessPos?: BoolFilter<"StoreStaff"> | boolean
    canManageInventory?: BoolFilter<"StoreStaff"> | boolean
    canProcessOrders?: BoolFilter<"StoreStaff"> | boolean
    complianceTrainingCompleted?: BoolFilter<"StoreStaff"> | boolean
    trainingCompletedAt?: DateTimeNullableFilter<"StoreStaff"> | Date | string | null
    trainingExpiresAt?: DateTimeNullableFilter<"StoreStaff"> | Date | string | null
    createdAt?: DateTimeFilter<"StoreStaff"> | Date | string
    updatedAt?: DateTimeFilter<"StoreStaff"> | Date | string
    createdBy?: StringNullableFilter<"StoreStaff"> | string | null
    store?: XOR<StoreRelationFilter, StoreWhereInput>
    user?: XOR<UserRelationFilter, UserWhereInput>
  }

  export type StoreStaffOrderByWithRelationInput = {
    id?: SortOrder
    storeId?: SortOrder
    userId?: SortOrder
    role?: SortOrder
    permissions?: SortOrderInput | SortOrder
    employeeId?: SortOrderInput | SortOrder
    startDate?: SortOrder
    endDate?: SortOrderInput | SortOrder
    hourlyWage?: SortOrderInput | SortOrder
    commissionRate?: SortOrderInput | SortOrder
    status?: SortOrder
    canAccessPos?: SortOrder
    canManageInventory?: SortOrder
    canProcessOrders?: SortOrder
    complianceTrainingCompleted?: SortOrder
    trainingCompletedAt?: SortOrderInput | SortOrder
    trainingExpiresAt?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    createdBy?: SortOrderInput | SortOrder
    store?: StoreOrderByWithRelationInput
    user?: UserOrderByWithRelationInput
  }

  export type StoreStaffWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    storeId_userId?: StoreStaffStoreIdUserIdCompoundUniqueInput
    AND?: StoreStaffWhereInput | StoreStaffWhereInput[]
    OR?: StoreStaffWhereInput[]
    NOT?: StoreStaffWhereInput | StoreStaffWhereInput[]
    storeId?: StringFilter<"StoreStaff"> | string
    userId?: StringFilter<"StoreStaff"> | string
    role?: StringFilter<"StoreStaff"> | string
    permissions?: JsonNullableFilter<"StoreStaff">
    employeeId?: StringNullableFilter<"StoreStaff"> | string | null
    startDate?: DateTimeFilter<"StoreStaff"> | Date | string
    endDate?: DateTimeNullableFilter<"StoreStaff"> | Date | string | null
    hourlyWage?: DecimalNullableFilter<"StoreStaff"> | Decimal | DecimalJsLike | number | string | null
    commissionRate?: DecimalNullableFilter<"StoreStaff"> | Decimal | DecimalJsLike | number | string | null
    status?: StringFilter<"StoreStaff"> | string
    canAccessPos?: BoolFilter<"StoreStaff"> | boolean
    canManageInventory?: BoolFilter<"StoreStaff"> | boolean
    canProcessOrders?: BoolFilter<"StoreStaff"> | boolean
    complianceTrainingCompleted?: BoolFilter<"StoreStaff"> | boolean
    trainingCompletedAt?: DateTimeNullableFilter<"StoreStaff"> | Date | string | null
    trainingExpiresAt?: DateTimeNullableFilter<"StoreStaff"> | Date | string | null
    createdAt?: DateTimeFilter<"StoreStaff"> | Date | string
    updatedAt?: DateTimeFilter<"StoreStaff"> | Date | string
    createdBy?: StringNullableFilter<"StoreStaff"> | string | null
    store?: XOR<StoreRelationFilter, StoreWhereInput>
    user?: XOR<UserRelationFilter, UserWhereInput>
  }, "id" | "storeId_userId">

  export type StoreStaffOrderByWithAggregationInput = {
    id?: SortOrder
    storeId?: SortOrder
    userId?: SortOrder
    role?: SortOrder
    permissions?: SortOrderInput | SortOrder
    employeeId?: SortOrderInput | SortOrder
    startDate?: SortOrder
    endDate?: SortOrderInput | SortOrder
    hourlyWage?: SortOrderInput | SortOrder
    commissionRate?: SortOrderInput | SortOrder
    status?: SortOrder
    canAccessPos?: SortOrder
    canManageInventory?: SortOrder
    canProcessOrders?: SortOrder
    complianceTrainingCompleted?: SortOrder
    trainingCompletedAt?: SortOrderInput | SortOrder
    trainingExpiresAt?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    createdBy?: SortOrderInput | SortOrder
    _count?: StoreStaffCountOrderByAggregateInput
    _avg?: StoreStaffAvgOrderByAggregateInput
    _max?: StoreStaffMaxOrderByAggregateInput
    _min?: StoreStaffMinOrderByAggregateInput
    _sum?: StoreStaffSumOrderByAggregateInput
  }

  export type StoreStaffScalarWhereWithAggregatesInput = {
    AND?: StoreStaffScalarWhereWithAggregatesInput | StoreStaffScalarWhereWithAggregatesInput[]
    OR?: StoreStaffScalarWhereWithAggregatesInput[]
    NOT?: StoreStaffScalarWhereWithAggregatesInput | StoreStaffScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"StoreStaff"> | string
    storeId?: StringWithAggregatesFilter<"StoreStaff"> | string
    userId?: StringWithAggregatesFilter<"StoreStaff"> | string
    role?: StringWithAggregatesFilter<"StoreStaff"> | string
    permissions?: JsonNullableWithAggregatesFilter<"StoreStaff">
    employeeId?: StringNullableWithAggregatesFilter<"StoreStaff"> | string | null
    startDate?: DateTimeWithAggregatesFilter<"StoreStaff"> | Date | string
    endDate?: DateTimeNullableWithAggregatesFilter<"StoreStaff"> | Date | string | null
    hourlyWage?: DecimalNullableWithAggregatesFilter<"StoreStaff"> | Decimal | DecimalJsLike | number | string | null
    commissionRate?: DecimalNullableWithAggregatesFilter<"StoreStaff"> | Decimal | DecimalJsLike | number | string | null
    status?: StringWithAggregatesFilter<"StoreStaff"> | string
    canAccessPos?: BoolWithAggregatesFilter<"StoreStaff"> | boolean
    canManageInventory?: BoolWithAggregatesFilter<"StoreStaff"> | boolean
    canProcessOrders?: BoolWithAggregatesFilter<"StoreStaff"> | boolean
    complianceTrainingCompleted?: BoolWithAggregatesFilter<"StoreStaff"> | boolean
    trainingCompletedAt?: DateTimeNullableWithAggregatesFilter<"StoreStaff"> | Date | string | null
    trainingExpiresAt?: DateTimeNullableWithAggregatesFilter<"StoreStaff"> | Date | string | null
    createdAt?: DateTimeWithAggregatesFilter<"StoreStaff"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"StoreStaff"> | Date | string
    createdBy?: StringNullableWithAggregatesFilter<"StoreStaff"> | string | null
  }

  export type ProductCategoryWhereInput = {
    AND?: ProductCategoryWhereInput | ProductCategoryWhereInput[]
    OR?: ProductCategoryWhereInput[]
    NOT?: ProductCategoryWhereInput | ProductCategoryWhereInput[]
    id?: StringFilter<"ProductCategory"> | string
    parentId?: StringNullableFilter<"ProductCategory"> | string | null
    name?: StringFilter<"ProductCategory"> | string
    slug?: StringFilter<"ProductCategory"> | string
    description?: StringNullableFilter<"ProductCategory"> | string | null
    iconName?: StringNullableFilter<"ProductCategory"> | string | null
    colorHex?: StringNullableFilter<"ProductCategory"> | string | null
    sortOrder?: IntFilter<"ProductCategory"> | number
    productType?: EnumProductTypeFilter<"ProductCategory"> | $Enums.ProductType
    thcCategory?: StringNullableFilter<"ProductCategory"> | string | null
    consumptionMethod?: StringNullableFilter<"ProductCategory"> | string | null
    metaTitle?: StringNullableFilter<"ProductCategory"> | string | null
    metaDescription?: StringNullableFilter<"ProductCategory"> | string | null
    isActive?: BoolFilter<"ProductCategory"> | boolean
    requiresCompliance?: BoolFilter<"ProductCategory"> | boolean
    createdAt?: DateTimeFilter<"ProductCategory"> | Date | string
    updatedAt?: DateTimeFilter<"ProductCategory"> | Date | string
    parent?: XOR<ProductCategoryNullableRelationFilter, ProductCategoryWhereInput> | null
    children?: ProductCategoryListRelationFilter
    products?: ProductListRelationFilter
  }

  export type ProductCategoryOrderByWithRelationInput = {
    id?: SortOrder
    parentId?: SortOrderInput | SortOrder
    name?: SortOrder
    slug?: SortOrder
    description?: SortOrderInput | SortOrder
    iconName?: SortOrderInput | SortOrder
    colorHex?: SortOrderInput | SortOrder
    sortOrder?: SortOrder
    productType?: SortOrder
    thcCategory?: SortOrderInput | SortOrder
    consumptionMethod?: SortOrderInput | SortOrder
    metaTitle?: SortOrderInput | SortOrder
    metaDescription?: SortOrderInput | SortOrder
    isActive?: SortOrder
    requiresCompliance?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    parent?: ProductCategoryOrderByWithRelationInput
    children?: ProductCategoryOrderByRelationAggregateInput
    products?: ProductOrderByRelationAggregateInput
  }

  export type ProductCategoryWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    slug?: string
    AND?: ProductCategoryWhereInput | ProductCategoryWhereInput[]
    OR?: ProductCategoryWhereInput[]
    NOT?: ProductCategoryWhereInput | ProductCategoryWhereInput[]
    parentId?: StringNullableFilter<"ProductCategory"> | string | null
    name?: StringFilter<"ProductCategory"> | string
    description?: StringNullableFilter<"ProductCategory"> | string | null
    iconName?: StringNullableFilter<"ProductCategory"> | string | null
    colorHex?: StringNullableFilter<"ProductCategory"> | string | null
    sortOrder?: IntFilter<"ProductCategory"> | number
    productType?: EnumProductTypeFilter<"ProductCategory"> | $Enums.ProductType
    thcCategory?: StringNullableFilter<"ProductCategory"> | string | null
    consumptionMethod?: StringNullableFilter<"ProductCategory"> | string | null
    metaTitle?: StringNullableFilter<"ProductCategory"> | string | null
    metaDescription?: StringNullableFilter<"ProductCategory"> | string | null
    isActive?: BoolFilter<"ProductCategory"> | boolean
    requiresCompliance?: BoolFilter<"ProductCategory"> | boolean
    createdAt?: DateTimeFilter<"ProductCategory"> | Date | string
    updatedAt?: DateTimeFilter<"ProductCategory"> | Date | string
    parent?: XOR<ProductCategoryNullableRelationFilter, ProductCategoryWhereInput> | null
    children?: ProductCategoryListRelationFilter
    products?: ProductListRelationFilter
  }, "id" | "slug">

  export type ProductCategoryOrderByWithAggregationInput = {
    id?: SortOrder
    parentId?: SortOrderInput | SortOrder
    name?: SortOrder
    slug?: SortOrder
    description?: SortOrderInput | SortOrder
    iconName?: SortOrderInput | SortOrder
    colorHex?: SortOrderInput | SortOrder
    sortOrder?: SortOrder
    productType?: SortOrder
    thcCategory?: SortOrderInput | SortOrder
    consumptionMethod?: SortOrderInput | SortOrder
    metaTitle?: SortOrderInput | SortOrder
    metaDescription?: SortOrderInput | SortOrder
    isActive?: SortOrder
    requiresCompliance?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: ProductCategoryCountOrderByAggregateInput
    _avg?: ProductCategoryAvgOrderByAggregateInput
    _max?: ProductCategoryMaxOrderByAggregateInput
    _min?: ProductCategoryMinOrderByAggregateInput
    _sum?: ProductCategorySumOrderByAggregateInput
  }

  export type ProductCategoryScalarWhereWithAggregatesInput = {
    AND?: ProductCategoryScalarWhereWithAggregatesInput | ProductCategoryScalarWhereWithAggregatesInput[]
    OR?: ProductCategoryScalarWhereWithAggregatesInput[]
    NOT?: ProductCategoryScalarWhereWithAggregatesInput | ProductCategoryScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"ProductCategory"> | string
    parentId?: StringNullableWithAggregatesFilter<"ProductCategory"> | string | null
    name?: StringWithAggregatesFilter<"ProductCategory"> | string
    slug?: StringWithAggregatesFilter<"ProductCategory"> | string
    description?: StringNullableWithAggregatesFilter<"ProductCategory"> | string | null
    iconName?: StringNullableWithAggregatesFilter<"ProductCategory"> | string | null
    colorHex?: StringNullableWithAggregatesFilter<"ProductCategory"> | string | null
    sortOrder?: IntWithAggregatesFilter<"ProductCategory"> | number
    productType?: EnumProductTypeWithAggregatesFilter<"ProductCategory"> | $Enums.ProductType
    thcCategory?: StringNullableWithAggregatesFilter<"ProductCategory"> | string | null
    consumptionMethod?: StringNullableWithAggregatesFilter<"ProductCategory"> | string | null
    metaTitle?: StringNullableWithAggregatesFilter<"ProductCategory"> | string | null
    metaDescription?: StringNullableWithAggregatesFilter<"ProductCategory"> | string | null
    isActive?: BoolWithAggregatesFilter<"ProductCategory"> | boolean
    requiresCompliance?: BoolWithAggregatesFilter<"ProductCategory"> | boolean
    createdAt?: DateTimeWithAggregatesFilter<"ProductCategory"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"ProductCategory"> | Date | string
  }

  export type ProductWhereInput = {
    AND?: ProductWhereInput | ProductWhereInput[]
    OR?: ProductWhereInput[]
    NOT?: ProductWhereInput | ProductWhereInput[]
    id?: StringFilter<"Product"> | string
    storeId?: StringFilter<"Product"> | string
    categoryId?: StringFilter<"Product"> | string
    name?: StringFilter<"Product"> | string
    slug?: StringFilter<"Product"> | string
    description?: StringNullableFilter<"Product"> | string | null
    shortDescription?: StringNullableFilter<"Product"> | string | null
    strainName?: StringNullableFilter<"Product"> | string | null
    strainType?: EnumStrainTypeNullableFilter<"Product"> | $Enums.StrainType | null
    brand?: StringNullableFilter<"Product"> | string | null
    manufacturer?: StringNullableFilter<"Product"> | string | null
    thcPercentage?: DecimalNullableFilter<"Product"> | Decimal | DecimalJsLike | number | string | null
    cbdPercentage?: DecimalNullableFilter<"Product"> | Decimal | DecimalJsLike | number | string | null
    thcaPercentage?: DecimalNullableFilter<"Product"> | Decimal | DecimalJsLike | number | string | null
    cbdaPercentage?: DecimalNullableFilter<"Product"> | Decimal | DecimalJsLike | number | string | null
    totalCannabinoids?: DecimalNullableFilter<"Product"> | Decimal | DecimalJsLike | number | string | null
    basePrice?: DecimalFilter<"Product"> | Decimal | DecimalJsLike | number | string
    salePrice?: DecimalNullableFilter<"Product"> | Decimal | DecimalJsLike | number | string | null
    costPrice?: DecimalNullableFilter<"Product"> | Decimal | DecimalJsLike | number | string | null
    weightGrams?: DecimalNullableFilter<"Product"> | Decimal | DecimalJsLike | number | string | null
    sku?: StringFilter<"Product"> | string
    barcode?: StringNullableFilter<"Product"> | string | null
    stockQuantity?: IntFilter<"Product"> | number
    reservedQuantity?: IntFilter<"Product"> | number
    lowStockThreshold?: IntFilter<"Product"> | number
    metrcId?: StringNullableFilter<"Product"> | string | null
    batchNumber?: StringNullableFilter<"Product"> | string | null
    harvestDate?: DateTimeNullableFilter<"Product"> | Date | string | null
    packageDate?: DateTimeNullableFilter<"Product"> | Date | string | null
    expirationDate?: DateTimeNullableFilter<"Product"> | Date | string | null
    labTested?: BoolFilter<"Product"> | boolean
    labTestResults?: JsonNullableFilter<"Product">
    testedDate?: DateTimeNullableFilter<"Product"> | Date | string | null
    testingLab?: StringNullableFilter<"Product"> | string | null
    featuredImageUrl?: StringNullableFilter<"Product"> | string | null
    galleryImages?: JsonNullableFilter<"Product">
    status?: EnumProductStatusFilter<"Product"> | $Enums.ProductStatus
    isFeatured?: BoolFilter<"Product"> | boolean
    isMedicalOnly?: BoolFilter<"Product"> | boolean
    ageRestriction?: IntFilter<"Product"> | number
    metaTitle?: StringNullableFilter<"Product"> | string | null
    metaDescription?: StringNullableFilter<"Product"> | string | null
    tags?: JsonNullableFilter<"Product">
    searchKeywords?: StringNullableFilter<"Product"> | string | null
    viewCount?: IntFilter<"Product"> | number
    averageRating?: DecimalFilter<"Product"> | Decimal | DecimalJsLike | number | string
    reviewCount?: IntFilter<"Product"> | number
    salesCount?: IntFilter<"Product"> | number
    createdAt?: DateTimeFilter<"Product"> | Date | string
    updatedAt?: DateTimeFilter<"Product"> | Date | string
    createdBy?: StringNullableFilter<"Product"> | string | null
    updatedBy?: StringNullableFilter<"Product"> | string | null
    store?: XOR<StoreRelationFilter, StoreWhereInput>
    category?: XOR<ProductCategoryRelationFilter, ProductCategoryWhereInput>
    reviews?: ReviewListRelationFilter
    orderItems?: OrderItemListRelationFilter
  }

  export type ProductOrderByWithRelationInput = {
    id?: SortOrder
    storeId?: SortOrder
    categoryId?: SortOrder
    name?: SortOrder
    slug?: SortOrder
    description?: SortOrderInput | SortOrder
    shortDescription?: SortOrderInput | SortOrder
    strainName?: SortOrderInput | SortOrder
    strainType?: SortOrderInput | SortOrder
    brand?: SortOrderInput | SortOrder
    manufacturer?: SortOrderInput | SortOrder
    thcPercentage?: SortOrderInput | SortOrder
    cbdPercentage?: SortOrderInput | SortOrder
    thcaPercentage?: SortOrderInput | SortOrder
    cbdaPercentage?: SortOrderInput | SortOrder
    totalCannabinoids?: SortOrderInput | SortOrder
    basePrice?: SortOrder
    salePrice?: SortOrderInput | SortOrder
    costPrice?: SortOrderInput | SortOrder
    weightGrams?: SortOrderInput | SortOrder
    sku?: SortOrder
    barcode?: SortOrderInput | SortOrder
    stockQuantity?: SortOrder
    reservedQuantity?: SortOrder
    lowStockThreshold?: SortOrder
    metrcId?: SortOrderInput | SortOrder
    batchNumber?: SortOrderInput | SortOrder
    harvestDate?: SortOrderInput | SortOrder
    packageDate?: SortOrderInput | SortOrder
    expirationDate?: SortOrderInput | SortOrder
    labTested?: SortOrder
    labTestResults?: SortOrderInput | SortOrder
    testedDate?: SortOrderInput | SortOrder
    testingLab?: SortOrderInput | SortOrder
    featuredImageUrl?: SortOrderInput | SortOrder
    galleryImages?: SortOrderInput | SortOrder
    status?: SortOrder
    isFeatured?: SortOrder
    isMedicalOnly?: SortOrder
    ageRestriction?: SortOrder
    metaTitle?: SortOrderInput | SortOrder
    metaDescription?: SortOrderInput | SortOrder
    tags?: SortOrderInput | SortOrder
    searchKeywords?: SortOrderInput | SortOrder
    viewCount?: SortOrder
    averageRating?: SortOrder
    reviewCount?: SortOrder
    salesCount?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    createdBy?: SortOrderInput | SortOrder
    updatedBy?: SortOrderInput | SortOrder
    store?: StoreOrderByWithRelationInput
    category?: ProductCategoryOrderByWithRelationInput
    reviews?: ReviewOrderByRelationAggregateInput
    orderItems?: OrderItemOrderByRelationAggregateInput
  }

  export type ProductWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    storeId_sku?: ProductStoreIdSkuCompoundUniqueInput
    AND?: ProductWhereInput | ProductWhereInput[]
    OR?: ProductWhereInput[]
    NOT?: ProductWhereInput | ProductWhereInput[]
    storeId?: StringFilter<"Product"> | string
    categoryId?: StringFilter<"Product"> | string
    name?: StringFilter<"Product"> | string
    slug?: StringFilter<"Product"> | string
    description?: StringNullableFilter<"Product"> | string | null
    shortDescription?: StringNullableFilter<"Product"> | string | null
    strainName?: StringNullableFilter<"Product"> | string | null
    strainType?: EnumStrainTypeNullableFilter<"Product"> | $Enums.StrainType | null
    brand?: StringNullableFilter<"Product"> | string | null
    manufacturer?: StringNullableFilter<"Product"> | string | null
    thcPercentage?: DecimalNullableFilter<"Product"> | Decimal | DecimalJsLike | number | string | null
    cbdPercentage?: DecimalNullableFilter<"Product"> | Decimal | DecimalJsLike | number | string | null
    thcaPercentage?: DecimalNullableFilter<"Product"> | Decimal | DecimalJsLike | number | string | null
    cbdaPercentage?: DecimalNullableFilter<"Product"> | Decimal | DecimalJsLike | number | string | null
    totalCannabinoids?: DecimalNullableFilter<"Product"> | Decimal | DecimalJsLike | number | string | null
    basePrice?: DecimalFilter<"Product"> | Decimal | DecimalJsLike | number | string
    salePrice?: DecimalNullableFilter<"Product"> | Decimal | DecimalJsLike | number | string | null
    costPrice?: DecimalNullableFilter<"Product"> | Decimal | DecimalJsLike | number | string | null
    weightGrams?: DecimalNullableFilter<"Product"> | Decimal | DecimalJsLike | number | string | null
    sku?: StringFilter<"Product"> | string
    barcode?: StringNullableFilter<"Product"> | string | null
    stockQuantity?: IntFilter<"Product"> | number
    reservedQuantity?: IntFilter<"Product"> | number
    lowStockThreshold?: IntFilter<"Product"> | number
    metrcId?: StringNullableFilter<"Product"> | string | null
    batchNumber?: StringNullableFilter<"Product"> | string | null
    harvestDate?: DateTimeNullableFilter<"Product"> | Date | string | null
    packageDate?: DateTimeNullableFilter<"Product"> | Date | string | null
    expirationDate?: DateTimeNullableFilter<"Product"> | Date | string | null
    labTested?: BoolFilter<"Product"> | boolean
    labTestResults?: JsonNullableFilter<"Product">
    testedDate?: DateTimeNullableFilter<"Product"> | Date | string | null
    testingLab?: StringNullableFilter<"Product"> | string | null
    featuredImageUrl?: StringNullableFilter<"Product"> | string | null
    galleryImages?: JsonNullableFilter<"Product">
    status?: EnumProductStatusFilter<"Product"> | $Enums.ProductStatus
    isFeatured?: BoolFilter<"Product"> | boolean
    isMedicalOnly?: BoolFilter<"Product"> | boolean
    ageRestriction?: IntFilter<"Product"> | number
    metaTitle?: StringNullableFilter<"Product"> | string | null
    metaDescription?: StringNullableFilter<"Product"> | string | null
    tags?: JsonNullableFilter<"Product">
    searchKeywords?: StringNullableFilter<"Product"> | string | null
    viewCount?: IntFilter<"Product"> | number
    averageRating?: DecimalFilter<"Product"> | Decimal | DecimalJsLike | number | string
    reviewCount?: IntFilter<"Product"> | number
    salesCount?: IntFilter<"Product"> | number
    createdAt?: DateTimeFilter<"Product"> | Date | string
    updatedAt?: DateTimeFilter<"Product"> | Date | string
    createdBy?: StringNullableFilter<"Product"> | string | null
    updatedBy?: StringNullableFilter<"Product"> | string | null
    store?: XOR<StoreRelationFilter, StoreWhereInput>
    category?: XOR<ProductCategoryRelationFilter, ProductCategoryWhereInput>
    reviews?: ReviewListRelationFilter
    orderItems?: OrderItemListRelationFilter
  }, "id" | "storeId_sku">

  export type ProductOrderByWithAggregationInput = {
    id?: SortOrder
    storeId?: SortOrder
    categoryId?: SortOrder
    name?: SortOrder
    slug?: SortOrder
    description?: SortOrderInput | SortOrder
    shortDescription?: SortOrderInput | SortOrder
    strainName?: SortOrderInput | SortOrder
    strainType?: SortOrderInput | SortOrder
    brand?: SortOrderInput | SortOrder
    manufacturer?: SortOrderInput | SortOrder
    thcPercentage?: SortOrderInput | SortOrder
    cbdPercentage?: SortOrderInput | SortOrder
    thcaPercentage?: SortOrderInput | SortOrder
    cbdaPercentage?: SortOrderInput | SortOrder
    totalCannabinoids?: SortOrderInput | SortOrder
    basePrice?: SortOrder
    salePrice?: SortOrderInput | SortOrder
    costPrice?: SortOrderInput | SortOrder
    weightGrams?: SortOrderInput | SortOrder
    sku?: SortOrder
    barcode?: SortOrderInput | SortOrder
    stockQuantity?: SortOrder
    reservedQuantity?: SortOrder
    lowStockThreshold?: SortOrder
    metrcId?: SortOrderInput | SortOrder
    batchNumber?: SortOrderInput | SortOrder
    harvestDate?: SortOrderInput | SortOrder
    packageDate?: SortOrderInput | SortOrder
    expirationDate?: SortOrderInput | SortOrder
    labTested?: SortOrder
    labTestResults?: SortOrderInput | SortOrder
    testedDate?: SortOrderInput | SortOrder
    testingLab?: SortOrderInput | SortOrder
    featuredImageUrl?: SortOrderInput | SortOrder
    galleryImages?: SortOrderInput | SortOrder
    status?: SortOrder
    isFeatured?: SortOrder
    isMedicalOnly?: SortOrder
    ageRestriction?: SortOrder
    metaTitle?: SortOrderInput | SortOrder
    metaDescription?: SortOrderInput | SortOrder
    tags?: SortOrderInput | SortOrder
    searchKeywords?: SortOrderInput | SortOrder
    viewCount?: SortOrder
    averageRating?: SortOrder
    reviewCount?: SortOrder
    salesCount?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    createdBy?: SortOrderInput | SortOrder
    updatedBy?: SortOrderInput | SortOrder
    _count?: ProductCountOrderByAggregateInput
    _avg?: ProductAvgOrderByAggregateInput
    _max?: ProductMaxOrderByAggregateInput
    _min?: ProductMinOrderByAggregateInput
    _sum?: ProductSumOrderByAggregateInput
  }

  export type ProductScalarWhereWithAggregatesInput = {
    AND?: ProductScalarWhereWithAggregatesInput | ProductScalarWhereWithAggregatesInput[]
    OR?: ProductScalarWhereWithAggregatesInput[]
    NOT?: ProductScalarWhereWithAggregatesInput | ProductScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"Product"> | string
    storeId?: StringWithAggregatesFilter<"Product"> | string
    categoryId?: StringWithAggregatesFilter<"Product"> | string
    name?: StringWithAggregatesFilter<"Product"> | string
    slug?: StringWithAggregatesFilter<"Product"> | string
    description?: StringNullableWithAggregatesFilter<"Product"> | string | null
    shortDescription?: StringNullableWithAggregatesFilter<"Product"> | string | null
    strainName?: StringNullableWithAggregatesFilter<"Product"> | string | null
    strainType?: EnumStrainTypeNullableWithAggregatesFilter<"Product"> | $Enums.StrainType | null
    brand?: StringNullableWithAggregatesFilter<"Product"> | string | null
    manufacturer?: StringNullableWithAggregatesFilter<"Product"> | string | null
    thcPercentage?: DecimalNullableWithAggregatesFilter<"Product"> | Decimal | DecimalJsLike | number | string | null
    cbdPercentage?: DecimalNullableWithAggregatesFilter<"Product"> | Decimal | DecimalJsLike | number | string | null
    thcaPercentage?: DecimalNullableWithAggregatesFilter<"Product"> | Decimal | DecimalJsLike | number | string | null
    cbdaPercentage?: DecimalNullableWithAggregatesFilter<"Product"> | Decimal | DecimalJsLike | number | string | null
    totalCannabinoids?: DecimalNullableWithAggregatesFilter<"Product"> | Decimal | DecimalJsLike | number | string | null
    basePrice?: DecimalWithAggregatesFilter<"Product"> | Decimal | DecimalJsLike | number | string
    salePrice?: DecimalNullableWithAggregatesFilter<"Product"> | Decimal | DecimalJsLike | number | string | null
    costPrice?: DecimalNullableWithAggregatesFilter<"Product"> | Decimal | DecimalJsLike | number | string | null
    weightGrams?: DecimalNullableWithAggregatesFilter<"Product"> | Decimal | DecimalJsLike | number | string | null
    sku?: StringWithAggregatesFilter<"Product"> | string
    barcode?: StringNullableWithAggregatesFilter<"Product"> | string | null
    stockQuantity?: IntWithAggregatesFilter<"Product"> | number
    reservedQuantity?: IntWithAggregatesFilter<"Product"> | number
    lowStockThreshold?: IntWithAggregatesFilter<"Product"> | number
    metrcId?: StringNullableWithAggregatesFilter<"Product"> | string | null
    batchNumber?: StringNullableWithAggregatesFilter<"Product"> | string | null
    harvestDate?: DateTimeNullableWithAggregatesFilter<"Product"> | Date | string | null
    packageDate?: DateTimeNullableWithAggregatesFilter<"Product"> | Date | string | null
    expirationDate?: DateTimeNullableWithAggregatesFilter<"Product"> | Date | string | null
    labTested?: BoolWithAggregatesFilter<"Product"> | boolean
    labTestResults?: JsonNullableWithAggregatesFilter<"Product">
    testedDate?: DateTimeNullableWithAggregatesFilter<"Product"> | Date | string | null
    testingLab?: StringNullableWithAggregatesFilter<"Product"> | string | null
    featuredImageUrl?: StringNullableWithAggregatesFilter<"Product"> | string | null
    galleryImages?: JsonNullableWithAggregatesFilter<"Product">
    status?: EnumProductStatusWithAggregatesFilter<"Product"> | $Enums.ProductStatus
    isFeatured?: BoolWithAggregatesFilter<"Product"> | boolean
    isMedicalOnly?: BoolWithAggregatesFilter<"Product"> | boolean
    ageRestriction?: IntWithAggregatesFilter<"Product"> | number
    metaTitle?: StringNullableWithAggregatesFilter<"Product"> | string | null
    metaDescription?: StringNullableWithAggregatesFilter<"Product"> | string | null
    tags?: JsonNullableWithAggregatesFilter<"Product">
    searchKeywords?: StringNullableWithAggregatesFilter<"Product"> | string | null
    viewCount?: IntWithAggregatesFilter<"Product"> | number
    averageRating?: DecimalWithAggregatesFilter<"Product"> | Decimal | DecimalJsLike | number | string
    reviewCount?: IntWithAggregatesFilter<"Product"> | number
    salesCount?: IntWithAggregatesFilter<"Product"> | number
    createdAt?: DateTimeWithAggregatesFilter<"Product"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"Product"> | Date | string
    createdBy?: StringNullableWithAggregatesFilter<"Product"> | string | null
    updatedBy?: StringNullableWithAggregatesFilter<"Product"> | string | null
  }

  export type OrderWhereInput = {
    AND?: OrderWhereInput | OrderWhereInput[]
    OR?: OrderWhereInput[]
    NOT?: OrderWhereInput | OrderWhereInput[]
    id?: StringFilter<"Order"> | string
    orderNumber?: StringFilter<"Order"> | string
    userId?: StringFilter<"Order"> | string
    storeId?: StringFilter<"Order"> | string
    orderType?: EnumOrderTypeFilter<"Order"> | $Enums.OrderType
    fulfillmentStatus?: EnumOrderStatusFilter<"Order"> | $Enums.OrderStatus
    deliveryAddress?: JsonNullableFilter<"Order">
    deliveryInstructions?: StringNullableFilter<"Order"> | string | null
    deliveryTimeRequested?: DateTimeNullableFilter<"Order"> | Date | string | null
    deliveryTimeActual?: DateTimeNullableFilter<"Order"> | Date | string | null
    deliveryPersonId?: StringNullableFilter<"Order"> | string | null
    subtotal?: DecimalFilter<"Order"> | Decimal | DecimalJsLike | number | string
    taxAmount?: DecimalFilter<"Order"> | Decimal | DecimalJsLike | number | string
    deliveryFee?: DecimalFilter<"Order"> | Decimal | DecimalJsLike | number | string
    serviceFee?: DecimalFilter<"Order"> | Decimal | DecimalJsLike | number | string
    discountAmount?: DecimalFilter<"Order"> | Decimal | DecimalJsLike | number | string
    tipAmount?: DecimalFilter<"Order"> | Decimal | DecimalJsLike | number | string
    totalAmount?: DecimalFilter<"Order"> | Decimal | DecimalJsLike | number | string
    paymentStatus?: EnumPaymentStatusFilter<"Order"> | $Enums.PaymentStatus
    paymentMethod?: EnumPaymentMethodFilter<"Order"> | $Enums.PaymentMethod
    paymentProvider?: StringNullableFilter<"Order"> | string | null
    paymentIntentId?: StringNullableFilter<"Order"> | string | null
    ageVerifiedAtDelivery?: DateTimeNullableFilter<"Order"> | Date | string | null
    idCheckedBy?: StringNullableFilter<"Order"> | string | null
    customerNotes?: StringNullableFilter<"Order"> | string | null
    internalNotes?: StringNullableFilter<"Order"> | string | null
    metrcTransferManifest?: StringNullableFilter<"Order"> | string | null
    complianceCheckPassed?: BoolFilter<"Order"> | boolean
    complianceCheckedAt?: DateTimeNullableFilter<"Order"> | Date | string | null
    complianceCheckedBy?: StringNullableFilter<"Order"> | string | null
    cancelledAt?: DateTimeNullableFilter<"Order"> | Date | string | null
    cancelledBy?: StringNullableFilter<"Order"> | string | null
    cancellationReason?: StringNullableFilter<"Order"> | string | null
    refundAmount?: DecimalFilter<"Order"> | Decimal | DecimalJsLike | number | string
    createdAt?: DateTimeFilter<"Order"> | Date | string
    updatedAt?: DateTimeFilter<"Order"> | Date | string
    user?: XOR<UserRelationFilter, UserWhereInput>
    store?: XOR<StoreRelationFilter, StoreWhereInput>
    items?: OrderItemListRelationFilter
    reviews?: ReviewListRelationFilter
  }

  export type OrderOrderByWithRelationInput = {
    id?: SortOrder
    orderNumber?: SortOrder
    userId?: SortOrder
    storeId?: SortOrder
    orderType?: SortOrder
    fulfillmentStatus?: SortOrder
    deliveryAddress?: SortOrderInput | SortOrder
    deliveryInstructions?: SortOrderInput | SortOrder
    deliveryTimeRequested?: SortOrderInput | SortOrder
    deliveryTimeActual?: SortOrderInput | SortOrder
    deliveryPersonId?: SortOrderInput | SortOrder
    subtotal?: SortOrder
    taxAmount?: SortOrder
    deliveryFee?: SortOrder
    serviceFee?: SortOrder
    discountAmount?: SortOrder
    tipAmount?: SortOrder
    totalAmount?: SortOrder
    paymentStatus?: SortOrder
    paymentMethod?: SortOrder
    paymentProvider?: SortOrderInput | SortOrder
    paymentIntentId?: SortOrderInput | SortOrder
    ageVerifiedAtDelivery?: SortOrderInput | SortOrder
    idCheckedBy?: SortOrderInput | SortOrder
    customerNotes?: SortOrderInput | SortOrder
    internalNotes?: SortOrderInput | SortOrder
    metrcTransferManifest?: SortOrderInput | SortOrder
    complianceCheckPassed?: SortOrder
    complianceCheckedAt?: SortOrderInput | SortOrder
    complianceCheckedBy?: SortOrderInput | SortOrder
    cancelledAt?: SortOrderInput | SortOrder
    cancelledBy?: SortOrderInput | SortOrder
    cancellationReason?: SortOrderInput | SortOrder
    refundAmount?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    user?: UserOrderByWithRelationInput
    store?: StoreOrderByWithRelationInput
    items?: OrderItemOrderByRelationAggregateInput
    reviews?: ReviewOrderByRelationAggregateInput
  }

  export type OrderWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    orderNumber?: string
    AND?: OrderWhereInput | OrderWhereInput[]
    OR?: OrderWhereInput[]
    NOT?: OrderWhereInput | OrderWhereInput[]
    userId?: StringFilter<"Order"> | string
    storeId?: StringFilter<"Order"> | string
    orderType?: EnumOrderTypeFilter<"Order"> | $Enums.OrderType
    fulfillmentStatus?: EnumOrderStatusFilter<"Order"> | $Enums.OrderStatus
    deliveryAddress?: JsonNullableFilter<"Order">
    deliveryInstructions?: StringNullableFilter<"Order"> | string | null
    deliveryTimeRequested?: DateTimeNullableFilter<"Order"> | Date | string | null
    deliveryTimeActual?: DateTimeNullableFilter<"Order"> | Date | string | null
    deliveryPersonId?: StringNullableFilter<"Order"> | string | null
    subtotal?: DecimalFilter<"Order"> | Decimal | DecimalJsLike | number | string
    taxAmount?: DecimalFilter<"Order"> | Decimal | DecimalJsLike | number | string
    deliveryFee?: DecimalFilter<"Order"> | Decimal | DecimalJsLike | number | string
    serviceFee?: DecimalFilter<"Order"> | Decimal | DecimalJsLike | number | string
    discountAmount?: DecimalFilter<"Order"> | Decimal | DecimalJsLike | number | string
    tipAmount?: DecimalFilter<"Order"> | Decimal | DecimalJsLike | number | string
    totalAmount?: DecimalFilter<"Order"> | Decimal | DecimalJsLike | number | string
    paymentStatus?: EnumPaymentStatusFilter<"Order"> | $Enums.PaymentStatus
    paymentMethod?: EnumPaymentMethodFilter<"Order"> | $Enums.PaymentMethod
    paymentProvider?: StringNullableFilter<"Order"> | string | null
    paymentIntentId?: StringNullableFilter<"Order"> | string | null
    ageVerifiedAtDelivery?: DateTimeNullableFilter<"Order"> | Date | string | null
    idCheckedBy?: StringNullableFilter<"Order"> | string | null
    customerNotes?: StringNullableFilter<"Order"> | string | null
    internalNotes?: StringNullableFilter<"Order"> | string | null
    metrcTransferManifest?: StringNullableFilter<"Order"> | string | null
    complianceCheckPassed?: BoolFilter<"Order"> | boolean
    complianceCheckedAt?: DateTimeNullableFilter<"Order"> | Date | string | null
    complianceCheckedBy?: StringNullableFilter<"Order"> | string | null
    cancelledAt?: DateTimeNullableFilter<"Order"> | Date | string | null
    cancelledBy?: StringNullableFilter<"Order"> | string | null
    cancellationReason?: StringNullableFilter<"Order"> | string | null
    refundAmount?: DecimalFilter<"Order"> | Decimal | DecimalJsLike | number | string
    createdAt?: DateTimeFilter<"Order"> | Date | string
    updatedAt?: DateTimeFilter<"Order"> | Date | string
    user?: XOR<UserRelationFilter, UserWhereInput>
    store?: XOR<StoreRelationFilter, StoreWhereInput>
    items?: OrderItemListRelationFilter
    reviews?: ReviewListRelationFilter
  }, "id" | "orderNumber">

  export type OrderOrderByWithAggregationInput = {
    id?: SortOrder
    orderNumber?: SortOrder
    userId?: SortOrder
    storeId?: SortOrder
    orderType?: SortOrder
    fulfillmentStatus?: SortOrder
    deliveryAddress?: SortOrderInput | SortOrder
    deliveryInstructions?: SortOrderInput | SortOrder
    deliveryTimeRequested?: SortOrderInput | SortOrder
    deliveryTimeActual?: SortOrderInput | SortOrder
    deliveryPersonId?: SortOrderInput | SortOrder
    subtotal?: SortOrder
    taxAmount?: SortOrder
    deliveryFee?: SortOrder
    serviceFee?: SortOrder
    discountAmount?: SortOrder
    tipAmount?: SortOrder
    totalAmount?: SortOrder
    paymentStatus?: SortOrder
    paymentMethod?: SortOrder
    paymentProvider?: SortOrderInput | SortOrder
    paymentIntentId?: SortOrderInput | SortOrder
    ageVerifiedAtDelivery?: SortOrderInput | SortOrder
    idCheckedBy?: SortOrderInput | SortOrder
    customerNotes?: SortOrderInput | SortOrder
    internalNotes?: SortOrderInput | SortOrder
    metrcTransferManifest?: SortOrderInput | SortOrder
    complianceCheckPassed?: SortOrder
    complianceCheckedAt?: SortOrderInput | SortOrder
    complianceCheckedBy?: SortOrderInput | SortOrder
    cancelledAt?: SortOrderInput | SortOrder
    cancelledBy?: SortOrderInput | SortOrder
    cancellationReason?: SortOrderInput | SortOrder
    refundAmount?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: OrderCountOrderByAggregateInput
    _avg?: OrderAvgOrderByAggregateInput
    _max?: OrderMaxOrderByAggregateInput
    _min?: OrderMinOrderByAggregateInput
    _sum?: OrderSumOrderByAggregateInput
  }

  export type OrderScalarWhereWithAggregatesInput = {
    AND?: OrderScalarWhereWithAggregatesInput | OrderScalarWhereWithAggregatesInput[]
    OR?: OrderScalarWhereWithAggregatesInput[]
    NOT?: OrderScalarWhereWithAggregatesInput | OrderScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"Order"> | string
    orderNumber?: StringWithAggregatesFilter<"Order"> | string
    userId?: StringWithAggregatesFilter<"Order"> | string
    storeId?: StringWithAggregatesFilter<"Order"> | string
    orderType?: EnumOrderTypeWithAggregatesFilter<"Order"> | $Enums.OrderType
    fulfillmentStatus?: EnumOrderStatusWithAggregatesFilter<"Order"> | $Enums.OrderStatus
    deliveryAddress?: JsonNullableWithAggregatesFilter<"Order">
    deliveryInstructions?: StringNullableWithAggregatesFilter<"Order"> | string | null
    deliveryTimeRequested?: DateTimeNullableWithAggregatesFilter<"Order"> | Date | string | null
    deliveryTimeActual?: DateTimeNullableWithAggregatesFilter<"Order"> | Date | string | null
    deliveryPersonId?: StringNullableWithAggregatesFilter<"Order"> | string | null
    subtotal?: DecimalWithAggregatesFilter<"Order"> | Decimal | DecimalJsLike | number | string
    taxAmount?: DecimalWithAggregatesFilter<"Order"> | Decimal | DecimalJsLike | number | string
    deliveryFee?: DecimalWithAggregatesFilter<"Order"> | Decimal | DecimalJsLike | number | string
    serviceFee?: DecimalWithAggregatesFilter<"Order"> | Decimal | DecimalJsLike | number | string
    discountAmount?: DecimalWithAggregatesFilter<"Order"> | Decimal | DecimalJsLike | number | string
    tipAmount?: DecimalWithAggregatesFilter<"Order"> | Decimal | DecimalJsLike | number | string
    totalAmount?: DecimalWithAggregatesFilter<"Order"> | Decimal | DecimalJsLike | number | string
    paymentStatus?: EnumPaymentStatusWithAggregatesFilter<"Order"> | $Enums.PaymentStatus
    paymentMethod?: EnumPaymentMethodWithAggregatesFilter<"Order"> | $Enums.PaymentMethod
    paymentProvider?: StringNullableWithAggregatesFilter<"Order"> | string | null
    paymentIntentId?: StringNullableWithAggregatesFilter<"Order"> | string | null
    ageVerifiedAtDelivery?: DateTimeNullableWithAggregatesFilter<"Order"> | Date | string | null
    idCheckedBy?: StringNullableWithAggregatesFilter<"Order"> | string | null
    customerNotes?: StringNullableWithAggregatesFilter<"Order"> | string | null
    internalNotes?: StringNullableWithAggregatesFilter<"Order"> | string | null
    metrcTransferManifest?: StringNullableWithAggregatesFilter<"Order"> | string | null
    complianceCheckPassed?: BoolWithAggregatesFilter<"Order"> | boolean
    complianceCheckedAt?: DateTimeNullableWithAggregatesFilter<"Order"> | Date | string | null
    complianceCheckedBy?: StringNullableWithAggregatesFilter<"Order"> | string | null
    cancelledAt?: DateTimeNullableWithAggregatesFilter<"Order"> | Date | string | null
    cancelledBy?: StringNullableWithAggregatesFilter<"Order"> | string | null
    cancellationReason?: StringNullableWithAggregatesFilter<"Order"> | string | null
    refundAmount?: DecimalWithAggregatesFilter<"Order"> | Decimal | DecimalJsLike | number | string
    createdAt?: DateTimeWithAggregatesFilter<"Order"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"Order"> | Date | string
  }

  export type OrderItemWhereInput = {
    AND?: OrderItemWhereInput | OrderItemWhereInput[]
    OR?: OrderItemWhereInput[]
    NOT?: OrderItemWhereInput | OrderItemWhereInput[]
    id?: StringFilter<"OrderItem"> | string
    orderId?: StringFilter<"OrderItem"> | string
    productId?: StringFilter<"OrderItem"> | string
    quantity?: IntFilter<"OrderItem"> | number
    unitPrice?: DecimalFilter<"OrderItem"> | Decimal | DecimalJsLike | number | string
    totalPrice?: DecimalFilter<"OrderItem"> | Decimal | DecimalJsLike | number | string
    productName?: StringFilter<"OrderItem"> | string
    productSku?: StringNullableFilter<"OrderItem"> | string | null
    productBrand?: StringNullableFilter<"OrderItem"> | string | null
    thcPercentage?: DecimalNullableFilter<"OrderItem"> | Decimal | DecimalJsLike | number | string | null
    cbdPercentage?: DecimalNullableFilter<"OrderItem"> | Decimal | DecimalJsLike | number | string | null
    weightGrams?: DecimalNullableFilter<"OrderItem"> | Decimal | DecimalJsLike | number | string | null
    metrcPackageId?: StringNullableFilter<"OrderItem"> | string | null
    batchNumber?: StringNullableFilter<"OrderItem"> | string | null
    customerNotes?: StringNullableFilter<"OrderItem"> | string | null
    createdAt?: DateTimeFilter<"OrderItem"> | Date | string
    order?: XOR<OrderRelationFilter, OrderWhereInput>
    product?: XOR<ProductRelationFilter, ProductWhereInput>
  }

  export type OrderItemOrderByWithRelationInput = {
    id?: SortOrder
    orderId?: SortOrder
    productId?: SortOrder
    quantity?: SortOrder
    unitPrice?: SortOrder
    totalPrice?: SortOrder
    productName?: SortOrder
    productSku?: SortOrderInput | SortOrder
    productBrand?: SortOrderInput | SortOrder
    thcPercentage?: SortOrderInput | SortOrder
    cbdPercentage?: SortOrderInput | SortOrder
    weightGrams?: SortOrderInput | SortOrder
    metrcPackageId?: SortOrderInput | SortOrder
    batchNumber?: SortOrderInput | SortOrder
    customerNotes?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    order?: OrderOrderByWithRelationInput
    product?: ProductOrderByWithRelationInput
  }

  export type OrderItemWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: OrderItemWhereInput | OrderItemWhereInput[]
    OR?: OrderItemWhereInput[]
    NOT?: OrderItemWhereInput | OrderItemWhereInput[]
    orderId?: StringFilter<"OrderItem"> | string
    productId?: StringFilter<"OrderItem"> | string
    quantity?: IntFilter<"OrderItem"> | number
    unitPrice?: DecimalFilter<"OrderItem"> | Decimal | DecimalJsLike | number | string
    totalPrice?: DecimalFilter<"OrderItem"> | Decimal | DecimalJsLike | number | string
    productName?: StringFilter<"OrderItem"> | string
    productSku?: StringNullableFilter<"OrderItem"> | string | null
    productBrand?: StringNullableFilter<"OrderItem"> | string | null
    thcPercentage?: DecimalNullableFilter<"OrderItem"> | Decimal | DecimalJsLike | number | string | null
    cbdPercentage?: DecimalNullableFilter<"OrderItem"> | Decimal | DecimalJsLike | number | string | null
    weightGrams?: DecimalNullableFilter<"OrderItem"> | Decimal | DecimalJsLike | number | string | null
    metrcPackageId?: StringNullableFilter<"OrderItem"> | string | null
    batchNumber?: StringNullableFilter<"OrderItem"> | string | null
    customerNotes?: StringNullableFilter<"OrderItem"> | string | null
    createdAt?: DateTimeFilter<"OrderItem"> | Date | string
    order?: XOR<OrderRelationFilter, OrderWhereInput>
    product?: XOR<ProductRelationFilter, ProductWhereInput>
  }, "id">

  export type OrderItemOrderByWithAggregationInput = {
    id?: SortOrder
    orderId?: SortOrder
    productId?: SortOrder
    quantity?: SortOrder
    unitPrice?: SortOrder
    totalPrice?: SortOrder
    productName?: SortOrder
    productSku?: SortOrderInput | SortOrder
    productBrand?: SortOrderInput | SortOrder
    thcPercentage?: SortOrderInput | SortOrder
    cbdPercentage?: SortOrderInput | SortOrder
    weightGrams?: SortOrderInput | SortOrder
    metrcPackageId?: SortOrderInput | SortOrder
    batchNumber?: SortOrderInput | SortOrder
    customerNotes?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    _count?: OrderItemCountOrderByAggregateInput
    _avg?: OrderItemAvgOrderByAggregateInput
    _max?: OrderItemMaxOrderByAggregateInput
    _min?: OrderItemMinOrderByAggregateInput
    _sum?: OrderItemSumOrderByAggregateInput
  }

  export type OrderItemScalarWhereWithAggregatesInput = {
    AND?: OrderItemScalarWhereWithAggregatesInput | OrderItemScalarWhereWithAggregatesInput[]
    OR?: OrderItemScalarWhereWithAggregatesInput[]
    NOT?: OrderItemScalarWhereWithAggregatesInput | OrderItemScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"OrderItem"> | string
    orderId?: StringWithAggregatesFilter<"OrderItem"> | string
    productId?: StringWithAggregatesFilter<"OrderItem"> | string
    quantity?: IntWithAggregatesFilter<"OrderItem"> | number
    unitPrice?: DecimalWithAggregatesFilter<"OrderItem"> | Decimal | DecimalJsLike | number | string
    totalPrice?: DecimalWithAggregatesFilter<"OrderItem"> | Decimal | DecimalJsLike | number | string
    productName?: StringWithAggregatesFilter<"OrderItem"> | string
    productSku?: StringNullableWithAggregatesFilter<"OrderItem"> | string | null
    productBrand?: StringNullableWithAggregatesFilter<"OrderItem"> | string | null
    thcPercentage?: DecimalNullableWithAggregatesFilter<"OrderItem"> | Decimal | DecimalJsLike | number | string | null
    cbdPercentage?: DecimalNullableWithAggregatesFilter<"OrderItem"> | Decimal | DecimalJsLike | number | string | null
    weightGrams?: DecimalNullableWithAggregatesFilter<"OrderItem"> | Decimal | DecimalJsLike | number | string | null
    metrcPackageId?: StringNullableWithAggregatesFilter<"OrderItem"> | string | null
    batchNumber?: StringNullableWithAggregatesFilter<"OrderItem"> | string | null
    customerNotes?: StringNullableWithAggregatesFilter<"OrderItem"> | string | null
    createdAt?: DateTimeWithAggregatesFilter<"OrderItem"> | Date | string
  }

  export type ReviewWhereInput = {
    AND?: ReviewWhereInput | ReviewWhereInput[]
    OR?: ReviewWhereInput[]
    NOT?: ReviewWhereInput | ReviewWhereInput[]
    id?: StringFilter<"Review"> | string
    userId?: StringFilter<"Review"> | string
    reviewableType?: EnumReviewableTypeFilter<"Review"> | $Enums.ReviewableType
    reviewableId?: StringFilter<"Review"> | string
    rating?: IntFilter<"Review"> | number
    title?: StringNullableFilter<"Review"> | string | null
    content?: StringFilter<"Review"> | string
    qualityRating?: IntNullableFilter<"Review"> | number | null
    valueRating?: IntNullableFilter<"Review"> | number | null
    serviceRating?: IntNullableFilter<"Review"> | number | null
    effectsRating?: IntNullableFilter<"Review"> | number | null
    effects?: JsonNullableFilter<"Review">
    medicalBenefits?: JsonNullableFilter<"Review">
    sideEffects?: JsonNullableFilter<"Review">
    images?: JsonNullableFilter<"Review">
    status?: EnumReviewStatusFilter<"Review"> | $Enums.ReviewStatus
    moderatedAt?: DateTimeNullableFilter<"Review"> | Date | string | null
    moderatedBy?: StringNullableFilter<"Review"> | string | null
    moderationReason?: StringNullableFilter<"Review"> | string | null
    verifiedPurchase?: BoolFilter<"Review"> | boolean
    orderId?: StringNullableFilter<"Review"> | string | null
    helpfulCount?: IntFilter<"Review"> | number
    totalVotes?: IntFilter<"Review"> | number
    createdAt?: DateTimeFilter<"Review"> | Date | string
    updatedAt?: DateTimeFilter<"Review"> | Date | string
    user?: XOR<UserRelationFilter, UserWhereInput>
    order?: XOR<OrderNullableRelationFilter, OrderWhereInput> | null
    store?: XOR<StoreNullableRelationFilter, StoreWhereInput> | null
    product?: XOR<ProductNullableRelationFilter, ProductWhereInput> | null
  }

  export type ReviewOrderByWithRelationInput = {
    id?: SortOrder
    userId?: SortOrder
    reviewableType?: SortOrder
    reviewableId?: SortOrder
    rating?: SortOrder
    title?: SortOrderInput | SortOrder
    content?: SortOrder
    qualityRating?: SortOrderInput | SortOrder
    valueRating?: SortOrderInput | SortOrder
    serviceRating?: SortOrderInput | SortOrder
    effectsRating?: SortOrderInput | SortOrder
    effects?: SortOrderInput | SortOrder
    medicalBenefits?: SortOrderInput | SortOrder
    sideEffects?: SortOrderInput | SortOrder
    images?: SortOrderInput | SortOrder
    status?: SortOrder
    moderatedAt?: SortOrderInput | SortOrder
    moderatedBy?: SortOrderInput | SortOrder
    moderationReason?: SortOrderInput | SortOrder
    verifiedPurchase?: SortOrder
    orderId?: SortOrderInput | SortOrder
    helpfulCount?: SortOrder
    totalVotes?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    user?: UserOrderByWithRelationInput
    order?: OrderOrderByWithRelationInput
    store?: StoreOrderByWithRelationInput
    product?: ProductOrderByWithRelationInput
  }

  export type ReviewWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    userId_reviewableType_reviewableId?: ReviewUserIdReviewableTypeReviewableIdCompoundUniqueInput
    AND?: ReviewWhereInput | ReviewWhereInput[]
    OR?: ReviewWhereInput[]
    NOT?: ReviewWhereInput | ReviewWhereInput[]
    userId?: StringFilter<"Review"> | string
    reviewableType?: EnumReviewableTypeFilter<"Review"> | $Enums.ReviewableType
    reviewableId?: StringFilter<"Review"> | string
    rating?: IntFilter<"Review"> | number
    title?: StringNullableFilter<"Review"> | string | null
    content?: StringFilter<"Review"> | string
    qualityRating?: IntNullableFilter<"Review"> | number | null
    valueRating?: IntNullableFilter<"Review"> | number | null
    serviceRating?: IntNullableFilter<"Review"> | number | null
    effectsRating?: IntNullableFilter<"Review"> | number | null
    effects?: JsonNullableFilter<"Review">
    medicalBenefits?: JsonNullableFilter<"Review">
    sideEffects?: JsonNullableFilter<"Review">
    images?: JsonNullableFilter<"Review">
    status?: EnumReviewStatusFilter<"Review"> | $Enums.ReviewStatus
    moderatedAt?: DateTimeNullableFilter<"Review"> | Date | string | null
    moderatedBy?: StringNullableFilter<"Review"> | string | null
    moderationReason?: StringNullableFilter<"Review"> | string | null
    verifiedPurchase?: BoolFilter<"Review"> | boolean
    orderId?: StringNullableFilter<"Review"> | string | null
    helpfulCount?: IntFilter<"Review"> | number
    totalVotes?: IntFilter<"Review"> | number
    createdAt?: DateTimeFilter<"Review"> | Date | string
    updatedAt?: DateTimeFilter<"Review"> | Date | string
    user?: XOR<UserRelationFilter, UserWhereInput>
    order?: XOR<OrderNullableRelationFilter, OrderWhereInput> | null
    store?: XOR<StoreNullableRelationFilter, StoreWhereInput> | null
    product?: XOR<ProductNullableRelationFilter, ProductWhereInput> | null
  }, "id" | "userId_reviewableType_reviewableId">

  export type ReviewOrderByWithAggregationInput = {
    id?: SortOrder
    userId?: SortOrder
    reviewableType?: SortOrder
    reviewableId?: SortOrder
    rating?: SortOrder
    title?: SortOrderInput | SortOrder
    content?: SortOrder
    qualityRating?: SortOrderInput | SortOrder
    valueRating?: SortOrderInput | SortOrder
    serviceRating?: SortOrderInput | SortOrder
    effectsRating?: SortOrderInput | SortOrder
    effects?: SortOrderInput | SortOrder
    medicalBenefits?: SortOrderInput | SortOrder
    sideEffects?: SortOrderInput | SortOrder
    images?: SortOrderInput | SortOrder
    status?: SortOrder
    moderatedAt?: SortOrderInput | SortOrder
    moderatedBy?: SortOrderInput | SortOrder
    moderationReason?: SortOrderInput | SortOrder
    verifiedPurchase?: SortOrder
    orderId?: SortOrderInput | SortOrder
    helpfulCount?: SortOrder
    totalVotes?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: ReviewCountOrderByAggregateInput
    _avg?: ReviewAvgOrderByAggregateInput
    _max?: ReviewMaxOrderByAggregateInput
    _min?: ReviewMinOrderByAggregateInput
    _sum?: ReviewSumOrderByAggregateInput
  }

  export type ReviewScalarWhereWithAggregatesInput = {
    AND?: ReviewScalarWhereWithAggregatesInput | ReviewScalarWhereWithAggregatesInput[]
    OR?: ReviewScalarWhereWithAggregatesInput[]
    NOT?: ReviewScalarWhereWithAggregatesInput | ReviewScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"Review"> | string
    userId?: StringWithAggregatesFilter<"Review"> | string
    reviewableType?: EnumReviewableTypeWithAggregatesFilter<"Review"> | $Enums.ReviewableType
    reviewableId?: StringWithAggregatesFilter<"Review"> | string
    rating?: IntWithAggregatesFilter<"Review"> | number
    title?: StringNullableWithAggregatesFilter<"Review"> | string | null
    content?: StringWithAggregatesFilter<"Review"> | string
    qualityRating?: IntNullableWithAggregatesFilter<"Review"> | number | null
    valueRating?: IntNullableWithAggregatesFilter<"Review"> | number | null
    serviceRating?: IntNullableWithAggregatesFilter<"Review"> | number | null
    effectsRating?: IntNullableWithAggregatesFilter<"Review"> | number | null
    effects?: JsonNullableWithAggregatesFilter<"Review">
    medicalBenefits?: JsonNullableWithAggregatesFilter<"Review">
    sideEffects?: JsonNullableWithAggregatesFilter<"Review">
    images?: JsonNullableWithAggregatesFilter<"Review">
    status?: EnumReviewStatusWithAggregatesFilter<"Review"> | $Enums.ReviewStatus
    moderatedAt?: DateTimeNullableWithAggregatesFilter<"Review"> | Date | string | null
    moderatedBy?: StringNullableWithAggregatesFilter<"Review"> | string | null
    moderationReason?: StringNullableWithAggregatesFilter<"Review"> | string | null
    verifiedPurchase?: BoolWithAggregatesFilter<"Review"> | boolean
    orderId?: StringNullableWithAggregatesFilter<"Review"> | string | null
    helpfulCount?: IntWithAggregatesFilter<"Review"> | number
    totalVotes?: IntWithAggregatesFilter<"Review"> | number
    createdAt?: DateTimeWithAggregatesFilter<"Review"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"Review"> | Date | string
  }

  export type ProfessionalWhereInput = {
    AND?: ProfessionalWhereInput | ProfessionalWhereInput[]
    OR?: ProfessionalWhereInput[]
    NOT?: ProfessionalWhereInput | ProfessionalWhereInput[]
    id?: StringFilter<"Professional"> | string
    userId?: StringFilter<"Professional"> | string
    professionalType?: EnumProfessionalTypeFilter<"Professional"> | $Enums.ProfessionalType
    licenseNumber?: StringFilter<"Professional"> | string
    licenseState?: StringFilter<"Professional"> | string
    licenseExpiresAt?: DateTimeFilter<"Professional"> | Date | string
    specializations?: JsonNullableFilter<"Professional">
    certifications?: JsonNullableFilter<"Professional">
    practiceName?: StringNullableFilter<"Professional"> | string | null
    practiceAddress?: JsonNullableFilter<"Professional">
    practicePhone?: StringNullableFilter<"Professional"> | string | null
    practiceWebsite?: StringNullableFilter<"Professional"> | string | null
    cannabisExperienceYears?: IntNullableFilter<"Professional"> | number | null
    cannabisCertifications?: JsonNullableFilter<"Professional">
    preferredProducts?: JsonNullableFilter<"Professional">
    treatmentApproaches?: JsonNullableFilter<"Professional">
    consultationTypes?: JsonNullableFilter<"Professional">
    hourlyRate?: DecimalNullableFilter<"Professional"> | Decimal | DecimalJsLike | number | string | null
    acceptsInsurance?: BoolFilter<"Professional"> | boolean
    insuranceProviders?: JsonNullableFilter<"Professional">
    verified?: BoolFilter<"Professional"> | boolean
    verifiedAt?: DateTimeNullableFilter<"Professional"> | Date | string | null
    verifiedBy?: StringNullableFilter<"Professional"> | string | null
    verificationDocuments?: JsonNullableFilter<"Professional">
    consultationCount?: IntFilter<"Professional"> | number
    averageRating?: DecimalFilter<"Professional"> | Decimal | DecimalJsLike | number | string
    reviewCount?: IntFilter<"Professional"> | number
    status?: StringFilter<"Professional"> | string
    acceptingNewPatients?: BoolFilter<"Professional"> | boolean
    createdAt?: DateTimeFilter<"Professional"> | Date | string
    updatedAt?: DateTimeFilter<"Professional"> | Date | string
    user?: XOR<UserRelationFilter, UserWhereInput>
    consultations?: ConsultationListRelationFilter
  }

  export type ProfessionalOrderByWithRelationInput = {
    id?: SortOrder
    userId?: SortOrder
    professionalType?: SortOrder
    licenseNumber?: SortOrder
    licenseState?: SortOrder
    licenseExpiresAt?: SortOrder
    specializations?: SortOrderInput | SortOrder
    certifications?: SortOrderInput | SortOrder
    practiceName?: SortOrderInput | SortOrder
    practiceAddress?: SortOrderInput | SortOrder
    practicePhone?: SortOrderInput | SortOrder
    practiceWebsite?: SortOrderInput | SortOrder
    cannabisExperienceYears?: SortOrderInput | SortOrder
    cannabisCertifications?: SortOrderInput | SortOrder
    preferredProducts?: SortOrderInput | SortOrder
    treatmentApproaches?: SortOrderInput | SortOrder
    consultationTypes?: SortOrderInput | SortOrder
    hourlyRate?: SortOrderInput | SortOrder
    acceptsInsurance?: SortOrder
    insuranceProviders?: SortOrderInput | SortOrder
    verified?: SortOrder
    verifiedAt?: SortOrderInput | SortOrder
    verifiedBy?: SortOrderInput | SortOrder
    verificationDocuments?: SortOrderInput | SortOrder
    consultationCount?: SortOrder
    averageRating?: SortOrder
    reviewCount?: SortOrder
    status?: SortOrder
    acceptingNewPatients?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    user?: UserOrderByWithRelationInput
    consultations?: ConsultationOrderByRelationAggregateInput
  }

  export type ProfessionalWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    userId?: string
    AND?: ProfessionalWhereInput | ProfessionalWhereInput[]
    OR?: ProfessionalWhereInput[]
    NOT?: ProfessionalWhereInput | ProfessionalWhereInput[]
    professionalType?: EnumProfessionalTypeFilter<"Professional"> | $Enums.ProfessionalType
    licenseNumber?: StringFilter<"Professional"> | string
    licenseState?: StringFilter<"Professional"> | string
    licenseExpiresAt?: DateTimeFilter<"Professional"> | Date | string
    specializations?: JsonNullableFilter<"Professional">
    certifications?: JsonNullableFilter<"Professional">
    practiceName?: StringNullableFilter<"Professional"> | string | null
    practiceAddress?: JsonNullableFilter<"Professional">
    practicePhone?: StringNullableFilter<"Professional"> | string | null
    practiceWebsite?: StringNullableFilter<"Professional"> | string | null
    cannabisExperienceYears?: IntNullableFilter<"Professional"> | number | null
    cannabisCertifications?: JsonNullableFilter<"Professional">
    preferredProducts?: JsonNullableFilter<"Professional">
    treatmentApproaches?: JsonNullableFilter<"Professional">
    consultationTypes?: JsonNullableFilter<"Professional">
    hourlyRate?: DecimalNullableFilter<"Professional"> | Decimal | DecimalJsLike | number | string | null
    acceptsInsurance?: BoolFilter<"Professional"> | boolean
    insuranceProviders?: JsonNullableFilter<"Professional">
    verified?: BoolFilter<"Professional"> | boolean
    verifiedAt?: DateTimeNullableFilter<"Professional"> | Date | string | null
    verifiedBy?: StringNullableFilter<"Professional"> | string | null
    verificationDocuments?: JsonNullableFilter<"Professional">
    consultationCount?: IntFilter<"Professional"> | number
    averageRating?: DecimalFilter<"Professional"> | Decimal | DecimalJsLike | number | string
    reviewCount?: IntFilter<"Professional"> | number
    status?: StringFilter<"Professional"> | string
    acceptingNewPatients?: BoolFilter<"Professional"> | boolean
    createdAt?: DateTimeFilter<"Professional"> | Date | string
    updatedAt?: DateTimeFilter<"Professional"> | Date | string
    user?: XOR<UserRelationFilter, UserWhereInput>
    consultations?: ConsultationListRelationFilter
  }, "id" | "userId">

  export type ProfessionalOrderByWithAggregationInput = {
    id?: SortOrder
    userId?: SortOrder
    professionalType?: SortOrder
    licenseNumber?: SortOrder
    licenseState?: SortOrder
    licenseExpiresAt?: SortOrder
    specializations?: SortOrderInput | SortOrder
    certifications?: SortOrderInput | SortOrder
    practiceName?: SortOrderInput | SortOrder
    practiceAddress?: SortOrderInput | SortOrder
    practicePhone?: SortOrderInput | SortOrder
    practiceWebsite?: SortOrderInput | SortOrder
    cannabisExperienceYears?: SortOrderInput | SortOrder
    cannabisCertifications?: SortOrderInput | SortOrder
    preferredProducts?: SortOrderInput | SortOrder
    treatmentApproaches?: SortOrderInput | SortOrder
    consultationTypes?: SortOrderInput | SortOrder
    hourlyRate?: SortOrderInput | SortOrder
    acceptsInsurance?: SortOrder
    insuranceProviders?: SortOrderInput | SortOrder
    verified?: SortOrder
    verifiedAt?: SortOrderInput | SortOrder
    verifiedBy?: SortOrderInput | SortOrder
    verificationDocuments?: SortOrderInput | SortOrder
    consultationCount?: SortOrder
    averageRating?: SortOrder
    reviewCount?: SortOrder
    status?: SortOrder
    acceptingNewPatients?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: ProfessionalCountOrderByAggregateInput
    _avg?: ProfessionalAvgOrderByAggregateInput
    _max?: ProfessionalMaxOrderByAggregateInput
    _min?: ProfessionalMinOrderByAggregateInput
    _sum?: ProfessionalSumOrderByAggregateInput
  }

  export type ProfessionalScalarWhereWithAggregatesInput = {
    AND?: ProfessionalScalarWhereWithAggregatesInput | ProfessionalScalarWhereWithAggregatesInput[]
    OR?: ProfessionalScalarWhereWithAggregatesInput[]
    NOT?: ProfessionalScalarWhereWithAggregatesInput | ProfessionalScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"Professional"> | string
    userId?: StringWithAggregatesFilter<"Professional"> | string
    professionalType?: EnumProfessionalTypeWithAggregatesFilter<"Professional"> | $Enums.ProfessionalType
    licenseNumber?: StringWithAggregatesFilter<"Professional"> | string
    licenseState?: StringWithAggregatesFilter<"Professional"> | string
    licenseExpiresAt?: DateTimeWithAggregatesFilter<"Professional"> | Date | string
    specializations?: JsonNullableWithAggregatesFilter<"Professional">
    certifications?: JsonNullableWithAggregatesFilter<"Professional">
    practiceName?: StringNullableWithAggregatesFilter<"Professional"> | string | null
    practiceAddress?: JsonNullableWithAggregatesFilter<"Professional">
    practicePhone?: StringNullableWithAggregatesFilter<"Professional"> | string | null
    practiceWebsite?: StringNullableWithAggregatesFilter<"Professional"> | string | null
    cannabisExperienceYears?: IntNullableWithAggregatesFilter<"Professional"> | number | null
    cannabisCertifications?: JsonNullableWithAggregatesFilter<"Professional">
    preferredProducts?: JsonNullableWithAggregatesFilter<"Professional">
    treatmentApproaches?: JsonNullableWithAggregatesFilter<"Professional">
    consultationTypes?: JsonNullableWithAggregatesFilter<"Professional">
    hourlyRate?: DecimalNullableWithAggregatesFilter<"Professional"> | Decimal | DecimalJsLike | number | string | null
    acceptsInsurance?: BoolWithAggregatesFilter<"Professional"> | boolean
    insuranceProviders?: JsonNullableWithAggregatesFilter<"Professional">
    verified?: BoolWithAggregatesFilter<"Professional"> | boolean
    verifiedAt?: DateTimeNullableWithAggregatesFilter<"Professional"> | Date | string | null
    verifiedBy?: StringNullableWithAggregatesFilter<"Professional"> | string | null
    verificationDocuments?: JsonNullableWithAggregatesFilter<"Professional">
    consultationCount?: IntWithAggregatesFilter<"Professional"> | number
    averageRating?: DecimalWithAggregatesFilter<"Professional"> | Decimal | DecimalJsLike | number | string
    reviewCount?: IntWithAggregatesFilter<"Professional"> | number
    status?: StringWithAggregatesFilter<"Professional"> | string
    acceptingNewPatients?: BoolWithAggregatesFilter<"Professional"> | boolean
    createdAt?: DateTimeWithAggregatesFilter<"Professional"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"Professional"> | Date | string
  }

  export type ConsultationWhereInput = {
    AND?: ConsultationWhereInput | ConsultationWhereInput[]
    OR?: ConsultationWhereInput[]
    NOT?: ConsultationWhereInput | ConsultationWhereInput[]
    id?: StringFilter<"Consultation"> | string
    patientId?: StringFilter<"Consultation"> | string
    professionalId?: StringFilter<"Consultation"> | string
    consultationType?: EnumConsultationTypeFilter<"Consultation"> | $Enums.ConsultationType
    sessionType?: EnumSessionTypeFilter<"Consultation"> | $Enums.SessionType
    scheduledAt?: DateTimeFilter<"Consultation"> | Date | string
    durationMinutes?: IntFilter<"Consultation"> | number
    timezone?: StringFilter<"Consultation"> | string
    status?: StringFilter<"Consultation"> | string
    meetingUrl?: StringNullableFilter<"Consultation"> | string | null
    meetingId?: StringNullableFilter<"Consultation"> | string | null
    meetingPassword?: StringNullableFilter<"Consultation"> | string | null
    chiefComplaint?: StringNullableFilter<"Consultation"> | string | null
    symptoms?: JsonNullableFilter<"Consultation">
    currentMedications?: JsonNullableFilter<"Consultation">
    cannabisExperience?: StringNullableFilter<"Consultation"> | string | null
    previousCannabisUse?: StringNullableFilter<"Consultation"> | string | null
    assessment?: StringNullableFilter<"Consultation"> | string | null
    recommendations?: StringNullableFilter<"Consultation"> | string | null
    prescribedProducts?: JsonNullableFilter<"Consultation">
    followUpNeeded?: BoolFilter<"Consultation"> | boolean
    followUpDate?: DateTimeNullableFilter<"Consultation"> | Date | string | null
    consultationFee?: DecimalFilter<"Consultation"> | Decimal | DecimalJsLike | number | string
    paymentStatus?: StringFilter<"Consultation"> | string
    paymentId?: StringNullableFilter<"Consultation"> | string | null
    medicalConsentSigned?: BoolFilter<"Consultation"> | boolean
    privacyConsentSigned?: BoolFilter<"Consultation"> | boolean
    consultationAgreementSigned?: BoolFilter<"Consultation"> | boolean
    createdAt?: DateTimeFilter<"Consultation"> | Date | string
    updatedAt?: DateTimeFilter<"Consultation"> | Date | string
    patient?: XOR<UserRelationFilter, UserWhereInput>
    professional?: XOR<ProfessionalRelationFilter, ProfessionalWhereInput>
  }

  export type ConsultationOrderByWithRelationInput = {
    id?: SortOrder
    patientId?: SortOrder
    professionalId?: SortOrder
    consultationType?: SortOrder
    sessionType?: SortOrder
    scheduledAt?: SortOrder
    durationMinutes?: SortOrder
    timezone?: SortOrder
    status?: SortOrder
    meetingUrl?: SortOrderInput | SortOrder
    meetingId?: SortOrderInput | SortOrder
    meetingPassword?: SortOrderInput | SortOrder
    chiefComplaint?: SortOrderInput | SortOrder
    symptoms?: SortOrderInput | SortOrder
    currentMedications?: SortOrderInput | SortOrder
    cannabisExperience?: SortOrderInput | SortOrder
    previousCannabisUse?: SortOrderInput | SortOrder
    assessment?: SortOrderInput | SortOrder
    recommendations?: SortOrderInput | SortOrder
    prescribedProducts?: SortOrderInput | SortOrder
    followUpNeeded?: SortOrder
    followUpDate?: SortOrderInput | SortOrder
    consultationFee?: SortOrder
    paymentStatus?: SortOrder
    paymentId?: SortOrderInput | SortOrder
    medicalConsentSigned?: SortOrder
    privacyConsentSigned?: SortOrder
    consultationAgreementSigned?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    patient?: UserOrderByWithRelationInput
    professional?: ProfessionalOrderByWithRelationInput
  }

  export type ConsultationWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: ConsultationWhereInput | ConsultationWhereInput[]
    OR?: ConsultationWhereInput[]
    NOT?: ConsultationWhereInput | ConsultationWhereInput[]
    patientId?: StringFilter<"Consultation"> | string
    professionalId?: StringFilter<"Consultation"> | string
    consultationType?: EnumConsultationTypeFilter<"Consultation"> | $Enums.ConsultationType
    sessionType?: EnumSessionTypeFilter<"Consultation"> | $Enums.SessionType
    scheduledAt?: DateTimeFilter<"Consultation"> | Date | string
    durationMinutes?: IntFilter<"Consultation"> | number
    timezone?: StringFilter<"Consultation"> | string
    status?: StringFilter<"Consultation"> | string
    meetingUrl?: StringNullableFilter<"Consultation"> | string | null
    meetingId?: StringNullableFilter<"Consultation"> | string | null
    meetingPassword?: StringNullableFilter<"Consultation"> | string | null
    chiefComplaint?: StringNullableFilter<"Consultation"> | string | null
    symptoms?: JsonNullableFilter<"Consultation">
    currentMedications?: JsonNullableFilter<"Consultation">
    cannabisExperience?: StringNullableFilter<"Consultation"> | string | null
    previousCannabisUse?: StringNullableFilter<"Consultation"> | string | null
    assessment?: StringNullableFilter<"Consultation"> | string | null
    recommendations?: StringNullableFilter<"Consultation"> | string | null
    prescribedProducts?: JsonNullableFilter<"Consultation">
    followUpNeeded?: BoolFilter<"Consultation"> | boolean
    followUpDate?: DateTimeNullableFilter<"Consultation"> | Date | string | null
    consultationFee?: DecimalFilter<"Consultation"> | Decimal | DecimalJsLike | number | string
    paymentStatus?: StringFilter<"Consultation"> | string
    paymentId?: StringNullableFilter<"Consultation"> | string | null
    medicalConsentSigned?: BoolFilter<"Consultation"> | boolean
    privacyConsentSigned?: BoolFilter<"Consultation"> | boolean
    consultationAgreementSigned?: BoolFilter<"Consultation"> | boolean
    createdAt?: DateTimeFilter<"Consultation"> | Date | string
    updatedAt?: DateTimeFilter<"Consultation"> | Date | string
    patient?: XOR<UserRelationFilter, UserWhereInput>
    professional?: XOR<ProfessionalRelationFilter, ProfessionalWhereInput>
  }, "id">

  export type ConsultationOrderByWithAggregationInput = {
    id?: SortOrder
    patientId?: SortOrder
    professionalId?: SortOrder
    consultationType?: SortOrder
    sessionType?: SortOrder
    scheduledAt?: SortOrder
    durationMinutes?: SortOrder
    timezone?: SortOrder
    status?: SortOrder
    meetingUrl?: SortOrderInput | SortOrder
    meetingId?: SortOrderInput | SortOrder
    meetingPassword?: SortOrderInput | SortOrder
    chiefComplaint?: SortOrderInput | SortOrder
    symptoms?: SortOrderInput | SortOrder
    currentMedications?: SortOrderInput | SortOrder
    cannabisExperience?: SortOrderInput | SortOrder
    previousCannabisUse?: SortOrderInput | SortOrder
    assessment?: SortOrderInput | SortOrder
    recommendations?: SortOrderInput | SortOrder
    prescribedProducts?: SortOrderInput | SortOrder
    followUpNeeded?: SortOrder
    followUpDate?: SortOrderInput | SortOrder
    consultationFee?: SortOrder
    paymentStatus?: SortOrder
    paymentId?: SortOrderInput | SortOrder
    medicalConsentSigned?: SortOrder
    privacyConsentSigned?: SortOrder
    consultationAgreementSigned?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: ConsultationCountOrderByAggregateInput
    _avg?: ConsultationAvgOrderByAggregateInput
    _max?: ConsultationMaxOrderByAggregateInput
    _min?: ConsultationMinOrderByAggregateInput
    _sum?: ConsultationSumOrderByAggregateInput
  }

  export type ConsultationScalarWhereWithAggregatesInput = {
    AND?: ConsultationScalarWhereWithAggregatesInput | ConsultationScalarWhereWithAggregatesInput[]
    OR?: ConsultationScalarWhereWithAggregatesInput[]
    NOT?: ConsultationScalarWhereWithAggregatesInput | ConsultationScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"Consultation"> | string
    patientId?: StringWithAggregatesFilter<"Consultation"> | string
    professionalId?: StringWithAggregatesFilter<"Consultation"> | string
    consultationType?: EnumConsultationTypeWithAggregatesFilter<"Consultation"> | $Enums.ConsultationType
    sessionType?: EnumSessionTypeWithAggregatesFilter<"Consultation"> | $Enums.SessionType
    scheduledAt?: DateTimeWithAggregatesFilter<"Consultation"> | Date | string
    durationMinutes?: IntWithAggregatesFilter<"Consultation"> | number
    timezone?: StringWithAggregatesFilter<"Consultation"> | string
    status?: StringWithAggregatesFilter<"Consultation"> | string
    meetingUrl?: StringNullableWithAggregatesFilter<"Consultation"> | string | null
    meetingId?: StringNullableWithAggregatesFilter<"Consultation"> | string | null
    meetingPassword?: StringNullableWithAggregatesFilter<"Consultation"> | string | null
    chiefComplaint?: StringNullableWithAggregatesFilter<"Consultation"> | string | null
    symptoms?: JsonNullableWithAggregatesFilter<"Consultation">
    currentMedications?: JsonNullableWithAggregatesFilter<"Consultation">
    cannabisExperience?: StringNullableWithAggregatesFilter<"Consultation"> | string | null
    previousCannabisUse?: StringNullableWithAggregatesFilter<"Consultation"> | string | null
    assessment?: StringNullableWithAggregatesFilter<"Consultation"> | string | null
    recommendations?: StringNullableWithAggregatesFilter<"Consultation"> | string | null
    prescribedProducts?: JsonNullableWithAggregatesFilter<"Consultation">
    followUpNeeded?: BoolWithAggregatesFilter<"Consultation"> | boolean
    followUpDate?: DateTimeNullableWithAggregatesFilter<"Consultation"> | Date | string | null
    consultationFee?: DecimalWithAggregatesFilter<"Consultation"> | Decimal | DecimalJsLike | number | string
    paymentStatus?: StringWithAggregatesFilter<"Consultation"> | string
    paymentId?: StringNullableWithAggregatesFilter<"Consultation"> | string | null
    medicalConsentSigned?: BoolWithAggregatesFilter<"Consultation"> | boolean
    privacyConsentSigned?: BoolWithAggregatesFilter<"Consultation"> | boolean
    consultationAgreementSigned?: BoolWithAggregatesFilter<"Consultation"> | boolean
    createdAt?: DateTimeWithAggregatesFilter<"Consultation"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"Consultation"> | Date | string
  }

  export type BlogPostWhereInput = {
    AND?: BlogPostWhereInput | BlogPostWhereInput[]
    OR?: BlogPostWhereInput[]
    NOT?: BlogPostWhereInput | BlogPostWhereInput[]
    id?: StringFilter<"BlogPost"> | string
    authorId?: StringFilter<"BlogPost"> | string
    title?: StringFilter<"BlogPost"> | string
    slug?: StringFilter<"BlogPost"> | string
    excerpt?: StringNullableFilter<"BlogPost"> | string | null
    content?: StringFilter<"BlogPost"> | string
    featuredImageUrl?: StringNullableFilter<"BlogPost"> | string | null
    category?: EnumBlogCategoryFilter<"BlogPost"> | $Enums.BlogCategory
    tags?: JsonNullableFilter<"BlogPost">
    metaTitle?: StringNullableFilter<"BlogPost"> | string | null
    metaDescription?: StringNullableFilter<"BlogPost"> | string | null
    metaKeywords?: StringNullableFilter<"BlogPost"> | string | null
    status?: EnumBlogStatusFilter<"BlogPost"> | $Enums.BlogStatus
    publishedAt?: DateTimeNullableFilter<"BlogPost"> | Date | string | null
    scheduledFor?: DateTimeNullableFilter<"BlogPost"> | Date | string | null
    viewCount?: IntFilter<"BlogPost"> | number
    likeCount?: IntFilter<"BlogPost"> | number
    commentCount?: IntFilter<"BlogPost"> | number
    shareCount?: IntFilter<"BlogPost"> | number
    factChecked?: BoolFilter<"BlogPost"> | boolean
    factCheckedBy?: StringNullableFilter<"BlogPost"> | string | null
    factCheckedAt?: DateTimeNullableFilter<"BlogPost"> | Date | string | null
    medicalDisclaimer?: BoolFilter<"BlogPost"> | boolean
    createdAt?: DateTimeFilter<"BlogPost"> | Date | string
    updatedAt?: DateTimeFilter<"BlogPost"> | Date | string
    author?: XOR<UserRelationFilter, UserWhereInput>
    factChecker?: XOR<UserNullableRelationFilter, UserWhereInput> | null
  }

  export type BlogPostOrderByWithRelationInput = {
    id?: SortOrder
    authorId?: SortOrder
    title?: SortOrder
    slug?: SortOrder
    excerpt?: SortOrderInput | SortOrder
    content?: SortOrder
    featuredImageUrl?: SortOrderInput | SortOrder
    category?: SortOrder
    tags?: SortOrderInput | SortOrder
    metaTitle?: SortOrderInput | SortOrder
    metaDescription?: SortOrderInput | SortOrder
    metaKeywords?: SortOrderInput | SortOrder
    status?: SortOrder
    publishedAt?: SortOrderInput | SortOrder
    scheduledFor?: SortOrderInput | SortOrder
    viewCount?: SortOrder
    likeCount?: SortOrder
    commentCount?: SortOrder
    shareCount?: SortOrder
    factChecked?: SortOrder
    factCheckedBy?: SortOrderInput | SortOrder
    factCheckedAt?: SortOrderInput | SortOrder
    medicalDisclaimer?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    author?: UserOrderByWithRelationInput
    factChecker?: UserOrderByWithRelationInput
  }

  export type BlogPostWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    slug?: string
    AND?: BlogPostWhereInput | BlogPostWhereInput[]
    OR?: BlogPostWhereInput[]
    NOT?: BlogPostWhereInput | BlogPostWhereInput[]
    authorId?: StringFilter<"BlogPost"> | string
    title?: StringFilter<"BlogPost"> | string
    excerpt?: StringNullableFilter<"BlogPost"> | string | null
    content?: StringFilter<"BlogPost"> | string
    featuredImageUrl?: StringNullableFilter<"BlogPost"> | string | null
    category?: EnumBlogCategoryFilter<"BlogPost"> | $Enums.BlogCategory
    tags?: JsonNullableFilter<"BlogPost">
    metaTitle?: StringNullableFilter<"BlogPost"> | string | null
    metaDescription?: StringNullableFilter<"BlogPost"> | string | null
    metaKeywords?: StringNullableFilter<"BlogPost"> | string | null
    status?: EnumBlogStatusFilter<"BlogPost"> | $Enums.BlogStatus
    publishedAt?: DateTimeNullableFilter<"BlogPost"> | Date | string | null
    scheduledFor?: DateTimeNullableFilter<"BlogPost"> | Date | string | null
    viewCount?: IntFilter<"BlogPost"> | number
    likeCount?: IntFilter<"BlogPost"> | number
    commentCount?: IntFilter<"BlogPost"> | number
    shareCount?: IntFilter<"BlogPost"> | number
    factChecked?: BoolFilter<"BlogPost"> | boolean
    factCheckedBy?: StringNullableFilter<"BlogPost"> | string | null
    factCheckedAt?: DateTimeNullableFilter<"BlogPost"> | Date | string | null
    medicalDisclaimer?: BoolFilter<"BlogPost"> | boolean
    createdAt?: DateTimeFilter<"BlogPost"> | Date | string
    updatedAt?: DateTimeFilter<"BlogPost"> | Date | string
    author?: XOR<UserRelationFilter, UserWhereInput>
    factChecker?: XOR<UserNullableRelationFilter, UserWhereInput> | null
  }, "id" | "slug">

  export type BlogPostOrderByWithAggregationInput = {
    id?: SortOrder
    authorId?: SortOrder
    title?: SortOrder
    slug?: SortOrder
    excerpt?: SortOrderInput | SortOrder
    content?: SortOrder
    featuredImageUrl?: SortOrderInput | SortOrder
    category?: SortOrder
    tags?: SortOrderInput | SortOrder
    metaTitle?: SortOrderInput | SortOrder
    metaDescription?: SortOrderInput | SortOrder
    metaKeywords?: SortOrderInput | SortOrder
    status?: SortOrder
    publishedAt?: SortOrderInput | SortOrder
    scheduledFor?: SortOrderInput | SortOrder
    viewCount?: SortOrder
    likeCount?: SortOrder
    commentCount?: SortOrder
    shareCount?: SortOrder
    factChecked?: SortOrder
    factCheckedBy?: SortOrderInput | SortOrder
    factCheckedAt?: SortOrderInput | SortOrder
    medicalDisclaimer?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: BlogPostCountOrderByAggregateInput
    _avg?: BlogPostAvgOrderByAggregateInput
    _max?: BlogPostMaxOrderByAggregateInput
    _min?: BlogPostMinOrderByAggregateInput
    _sum?: BlogPostSumOrderByAggregateInput
  }

  export type BlogPostScalarWhereWithAggregatesInput = {
    AND?: BlogPostScalarWhereWithAggregatesInput | BlogPostScalarWhereWithAggregatesInput[]
    OR?: BlogPostScalarWhereWithAggregatesInput[]
    NOT?: BlogPostScalarWhereWithAggregatesInput | BlogPostScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"BlogPost"> | string
    authorId?: StringWithAggregatesFilter<"BlogPost"> | string
    title?: StringWithAggregatesFilter<"BlogPost"> | string
    slug?: StringWithAggregatesFilter<"BlogPost"> | string
    excerpt?: StringNullableWithAggregatesFilter<"BlogPost"> | string | null
    content?: StringWithAggregatesFilter<"BlogPost"> | string
    featuredImageUrl?: StringNullableWithAggregatesFilter<"BlogPost"> | string | null
    category?: EnumBlogCategoryWithAggregatesFilter<"BlogPost"> | $Enums.BlogCategory
    tags?: JsonNullableWithAggregatesFilter<"BlogPost">
    metaTitle?: StringNullableWithAggregatesFilter<"BlogPost"> | string | null
    metaDescription?: StringNullableWithAggregatesFilter<"BlogPost"> | string | null
    metaKeywords?: StringNullableWithAggregatesFilter<"BlogPost"> | string | null
    status?: EnumBlogStatusWithAggregatesFilter<"BlogPost"> | $Enums.BlogStatus
    publishedAt?: DateTimeNullableWithAggregatesFilter<"BlogPost"> | Date | string | null
    scheduledFor?: DateTimeNullableWithAggregatesFilter<"BlogPost"> | Date | string | null
    viewCount?: IntWithAggregatesFilter<"BlogPost"> | number
    likeCount?: IntWithAggregatesFilter<"BlogPost"> | number
    commentCount?: IntWithAggregatesFilter<"BlogPost"> | number
    shareCount?: IntWithAggregatesFilter<"BlogPost"> | number
    factChecked?: BoolWithAggregatesFilter<"BlogPost"> | boolean
    factCheckedBy?: StringNullableWithAggregatesFilter<"BlogPost"> | string | null
    factCheckedAt?: DateTimeNullableWithAggregatesFilter<"BlogPost"> | Date | string | null
    medicalDisclaimer?: BoolWithAggregatesFilter<"BlogPost"> | boolean
    createdAt?: DateTimeWithAggregatesFilter<"BlogPost"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"BlogPost"> | Date | string
  }

  export type AuditLogWhereInput = {
    AND?: AuditLogWhereInput | AuditLogWhereInput[]
    OR?: AuditLogWhereInput[]
    NOT?: AuditLogWhereInput | AuditLogWhereInput[]
    id?: StringFilter<"AuditLog"> | string
    action?: StringFilter<"AuditLog"> | string
    resourceType?: StringFilter<"AuditLog"> | string
    resourceId?: StringNullableFilter<"AuditLog"> | string | null
    userId?: StringNullableFilter<"AuditLog"> | string | null
    sessionId?: StringNullableFilter<"AuditLog"> | string | null
    ipAddress?: StringNullableFilter<"AuditLog"> | string | null
    userAgent?: StringNullableFilter<"AuditLog"> | string | null
    oldValues?: JsonNullableFilter<"AuditLog">
    newValues?: JsonNullableFilter<"AuditLog">
    requestId?: StringNullableFilter<"AuditLog"> | string | null
    endpoint?: StringNullableFilter<"AuditLog"> | string | null
    httpMethod?: StringNullableFilter<"AuditLog"> | string | null
    riskLevel?: StringFilter<"AuditLog"> | string
    complianceRelevant?: BoolFilter<"AuditLog"> | boolean
    result?: StringFilter<"AuditLog"> | string
    errorMessage?: StringNullableFilter<"AuditLog"> | string | null
    timestamp?: DateTimeFilter<"AuditLog"> | Date | string
  }

  export type AuditLogOrderByWithRelationInput = {
    id?: SortOrder
    action?: SortOrder
    resourceType?: SortOrder
    resourceId?: SortOrderInput | SortOrder
    userId?: SortOrderInput | SortOrder
    sessionId?: SortOrderInput | SortOrder
    ipAddress?: SortOrderInput | SortOrder
    userAgent?: SortOrderInput | SortOrder
    oldValues?: SortOrderInput | SortOrder
    newValues?: SortOrderInput | SortOrder
    requestId?: SortOrderInput | SortOrder
    endpoint?: SortOrderInput | SortOrder
    httpMethod?: SortOrderInput | SortOrder
    riskLevel?: SortOrder
    complianceRelevant?: SortOrder
    result?: SortOrder
    errorMessage?: SortOrderInput | SortOrder
    timestamp?: SortOrder
  }

  export type AuditLogWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: AuditLogWhereInput | AuditLogWhereInput[]
    OR?: AuditLogWhereInput[]
    NOT?: AuditLogWhereInput | AuditLogWhereInput[]
    action?: StringFilter<"AuditLog"> | string
    resourceType?: StringFilter<"AuditLog"> | string
    resourceId?: StringNullableFilter<"AuditLog"> | string | null
    userId?: StringNullableFilter<"AuditLog"> | string | null
    sessionId?: StringNullableFilter<"AuditLog"> | string | null
    ipAddress?: StringNullableFilter<"AuditLog"> | string | null
    userAgent?: StringNullableFilter<"AuditLog"> | string | null
    oldValues?: JsonNullableFilter<"AuditLog">
    newValues?: JsonNullableFilter<"AuditLog">
    requestId?: StringNullableFilter<"AuditLog"> | string | null
    endpoint?: StringNullableFilter<"AuditLog"> | string | null
    httpMethod?: StringNullableFilter<"AuditLog"> | string | null
    riskLevel?: StringFilter<"AuditLog"> | string
    complianceRelevant?: BoolFilter<"AuditLog"> | boolean
    result?: StringFilter<"AuditLog"> | string
    errorMessage?: StringNullableFilter<"AuditLog"> | string | null
    timestamp?: DateTimeFilter<"AuditLog"> | Date | string
  }, "id">

  export type AuditLogOrderByWithAggregationInput = {
    id?: SortOrder
    action?: SortOrder
    resourceType?: SortOrder
    resourceId?: SortOrderInput | SortOrder
    userId?: SortOrderInput | SortOrder
    sessionId?: SortOrderInput | SortOrder
    ipAddress?: SortOrderInput | SortOrder
    userAgent?: SortOrderInput | SortOrder
    oldValues?: SortOrderInput | SortOrder
    newValues?: SortOrderInput | SortOrder
    requestId?: SortOrderInput | SortOrder
    endpoint?: SortOrderInput | SortOrder
    httpMethod?: SortOrderInput | SortOrder
    riskLevel?: SortOrder
    complianceRelevant?: SortOrder
    result?: SortOrder
    errorMessage?: SortOrderInput | SortOrder
    timestamp?: SortOrder
    _count?: AuditLogCountOrderByAggregateInput
    _max?: AuditLogMaxOrderByAggregateInput
    _min?: AuditLogMinOrderByAggregateInput
  }

  export type AuditLogScalarWhereWithAggregatesInput = {
    AND?: AuditLogScalarWhereWithAggregatesInput | AuditLogScalarWhereWithAggregatesInput[]
    OR?: AuditLogScalarWhereWithAggregatesInput[]
    NOT?: AuditLogScalarWhereWithAggregatesInput | AuditLogScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"AuditLog"> | string
    action?: StringWithAggregatesFilter<"AuditLog"> | string
    resourceType?: StringWithAggregatesFilter<"AuditLog"> | string
    resourceId?: StringNullableWithAggregatesFilter<"AuditLog"> | string | null
    userId?: StringNullableWithAggregatesFilter<"AuditLog"> | string | null
    sessionId?: StringNullableWithAggregatesFilter<"AuditLog"> | string | null
    ipAddress?: StringNullableWithAggregatesFilter<"AuditLog"> | string | null
    userAgent?: StringNullableWithAggregatesFilter<"AuditLog"> | string | null
    oldValues?: JsonNullableWithAggregatesFilter<"AuditLog">
    newValues?: JsonNullableWithAggregatesFilter<"AuditLog">
    requestId?: StringNullableWithAggregatesFilter<"AuditLog"> | string | null
    endpoint?: StringNullableWithAggregatesFilter<"AuditLog"> | string | null
    httpMethod?: StringNullableWithAggregatesFilter<"AuditLog"> | string | null
    riskLevel?: StringWithAggregatesFilter<"AuditLog"> | string
    complianceRelevant?: BoolWithAggregatesFilter<"AuditLog"> | boolean
    result?: StringWithAggregatesFilter<"AuditLog"> | string
    errorMessage?: StringNullableWithAggregatesFilter<"AuditLog"> | string | null
    timestamp?: DateTimeWithAggregatesFilter<"AuditLog"> | Date | string
  }

  export type UserCreateInput = {
    id?: string
    email: string
    emailVerified?: boolean
    passwordHash: string
    role?: $Enums.UserRole
    firstName?: string | null
    lastName?: string | null
    phone?: string | null
    dateOfBirth?: Date | string | null
    status?: $Enums.UserStatus
    lastLoginAt?: Date | string | null
    failedLoginAttempts?: number
    lockedUntil?: Date | string | null
    ageVerified?: boolean
    ageVerificationMethod?: $Enums.AgeVerificationMethod | null
    ageVerifiedAt?: Date | string | null
    termsAcceptedAt?: Date | string | null
    privacyAcceptedAt?: Date | string | null
    marketingConsent?: boolean
    gdprConsent?: boolean
    ccpaOptOut?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    createdBy?: string | null
    updatedBy?: string | null
    addresses?: UserAddressCreateNestedManyWithoutUserInput
    sessions?: UserSessionCreateNestedManyWithoutUserInput
    stores?: StoreCreateNestedManyWithoutOwnerInput
    orders?: OrderCreateNestedManyWithoutUserInput
    reviews?: ReviewCreateNestedManyWithoutUserInput
    professional?: ProfessionalCreateNestedOneWithoutUserInput
    storeStaff?: StoreStaffCreateNestedManyWithoutUserInput
    consultationsAsPatient?: ConsultationCreateNestedManyWithoutPatientInput
    ageVerifier?: UserCreateNestedOneWithoutAgeVerificationsInput
    ageVerifications?: UserCreateNestedManyWithoutAgeVerifierInput
    blogPosts?: BlogPostCreateNestedManyWithoutAuthorInput
    factCheckedPosts?: BlogPostCreateNestedManyWithoutFactCheckerInput
  }

  export type UserUncheckedCreateInput = {
    id?: string
    email: string
    emailVerified?: boolean
    passwordHash: string
    role?: $Enums.UserRole
    firstName?: string | null
    lastName?: string | null
    phone?: string | null
    dateOfBirth?: Date | string | null
    status?: $Enums.UserStatus
    lastLoginAt?: Date | string | null
    failedLoginAttempts?: number
    lockedUntil?: Date | string | null
    ageVerified?: boolean
    ageVerificationMethod?: $Enums.AgeVerificationMethod | null
    ageVerifiedAt?: Date | string | null
    ageVerifiedBy?: string | null
    termsAcceptedAt?: Date | string | null
    privacyAcceptedAt?: Date | string | null
    marketingConsent?: boolean
    gdprConsent?: boolean
    ccpaOptOut?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    createdBy?: string | null
    updatedBy?: string | null
    addresses?: UserAddressUncheckedCreateNestedManyWithoutUserInput
    sessions?: UserSessionUncheckedCreateNestedManyWithoutUserInput
    stores?: StoreUncheckedCreateNestedManyWithoutOwnerInput
    orders?: OrderUncheckedCreateNestedManyWithoutUserInput
    reviews?: ReviewUncheckedCreateNestedManyWithoutUserInput
    professional?: ProfessionalUncheckedCreateNestedOneWithoutUserInput
    storeStaff?: StoreStaffUncheckedCreateNestedManyWithoutUserInput
    consultationsAsPatient?: ConsultationUncheckedCreateNestedManyWithoutPatientInput
    ageVerifications?: UserUncheckedCreateNestedManyWithoutAgeVerifierInput
    blogPosts?: BlogPostUncheckedCreateNestedManyWithoutAuthorInput
    factCheckedPosts?: BlogPostUncheckedCreateNestedManyWithoutFactCheckerInput
  }

  export type UserUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    emailVerified?: BoolFieldUpdateOperationsInput | boolean
    passwordHash?: StringFieldUpdateOperationsInput | string
    role?: EnumUserRoleFieldUpdateOperationsInput | $Enums.UserRole
    firstName?: NullableStringFieldUpdateOperationsInput | string | null
    lastName?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    dateOfBirth?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: EnumUserStatusFieldUpdateOperationsInput | $Enums.UserStatus
    lastLoginAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    failedLoginAttempts?: IntFieldUpdateOperationsInput | number
    lockedUntil?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    ageVerified?: BoolFieldUpdateOperationsInput | boolean
    ageVerificationMethod?: NullableEnumAgeVerificationMethodFieldUpdateOperationsInput | $Enums.AgeVerificationMethod | null
    ageVerifiedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    termsAcceptedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    privacyAcceptedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    marketingConsent?: BoolFieldUpdateOperationsInput | boolean
    gdprConsent?: BoolFieldUpdateOperationsInput | boolean
    ccpaOptOut?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    addresses?: UserAddressUpdateManyWithoutUserNestedInput
    sessions?: UserSessionUpdateManyWithoutUserNestedInput
    stores?: StoreUpdateManyWithoutOwnerNestedInput
    orders?: OrderUpdateManyWithoutUserNestedInput
    reviews?: ReviewUpdateManyWithoutUserNestedInput
    professional?: ProfessionalUpdateOneWithoutUserNestedInput
    storeStaff?: StoreStaffUpdateManyWithoutUserNestedInput
    consultationsAsPatient?: ConsultationUpdateManyWithoutPatientNestedInput
    ageVerifier?: UserUpdateOneWithoutAgeVerificationsNestedInput
    ageVerifications?: UserUpdateManyWithoutAgeVerifierNestedInput
    blogPosts?: BlogPostUpdateManyWithoutAuthorNestedInput
    factCheckedPosts?: BlogPostUpdateManyWithoutFactCheckerNestedInput
  }

  export type UserUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    emailVerified?: BoolFieldUpdateOperationsInput | boolean
    passwordHash?: StringFieldUpdateOperationsInput | string
    role?: EnumUserRoleFieldUpdateOperationsInput | $Enums.UserRole
    firstName?: NullableStringFieldUpdateOperationsInput | string | null
    lastName?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    dateOfBirth?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: EnumUserStatusFieldUpdateOperationsInput | $Enums.UserStatus
    lastLoginAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    failedLoginAttempts?: IntFieldUpdateOperationsInput | number
    lockedUntil?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    ageVerified?: BoolFieldUpdateOperationsInput | boolean
    ageVerificationMethod?: NullableEnumAgeVerificationMethodFieldUpdateOperationsInput | $Enums.AgeVerificationMethod | null
    ageVerifiedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    ageVerifiedBy?: NullableStringFieldUpdateOperationsInput | string | null
    termsAcceptedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    privacyAcceptedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    marketingConsent?: BoolFieldUpdateOperationsInput | boolean
    gdprConsent?: BoolFieldUpdateOperationsInput | boolean
    ccpaOptOut?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    addresses?: UserAddressUncheckedUpdateManyWithoutUserNestedInput
    sessions?: UserSessionUncheckedUpdateManyWithoutUserNestedInput
    stores?: StoreUncheckedUpdateManyWithoutOwnerNestedInput
    orders?: OrderUncheckedUpdateManyWithoutUserNestedInput
    reviews?: ReviewUncheckedUpdateManyWithoutUserNestedInput
    professional?: ProfessionalUncheckedUpdateOneWithoutUserNestedInput
    storeStaff?: StoreStaffUncheckedUpdateManyWithoutUserNestedInput
    consultationsAsPatient?: ConsultationUncheckedUpdateManyWithoutPatientNestedInput
    ageVerifications?: UserUncheckedUpdateManyWithoutAgeVerifierNestedInput
    blogPosts?: BlogPostUncheckedUpdateManyWithoutAuthorNestedInput
    factCheckedPosts?: BlogPostUncheckedUpdateManyWithoutFactCheckerNestedInput
  }

  export type UserCreateManyInput = {
    id?: string
    email: string
    emailVerified?: boolean
    passwordHash: string
    role?: $Enums.UserRole
    firstName?: string | null
    lastName?: string | null
    phone?: string | null
    dateOfBirth?: Date | string | null
    status?: $Enums.UserStatus
    lastLoginAt?: Date | string | null
    failedLoginAttempts?: number
    lockedUntil?: Date | string | null
    ageVerified?: boolean
    ageVerificationMethod?: $Enums.AgeVerificationMethod | null
    ageVerifiedAt?: Date | string | null
    ageVerifiedBy?: string | null
    termsAcceptedAt?: Date | string | null
    privacyAcceptedAt?: Date | string | null
    marketingConsent?: boolean
    gdprConsent?: boolean
    ccpaOptOut?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    createdBy?: string | null
    updatedBy?: string | null
  }

  export type UserUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    emailVerified?: BoolFieldUpdateOperationsInput | boolean
    passwordHash?: StringFieldUpdateOperationsInput | string
    role?: EnumUserRoleFieldUpdateOperationsInput | $Enums.UserRole
    firstName?: NullableStringFieldUpdateOperationsInput | string | null
    lastName?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    dateOfBirth?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: EnumUserStatusFieldUpdateOperationsInput | $Enums.UserStatus
    lastLoginAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    failedLoginAttempts?: IntFieldUpdateOperationsInput | number
    lockedUntil?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    ageVerified?: BoolFieldUpdateOperationsInput | boolean
    ageVerificationMethod?: NullableEnumAgeVerificationMethodFieldUpdateOperationsInput | $Enums.AgeVerificationMethod | null
    ageVerifiedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    termsAcceptedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    privacyAcceptedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    marketingConsent?: BoolFieldUpdateOperationsInput | boolean
    gdprConsent?: BoolFieldUpdateOperationsInput | boolean
    ccpaOptOut?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type UserUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    emailVerified?: BoolFieldUpdateOperationsInput | boolean
    passwordHash?: StringFieldUpdateOperationsInput | string
    role?: EnumUserRoleFieldUpdateOperationsInput | $Enums.UserRole
    firstName?: NullableStringFieldUpdateOperationsInput | string | null
    lastName?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    dateOfBirth?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: EnumUserStatusFieldUpdateOperationsInput | $Enums.UserStatus
    lastLoginAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    failedLoginAttempts?: IntFieldUpdateOperationsInput | number
    lockedUntil?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    ageVerified?: BoolFieldUpdateOperationsInput | boolean
    ageVerificationMethod?: NullableEnumAgeVerificationMethodFieldUpdateOperationsInput | $Enums.AgeVerificationMethod | null
    ageVerifiedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    ageVerifiedBy?: NullableStringFieldUpdateOperationsInput | string | null
    termsAcceptedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    privacyAcceptedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    marketingConsent?: BoolFieldUpdateOperationsInput | boolean
    gdprConsent?: BoolFieldUpdateOperationsInput | boolean
    ccpaOptOut?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type UserAddressCreateInput = {
    id?: string
    type: $Enums.AddressType
    addressLine1: string
    addressLine2?: string | null
    city: string
    state: string
    postalCode: string
    country?: string
    latitude?: Decimal | DecimalJsLike | number | string | null
    longitude?: Decimal | DecimalJsLike | number | string | null
    isDefault?: boolean
    verified?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    user: UserCreateNestedOneWithoutAddressesInput
  }

  export type UserAddressUncheckedCreateInput = {
    id?: string
    userId: string
    type: $Enums.AddressType
    addressLine1: string
    addressLine2?: string | null
    city: string
    state: string
    postalCode: string
    country?: string
    latitude?: Decimal | DecimalJsLike | number | string | null
    longitude?: Decimal | DecimalJsLike | number | string | null
    isDefault?: boolean
    verified?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type UserAddressUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    type?: EnumAddressTypeFieldUpdateOperationsInput | $Enums.AddressType
    addressLine1?: StringFieldUpdateOperationsInput | string
    addressLine2?: NullableStringFieldUpdateOperationsInput | string | null
    city?: StringFieldUpdateOperationsInput | string
    state?: StringFieldUpdateOperationsInput | string
    postalCode?: StringFieldUpdateOperationsInput | string
    country?: StringFieldUpdateOperationsInput | string
    latitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    longitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    isDefault?: BoolFieldUpdateOperationsInput | boolean
    verified?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    user?: UserUpdateOneRequiredWithoutAddressesNestedInput
  }

  export type UserAddressUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    type?: EnumAddressTypeFieldUpdateOperationsInput | $Enums.AddressType
    addressLine1?: StringFieldUpdateOperationsInput | string
    addressLine2?: NullableStringFieldUpdateOperationsInput | string | null
    city?: StringFieldUpdateOperationsInput | string
    state?: StringFieldUpdateOperationsInput | string
    postalCode?: StringFieldUpdateOperationsInput | string
    country?: StringFieldUpdateOperationsInput | string
    latitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    longitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    isDefault?: BoolFieldUpdateOperationsInput | boolean
    verified?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type UserAddressCreateManyInput = {
    id?: string
    userId: string
    type: $Enums.AddressType
    addressLine1: string
    addressLine2?: string | null
    city: string
    state: string
    postalCode: string
    country?: string
    latitude?: Decimal | DecimalJsLike | number | string | null
    longitude?: Decimal | DecimalJsLike | number | string | null
    isDefault?: boolean
    verified?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type UserAddressUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    type?: EnumAddressTypeFieldUpdateOperationsInput | $Enums.AddressType
    addressLine1?: StringFieldUpdateOperationsInput | string
    addressLine2?: NullableStringFieldUpdateOperationsInput | string | null
    city?: StringFieldUpdateOperationsInput | string
    state?: StringFieldUpdateOperationsInput | string
    postalCode?: StringFieldUpdateOperationsInput | string
    country?: StringFieldUpdateOperationsInput | string
    latitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    longitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    isDefault?: BoolFieldUpdateOperationsInput | boolean
    verified?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type UserAddressUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    type?: EnumAddressTypeFieldUpdateOperationsInput | $Enums.AddressType
    addressLine1?: StringFieldUpdateOperationsInput | string
    addressLine2?: NullableStringFieldUpdateOperationsInput | string | null
    city?: StringFieldUpdateOperationsInput | string
    state?: StringFieldUpdateOperationsInput | string
    postalCode?: StringFieldUpdateOperationsInput | string
    country?: StringFieldUpdateOperationsInput | string
    latitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    longitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    isDefault?: BoolFieldUpdateOperationsInput | boolean
    verified?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type UserSessionCreateInput = {
    id?: string
    refreshTokenHash: string
    deviceFingerprint?: string | null
    ipAddress?: string | null
    userAgent?: string | null
    locationCountry?: string | null
    locationRegion?: string | null
    locationCity?: string | null
    isActive?: boolean
    expiresAt: Date | string
    lastUsedAt?: Date | string
    createdAt?: Date | string
    updatedAt?: Date | string
    user: UserCreateNestedOneWithoutSessionsInput
  }

  export type UserSessionUncheckedCreateInput = {
    id?: string
    userId: string
    refreshTokenHash: string
    deviceFingerprint?: string | null
    ipAddress?: string | null
    userAgent?: string | null
    locationCountry?: string | null
    locationRegion?: string | null
    locationCity?: string | null
    isActive?: boolean
    expiresAt: Date | string
    lastUsedAt?: Date | string
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type UserSessionUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    refreshTokenHash?: StringFieldUpdateOperationsInput | string
    deviceFingerprint?: NullableStringFieldUpdateOperationsInput | string | null
    ipAddress?: NullableStringFieldUpdateOperationsInput | string | null
    userAgent?: NullableStringFieldUpdateOperationsInput | string | null
    locationCountry?: NullableStringFieldUpdateOperationsInput | string | null
    locationRegion?: NullableStringFieldUpdateOperationsInput | string | null
    locationCity?: NullableStringFieldUpdateOperationsInput | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    expiresAt?: DateTimeFieldUpdateOperationsInput | Date | string
    lastUsedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    user?: UserUpdateOneRequiredWithoutSessionsNestedInput
  }

  export type UserSessionUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    refreshTokenHash?: StringFieldUpdateOperationsInput | string
    deviceFingerprint?: NullableStringFieldUpdateOperationsInput | string | null
    ipAddress?: NullableStringFieldUpdateOperationsInput | string | null
    userAgent?: NullableStringFieldUpdateOperationsInput | string | null
    locationCountry?: NullableStringFieldUpdateOperationsInput | string | null
    locationRegion?: NullableStringFieldUpdateOperationsInput | string | null
    locationCity?: NullableStringFieldUpdateOperationsInput | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    expiresAt?: DateTimeFieldUpdateOperationsInput | Date | string
    lastUsedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type UserSessionCreateManyInput = {
    id?: string
    userId: string
    refreshTokenHash: string
    deviceFingerprint?: string | null
    ipAddress?: string | null
    userAgent?: string | null
    locationCountry?: string | null
    locationRegion?: string | null
    locationCity?: string | null
    isActive?: boolean
    expiresAt: Date | string
    lastUsedAt?: Date | string
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type UserSessionUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    refreshTokenHash?: StringFieldUpdateOperationsInput | string
    deviceFingerprint?: NullableStringFieldUpdateOperationsInput | string | null
    ipAddress?: NullableStringFieldUpdateOperationsInput | string | null
    userAgent?: NullableStringFieldUpdateOperationsInput | string | null
    locationCountry?: NullableStringFieldUpdateOperationsInput | string | null
    locationRegion?: NullableStringFieldUpdateOperationsInput | string | null
    locationCity?: NullableStringFieldUpdateOperationsInput | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    expiresAt?: DateTimeFieldUpdateOperationsInput | Date | string
    lastUsedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type UserSessionUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    refreshTokenHash?: StringFieldUpdateOperationsInput | string
    deviceFingerprint?: NullableStringFieldUpdateOperationsInput | string | null
    ipAddress?: NullableStringFieldUpdateOperationsInput | string | null
    userAgent?: NullableStringFieldUpdateOperationsInput | string | null
    locationCountry?: NullableStringFieldUpdateOperationsInput | string | null
    locationRegion?: NullableStringFieldUpdateOperationsInput | string | null
    locationCity?: NullableStringFieldUpdateOperationsInput | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    expiresAt?: DateTimeFieldUpdateOperationsInput | Date | string
    lastUsedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type StoreCreateInput = {
    id?: string
    name: string
    slug: string
    description?: string | null
    email?: string | null
    phone?: string | null
    website?: string | null
    addressLine1: string
    addressLine2?: string | null
    city: string
    state: string
    postalCode: string
    latitude: Decimal | DecimalJsLike | number | string
    longitude: Decimal | DecimalJsLike | number | string
    businessType: $Enums.BusinessType
    licenseNumber: string
    licenseType: string
    licenseState: string
    licenseExpiresAt: Date | string
    features?: NullableJsonNullValueInput | InputJsonValue
    paymentMethods?: NullableJsonNullValueInput | InputJsonValue
    deliveryRadius?: number | null
    minimumOrder?: Decimal | DecimalJsLike | number | string | null
    deliveryFee?: Decimal | DecimalJsLike | number | string | null
    operatingHours?: NullableJsonNullValueInput | InputJsonValue
    status?: $Enums.StoreStatus
    verified?: boolean
    verifiedAt?: Date | string | null
    verifiedBy?: string | null
    logoUrl?: string | null
    coverImageUrl?: string | null
    galleryImages?: NullableJsonNullValueInput | InputJsonValue
    metaTitle?: string | null
    metaDescription?: string | null
    socialMedia?: NullableJsonNullValueInput | InputJsonValue
    metrcLicenseId?: string | null
    metrcLastSync?: Date | string | null
    complianceStatus?: $Enums.ComplianceStatus
    trackTraceSystem?: $Enums.TrackTraceSystem | null
    totalProducts?: number
    averageRating?: Decimal | DecimalJsLike | number | string
    totalReviews?: number
    totalOrders?: number
    createdAt?: Date | string
    updatedAt?: Date | string
    createdBy?: string | null
    updatedBy?: string | null
    owner: UserCreateNestedOneWithoutStoresInput
    staff?: StoreStaffCreateNestedManyWithoutStoreInput
    products?: ProductCreateNestedManyWithoutStoreInput
    orders?: OrderCreateNestedManyWithoutStoreInput
    reviews?: ReviewCreateNestedManyWithoutStoreInput
  }

  export type StoreUncheckedCreateInput = {
    id?: string
    ownerId: string
    name: string
    slug: string
    description?: string | null
    email?: string | null
    phone?: string | null
    website?: string | null
    addressLine1: string
    addressLine2?: string | null
    city: string
    state: string
    postalCode: string
    latitude: Decimal | DecimalJsLike | number | string
    longitude: Decimal | DecimalJsLike | number | string
    businessType: $Enums.BusinessType
    licenseNumber: string
    licenseType: string
    licenseState: string
    licenseExpiresAt: Date | string
    features?: NullableJsonNullValueInput | InputJsonValue
    paymentMethods?: NullableJsonNullValueInput | InputJsonValue
    deliveryRadius?: number | null
    minimumOrder?: Decimal | DecimalJsLike | number | string | null
    deliveryFee?: Decimal | DecimalJsLike | number | string | null
    operatingHours?: NullableJsonNullValueInput | InputJsonValue
    status?: $Enums.StoreStatus
    verified?: boolean
    verifiedAt?: Date | string | null
    verifiedBy?: string | null
    logoUrl?: string | null
    coverImageUrl?: string | null
    galleryImages?: NullableJsonNullValueInput | InputJsonValue
    metaTitle?: string | null
    metaDescription?: string | null
    socialMedia?: NullableJsonNullValueInput | InputJsonValue
    metrcLicenseId?: string | null
    metrcLastSync?: Date | string | null
    complianceStatus?: $Enums.ComplianceStatus
    trackTraceSystem?: $Enums.TrackTraceSystem | null
    totalProducts?: number
    averageRating?: Decimal | DecimalJsLike | number | string
    totalReviews?: number
    totalOrders?: number
    createdAt?: Date | string
    updatedAt?: Date | string
    createdBy?: string | null
    updatedBy?: string | null
    staff?: StoreStaffUncheckedCreateNestedManyWithoutStoreInput
    products?: ProductUncheckedCreateNestedManyWithoutStoreInput
    orders?: OrderUncheckedCreateNestedManyWithoutStoreInput
    reviews?: ReviewUncheckedCreateNestedManyWithoutStoreInput
  }

  export type StoreUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    website?: NullableStringFieldUpdateOperationsInput | string | null
    addressLine1?: StringFieldUpdateOperationsInput | string
    addressLine2?: NullableStringFieldUpdateOperationsInput | string | null
    city?: StringFieldUpdateOperationsInput | string
    state?: StringFieldUpdateOperationsInput | string
    postalCode?: StringFieldUpdateOperationsInput | string
    latitude?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    longitude?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    businessType?: EnumBusinessTypeFieldUpdateOperationsInput | $Enums.BusinessType
    licenseNumber?: StringFieldUpdateOperationsInput | string
    licenseType?: StringFieldUpdateOperationsInput | string
    licenseState?: StringFieldUpdateOperationsInput | string
    licenseExpiresAt?: DateTimeFieldUpdateOperationsInput | Date | string
    features?: NullableJsonNullValueInput | InputJsonValue
    paymentMethods?: NullableJsonNullValueInput | InputJsonValue
    deliveryRadius?: NullableIntFieldUpdateOperationsInput | number | null
    minimumOrder?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    deliveryFee?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    operatingHours?: NullableJsonNullValueInput | InputJsonValue
    status?: EnumStoreStatusFieldUpdateOperationsInput | $Enums.StoreStatus
    verified?: BoolFieldUpdateOperationsInput | boolean
    verifiedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    verifiedBy?: NullableStringFieldUpdateOperationsInput | string | null
    logoUrl?: NullableStringFieldUpdateOperationsInput | string | null
    coverImageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    galleryImages?: NullableJsonNullValueInput | InputJsonValue
    metaTitle?: NullableStringFieldUpdateOperationsInput | string | null
    metaDescription?: NullableStringFieldUpdateOperationsInput | string | null
    socialMedia?: NullableJsonNullValueInput | InputJsonValue
    metrcLicenseId?: NullableStringFieldUpdateOperationsInput | string | null
    metrcLastSync?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    complianceStatus?: EnumComplianceStatusFieldUpdateOperationsInput | $Enums.ComplianceStatus
    trackTraceSystem?: NullableEnumTrackTraceSystemFieldUpdateOperationsInput | $Enums.TrackTraceSystem | null
    totalProducts?: IntFieldUpdateOperationsInput | number
    averageRating?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    totalReviews?: IntFieldUpdateOperationsInput | number
    totalOrders?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    owner?: UserUpdateOneRequiredWithoutStoresNestedInput
    staff?: StoreStaffUpdateManyWithoutStoreNestedInput
    products?: ProductUpdateManyWithoutStoreNestedInput
    orders?: OrderUpdateManyWithoutStoreNestedInput
    reviews?: ReviewUpdateManyWithoutStoreNestedInput
  }

  export type StoreUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    ownerId?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    website?: NullableStringFieldUpdateOperationsInput | string | null
    addressLine1?: StringFieldUpdateOperationsInput | string
    addressLine2?: NullableStringFieldUpdateOperationsInput | string | null
    city?: StringFieldUpdateOperationsInput | string
    state?: StringFieldUpdateOperationsInput | string
    postalCode?: StringFieldUpdateOperationsInput | string
    latitude?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    longitude?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    businessType?: EnumBusinessTypeFieldUpdateOperationsInput | $Enums.BusinessType
    licenseNumber?: StringFieldUpdateOperationsInput | string
    licenseType?: StringFieldUpdateOperationsInput | string
    licenseState?: StringFieldUpdateOperationsInput | string
    licenseExpiresAt?: DateTimeFieldUpdateOperationsInput | Date | string
    features?: NullableJsonNullValueInput | InputJsonValue
    paymentMethods?: NullableJsonNullValueInput | InputJsonValue
    deliveryRadius?: NullableIntFieldUpdateOperationsInput | number | null
    minimumOrder?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    deliveryFee?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    operatingHours?: NullableJsonNullValueInput | InputJsonValue
    status?: EnumStoreStatusFieldUpdateOperationsInput | $Enums.StoreStatus
    verified?: BoolFieldUpdateOperationsInput | boolean
    verifiedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    verifiedBy?: NullableStringFieldUpdateOperationsInput | string | null
    logoUrl?: NullableStringFieldUpdateOperationsInput | string | null
    coverImageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    galleryImages?: NullableJsonNullValueInput | InputJsonValue
    metaTitle?: NullableStringFieldUpdateOperationsInput | string | null
    metaDescription?: NullableStringFieldUpdateOperationsInput | string | null
    socialMedia?: NullableJsonNullValueInput | InputJsonValue
    metrcLicenseId?: NullableStringFieldUpdateOperationsInput | string | null
    metrcLastSync?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    complianceStatus?: EnumComplianceStatusFieldUpdateOperationsInput | $Enums.ComplianceStatus
    trackTraceSystem?: NullableEnumTrackTraceSystemFieldUpdateOperationsInput | $Enums.TrackTraceSystem | null
    totalProducts?: IntFieldUpdateOperationsInput | number
    averageRating?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    totalReviews?: IntFieldUpdateOperationsInput | number
    totalOrders?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    staff?: StoreStaffUncheckedUpdateManyWithoutStoreNestedInput
    products?: ProductUncheckedUpdateManyWithoutStoreNestedInput
    orders?: OrderUncheckedUpdateManyWithoutStoreNestedInput
    reviews?: ReviewUncheckedUpdateManyWithoutStoreNestedInput
  }

  export type StoreCreateManyInput = {
    id?: string
    ownerId: string
    name: string
    slug: string
    description?: string | null
    email?: string | null
    phone?: string | null
    website?: string | null
    addressLine1: string
    addressLine2?: string | null
    city: string
    state: string
    postalCode: string
    latitude: Decimal | DecimalJsLike | number | string
    longitude: Decimal | DecimalJsLike | number | string
    businessType: $Enums.BusinessType
    licenseNumber: string
    licenseType: string
    licenseState: string
    licenseExpiresAt: Date | string
    features?: NullableJsonNullValueInput | InputJsonValue
    paymentMethods?: NullableJsonNullValueInput | InputJsonValue
    deliveryRadius?: number | null
    minimumOrder?: Decimal | DecimalJsLike | number | string | null
    deliveryFee?: Decimal | DecimalJsLike | number | string | null
    operatingHours?: NullableJsonNullValueInput | InputJsonValue
    status?: $Enums.StoreStatus
    verified?: boolean
    verifiedAt?: Date | string | null
    verifiedBy?: string | null
    logoUrl?: string | null
    coverImageUrl?: string | null
    galleryImages?: NullableJsonNullValueInput | InputJsonValue
    metaTitle?: string | null
    metaDescription?: string | null
    socialMedia?: NullableJsonNullValueInput | InputJsonValue
    metrcLicenseId?: string | null
    metrcLastSync?: Date | string | null
    complianceStatus?: $Enums.ComplianceStatus
    trackTraceSystem?: $Enums.TrackTraceSystem | null
    totalProducts?: number
    averageRating?: Decimal | DecimalJsLike | number | string
    totalReviews?: number
    totalOrders?: number
    createdAt?: Date | string
    updatedAt?: Date | string
    createdBy?: string | null
    updatedBy?: string | null
  }

  export type StoreUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    website?: NullableStringFieldUpdateOperationsInput | string | null
    addressLine1?: StringFieldUpdateOperationsInput | string
    addressLine2?: NullableStringFieldUpdateOperationsInput | string | null
    city?: StringFieldUpdateOperationsInput | string
    state?: StringFieldUpdateOperationsInput | string
    postalCode?: StringFieldUpdateOperationsInput | string
    latitude?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    longitude?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    businessType?: EnumBusinessTypeFieldUpdateOperationsInput | $Enums.BusinessType
    licenseNumber?: StringFieldUpdateOperationsInput | string
    licenseType?: StringFieldUpdateOperationsInput | string
    licenseState?: StringFieldUpdateOperationsInput | string
    licenseExpiresAt?: DateTimeFieldUpdateOperationsInput | Date | string
    features?: NullableJsonNullValueInput | InputJsonValue
    paymentMethods?: NullableJsonNullValueInput | InputJsonValue
    deliveryRadius?: NullableIntFieldUpdateOperationsInput | number | null
    minimumOrder?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    deliveryFee?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    operatingHours?: NullableJsonNullValueInput | InputJsonValue
    status?: EnumStoreStatusFieldUpdateOperationsInput | $Enums.StoreStatus
    verified?: BoolFieldUpdateOperationsInput | boolean
    verifiedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    verifiedBy?: NullableStringFieldUpdateOperationsInput | string | null
    logoUrl?: NullableStringFieldUpdateOperationsInput | string | null
    coverImageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    galleryImages?: NullableJsonNullValueInput | InputJsonValue
    metaTitle?: NullableStringFieldUpdateOperationsInput | string | null
    metaDescription?: NullableStringFieldUpdateOperationsInput | string | null
    socialMedia?: NullableJsonNullValueInput | InputJsonValue
    metrcLicenseId?: NullableStringFieldUpdateOperationsInput | string | null
    metrcLastSync?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    complianceStatus?: EnumComplianceStatusFieldUpdateOperationsInput | $Enums.ComplianceStatus
    trackTraceSystem?: NullableEnumTrackTraceSystemFieldUpdateOperationsInput | $Enums.TrackTraceSystem | null
    totalProducts?: IntFieldUpdateOperationsInput | number
    averageRating?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    totalReviews?: IntFieldUpdateOperationsInput | number
    totalOrders?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type StoreUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    ownerId?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    website?: NullableStringFieldUpdateOperationsInput | string | null
    addressLine1?: StringFieldUpdateOperationsInput | string
    addressLine2?: NullableStringFieldUpdateOperationsInput | string | null
    city?: StringFieldUpdateOperationsInput | string
    state?: StringFieldUpdateOperationsInput | string
    postalCode?: StringFieldUpdateOperationsInput | string
    latitude?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    longitude?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    businessType?: EnumBusinessTypeFieldUpdateOperationsInput | $Enums.BusinessType
    licenseNumber?: StringFieldUpdateOperationsInput | string
    licenseType?: StringFieldUpdateOperationsInput | string
    licenseState?: StringFieldUpdateOperationsInput | string
    licenseExpiresAt?: DateTimeFieldUpdateOperationsInput | Date | string
    features?: NullableJsonNullValueInput | InputJsonValue
    paymentMethods?: NullableJsonNullValueInput | InputJsonValue
    deliveryRadius?: NullableIntFieldUpdateOperationsInput | number | null
    minimumOrder?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    deliveryFee?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    operatingHours?: NullableJsonNullValueInput | InputJsonValue
    status?: EnumStoreStatusFieldUpdateOperationsInput | $Enums.StoreStatus
    verified?: BoolFieldUpdateOperationsInput | boolean
    verifiedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    verifiedBy?: NullableStringFieldUpdateOperationsInput | string | null
    logoUrl?: NullableStringFieldUpdateOperationsInput | string | null
    coverImageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    galleryImages?: NullableJsonNullValueInput | InputJsonValue
    metaTitle?: NullableStringFieldUpdateOperationsInput | string | null
    metaDescription?: NullableStringFieldUpdateOperationsInput | string | null
    socialMedia?: NullableJsonNullValueInput | InputJsonValue
    metrcLicenseId?: NullableStringFieldUpdateOperationsInput | string | null
    metrcLastSync?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    complianceStatus?: EnumComplianceStatusFieldUpdateOperationsInput | $Enums.ComplianceStatus
    trackTraceSystem?: NullableEnumTrackTraceSystemFieldUpdateOperationsInput | $Enums.TrackTraceSystem | null
    totalProducts?: IntFieldUpdateOperationsInput | number
    averageRating?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    totalReviews?: IntFieldUpdateOperationsInput | number
    totalOrders?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type StoreStaffCreateInput = {
    id?: string
    role: string
    permissions?: NullableJsonNullValueInput | InputJsonValue
    employeeId?: string | null
    startDate: Date | string
    endDate?: Date | string | null
    hourlyWage?: Decimal | DecimalJsLike | number | string | null
    commissionRate?: Decimal | DecimalJsLike | number | string | null
    status?: string
    canAccessPos?: boolean
    canManageInventory?: boolean
    canProcessOrders?: boolean
    complianceTrainingCompleted?: boolean
    trainingCompletedAt?: Date | string | null
    trainingExpiresAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    createdBy?: string | null
    store: StoreCreateNestedOneWithoutStaffInput
    user: UserCreateNestedOneWithoutStoreStaffInput
  }

  export type StoreStaffUncheckedCreateInput = {
    id?: string
    storeId: string
    userId: string
    role: string
    permissions?: NullableJsonNullValueInput | InputJsonValue
    employeeId?: string | null
    startDate: Date | string
    endDate?: Date | string | null
    hourlyWage?: Decimal | DecimalJsLike | number | string | null
    commissionRate?: Decimal | DecimalJsLike | number | string | null
    status?: string
    canAccessPos?: boolean
    canManageInventory?: boolean
    canProcessOrders?: boolean
    complianceTrainingCompleted?: boolean
    trainingCompletedAt?: Date | string | null
    trainingExpiresAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    createdBy?: string | null
  }

  export type StoreStaffUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    role?: StringFieldUpdateOperationsInput | string
    permissions?: NullableJsonNullValueInput | InputJsonValue
    employeeId?: NullableStringFieldUpdateOperationsInput | string | null
    startDate?: DateTimeFieldUpdateOperationsInput | Date | string
    endDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    hourlyWage?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    commissionRate?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    status?: StringFieldUpdateOperationsInput | string
    canAccessPos?: BoolFieldUpdateOperationsInput | boolean
    canManageInventory?: BoolFieldUpdateOperationsInput | boolean
    canProcessOrders?: BoolFieldUpdateOperationsInput | boolean
    complianceTrainingCompleted?: BoolFieldUpdateOperationsInput | boolean
    trainingCompletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    trainingExpiresAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    store?: StoreUpdateOneRequiredWithoutStaffNestedInput
    user?: UserUpdateOneRequiredWithoutStoreStaffNestedInput
  }

  export type StoreStaffUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    storeId?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    role?: StringFieldUpdateOperationsInput | string
    permissions?: NullableJsonNullValueInput | InputJsonValue
    employeeId?: NullableStringFieldUpdateOperationsInput | string | null
    startDate?: DateTimeFieldUpdateOperationsInput | Date | string
    endDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    hourlyWage?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    commissionRate?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    status?: StringFieldUpdateOperationsInput | string
    canAccessPos?: BoolFieldUpdateOperationsInput | boolean
    canManageInventory?: BoolFieldUpdateOperationsInput | boolean
    canProcessOrders?: BoolFieldUpdateOperationsInput | boolean
    complianceTrainingCompleted?: BoolFieldUpdateOperationsInput | boolean
    trainingCompletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    trainingExpiresAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type StoreStaffCreateManyInput = {
    id?: string
    storeId: string
    userId: string
    role: string
    permissions?: NullableJsonNullValueInput | InputJsonValue
    employeeId?: string | null
    startDate: Date | string
    endDate?: Date | string | null
    hourlyWage?: Decimal | DecimalJsLike | number | string | null
    commissionRate?: Decimal | DecimalJsLike | number | string | null
    status?: string
    canAccessPos?: boolean
    canManageInventory?: boolean
    canProcessOrders?: boolean
    complianceTrainingCompleted?: boolean
    trainingCompletedAt?: Date | string | null
    trainingExpiresAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    createdBy?: string | null
  }

  export type StoreStaffUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    role?: StringFieldUpdateOperationsInput | string
    permissions?: NullableJsonNullValueInput | InputJsonValue
    employeeId?: NullableStringFieldUpdateOperationsInput | string | null
    startDate?: DateTimeFieldUpdateOperationsInput | Date | string
    endDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    hourlyWage?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    commissionRate?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    status?: StringFieldUpdateOperationsInput | string
    canAccessPos?: BoolFieldUpdateOperationsInput | boolean
    canManageInventory?: BoolFieldUpdateOperationsInput | boolean
    canProcessOrders?: BoolFieldUpdateOperationsInput | boolean
    complianceTrainingCompleted?: BoolFieldUpdateOperationsInput | boolean
    trainingCompletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    trainingExpiresAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type StoreStaffUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    storeId?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    role?: StringFieldUpdateOperationsInput | string
    permissions?: NullableJsonNullValueInput | InputJsonValue
    employeeId?: NullableStringFieldUpdateOperationsInput | string | null
    startDate?: DateTimeFieldUpdateOperationsInput | Date | string
    endDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    hourlyWage?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    commissionRate?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    status?: StringFieldUpdateOperationsInput | string
    canAccessPos?: BoolFieldUpdateOperationsInput | boolean
    canManageInventory?: BoolFieldUpdateOperationsInput | boolean
    canProcessOrders?: BoolFieldUpdateOperationsInput | boolean
    complianceTrainingCompleted?: BoolFieldUpdateOperationsInput | boolean
    trainingCompletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    trainingExpiresAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type ProductCategoryCreateInput = {
    id?: string
    name: string
    slug: string
    description?: string | null
    iconName?: string | null
    colorHex?: string | null
    sortOrder?: number
    productType: $Enums.ProductType
    thcCategory?: string | null
    consumptionMethod?: string | null
    metaTitle?: string | null
    metaDescription?: string | null
    isActive?: boolean
    requiresCompliance?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    parent?: ProductCategoryCreateNestedOneWithoutChildrenInput
    children?: ProductCategoryCreateNestedManyWithoutParentInput
    products?: ProductCreateNestedManyWithoutCategoryInput
  }

  export type ProductCategoryUncheckedCreateInput = {
    id?: string
    parentId?: string | null
    name: string
    slug: string
    description?: string | null
    iconName?: string | null
    colorHex?: string | null
    sortOrder?: number
    productType: $Enums.ProductType
    thcCategory?: string | null
    consumptionMethod?: string | null
    metaTitle?: string | null
    metaDescription?: string | null
    isActive?: boolean
    requiresCompliance?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    children?: ProductCategoryUncheckedCreateNestedManyWithoutParentInput
    products?: ProductUncheckedCreateNestedManyWithoutCategoryInput
  }

  export type ProductCategoryUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    iconName?: NullableStringFieldUpdateOperationsInput | string | null
    colorHex?: NullableStringFieldUpdateOperationsInput | string | null
    sortOrder?: IntFieldUpdateOperationsInput | number
    productType?: EnumProductTypeFieldUpdateOperationsInput | $Enums.ProductType
    thcCategory?: NullableStringFieldUpdateOperationsInput | string | null
    consumptionMethod?: NullableStringFieldUpdateOperationsInput | string | null
    metaTitle?: NullableStringFieldUpdateOperationsInput | string | null
    metaDescription?: NullableStringFieldUpdateOperationsInput | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    requiresCompliance?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    parent?: ProductCategoryUpdateOneWithoutChildrenNestedInput
    children?: ProductCategoryUpdateManyWithoutParentNestedInput
    products?: ProductUpdateManyWithoutCategoryNestedInput
  }

  export type ProductCategoryUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    parentId?: NullableStringFieldUpdateOperationsInput | string | null
    name?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    iconName?: NullableStringFieldUpdateOperationsInput | string | null
    colorHex?: NullableStringFieldUpdateOperationsInput | string | null
    sortOrder?: IntFieldUpdateOperationsInput | number
    productType?: EnumProductTypeFieldUpdateOperationsInput | $Enums.ProductType
    thcCategory?: NullableStringFieldUpdateOperationsInput | string | null
    consumptionMethod?: NullableStringFieldUpdateOperationsInput | string | null
    metaTitle?: NullableStringFieldUpdateOperationsInput | string | null
    metaDescription?: NullableStringFieldUpdateOperationsInput | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    requiresCompliance?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    children?: ProductCategoryUncheckedUpdateManyWithoutParentNestedInput
    products?: ProductUncheckedUpdateManyWithoutCategoryNestedInput
  }

  export type ProductCategoryCreateManyInput = {
    id?: string
    parentId?: string | null
    name: string
    slug: string
    description?: string | null
    iconName?: string | null
    colorHex?: string | null
    sortOrder?: number
    productType: $Enums.ProductType
    thcCategory?: string | null
    consumptionMethod?: string | null
    metaTitle?: string | null
    metaDescription?: string | null
    isActive?: boolean
    requiresCompliance?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type ProductCategoryUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    iconName?: NullableStringFieldUpdateOperationsInput | string | null
    colorHex?: NullableStringFieldUpdateOperationsInput | string | null
    sortOrder?: IntFieldUpdateOperationsInput | number
    productType?: EnumProductTypeFieldUpdateOperationsInput | $Enums.ProductType
    thcCategory?: NullableStringFieldUpdateOperationsInput | string | null
    consumptionMethod?: NullableStringFieldUpdateOperationsInput | string | null
    metaTitle?: NullableStringFieldUpdateOperationsInput | string | null
    metaDescription?: NullableStringFieldUpdateOperationsInput | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    requiresCompliance?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ProductCategoryUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    parentId?: NullableStringFieldUpdateOperationsInput | string | null
    name?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    iconName?: NullableStringFieldUpdateOperationsInput | string | null
    colorHex?: NullableStringFieldUpdateOperationsInput | string | null
    sortOrder?: IntFieldUpdateOperationsInput | number
    productType?: EnumProductTypeFieldUpdateOperationsInput | $Enums.ProductType
    thcCategory?: NullableStringFieldUpdateOperationsInput | string | null
    consumptionMethod?: NullableStringFieldUpdateOperationsInput | string | null
    metaTitle?: NullableStringFieldUpdateOperationsInput | string | null
    metaDescription?: NullableStringFieldUpdateOperationsInput | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    requiresCompliance?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ProductCreateInput = {
    id?: string
    name: string
    slug: string
    description?: string | null
    shortDescription?: string | null
    strainName?: string | null
    strainType?: $Enums.StrainType | null
    brand?: string | null
    manufacturer?: string | null
    thcPercentage?: Decimal | DecimalJsLike | number | string | null
    cbdPercentage?: Decimal | DecimalJsLike | number | string | null
    thcaPercentage?: Decimal | DecimalJsLike | number | string | null
    cbdaPercentage?: Decimal | DecimalJsLike | number | string | null
    totalCannabinoids?: Decimal | DecimalJsLike | number | string | null
    basePrice: Decimal | DecimalJsLike | number | string
    salePrice?: Decimal | DecimalJsLike | number | string | null
    costPrice?: Decimal | DecimalJsLike | number | string | null
    weightGrams?: Decimal | DecimalJsLike | number | string | null
    sku: string
    barcode?: string | null
    stockQuantity?: number
    reservedQuantity?: number
    lowStockThreshold?: number
    metrcId?: string | null
    batchNumber?: string | null
    harvestDate?: Date | string | null
    packageDate?: Date | string | null
    expirationDate?: Date | string | null
    labTested?: boolean
    labTestResults?: NullableJsonNullValueInput | InputJsonValue
    testedDate?: Date | string | null
    testingLab?: string | null
    featuredImageUrl?: string | null
    galleryImages?: NullableJsonNullValueInput | InputJsonValue
    status?: $Enums.ProductStatus
    isFeatured?: boolean
    isMedicalOnly?: boolean
    ageRestriction?: number
    metaTitle?: string | null
    metaDescription?: string | null
    tags?: NullableJsonNullValueInput | InputJsonValue
    searchKeywords?: string | null
    viewCount?: number
    averageRating?: Decimal | DecimalJsLike | number | string
    reviewCount?: number
    salesCount?: number
    createdAt?: Date | string
    updatedAt?: Date | string
    createdBy?: string | null
    updatedBy?: string | null
    store: StoreCreateNestedOneWithoutProductsInput
    category: ProductCategoryCreateNestedOneWithoutProductsInput
    reviews?: ReviewCreateNestedManyWithoutProductInput
    orderItems?: OrderItemCreateNestedManyWithoutProductInput
  }

  export type ProductUncheckedCreateInput = {
    id?: string
    storeId: string
    categoryId: string
    name: string
    slug: string
    description?: string | null
    shortDescription?: string | null
    strainName?: string | null
    strainType?: $Enums.StrainType | null
    brand?: string | null
    manufacturer?: string | null
    thcPercentage?: Decimal | DecimalJsLike | number | string | null
    cbdPercentage?: Decimal | DecimalJsLike | number | string | null
    thcaPercentage?: Decimal | DecimalJsLike | number | string | null
    cbdaPercentage?: Decimal | DecimalJsLike | number | string | null
    totalCannabinoids?: Decimal | DecimalJsLike | number | string | null
    basePrice: Decimal | DecimalJsLike | number | string
    salePrice?: Decimal | DecimalJsLike | number | string | null
    costPrice?: Decimal | DecimalJsLike | number | string | null
    weightGrams?: Decimal | DecimalJsLike | number | string | null
    sku: string
    barcode?: string | null
    stockQuantity?: number
    reservedQuantity?: number
    lowStockThreshold?: number
    metrcId?: string | null
    batchNumber?: string | null
    harvestDate?: Date | string | null
    packageDate?: Date | string | null
    expirationDate?: Date | string | null
    labTested?: boolean
    labTestResults?: NullableJsonNullValueInput | InputJsonValue
    testedDate?: Date | string | null
    testingLab?: string | null
    featuredImageUrl?: string | null
    galleryImages?: NullableJsonNullValueInput | InputJsonValue
    status?: $Enums.ProductStatus
    isFeatured?: boolean
    isMedicalOnly?: boolean
    ageRestriction?: number
    metaTitle?: string | null
    metaDescription?: string | null
    tags?: NullableJsonNullValueInput | InputJsonValue
    searchKeywords?: string | null
    viewCount?: number
    averageRating?: Decimal | DecimalJsLike | number | string
    reviewCount?: number
    salesCount?: number
    createdAt?: Date | string
    updatedAt?: Date | string
    createdBy?: string | null
    updatedBy?: string | null
    reviews?: ReviewUncheckedCreateNestedManyWithoutProductInput
    orderItems?: OrderItemUncheckedCreateNestedManyWithoutProductInput
  }

  export type ProductUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    shortDescription?: NullableStringFieldUpdateOperationsInput | string | null
    strainName?: NullableStringFieldUpdateOperationsInput | string | null
    strainType?: NullableEnumStrainTypeFieldUpdateOperationsInput | $Enums.StrainType | null
    brand?: NullableStringFieldUpdateOperationsInput | string | null
    manufacturer?: NullableStringFieldUpdateOperationsInput | string | null
    thcPercentage?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    cbdPercentage?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    thcaPercentage?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    cbdaPercentage?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    totalCannabinoids?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    basePrice?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    salePrice?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    costPrice?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    weightGrams?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    sku?: StringFieldUpdateOperationsInput | string
    barcode?: NullableStringFieldUpdateOperationsInput | string | null
    stockQuantity?: IntFieldUpdateOperationsInput | number
    reservedQuantity?: IntFieldUpdateOperationsInput | number
    lowStockThreshold?: IntFieldUpdateOperationsInput | number
    metrcId?: NullableStringFieldUpdateOperationsInput | string | null
    batchNumber?: NullableStringFieldUpdateOperationsInput | string | null
    harvestDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    packageDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    expirationDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    labTested?: BoolFieldUpdateOperationsInput | boolean
    labTestResults?: NullableJsonNullValueInput | InputJsonValue
    testedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    testingLab?: NullableStringFieldUpdateOperationsInput | string | null
    featuredImageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    galleryImages?: NullableJsonNullValueInput | InputJsonValue
    status?: EnumProductStatusFieldUpdateOperationsInput | $Enums.ProductStatus
    isFeatured?: BoolFieldUpdateOperationsInput | boolean
    isMedicalOnly?: BoolFieldUpdateOperationsInput | boolean
    ageRestriction?: IntFieldUpdateOperationsInput | number
    metaTitle?: NullableStringFieldUpdateOperationsInput | string | null
    metaDescription?: NullableStringFieldUpdateOperationsInput | string | null
    tags?: NullableJsonNullValueInput | InputJsonValue
    searchKeywords?: NullableStringFieldUpdateOperationsInput | string | null
    viewCount?: IntFieldUpdateOperationsInput | number
    averageRating?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    reviewCount?: IntFieldUpdateOperationsInput | number
    salesCount?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    store?: StoreUpdateOneRequiredWithoutProductsNestedInput
    category?: ProductCategoryUpdateOneRequiredWithoutProductsNestedInput
    reviews?: ReviewUpdateManyWithoutProductNestedInput
    orderItems?: OrderItemUpdateManyWithoutProductNestedInput
  }

  export type ProductUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    storeId?: StringFieldUpdateOperationsInput | string
    categoryId?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    shortDescription?: NullableStringFieldUpdateOperationsInput | string | null
    strainName?: NullableStringFieldUpdateOperationsInput | string | null
    strainType?: NullableEnumStrainTypeFieldUpdateOperationsInput | $Enums.StrainType | null
    brand?: NullableStringFieldUpdateOperationsInput | string | null
    manufacturer?: NullableStringFieldUpdateOperationsInput | string | null
    thcPercentage?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    cbdPercentage?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    thcaPercentage?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    cbdaPercentage?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    totalCannabinoids?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    basePrice?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    salePrice?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    costPrice?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    weightGrams?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    sku?: StringFieldUpdateOperationsInput | string
    barcode?: NullableStringFieldUpdateOperationsInput | string | null
    stockQuantity?: IntFieldUpdateOperationsInput | number
    reservedQuantity?: IntFieldUpdateOperationsInput | number
    lowStockThreshold?: IntFieldUpdateOperationsInput | number
    metrcId?: NullableStringFieldUpdateOperationsInput | string | null
    batchNumber?: NullableStringFieldUpdateOperationsInput | string | null
    harvestDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    packageDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    expirationDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    labTested?: BoolFieldUpdateOperationsInput | boolean
    labTestResults?: NullableJsonNullValueInput | InputJsonValue
    testedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    testingLab?: NullableStringFieldUpdateOperationsInput | string | null
    featuredImageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    galleryImages?: NullableJsonNullValueInput | InputJsonValue
    status?: EnumProductStatusFieldUpdateOperationsInput | $Enums.ProductStatus
    isFeatured?: BoolFieldUpdateOperationsInput | boolean
    isMedicalOnly?: BoolFieldUpdateOperationsInput | boolean
    ageRestriction?: IntFieldUpdateOperationsInput | number
    metaTitle?: NullableStringFieldUpdateOperationsInput | string | null
    metaDescription?: NullableStringFieldUpdateOperationsInput | string | null
    tags?: NullableJsonNullValueInput | InputJsonValue
    searchKeywords?: NullableStringFieldUpdateOperationsInput | string | null
    viewCount?: IntFieldUpdateOperationsInput | number
    averageRating?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    reviewCount?: IntFieldUpdateOperationsInput | number
    salesCount?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    reviews?: ReviewUncheckedUpdateManyWithoutProductNestedInput
    orderItems?: OrderItemUncheckedUpdateManyWithoutProductNestedInput
  }

  export type ProductCreateManyInput = {
    id?: string
    storeId: string
    categoryId: string
    name: string
    slug: string
    description?: string | null
    shortDescription?: string | null
    strainName?: string | null
    strainType?: $Enums.StrainType | null
    brand?: string | null
    manufacturer?: string | null
    thcPercentage?: Decimal | DecimalJsLike | number | string | null
    cbdPercentage?: Decimal | DecimalJsLike | number | string | null
    thcaPercentage?: Decimal | DecimalJsLike | number | string | null
    cbdaPercentage?: Decimal | DecimalJsLike | number | string | null
    totalCannabinoids?: Decimal | DecimalJsLike | number | string | null
    basePrice: Decimal | DecimalJsLike | number | string
    salePrice?: Decimal | DecimalJsLike | number | string | null
    costPrice?: Decimal | DecimalJsLike | number | string | null
    weightGrams?: Decimal | DecimalJsLike | number | string | null
    sku: string
    barcode?: string | null
    stockQuantity?: number
    reservedQuantity?: number
    lowStockThreshold?: number
    metrcId?: string | null
    batchNumber?: string | null
    harvestDate?: Date | string | null
    packageDate?: Date | string | null
    expirationDate?: Date | string | null
    labTested?: boolean
    labTestResults?: NullableJsonNullValueInput | InputJsonValue
    testedDate?: Date | string | null
    testingLab?: string | null
    featuredImageUrl?: string | null
    galleryImages?: NullableJsonNullValueInput | InputJsonValue
    status?: $Enums.ProductStatus
    isFeatured?: boolean
    isMedicalOnly?: boolean
    ageRestriction?: number
    metaTitle?: string | null
    metaDescription?: string | null
    tags?: NullableJsonNullValueInput | InputJsonValue
    searchKeywords?: string | null
    viewCount?: number
    averageRating?: Decimal | DecimalJsLike | number | string
    reviewCount?: number
    salesCount?: number
    createdAt?: Date | string
    updatedAt?: Date | string
    createdBy?: string | null
    updatedBy?: string | null
  }

  export type ProductUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    shortDescription?: NullableStringFieldUpdateOperationsInput | string | null
    strainName?: NullableStringFieldUpdateOperationsInput | string | null
    strainType?: NullableEnumStrainTypeFieldUpdateOperationsInput | $Enums.StrainType | null
    brand?: NullableStringFieldUpdateOperationsInput | string | null
    manufacturer?: NullableStringFieldUpdateOperationsInput | string | null
    thcPercentage?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    cbdPercentage?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    thcaPercentage?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    cbdaPercentage?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    totalCannabinoids?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    basePrice?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    salePrice?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    costPrice?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    weightGrams?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    sku?: StringFieldUpdateOperationsInput | string
    barcode?: NullableStringFieldUpdateOperationsInput | string | null
    stockQuantity?: IntFieldUpdateOperationsInput | number
    reservedQuantity?: IntFieldUpdateOperationsInput | number
    lowStockThreshold?: IntFieldUpdateOperationsInput | number
    metrcId?: NullableStringFieldUpdateOperationsInput | string | null
    batchNumber?: NullableStringFieldUpdateOperationsInput | string | null
    harvestDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    packageDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    expirationDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    labTested?: BoolFieldUpdateOperationsInput | boolean
    labTestResults?: NullableJsonNullValueInput | InputJsonValue
    testedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    testingLab?: NullableStringFieldUpdateOperationsInput | string | null
    featuredImageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    galleryImages?: NullableJsonNullValueInput | InputJsonValue
    status?: EnumProductStatusFieldUpdateOperationsInput | $Enums.ProductStatus
    isFeatured?: BoolFieldUpdateOperationsInput | boolean
    isMedicalOnly?: BoolFieldUpdateOperationsInput | boolean
    ageRestriction?: IntFieldUpdateOperationsInput | number
    metaTitle?: NullableStringFieldUpdateOperationsInput | string | null
    metaDescription?: NullableStringFieldUpdateOperationsInput | string | null
    tags?: NullableJsonNullValueInput | InputJsonValue
    searchKeywords?: NullableStringFieldUpdateOperationsInput | string | null
    viewCount?: IntFieldUpdateOperationsInput | number
    averageRating?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    reviewCount?: IntFieldUpdateOperationsInput | number
    salesCount?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type ProductUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    storeId?: StringFieldUpdateOperationsInput | string
    categoryId?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    shortDescription?: NullableStringFieldUpdateOperationsInput | string | null
    strainName?: NullableStringFieldUpdateOperationsInput | string | null
    strainType?: NullableEnumStrainTypeFieldUpdateOperationsInput | $Enums.StrainType | null
    brand?: NullableStringFieldUpdateOperationsInput | string | null
    manufacturer?: NullableStringFieldUpdateOperationsInput | string | null
    thcPercentage?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    cbdPercentage?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    thcaPercentage?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    cbdaPercentage?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    totalCannabinoids?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    basePrice?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    salePrice?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    costPrice?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    weightGrams?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    sku?: StringFieldUpdateOperationsInput | string
    barcode?: NullableStringFieldUpdateOperationsInput | string | null
    stockQuantity?: IntFieldUpdateOperationsInput | number
    reservedQuantity?: IntFieldUpdateOperationsInput | number
    lowStockThreshold?: IntFieldUpdateOperationsInput | number
    metrcId?: NullableStringFieldUpdateOperationsInput | string | null
    batchNumber?: NullableStringFieldUpdateOperationsInput | string | null
    harvestDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    packageDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    expirationDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    labTested?: BoolFieldUpdateOperationsInput | boolean
    labTestResults?: NullableJsonNullValueInput | InputJsonValue
    testedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    testingLab?: NullableStringFieldUpdateOperationsInput | string | null
    featuredImageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    galleryImages?: NullableJsonNullValueInput | InputJsonValue
    status?: EnumProductStatusFieldUpdateOperationsInput | $Enums.ProductStatus
    isFeatured?: BoolFieldUpdateOperationsInput | boolean
    isMedicalOnly?: BoolFieldUpdateOperationsInput | boolean
    ageRestriction?: IntFieldUpdateOperationsInput | number
    metaTitle?: NullableStringFieldUpdateOperationsInput | string | null
    metaDescription?: NullableStringFieldUpdateOperationsInput | string | null
    tags?: NullableJsonNullValueInput | InputJsonValue
    searchKeywords?: NullableStringFieldUpdateOperationsInput | string | null
    viewCount?: IntFieldUpdateOperationsInput | number
    averageRating?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    reviewCount?: IntFieldUpdateOperationsInput | number
    salesCount?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type OrderCreateInput = {
    id?: string
    orderNumber: string
    orderType: $Enums.OrderType
    fulfillmentStatus?: $Enums.OrderStatus
    deliveryAddress?: NullableJsonNullValueInput | InputJsonValue
    deliveryInstructions?: string | null
    deliveryTimeRequested?: Date | string | null
    deliveryTimeActual?: Date | string | null
    deliveryPersonId?: string | null
    subtotal: Decimal | DecimalJsLike | number | string
    taxAmount?: Decimal | DecimalJsLike | number | string
    deliveryFee?: Decimal | DecimalJsLike | number | string
    serviceFee?: Decimal | DecimalJsLike | number | string
    discountAmount?: Decimal | DecimalJsLike | number | string
    tipAmount?: Decimal | DecimalJsLike | number | string
    totalAmount: Decimal | DecimalJsLike | number | string
    paymentStatus?: $Enums.PaymentStatus
    paymentMethod: $Enums.PaymentMethod
    paymentProvider?: string | null
    paymentIntentId?: string | null
    ageVerifiedAtDelivery?: Date | string | null
    idCheckedBy?: string | null
    customerNotes?: string | null
    internalNotes?: string | null
    metrcTransferManifest?: string | null
    complianceCheckPassed?: boolean
    complianceCheckedAt?: Date | string | null
    complianceCheckedBy?: string | null
    cancelledAt?: Date | string | null
    cancelledBy?: string | null
    cancellationReason?: string | null
    refundAmount?: Decimal | DecimalJsLike | number | string
    createdAt?: Date | string
    updatedAt?: Date | string
    user: UserCreateNestedOneWithoutOrdersInput
    store: StoreCreateNestedOneWithoutOrdersInput
    items?: OrderItemCreateNestedManyWithoutOrderInput
    reviews?: ReviewCreateNestedManyWithoutOrderInput
  }

  export type OrderUncheckedCreateInput = {
    id?: string
    orderNumber: string
    userId: string
    storeId: string
    orderType: $Enums.OrderType
    fulfillmentStatus?: $Enums.OrderStatus
    deliveryAddress?: NullableJsonNullValueInput | InputJsonValue
    deliveryInstructions?: string | null
    deliveryTimeRequested?: Date | string | null
    deliveryTimeActual?: Date | string | null
    deliveryPersonId?: string | null
    subtotal: Decimal | DecimalJsLike | number | string
    taxAmount?: Decimal | DecimalJsLike | number | string
    deliveryFee?: Decimal | DecimalJsLike | number | string
    serviceFee?: Decimal | DecimalJsLike | number | string
    discountAmount?: Decimal | DecimalJsLike | number | string
    tipAmount?: Decimal | DecimalJsLike | number | string
    totalAmount: Decimal | DecimalJsLike | number | string
    paymentStatus?: $Enums.PaymentStatus
    paymentMethod: $Enums.PaymentMethod
    paymentProvider?: string | null
    paymentIntentId?: string | null
    ageVerifiedAtDelivery?: Date | string | null
    idCheckedBy?: string | null
    customerNotes?: string | null
    internalNotes?: string | null
    metrcTransferManifest?: string | null
    complianceCheckPassed?: boolean
    complianceCheckedAt?: Date | string | null
    complianceCheckedBy?: string | null
    cancelledAt?: Date | string | null
    cancelledBy?: string | null
    cancellationReason?: string | null
    refundAmount?: Decimal | DecimalJsLike | number | string
    createdAt?: Date | string
    updatedAt?: Date | string
    items?: OrderItemUncheckedCreateNestedManyWithoutOrderInput
    reviews?: ReviewUncheckedCreateNestedManyWithoutOrderInput
  }

  export type OrderUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    orderNumber?: StringFieldUpdateOperationsInput | string
    orderType?: EnumOrderTypeFieldUpdateOperationsInput | $Enums.OrderType
    fulfillmentStatus?: EnumOrderStatusFieldUpdateOperationsInput | $Enums.OrderStatus
    deliveryAddress?: NullableJsonNullValueInput | InputJsonValue
    deliveryInstructions?: NullableStringFieldUpdateOperationsInput | string | null
    deliveryTimeRequested?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deliveryTimeActual?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deliveryPersonId?: NullableStringFieldUpdateOperationsInput | string | null
    subtotal?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    taxAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    deliveryFee?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    serviceFee?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    discountAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    tipAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    totalAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    paymentStatus?: EnumPaymentStatusFieldUpdateOperationsInput | $Enums.PaymentStatus
    paymentMethod?: EnumPaymentMethodFieldUpdateOperationsInput | $Enums.PaymentMethod
    paymentProvider?: NullableStringFieldUpdateOperationsInput | string | null
    paymentIntentId?: NullableStringFieldUpdateOperationsInput | string | null
    ageVerifiedAtDelivery?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    idCheckedBy?: NullableStringFieldUpdateOperationsInput | string | null
    customerNotes?: NullableStringFieldUpdateOperationsInput | string | null
    internalNotes?: NullableStringFieldUpdateOperationsInput | string | null
    metrcTransferManifest?: NullableStringFieldUpdateOperationsInput | string | null
    complianceCheckPassed?: BoolFieldUpdateOperationsInput | boolean
    complianceCheckedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    complianceCheckedBy?: NullableStringFieldUpdateOperationsInput | string | null
    cancelledAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    cancelledBy?: NullableStringFieldUpdateOperationsInput | string | null
    cancellationReason?: NullableStringFieldUpdateOperationsInput | string | null
    refundAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    user?: UserUpdateOneRequiredWithoutOrdersNestedInput
    store?: StoreUpdateOneRequiredWithoutOrdersNestedInput
    items?: OrderItemUpdateManyWithoutOrderNestedInput
    reviews?: ReviewUpdateManyWithoutOrderNestedInput
  }

  export type OrderUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    orderNumber?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    storeId?: StringFieldUpdateOperationsInput | string
    orderType?: EnumOrderTypeFieldUpdateOperationsInput | $Enums.OrderType
    fulfillmentStatus?: EnumOrderStatusFieldUpdateOperationsInput | $Enums.OrderStatus
    deliveryAddress?: NullableJsonNullValueInput | InputJsonValue
    deliveryInstructions?: NullableStringFieldUpdateOperationsInput | string | null
    deliveryTimeRequested?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deliveryTimeActual?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deliveryPersonId?: NullableStringFieldUpdateOperationsInput | string | null
    subtotal?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    taxAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    deliveryFee?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    serviceFee?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    discountAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    tipAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    totalAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    paymentStatus?: EnumPaymentStatusFieldUpdateOperationsInput | $Enums.PaymentStatus
    paymentMethod?: EnumPaymentMethodFieldUpdateOperationsInput | $Enums.PaymentMethod
    paymentProvider?: NullableStringFieldUpdateOperationsInput | string | null
    paymentIntentId?: NullableStringFieldUpdateOperationsInput | string | null
    ageVerifiedAtDelivery?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    idCheckedBy?: NullableStringFieldUpdateOperationsInput | string | null
    customerNotes?: NullableStringFieldUpdateOperationsInput | string | null
    internalNotes?: NullableStringFieldUpdateOperationsInput | string | null
    metrcTransferManifest?: NullableStringFieldUpdateOperationsInput | string | null
    complianceCheckPassed?: BoolFieldUpdateOperationsInput | boolean
    complianceCheckedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    complianceCheckedBy?: NullableStringFieldUpdateOperationsInput | string | null
    cancelledAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    cancelledBy?: NullableStringFieldUpdateOperationsInput | string | null
    cancellationReason?: NullableStringFieldUpdateOperationsInput | string | null
    refundAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    items?: OrderItemUncheckedUpdateManyWithoutOrderNestedInput
    reviews?: ReviewUncheckedUpdateManyWithoutOrderNestedInput
  }

  export type OrderCreateManyInput = {
    id?: string
    orderNumber: string
    userId: string
    storeId: string
    orderType: $Enums.OrderType
    fulfillmentStatus?: $Enums.OrderStatus
    deliveryAddress?: NullableJsonNullValueInput | InputJsonValue
    deliveryInstructions?: string | null
    deliveryTimeRequested?: Date | string | null
    deliveryTimeActual?: Date | string | null
    deliveryPersonId?: string | null
    subtotal: Decimal | DecimalJsLike | number | string
    taxAmount?: Decimal | DecimalJsLike | number | string
    deliveryFee?: Decimal | DecimalJsLike | number | string
    serviceFee?: Decimal | DecimalJsLike | number | string
    discountAmount?: Decimal | DecimalJsLike | number | string
    tipAmount?: Decimal | DecimalJsLike | number | string
    totalAmount: Decimal | DecimalJsLike | number | string
    paymentStatus?: $Enums.PaymentStatus
    paymentMethod: $Enums.PaymentMethod
    paymentProvider?: string | null
    paymentIntentId?: string | null
    ageVerifiedAtDelivery?: Date | string | null
    idCheckedBy?: string | null
    customerNotes?: string | null
    internalNotes?: string | null
    metrcTransferManifest?: string | null
    complianceCheckPassed?: boolean
    complianceCheckedAt?: Date | string | null
    complianceCheckedBy?: string | null
    cancelledAt?: Date | string | null
    cancelledBy?: string | null
    cancellationReason?: string | null
    refundAmount?: Decimal | DecimalJsLike | number | string
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type OrderUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    orderNumber?: StringFieldUpdateOperationsInput | string
    orderType?: EnumOrderTypeFieldUpdateOperationsInput | $Enums.OrderType
    fulfillmentStatus?: EnumOrderStatusFieldUpdateOperationsInput | $Enums.OrderStatus
    deliveryAddress?: NullableJsonNullValueInput | InputJsonValue
    deliveryInstructions?: NullableStringFieldUpdateOperationsInput | string | null
    deliveryTimeRequested?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deliveryTimeActual?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deliveryPersonId?: NullableStringFieldUpdateOperationsInput | string | null
    subtotal?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    taxAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    deliveryFee?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    serviceFee?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    discountAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    tipAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    totalAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    paymentStatus?: EnumPaymentStatusFieldUpdateOperationsInput | $Enums.PaymentStatus
    paymentMethod?: EnumPaymentMethodFieldUpdateOperationsInput | $Enums.PaymentMethod
    paymentProvider?: NullableStringFieldUpdateOperationsInput | string | null
    paymentIntentId?: NullableStringFieldUpdateOperationsInput | string | null
    ageVerifiedAtDelivery?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    idCheckedBy?: NullableStringFieldUpdateOperationsInput | string | null
    customerNotes?: NullableStringFieldUpdateOperationsInput | string | null
    internalNotes?: NullableStringFieldUpdateOperationsInput | string | null
    metrcTransferManifest?: NullableStringFieldUpdateOperationsInput | string | null
    complianceCheckPassed?: BoolFieldUpdateOperationsInput | boolean
    complianceCheckedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    complianceCheckedBy?: NullableStringFieldUpdateOperationsInput | string | null
    cancelledAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    cancelledBy?: NullableStringFieldUpdateOperationsInput | string | null
    cancellationReason?: NullableStringFieldUpdateOperationsInput | string | null
    refundAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type OrderUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    orderNumber?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    storeId?: StringFieldUpdateOperationsInput | string
    orderType?: EnumOrderTypeFieldUpdateOperationsInput | $Enums.OrderType
    fulfillmentStatus?: EnumOrderStatusFieldUpdateOperationsInput | $Enums.OrderStatus
    deliveryAddress?: NullableJsonNullValueInput | InputJsonValue
    deliveryInstructions?: NullableStringFieldUpdateOperationsInput | string | null
    deliveryTimeRequested?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deliveryTimeActual?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deliveryPersonId?: NullableStringFieldUpdateOperationsInput | string | null
    subtotal?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    taxAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    deliveryFee?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    serviceFee?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    discountAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    tipAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    totalAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    paymentStatus?: EnumPaymentStatusFieldUpdateOperationsInput | $Enums.PaymentStatus
    paymentMethod?: EnumPaymentMethodFieldUpdateOperationsInput | $Enums.PaymentMethod
    paymentProvider?: NullableStringFieldUpdateOperationsInput | string | null
    paymentIntentId?: NullableStringFieldUpdateOperationsInput | string | null
    ageVerifiedAtDelivery?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    idCheckedBy?: NullableStringFieldUpdateOperationsInput | string | null
    customerNotes?: NullableStringFieldUpdateOperationsInput | string | null
    internalNotes?: NullableStringFieldUpdateOperationsInput | string | null
    metrcTransferManifest?: NullableStringFieldUpdateOperationsInput | string | null
    complianceCheckPassed?: BoolFieldUpdateOperationsInput | boolean
    complianceCheckedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    complianceCheckedBy?: NullableStringFieldUpdateOperationsInput | string | null
    cancelledAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    cancelledBy?: NullableStringFieldUpdateOperationsInput | string | null
    cancellationReason?: NullableStringFieldUpdateOperationsInput | string | null
    refundAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type OrderItemCreateInput = {
    id?: string
    quantity: number
    unitPrice: Decimal | DecimalJsLike | number | string
    totalPrice: Decimal | DecimalJsLike | number | string
    productName: string
    productSku?: string | null
    productBrand?: string | null
    thcPercentage?: Decimal | DecimalJsLike | number | string | null
    cbdPercentage?: Decimal | DecimalJsLike | number | string | null
    weightGrams?: Decimal | DecimalJsLike | number | string | null
    metrcPackageId?: string | null
    batchNumber?: string | null
    customerNotes?: string | null
    createdAt?: Date | string
    order: OrderCreateNestedOneWithoutItemsInput
    product: ProductCreateNestedOneWithoutOrderItemsInput
  }

  export type OrderItemUncheckedCreateInput = {
    id?: string
    orderId: string
    productId: string
    quantity: number
    unitPrice: Decimal | DecimalJsLike | number | string
    totalPrice: Decimal | DecimalJsLike | number | string
    productName: string
    productSku?: string | null
    productBrand?: string | null
    thcPercentage?: Decimal | DecimalJsLike | number | string | null
    cbdPercentage?: Decimal | DecimalJsLike | number | string | null
    weightGrams?: Decimal | DecimalJsLike | number | string | null
    metrcPackageId?: string | null
    batchNumber?: string | null
    customerNotes?: string | null
    createdAt?: Date | string
  }

  export type OrderItemUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    quantity?: IntFieldUpdateOperationsInput | number
    unitPrice?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    totalPrice?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    productName?: StringFieldUpdateOperationsInput | string
    productSku?: NullableStringFieldUpdateOperationsInput | string | null
    productBrand?: NullableStringFieldUpdateOperationsInput | string | null
    thcPercentage?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    cbdPercentage?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    weightGrams?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    metrcPackageId?: NullableStringFieldUpdateOperationsInput | string | null
    batchNumber?: NullableStringFieldUpdateOperationsInput | string | null
    customerNotes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    order?: OrderUpdateOneRequiredWithoutItemsNestedInput
    product?: ProductUpdateOneRequiredWithoutOrderItemsNestedInput
  }

  export type OrderItemUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    orderId?: StringFieldUpdateOperationsInput | string
    productId?: StringFieldUpdateOperationsInput | string
    quantity?: IntFieldUpdateOperationsInput | number
    unitPrice?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    totalPrice?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    productName?: StringFieldUpdateOperationsInput | string
    productSku?: NullableStringFieldUpdateOperationsInput | string | null
    productBrand?: NullableStringFieldUpdateOperationsInput | string | null
    thcPercentage?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    cbdPercentage?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    weightGrams?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    metrcPackageId?: NullableStringFieldUpdateOperationsInput | string | null
    batchNumber?: NullableStringFieldUpdateOperationsInput | string | null
    customerNotes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type OrderItemCreateManyInput = {
    id?: string
    orderId: string
    productId: string
    quantity: number
    unitPrice: Decimal | DecimalJsLike | number | string
    totalPrice: Decimal | DecimalJsLike | number | string
    productName: string
    productSku?: string | null
    productBrand?: string | null
    thcPercentage?: Decimal | DecimalJsLike | number | string | null
    cbdPercentage?: Decimal | DecimalJsLike | number | string | null
    weightGrams?: Decimal | DecimalJsLike | number | string | null
    metrcPackageId?: string | null
    batchNumber?: string | null
    customerNotes?: string | null
    createdAt?: Date | string
  }

  export type OrderItemUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    quantity?: IntFieldUpdateOperationsInput | number
    unitPrice?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    totalPrice?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    productName?: StringFieldUpdateOperationsInput | string
    productSku?: NullableStringFieldUpdateOperationsInput | string | null
    productBrand?: NullableStringFieldUpdateOperationsInput | string | null
    thcPercentage?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    cbdPercentage?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    weightGrams?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    metrcPackageId?: NullableStringFieldUpdateOperationsInput | string | null
    batchNumber?: NullableStringFieldUpdateOperationsInput | string | null
    customerNotes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type OrderItemUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    orderId?: StringFieldUpdateOperationsInput | string
    productId?: StringFieldUpdateOperationsInput | string
    quantity?: IntFieldUpdateOperationsInput | number
    unitPrice?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    totalPrice?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    productName?: StringFieldUpdateOperationsInput | string
    productSku?: NullableStringFieldUpdateOperationsInput | string | null
    productBrand?: NullableStringFieldUpdateOperationsInput | string | null
    thcPercentage?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    cbdPercentage?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    weightGrams?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    metrcPackageId?: NullableStringFieldUpdateOperationsInput | string | null
    batchNumber?: NullableStringFieldUpdateOperationsInput | string | null
    customerNotes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ReviewCreateInput = {
    id?: string
    reviewableType: $Enums.ReviewableType
    rating: number
    title?: string | null
    content: string
    qualityRating?: number | null
    valueRating?: number | null
    serviceRating?: number | null
    effectsRating?: number | null
    effects?: NullableJsonNullValueInput | InputJsonValue
    medicalBenefits?: NullableJsonNullValueInput | InputJsonValue
    sideEffects?: NullableJsonNullValueInput | InputJsonValue
    images?: NullableJsonNullValueInput | InputJsonValue
    status?: $Enums.ReviewStatus
    moderatedAt?: Date | string | null
    moderatedBy?: string | null
    moderationReason?: string | null
    verifiedPurchase?: boolean
    helpfulCount?: number
    totalVotes?: number
    createdAt?: Date | string
    updatedAt?: Date | string
    user: UserCreateNestedOneWithoutReviewsInput
    order?: OrderCreateNestedOneWithoutReviewsInput
    store?: StoreCreateNestedOneWithoutReviewsInput
    product?: ProductCreateNestedOneWithoutReviewsInput
  }

  export type ReviewUncheckedCreateInput = {
    id?: string
    userId: string
    reviewableType: $Enums.ReviewableType
    reviewableId: string
    rating: number
    title?: string | null
    content: string
    qualityRating?: number | null
    valueRating?: number | null
    serviceRating?: number | null
    effectsRating?: number | null
    effects?: NullableJsonNullValueInput | InputJsonValue
    medicalBenefits?: NullableJsonNullValueInput | InputJsonValue
    sideEffects?: NullableJsonNullValueInput | InputJsonValue
    images?: NullableJsonNullValueInput | InputJsonValue
    status?: $Enums.ReviewStatus
    moderatedAt?: Date | string | null
    moderatedBy?: string | null
    moderationReason?: string | null
    verifiedPurchase?: boolean
    orderId?: string | null
    helpfulCount?: number
    totalVotes?: number
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type ReviewUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    reviewableType?: EnumReviewableTypeFieldUpdateOperationsInput | $Enums.ReviewableType
    rating?: IntFieldUpdateOperationsInput | number
    title?: NullableStringFieldUpdateOperationsInput | string | null
    content?: StringFieldUpdateOperationsInput | string
    qualityRating?: NullableIntFieldUpdateOperationsInput | number | null
    valueRating?: NullableIntFieldUpdateOperationsInput | number | null
    serviceRating?: NullableIntFieldUpdateOperationsInput | number | null
    effectsRating?: NullableIntFieldUpdateOperationsInput | number | null
    effects?: NullableJsonNullValueInput | InputJsonValue
    medicalBenefits?: NullableJsonNullValueInput | InputJsonValue
    sideEffects?: NullableJsonNullValueInput | InputJsonValue
    images?: NullableJsonNullValueInput | InputJsonValue
    status?: EnumReviewStatusFieldUpdateOperationsInput | $Enums.ReviewStatus
    moderatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    moderatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    moderationReason?: NullableStringFieldUpdateOperationsInput | string | null
    verifiedPurchase?: BoolFieldUpdateOperationsInput | boolean
    helpfulCount?: IntFieldUpdateOperationsInput | number
    totalVotes?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    user?: UserUpdateOneRequiredWithoutReviewsNestedInput
    order?: OrderUpdateOneWithoutReviewsNestedInput
    store?: StoreUpdateOneWithoutReviewsNestedInput
    product?: ProductUpdateOneWithoutReviewsNestedInput
  }

  export type ReviewUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    reviewableType?: EnumReviewableTypeFieldUpdateOperationsInput | $Enums.ReviewableType
    reviewableId?: StringFieldUpdateOperationsInput | string
    rating?: IntFieldUpdateOperationsInput | number
    title?: NullableStringFieldUpdateOperationsInput | string | null
    content?: StringFieldUpdateOperationsInput | string
    qualityRating?: NullableIntFieldUpdateOperationsInput | number | null
    valueRating?: NullableIntFieldUpdateOperationsInput | number | null
    serviceRating?: NullableIntFieldUpdateOperationsInput | number | null
    effectsRating?: NullableIntFieldUpdateOperationsInput | number | null
    effects?: NullableJsonNullValueInput | InputJsonValue
    medicalBenefits?: NullableJsonNullValueInput | InputJsonValue
    sideEffects?: NullableJsonNullValueInput | InputJsonValue
    images?: NullableJsonNullValueInput | InputJsonValue
    status?: EnumReviewStatusFieldUpdateOperationsInput | $Enums.ReviewStatus
    moderatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    moderatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    moderationReason?: NullableStringFieldUpdateOperationsInput | string | null
    verifiedPurchase?: BoolFieldUpdateOperationsInput | boolean
    orderId?: NullableStringFieldUpdateOperationsInput | string | null
    helpfulCount?: IntFieldUpdateOperationsInput | number
    totalVotes?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ReviewCreateManyInput = {
    id?: string
    userId: string
    reviewableType: $Enums.ReviewableType
    reviewableId: string
    rating: number
    title?: string | null
    content: string
    qualityRating?: number | null
    valueRating?: number | null
    serviceRating?: number | null
    effectsRating?: number | null
    effects?: NullableJsonNullValueInput | InputJsonValue
    medicalBenefits?: NullableJsonNullValueInput | InputJsonValue
    sideEffects?: NullableJsonNullValueInput | InputJsonValue
    images?: NullableJsonNullValueInput | InputJsonValue
    status?: $Enums.ReviewStatus
    moderatedAt?: Date | string | null
    moderatedBy?: string | null
    moderationReason?: string | null
    verifiedPurchase?: boolean
    orderId?: string | null
    helpfulCount?: number
    totalVotes?: number
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type ReviewUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    reviewableType?: EnumReviewableTypeFieldUpdateOperationsInput | $Enums.ReviewableType
    rating?: IntFieldUpdateOperationsInput | number
    title?: NullableStringFieldUpdateOperationsInput | string | null
    content?: StringFieldUpdateOperationsInput | string
    qualityRating?: NullableIntFieldUpdateOperationsInput | number | null
    valueRating?: NullableIntFieldUpdateOperationsInput | number | null
    serviceRating?: NullableIntFieldUpdateOperationsInput | number | null
    effectsRating?: NullableIntFieldUpdateOperationsInput | number | null
    effects?: NullableJsonNullValueInput | InputJsonValue
    medicalBenefits?: NullableJsonNullValueInput | InputJsonValue
    sideEffects?: NullableJsonNullValueInput | InputJsonValue
    images?: NullableJsonNullValueInput | InputJsonValue
    status?: EnumReviewStatusFieldUpdateOperationsInput | $Enums.ReviewStatus
    moderatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    moderatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    moderationReason?: NullableStringFieldUpdateOperationsInput | string | null
    verifiedPurchase?: BoolFieldUpdateOperationsInput | boolean
    helpfulCount?: IntFieldUpdateOperationsInput | number
    totalVotes?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ReviewUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    reviewableType?: EnumReviewableTypeFieldUpdateOperationsInput | $Enums.ReviewableType
    reviewableId?: StringFieldUpdateOperationsInput | string
    rating?: IntFieldUpdateOperationsInput | number
    title?: NullableStringFieldUpdateOperationsInput | string | null
    content?: StringFieldUpdateOperationsInput | string
    qualityRating?: NullableIntFieldUpdateOperationsInput | number | null
    valueRating?: NullableIntFieldUpdateOperationsInput | number | null
    serviceRating?: NullableIntFieldUpdateOperationsInput | number | null
    effectsRating?: NullableIntFieldUpdateOperationsInput | number | null
    effects?: NullableJsonNullValueInput | InputJsonValue
    medicalBenefits?: NullableJsonNullValueInput | InputJsonValue
    sideEffects?: NullableJsonNullValueInput | InputJsonValue
    images?: NullableJsonNullValueInput | InputJsonValue
    status?: EnumReviewStatusFieldUpdateOperationsInput | $Enums.ReviewStatus
    moderatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    moderatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    moderationReason?: NullableStringFieldUpdateOperationsInput | string | null
    verifiedPurchase?: BoolFieldUpdateOperationsInput | boolean
    orderId?: NullableStringFieldUpdateOperationsInput | string | null
    helpfulCount?: IntFieldUpdateOperationsInput | number
    totalVotes?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ProfessionalCreateInput = {
    id?: string
    professionalType: $Enums.ProfessionalType
    licenseNumber: string
    licenseState: string
    licenseExpiresAt: Date | string
    specializations?: NullableJsonNullValueInput | InputJsonValue
    certifications?: NullableJsonNullValueInput | InputJsonValue
    practiceName?: string | null
    practiceAddress?: NullableJsonNullValueInput | InputJsonValue
    practicePhone?: string | null
    practiceWebsite?: string | null
    cannabisExperienceYears?: number | null
    cannabisCertifications?: NullableJsonNullValueInput | InputJsonValue
    preferredProducts?: NullableJsonNullValueInput | InputJsonValue
    treatmentApproaches?: NullableJsonNullValueInput | InputJsonValue
    consultationTypes?: NullableJsonNullValueInput | InputJsonValue
    hourlyRate?: Decimal | DecimalJsLike | number | string | null
    acceptsInsurance?: boolean
    insuranceProviders?: NullableJsonNullValueInput | InputJsonValue
    verified?: boolean
    verifiedAt?: Date | string | null
    verifiedBy?: string | null
    verificationDocuments?: NullableJsonNullValueInput | InputJsonValue
    consultationCount?: number
    averageRating?: Decimal | DecimalJsLike | number | string
    reviewCount?: number
    status?: string
    acceptingNewPatients?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    user: UserCreateNestedOneWithoutProfessionalInput
    consultations?: ConsultationCreateNestedManyWithoutProfessionalInput
  }

  export type ProfessionalUncheckedCreateInput = {
    id?: string
    userId: string
    professionalType: $Enums.ProfessionalType
    licenseNumber: string
    licenseState: string
    licenseExpiresAt: Date | string
    specializations?: NullableJsonNullValueInput | InputJsonValue
    certifications?: NullableJsonNullValueInput | InputJsonValue
    practiceName?: string | null
    practiceAddress?: NullableJsonNullValueInput | InputJsonValue
    practicePhone?: string | null
    practiceWebsite?: string | null
    cannabisExperienceYears?: number | null
    cannabisCertifications?: NullableJsonNullValueInput | InputJsonValue
    preferredProducts?: NullableJsonNullValueInput | InputJsonValue
    treatmentApproaches?: NullableJsonNullValueInput | InputJsonValue
    consultationTypes?: NullableJsonNullValueInput | InputJsonValue
    hourlyRate?: Decimal | DecimalJsLike | number | string | null
    acceptsInsurance?: boolean
    insuranceProviders?: NullableJsonNullValueInput | InputJsonValue
    verified?: boolean
    verifiedAt?: Date | string | null
    verifiedBy?: string | null
    verificationDocuments?: NullableJsonNullValueInput | InputJsonValue
    consultationCount?: number
    averageRating?: Decimal | DecimalJsLike | number | string
    reviewCount?: number
    status?: string
    acceptingNewPatients?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    consultations?: ConsultationUncheckedCreateNestedManyWithoutProfessionalInput
  }

  export type ProfessionalUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    professionalType?: EnumProfessionalTypeFieldUpdateOperationsInput | $Enums.ProfessionalType
    licenseNumber?: StringFieldUpdateOperationsInput | string
    licenseState?: StringFieldUpdateOperationsInput | string
    licenseExpiresAt?: DateTimeFieldUpdateOperationsInput | Date | string
    specializations?: NullableJsonNullValueInput | InputJsonValue
    certifications?: NullableJsonNullValueInput | InputJsonValue
    practiceName?: NullableStringFieldUpdateOperationsInput | string | null
    practiceAddress?: NullableJsonNullValueInput | InputJsonValue
    practicePhone?: NullableStringFieldUpdateOperationsInput | string | null
    practiceWebsite?: NullableStringFieldUpdateOperationsInput | string | null
    cannabisExperienceYears?: NullableIntFieldUpdateOperationsInput | number | null
    cannabisCertifications?: NullableJsonNullValueInput | InputJsonValue
    preferredProducts?: NullableJsonNullValueInput | InputJsonValue
    treatmentApproaches?: NullableJsonNullValueInput | InputJsonValue
    consultationTypes?: NullableJsonNullValueInput | InputJsonValue
    hourlyRate?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    acceptsInsurance?: BoolFieldUpdateOperationsInput | boolean
    insuranceProviders?: NullableJsonNullValueInput | InputJsonValue
    verified?: BoolFieldUpdateOperationsInput | boolean
    verifiedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    verifiedBy?: NullableStringFieldUpdateOperationsInput | string | null
    verificationDocuments?: NullableJsonNullValueInput | InputJsonValue
    consultationCount?: IntFieldUpdateOperationsInput | number
    averageRating?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    reviewCount?: IntFieldUpdateOperationsInput | number
    status?: StringFieldUpdateOperationsInput | string
    acceptingNewPatients?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    user?: UserUpdateOneRequiredWithoutProfessionalNestedInput
    consultations?: ConsultationUpdateManyWithoutProfessionalNestedInput
  }

  export type ProfessionalUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    professionalType?: EnumProfessionalTypeFieldUpdateOperationsInput | $Enums.ProfessionalType
    licenseNumber?: StringFieldUpdateOperationsInput | string
    licenseState?: StringFieldUpdateOperationsInput | string
    licenseExpiresAt?: DateTimeFieldUpdateOperationsInput | Date | string
    specializations?: NullableJsonNullValueInput | InputJsonValue
    certifications?: NullableJsonNullValueInput | InputJsonValue
    practiceName?: NullableStringFieldUpdateOperationsInput | string | null
    practiceAddress?: NullableJsonNullValueInput | InputJsonValue
    practicePhone?: NullableStringFieldUpdateOperationsInput | string | null
    practiceWebsite?: NullableStringFieldUpdateOperationsInput | string | null
    cannabisExperienceYears?: NullableIntFieldUpdateOperationsInput | number | null
    cannabisCertifications?: NullableJsonNullValueInput | InputJsonValue
    preferredProducts?: NullableJsonNullValueInput | InputJsonValue
    treatmentApproaches?: NullableJsonNullValueInput | InputJsonValue
    consultationTypes?: NullableJsonNullValueInput | InputJsonValue
    hourlyRate?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    acceptsInsurance?: BoolFieldUpdateOperationsInput | boolean
    insuranceProviders?: NullableJsonNullValueInput | InputJsonValue
    verified?: BoolFieldUpdateOperationsInput | boolean
    verifiedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    verifiedBy?: NullableStringFieldUpdateOperationsInput | string | null
    verificationDocuments?: NullableJsonNullValueInput | InputJsonValue
    consultationCount?: IntFieldUpdateOperationsInput | number
    averageRating?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    reviewCount?: IntFieldUpdateOperationsInput | number
    status?: StringFieldUpdateOperationsInput | string
    acceptingNewPatients?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    consultations?: ConsultationUncheckedUpdateManyWithoutProfessionalNestedInput
  }

  export type ProfessionalCreateManyInput = {
    id?: string
    userId: string
    professionalType: $Enums.ProfessionalType
    licenseNumber: string
    licenseState: string
    licenseExpiresAt: Date | string
    specializations?: NullableJsonNullValueInput | InputJsonValue
    certifications?: NullableJsonNullValueInput | InputJsonValue
    practiceName?: string | null
    practiceAddress?: NullableJsonNullValueInput | InputJsonValue
    practicePhone?: string | null
    practiceWebsite?: string | null
    cannabisExperienceYears?: number | null
    cannabisCertifications?: NullableJsonNullValueInput | InputJsonValue
    preferredProducts?: NullableJsonNullValueInput | InputJsonValue
    treatmentApproaches?: NullableJsonNullValueInput | InputJsonValue
    consultationTypes?: NullableJsonNullValueInput | InputJsonValue
    hourlyRate?: Decimal | DecimalJsLike | number | string | null
    acceptsInsurance?: boolean
    insuranceProviders?: NullableJsonNullValueInput | InputJsonValue
    verified?: boolean
    verifiedAt?: Date | string | null
    verifiedBy?: string | null
    verificationDocuments?: NullableJsonNullValueInput | InputJsonValue
    consultationCount?: number
    averageRating?: Decimal | DecimalJsLike | number | string
    reviewCount?: number
    status?: string
    acceptingNewPatients?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type ProfessionalUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    professionalType?: EnumProfessionalTypeFieldUpdateOperationsInput | $Enums.ProfessionalType
    licenseNumber?: StringFieldUpdateOperationsInput | string
    licenseState?: StringFieldUpdateOperationsInput | string
    licenseExpiresAt?: DateTimeFieldUpdateOperationsInput | Date | string
    specializations?: NullableJsonNullValueInput | InputJsonValue
    certifications?: NullableJsonNullValueInput | InputJsonValue
    practiceName?: NullableStringFieldUpdateOperationsInput | string | null
    practiceAddress?: NullableJsonNullValueInput | InputJsonValue
    practicePhone?: NullableStringFieldUpdateOperationsInput | string | null
    practiceWebsite?: NullableStringFieldUpdateOperationsInput | string | null
    cannabisExperienceYears?: NullableIntFieldUpdateOperationsInput | number | null
    cannabisCertifications?: NullableJsonNullValueInput | InputJsonValue
    preferredProducts?: NullableJsonNullValueInput | InputJsonValue
    treatmentApproaches?: NullableJsonNullValueInput | InputJsonValue
    consultationTypes?: NullableJsonNullValueInput | InputJsonValue
    hourlyRate?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    acceptsInsurance?: BoolFieldUpdateOperationsInput | boolean
    insuranceProviders?: NullableJsonNullValueInput | InputJsonValue
    verified?: BoolFieldUpdateOperationsInput | boolean
    verifiedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    verifiedBy?: NullableStringFieldUpdateOperationsInput | string | null
    verificationDocuments?: NullableJsonNullValueInput | InputJsonValue
    consultationCount?: IntFieldUpdateOperationsInput | number
    averageRating?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    reviewCount?: IntFieldUpdateOperationsInput | number
    status?: StringFieldUpdateOperationsInput | string
    acceptingNewPatients?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ProfessionalUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    professionalType?: EnumProfessionalTypeFieldUpdateOperationsInput | $Enums.ProfessionalType
    licenseNumber?: StringFieldUpdateOperationsInput | string
    licenseState?: StringFieldUpdateOperationsInput | string
    licenseExpiresAt?: DateTimeFieldUpdateOperationsInput | Date | string
    specializations?: NullableJsonNullValueInput | InputJsonValue
    certifications?: NullableJsonNullValueInput | InputJsonValue
    practiceName?: NullableStringFieldUpdateOperationsInput | string | null
    practiceAddress?: NullableJsonNullValueInput | InputJsonValue
    practicePhone?: NullableStringFieldUpdateOperationsInput | string | null
    practiceWebsite?: NullableStringFieldUpdateOperationsInput | string | null
    cannabisExperienceYears?: NullableIntFieldUpdateOperationsInput | number | null
    cannabisCertifications?: NullableJsonNullValueInput | InputJsonValue
    preferredProducts?: NullableJsonNullValueInput | InputJsonValue
    treatmentApproaches?: NullableJsonNullValueInput | InputJsonValue
    consultationTypes?: NullableJsonNullValueInput | InputJsonValue
    hourlyRate?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    acceptsInsurance?: BoolFieldUpdateOperationsInput | boolean
    insuranceProviders?: NullableJsonNullValueInput | InputJsonValue
    verified?: BoolFieldUpdateOperationsInput | boolean
    verifiedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    verifiedBy?: NullableStringFieldUpdateOperationsInput | string | null
    verificationDocuments?: NullableJsonNullValueInput | InputJsonValue
    consultationCount?: IntFieldUpdateOperationsInput | number
    averageRating?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    reviewCount?: IntFieldUpdateOperationsInput | number
    status?: StringFieldUpdateOperationsInput | string
    acceptingNewPatients?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ConsultationCreateInput = {
    id?: string
    consultationType: $Enums.ConsultationType
    sessionType: $Enums.SessionType
    scheduledAt: Date | string
    durationMinutes?: number
    timezone: string
    status?: string
    meetingUrl?: string | null
    meetingId?: string | null
    meetingPassword?: string | null
    chiefComplaint?: string | null
    symptoms?: NullableJsonNullValueInput | InputJsonValue
    currentMedications?: NullableJsonNullValueInput | InputJsonValue
    cannabisExperience?: string | null
    previousCannabisUse?: string | null
    assessment?: string | null
    recommendations?: string | null
    prescribedProducts?: NullableJsonNullValueInput | InputJsonValue
    followUpNeeded?: boolean
    followUpDate?: Date | string | null
    consultationFee: Decimal | DecimalJsLike | number | string
    paymentStatus?: string
    paymentId?: string | null
    medicalConsentSigned?: boolean
    privacyConsentSigned?: boolean
    consultationAgreementSigned?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    patient: UserCreateNestedOneWithoutConsultationsAsPatientInput
    professional: ProfessionalCreateNestedOneWithoutConsultationsInput
  }

  export type ConsultationUncheckedCreateInput = {
    id?: string
    patientId: string
    professionalId: string
    consultationType: $Enums.ConsultationType
    sessionType: $Enums.SessionType
    scheduledAt: Date | string
    durationMinutes?: number
    timezone: string
    status?: string
    meetingUrl?: string | null
    meetingId?: string | null
    meetingPassword?: string | null
    chiefComplaint?: string | null
    symptoms?: NullableJsonNullValueInput | InputJsonValue
    currentMedications?: NullableJsonNullValueInput | InputJsonValue
    cannabisExperience?: string | null
    previousCannabisUse?: string | null
    assessment?: string | null
    recommendations?: string | null
    prescribedProducts?: NullableJsonNullValueInput | InputJsonValue
    followUpNeeded?: boolean
    followUpDate?: Date | string | null
    consultationFee: Decimal | DecimalJsLike | number | string
    paymentStatus?: string
    paymentId?: string | null
    medicalConsentSigned?: boolean
    privacyConsentSigned?: boolean
    consultationAgreementSigned?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type ConsultationUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    consultationType?: EnumConsultationTypeFieldUpdateOperationsInput | $Enums.ConsultationType
    sessionType?: EnumSessionTypeFieldUpdateOperationsInput | $Enums.SessionType
    scheduledAt?: DateTimeFieldUpdateOperationsInput | Date | string
    durationMinutes?: IntFieldUpdateOperationsInput | number
    timezone?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    meetingUrl?: NullableStringFieldUpdateOperationsInput | string | null
    meetingId?: NullableStringFieldUpdateOperationsInput | string | null
    meetingPassword?: NullableStringFieldUpdateOperationsInput | string | null
    chiefComplaint?: NullableStringFieldUpdateOperationsInput | string | null
    symptoms?: NullableJsonNullValueInput | InputJsonValue
    currentMedications?: NullableJsonNullValueInput | InputJsonValue
    cannabisExperience?: NullableStringFieldUpdateOperationsInput | string | null
    previousCannabisUse?: NullableStringFieldUpdateOperationsInput | string | null
    assessment?: NullableStringFieldUpdateOperationsInput | string | null
    recommendations?: NullableStringFieldUpdateOperationsInput | string | null
    prescribedProducts?: NullableJsonNullValueInput | InputJsonValue
    followUpNeeded?: BoolFieldUpdateOperationsInput | boolean
    followUpDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    consultationFee?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    paymentStatus?: StringFieldUpdateOperationsInput | string
    paymentId?: NullableStringFieldUpdateOperationsInput | string | null
    medicalConsentSigned?: BoolFieldUpdateOperationsInput | boolean
    privacyConsentSigned?: BoolFieldUpdateOperationsInput | boolean
    consultationAgreementSigned?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    patient?: UserUpdateOneRequiredWithoutConsultationsAsPatientNestedInput
    professional?: ProfessionalUpdateOneRequiredWithoutConsultationsNestedInput
  }

  export type ConsultationUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    patientId?: StringFieldUpdateOperationsInput | string
    professionalId?: StringFieldUpdateOperationsInput | string
    consultationType?: EnumConsultationTypeFieldUpdateOperationsInput | $Enums.ConsultationType
    sessionType?: EnumSessionTypeFieldUpdateOperationsInput | $Enums.SessionType
    scheduledAt?: DateTimeFieldUpdateOperationsInput | Date | string
    durationMinutes?: IntFieldUpdateOperationsInput | number
    timezone?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    meetingUrl?: NullableStringFieldUpdateOperationsInput | string | null
    meetingId?: NullableStringFieldUpdateOperationsInput | string | null
    meetingPassword?: NullableStringFieldUpdateOperationsInput | string | null
    chiefComplaint?: NullableStringFieldUpdateOperationsInput | string | null
    symptoms?: NullableJsonNullValueInput | InputJsonValue
    currentMedications?: NullableJsonNullValueInput | InputJsonValue
    cannabisExperience?: NullableStringFieldUpdateOperationsInput | string | null
    previousCannabisUse?: NullableStringFieldUpdateOperationsInput | string | null
    assessment?: NullableStringFieldUpdateOperationsInput | string | null
    recommendations?: NullableStringFieldUpdateOperationsInput | string | null
    prescribedProducts?: NullableJsonNullValueInput | InputJsonValue
    followUpNeeded?: BoolFieldUpdateOperationsInput | boolean
    followUpDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    consultationFee?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    paymentStatus?: StringFieldUpdateOperationsInput | string
    paymentId?: NullableStringFieldUpdateOperationsInput | string | null
    medicalConsentSigned?: BoolFieldUpdateOperationsInput | boolean
    privacyConsentSigned?: BoolFieldUpdateOperationsInput | boolean
    consultationAgreementSigned?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ConsultationCreateManyInput = {
    id?: string
    patientId: string
    professionalId: string
    consultationType: $Enums.ConsultationType
    sessionType: $Enums.SessionType
    scheduledAt: Date | string
    durationMinutes?: number
    timezone: string
    status?: string
    meetingUrl?: string | null
    meetingId?: string | null
    meetingPassword?: string | null
    chiefComplaint?: string | null
    symptoms?: NullableJsonNullValueInput | InputJsonValue
    currentMedications?: NullableJsonNullValueInput | InputJsonValue
    cannabisExperience?: string | null
    previousCannabisUse?: string | null
    assessment?: string | null
    recommendations?: string | null
    prescribedProducts?: NullableJsonNullValueInput | InputJsonValue
    followUpNeeded?: boolean
    followUpDate?: Date | string | null
    consultationFee: Decimal | DecimalJsLike | number | string
    paymentStatus?: string
    paymentId?: string | null
    medicalConsentSigned?: boolean
    privacyConsentSigned?: boolean
    consultationAgreementSigned?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type ConsultationUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    consultationType?: EnumConsultationTypeFieldUpdateOperationsInput | $Enums.ConsultationType
    sessionType?: EnumSessionTypeFieldUpdateOperationsInput | $Enums.SessionType
    scheduledAt?: DateTimeFieldUpdateOperationsInput | Date | string
    durationMinutes?: IntFieldUpdateOperationsInput | number
    timezone?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    meetingUrl?: NullableStringFieldUpdateOperationsInput | string | null
    meetingId?: NullableStringFieldUpdateOperationsInput | string | null
    meetingPassword?: NullableStringFieldUpdateOperationsInput | string | null
    chiefComplaint?: NullableStringFieldUpdateOperationsInput | string | null
    symptoms?: NullableJsonNullValueInput | InputJsonValue
    currentMedications?: NullableJsonNullValueInput | InputJsonValue
    cannabisExperience?: NullableStringFieldUpdateOperationsInput | string | null
    previousCannabisUse?: NullableStringFieldUpdateOperationsInput | string | null
    assessment?: NullableStringFieldUpdateOperationsInput | string | null
    recommendations?: NullableStringFieldUpdateOperationsInput | string | null
    prescribedProducts?: NullableJsonNullValueInput | InputJsonValue
    followUpNeeded?: BoolFieldUpdateOperationsInput | boolean
    followUpDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    consultationFee?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    paymentStatus?: StringFieldUpdateOperationsInput | string
    paymentId?: NullableStringFieldUpdateOperationsInput | string | null
    medicalConsentSigned?: BoolFieldUpdateOperationsInput | boolean
    privacyConsentSigned?: BoolFieldUpdateOperationsInput | boolean
    consultationAgreementSigned?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ConsultationUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    patientId?: StringFieldUpdateOperationsInput | string
    professionalId?: StringFieldUpdateOperationsInput | string
    consultationType?: EnumConsultationTypeFieldUpdateOperationsInput | $Enums.ConsultationType
    sessionType?: EnumSessionTypeFieldUpdateOperationsInput | $Enums.SessionType
    scheduledAt?: DateTimeFieldUpdateOperationsInput | Date | string
    durationMinutes?: IntFieldUpdateOperationsInput | number
    timezone?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    meetingUrl?: NullableStringFieldUpdateOperationsInput | string | null
    meetingId?: NullableStringFieldUpdateOperationsInput | string | null
    meetingPassword?: NullableStringFieldUpdateOperationsInput | string | null
    chiefComplaint?: NullableStringFieldUpdateOperationsInput | string | null
    symptoms?: NullableJsonNullValueInput | InputJsonValue
    currentMedications?: NullableJsonNullValueInput | InputJsonValue
    cannabisExperience?: NullableStringFieldUpdateOperationsInput | string | null
    previousCannabisUse?: NullableStringFieldUpdateOperationsInput | string | null
    assessment?: NullableStringFieldUpdateOperationsInput | string | null
    recommendations?: NullableStringFieldUpdateOperationsInput | string | null
    prescribedProducts?: NullableJsonNullValueInput | InputJsonValue
    followUpNeeded?: BoolFieldUpdateOperationsInput | boolean
    followUpDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    consultationFee?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    paymentStatus?: StringFieldUpdateOperationsInput | string
    paymentId?: NullableStringFieldUpdateOperationsInput | string | null
    medicalConsentSigned?: BoolFieldUpdateOperationsInput | boolean
    privacyConsentSigned?: BoolFieldUpdateOperationsInput | boolean
    consultationAgreementSigned?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type BlogPostCreateInput = {
    id?: string
    title: string
    slug: string
    excerpt?: string | null
    content: string
    featuredImageUrl?: string | null
    category: $Enums.BlogCategory
    tags?: NullableJsonNullValueInput | InputJsonValue
    metaTitle?: string | null
    metaDescription?: string | null
    metaKeywords?: string | null
    status?: $Enums.BlogStatus
    publishedAt?: Date | string | null
    scheduledFor?: Date | string | null
    viewCount?: number
    likeCount?: number
    commentCount?: number
    shareCount?: number
    factChecked?: boolean
    factCheckedAt?: Date | string | null
    medicalDisclaimer?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    author: UserCreateNestedOneWithoutBlogPostsInput
    factChecker?: UserCreateNestedOneWithoutFactCheckedPostsInput
  }

  export type BlogPostUncheckedCreateInput = {
    id?: string
    authorId: string
    title: string
    slug: string
    excerpt?: string | null
    content: string
    featuredImageUrl?: string | null
    category: $Enums.BlogCategory
    tags?: NullableJsonNullValueInput | InputJsonValue
    metaTitle?: string | null
    metaDescription?: string | null
    metaKeywords?: string | null
    status?: $Enums.BlogStatus
    publishedAt?: Date | string | null
    scheduledFor?: Date | string | null
    viewCount?: number
    likeCount?: number
    commentCount?: number
    shareCount?: number
    factChecked?: boolean
    factCheckedBy?: string | null
    factCheckedAt?: Date | string | null
    medicalDisclaimer?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type BlogPostUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    excerpt?: NullableStringFieldUpdateOperationsInput | string | null
    content?: StringFieldUpdateOperationsInput | string
    featuredImageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    category?: EnumBlogCategoryFieldUpdateOperationsInput | $Enums.BlogCategory
    tags?: NullableJsonNullValueInput | InputJsonValue
    metaTitle?: NullableStringFieldUpdateOperationsInput | string | null
    metaDescription?: NullableStringFieldUpdateOperationsInput | string | null
    metaKeywords?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumBlogStatusFieldUpdateOperationsInput | $Enums.BlogStatus
    publishedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    scheduledFor?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    viewCount?: IntFieldUpdateOperationsInput | number
    likeCount?: IntFieldUpdateOperationsInput | number
    commentCount?: IntFieldUpdateOperationsInput | number
    shareCount?: IntFieldUpdateOperationsInput | number
    factChecked?: BoolFieldUpdateOperationsInput | boolean
    factCheckedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    medicalDisclaimer?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    author?: UserUpdateOneRequiredWithoutBlogPostsNestedInput
    factChecker?: UserUpdateOneWithoutFactCheckedPostsNestedInput
  }

  export type BlogPostUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    authorId?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    excerpt?: NullableStringFieldUpdateOperationsInput | string | null
    content?: StringFieldUpdateOperationsInput | string
    featuredImageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    category?: EnumBlogCategoryFieldUpdateOperationsInput | $Enums.BlogCategory
    tags?: NullableJsonNullValueInput | InputJsonValue
    metaTitle?: NullableStringFieldUpdateOperationsInput | string | null
    metaDescription?: NullableStringFieldUpdateOperationsInput | string | null
    metaKeywords?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumBlogStatusFieldUpdateOperationsInput | $Enums.BlogStatus
    publishedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    scheduledFor?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    viewCount?: IntFieldUpdateOperationsInput | number
    likeCount?: IntFieldUpdateOperationsInput | number
    commentCount?: IntFieldUpdateOperationsInput | number
    shareCount?: IntFieldUpdateOperationsInput | number
    factChecked?: BoolFieldUpdateOperationsInput | boolean
    factCheckedBy?: NullableStringFieldUpdateOperationsInput | string | null
    factCheckedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    medicalDisclaimer?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type BlogPostCreateManyInput = {
    id?: string
    authorId: string
    title: string
    slug: string
    excerpt?: string | null
    content: string
    featuredImageUrl?: string | null
    category: $Enums.BlogCategory
    tags?: NullableJsonNullValueInput | InputJsonValue
    metaTitle?: string | null
    metaDescription?: string | null
    metaKeywords?: string | null
    status?: $Enums.BlogStatus
    publishedAt?: Date | string | null
    scheduledFor?: Date | string | null
    viewCount?: number
    likeCount?: number
    commentCount?: number
    shareCount?: number
    factChecked?: boolean
    factCheckedBy?: string | null
    factCheckedAt?: Date | string | null
    medicalDisclaimer?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type BlogPostUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    excerpt?: NullableStringFieldUpdateOperationsInput | string | null
    content?: StringFieldUpdateOperationsInput | string
    featuredImageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    category?: EnumBlogCategoryFieldUpdateOperationsInput | $Enums.BlogCategory
    tags?: NullableJsonNullValueInput | InputJsonValue
    metaTitle?: NullableStringFieldUpdateOperationsInput | string | null
    metaDescription?: NullableStringFieldUpdateOperationsInput | string | null
    metaKeywords?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumBlogStatusFieldUpdateOperationsInput | $Enums.BlogStatus
    publishedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    scheduledFor?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    viewCount?: IntFieldUpdateOperationsInput | number
    likeCount?: IntFieldUpdateOperationsInput | number
    commentCount?: IntFieldUpdateOperationsInput | number
    shareCount?: IntFieldUpdateOperationsInput | number
    factChecked?: BoolFieldUpdateOperationsInput | boolean
    factCheckedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    medicalDisclaimer?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type BlogPostUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    authorId?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    excerpt?: NullableStringFieldUpdateOperationsInput | string | null
    content?: StringFieldUpdateOperationsInput | string
    featuredImageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    category?: EnumBlogCategoryFieldUpdateOperationsInput | $Enums.BlogCategory
    tags?: NullableJsonNullValueInput | InputJsonValue
    metaTitle?: NullableStringFieldUpdateOperationsInput | string | null
    metaDescription?: NullableStringFieldUpdateOperationsInput | string | null
    metaKeywords?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumBlogStatusFieldUpdateOperationsInput | $Enums.BlogStatus
    publishedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    scheduledFor?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    viewCount?: IntFieldUpdateOperationsInput | number
    likeCount?: IntFieldUpdateOperationsInput | number
    commentCount?: IntFieldUpdateOperationsInput | number
    shareCount?: IntFieldUpdateOperationsInput | number
    factChecked?: BoolFieldUpdateOperationsInput | boolean
    factCheckedBy?: NullableStringFieldUpdateOperationsInput | string | null
    factCheckedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    medicalDisclaimer?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type AuditLogCreateInput = {
    id?: string
    action: string
    resourceType: string
    resourceId?: string | null
    userId?: string | null
    sessionId?: string | null
    ipAddress?: string | null
    userAgent?: string | null
    oldValues?: NullableJsonNullValueInput | InputJsonValue
    newValues?: NullableJsonNullValueInput | InputJsonValue
    requestId?: string | null
    endpoint?: string | null
    httpMethod?: string | null
    riskLevel?: string
    complianceRelevant?: boolean
    result: string
    errorMessage?: string | null
    timestamp?: Date | string
  }

  export type AuditLogUncheckedCreateInput = {
    id?: string
    action: string
    resourceType: string
    resourceId?: string | null
    userId?: string | null
    sessionId?: string | null
    ipAddress?: string | null
    userAgent?: string | null
    oldValues?: NullableJsonNullValueInput | InputJsonValue
    newValues?: NullableJsonNullValueInput | InputJsonValue
    requestId?: string | null
    endpoint?: string | null
    httpMethod?: string | null
    riskLevel?: string
    complianceRelevant?: boolean
    result: string
    errorMessage?: string | null
    timestamp?: Date | string
  }

  export type AuditLogUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    action?: StringFieldUpdateOperationsInput | string
    resourceType?: StringFieldUpdateOperationsInput | string
    resourceId?: NullableStringFieldUpdateOperationsInput | string | null
    userId?: NullableStringFieldUpdateOperationsInput | string | null
    sessionId?: NullableStringFieldUpdateOperationsInput | string | null
    ipAddress?: NullableStringFieldUpdateOperationsInput | string | null
    userAgent?: NullableStringFieldUpdateOperationsInput | string | null
    oldValues?: NullableJsonNullValueInput | InputJsonValue
    newValues?: NullableJsonNullValueInput | InputJsonValue
    requestId?: NullableStringFieldUpdateOperationsInput | string | null
    endpoint?: NullableStringFieldUpdateOperationsInput | string | null
    httpMethod?: NullableStringFieldUpdateOperationsInput | string | null
    riskLevel?: StringFieldUpdateOperationsInput | string
    complianceRelevant?: BoolFieldUpdateOperationsInput | boolean
    result?: StringFieldUpdateOperationsInput | string
    errorMessage?: NullableStringFieldUpdateOperationsInput | string | null
    timestamp?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type AuditLogUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    action?: StringFieldUpdateOperationsInput | string
    resourceType?: StringFieldUpdateOperationsInput | string
    resourceId?: NullableStringFieldUpdateOperationsInput | string | null
    userId?: NullableStringFieldUpdateOperationsInput | string | null
    sessionId?: NullableStringFieldUpdateOperationsInput | string | null
    ipAddress?: NullableStringFieldUpdateOperationsInput | string | null
    userAgent?: NullableStringFieldUpdateOperationsInput | string | null
    oldValues?: NullableJsonNullValueInput | InputJsonValue
    newValues?: NullableJsonNullValueInput | InputJsonValue
    requestId?: NullableStringFieldUpdateOperationsInput | string | null
    endpoint?: NullableStringFieldUpdateOperationsInput | string | null
    httpMethod?: NullableStringFieldUpdateOperationsInput | string | null
    riskLevel?: StringFieldUpdateOperationsInput | string
    complianceRelevant?: BoolFieldUpdateOperationsInput | boolean
    result?: StringFieldUpdateOperationsInput | string
    errorMessage?: NullableStringFieldUpdateOperationsInput | string | null
    timestamp?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type AuditLogCreateManyInput = {
    id?: string
    action: string
    resourceType: string
    resourceId?: string | null
    userId?: string | null
    sessionId?: string | null
    ipAddress?: string | null
    userAgent?: string | null
    oldValues?: NullableJsonNullValueInput | InputJsonValue
    newValues?: NullableJsonNullValueInput | InputJsonValue
    requestId?: string | null
    endpoint?: string | null
    httpMethod?: string | null
    riskLevel?: string
    complianceRelevant?: boolean
    result: string
    errorMessage?: string | null
    timestamp?: Date | string
  }

  export type AuditLogUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    action?: StringFieldUpdateOperationsInput | string
    resourceType?: StringFieldUpdateOperationsInput | string
    resourceId?: NullableStringFieldUpdateOperationsInput | string | null
    userId?: NullableStringFieldUpdateOperationsInput | string | null
    sessionId?: NullableStringFieldUpdateOperationsInput | string | null
    ipAddress?: NullableStringFieldUpdateOperationsInput | string | null
    userAgent?: NullableStringFieldUpdateOperationsInput | string | null
    oldValues?: NullableJsonNullValueInput | InputJsonValue
    newValues?: NullableJsonNullValueInput | InputJsonValue
    requestId?: NullableStringFieldUpdateOperationsInput | string | null
    endpoint?: NullableStringFieldUpdateOperationsInput | string | null
    httpMethod?: NullableStringFieldUpdateOperationsInput | string | null
    riskLevel?: StringFieldUpdateOperationsInput | string
    complianceRelevant?: BoolFieldUpdateOperationsInput | boolean
    result?: StringFieldUpdateOperationsInput | string
    errorMessage?: NullableStringFieldUpdateOperationsInput | string | null
    timestamp?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type AuditLogUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    action?: StringFieldUpdateOperationsInput | string
    resourceType?: StringFieldUpdateOperationsInput | string
    resourceId?: NullableStringFieldUpdateOperationsInput | string | null
    userId?: NullableStringFieldUpdateOperationsInput | string | null
    sessionId?: NullableStringFieldUpdateOperationsInput | string | null
    ipAddress?: NullableStringFieldUpdateOperationsInput | string | null
    userAgent?: NullableStringFieldUpdateOperationsInput | string | null
    oldValues?: NullableJsonNullValueInput | InputJsonValue
    newValues?: NullableJsonNullValueInput | InputJsonValue
    requestId?: NullableStringFieldUpdateOperationsInput | string | null
    endpoint?: NullableStringFieldUpdateOperationsInput | string | null
    httpMethod?: NullableStringFieldUpdateOperationsInput | string | null
    riskLevel?: StringFieldUpdateOperationsInput | string
    complianceRelevant?: BoolFieldUpdateOperationsInput | boolean
    result?: StringFieldUpdateOperationsInput | string
    errorMessage?: NullableStringFieldUpdateOperationsInput | string | null
    timestamp?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type StringFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringFilter<$PrismaModel> | string
  }

  export type BoolFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolFilter<$PrismaModel> | boolean
  }

  export type EnumUserRoleFilter<$PrismaModel = never> = {
    equals?: $Enums.UserRole | EnumUserRoleFieldRefInput<$PrismaModel>
    in?: $Enums.UserRole[] | ListEnumUserRoleFieldRefInput<$PrismaModel>
    notIn?: $Enums.UserRole[] | ListEnumUserRoleFieldRefInput<$PrismaModel>
    not?: NestedEnumUserRoleFilter<$PrismaModel> | $Enums.UserRole
  }

  export type StringNullableFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringNullableFilter<$PrismaModel> | string | null
  }

  export type DateTimeNullableFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableFilter<$PrismaModel> | Date | string | null
  }

  export type EnumUserStatusFilter<$PrismaModel = never> = {
    equals?: $Enums.UserStatus | EnumUserStatusFieldRefInput<$PrismaModel>
    in?: $Enums.UserStatus[] | ListEnumUserStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.UserStatus[] | ListEnumUserStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumUserStatusFilter<$PrismaModel> | $Enums.UserStatus
  }

  export type IntFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntFilter<$PrismaModel> | number
  }

  export type EnumAgeVerificationMethodNullableFilter<$PrismaModel = never> = {
    equals?: $Enums.AgeVerificationMethod | EnumAgeVerificationMethodFieldRefInput<$PrismaModel> | null
    in?: $Enums.AgeVerificationMethod[] | ListEnumAgeVerificationMethodFieldRefInput<$PrismaModel> | null
    notIn?: $Enums.AgeVerificationMethod[] | ListEnumAgeVerificationMethodFieldRefInput<$PrismaModel> | null
    not?: NestedEnumAgeVerificationMethodNullableFilter<$PrismaModel> | $Enums.AgeVerificationMethod | null
  }

  export type DateTimeFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeFilter<$PrismaModel> | Date | string
  }

  export type UserAddressListRelationFilter = {
    every?: UserAddressWhereInput
    some?: UserAddressWhereInput
    none?: UserAddressWhereInput
  }

  export type UserSessionListRelationFilter = {
    every?: UserSessionWhereInput
    some?: UserSessionWhereInput
    none?: UserSessionWhereInput
  }

  export type StoreListRelationFilter = {
    every?: StoreWhereInput
    some?: StoreWhereInput
    none?: StoreWhereInput
  }

  export type OrderListRelationFilter = {
    every?: OrderWhereInput
    some?: OrderWhereInput
    none?: OrderWhereInput
  }

  export type ReviewListRelationFilter = {
    every?: ReviewWhereInput
    some?: ReviewWhereInput
    none?: ReviewWhereInput
  }

  export type ProfessionalNullableRelationFilter = {
    is?: ProfessionalWhereInput | null
    isNot?: ProfessionalWhereInput | null
  }

  export type StoreStaffListRelationFilter = {
    every?: StoreStaffWhereInput
    some?: StoreStaffWhereInput
    none?: StoreStaffWhereInput
  }

  export type ConsultationListRelationFilter = {
    every?: ConsultationWhereInput
    some?: ConsultationWhereInput
    none?: ConsultationWhereInput
  }

  export type UserNullableRelationFilter = {
    is?: UserWhereInput | null
    isNot?: UserWhereInput | null
  }

  export type UserListRelationFilter = {
    every?: UserWhereInput
    some?: UserWhereInput
    none?: UserWhereInput
  }

  export type BlogPostListRelationFilter = {
    every?: BlogPostWhereInput
    some?: BlogPostWhereInput
    none?: BlogPostWhereInput
  }

  export type SortOrderInput = {
    sort: SortOrder
    nulls?: NullsOrder
  }

  export type UserAddressOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type UserSessionOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type StoreOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type OrderOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type ReviewOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type StoreStaffOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type ConsultationOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type UserOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type BlogPostOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type UserCountOrderByAggregateInput = {
    id?: SortOrder
    email?: SortOrder
    emailVerified?: SortOrder
    passwordHash?: SortOrder
    role?: SortOrder
    firstName?: SortOrder
    lastName?: SortOrder
    phone?: SortOrder
    dateOfBirth?: SortOrder
    status?: SortOrder
    lastLoginAt?: SortOrder
    failedLoginAttempts?: SortOrder
    lockedUntil?: SortOrder
    ageVerified?: SortOrder
    ageVerificationMethod?: SortOrder
    ageVerifiedAt?: SortOrder
    ageVerifiedBy?: SortOrder
    termsAcceptedAt?: SortOrder
    privacyAcceptedAt?: SortOrder
    marketingConsent?: SortOrder
    gdprConsent?: SortOrder
    ccpaOptOut?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    createdBy?: SortOrder
    updatedBy?: SortOrder
  }

  export type UserAvgOrderByAggregateInput = {
    failedLoginAttempts?: SortOrder
  }

  export type UserMaxOrderByAggregateInput = {
    id?: SortOrder
    email?: SortOrder
    emailVerified?: SortOrder
    passwordHash?: SortOrder
    role?: SortOrder
    firstName?: SortOrder
    lastName?: SortOrder
    phone?: SortOrder
    dateOfBirth?: SortOrder
    status?: SortOrder
    lastLoginAt?: SortOrder
    failedLoginAttempts?: SortOrder
    lockedUntil?: SortOrder
    ageVerified?: SortOrder
    ageVerificationMethod?: SortOrder
    ageVerifiedAt?: SortOrder
    ageVerifiedBy?: SortOrder
    termsAcceptedAt?: SortOrder
    privacyAcceptedAt?: SortOrder
    marketingConsent?: SortOrder
    gdprConsent?: SortOrder
    ccpaOptOut?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    createdBy?: SortOrder
    updatedBy?: SortOrder
  }

  export type UserMinOrderByAggregateInput = {
    id?: SortOrder
    email?: SortOrder
    emailVerified?: SortOrder
    passwordHash?: SortOrder
    role?: SortOrder
    firstName?: SortOrder
    lastName?: SortOrder
    phone?: SortOrder
    dateOfBirth?: SortOrder
    status?: SortOrder
    lastLoginAt?: SortOrder
    failedLoginAttempts?: SortOrder
    lockedUntil?: SortOrder
    ageVerified?: SortOrder
    ageVerificationMethod?: SortOrder
    ageVerifiedAt?: SortOrder
    ageVerifiedBy?: SortOrder
    termsAcceptedAt?: SortOrder
    privacyAcceptedAt?: SortOrder
    marketingConsent?: SortOrder
    gdprConsent?: SortOrder
    ccpaOptOut?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    createdBy?: SortOrder
    updatedBy?: SortOrder
  }

  export type UserSumOrderByAggregateInput = {
    failedLoginAttempts?: SortOrder
  }

  export type StringWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringWithAggregatesFilter<$PrismaModel> | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedStringFilter<$PrismaModel>
    _max?: NestedStringFilter<$PrismaModel>
  }

  export type BoolWithAggregatesFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolWithAggregatesFilter<$PrismaModel> | boolean
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedBoolFilter<$PrismaModel>
    _max?: NestedBoolFilter<$PrismaModel>
  }

  export type EnumUserRoleWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.UserRole | EnumUserRoleFieldRefInput<$PrismaModel>
    in?: $Enums.UserRole[] | ListEnumUserRoleFieldRefInput<$PrismaModel>
    notIn?: $Enums.UserRole[] | ListEnumUserRoleFieldRefInput<$PrismaModel>
    not?: NestedEnumUserRoleWithAggregatesFilter<$PrismaModel> | $Enums.UserRole
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumUserRoleFilter<$PrismaModel>
    _max?: NestedEnumUserRoleFilter<$PrismaModel>
  }

  export type StringNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringNullableWithAggregatesFilter<$PrismaModel> | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedStringNullableFilter<$PrismaModel>
    _max?: NestedStringNullableFilter<$PrismaModel>
  }

  export type DateTimeNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableWithAggregatesFilter<$PrismaModel> | Date | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedDateTimeNullableFilter<$PrismaModel>
    _max?: NestedDateTimeNullableFilter<$PrismaModel>
  }

  export type EnumUserStatusWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.UserStatus | EnumUserStatusFieldRefInput<$PrismaModel>
    in?: $Enums.UserStatus[] | ListEnumUserStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.UserStatus[] | ListEnumUserStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumUserStatusWithAggregatesFilter<$PrismaModel> | $Enums.UserStatus
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumUserStatusFilter<$PrismaModel>
    _max?: NestedEnumUserStatusFilter<$PrismaModel>
  }

  export type IntWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedIntFilter<$PrismaModel>
    _min?: NestedIntFilter<$PrismaModel>
    _max?: NestedIntFilter<$PrismaModel>
  }

  export type EnumAgeVerificationMethodNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.AgeVerificationMethod | EnumAgeVerificationMethodFieldRefInput<$PrismaModel> | null
    in?: $Enums.AgeVerificationMethod[] | ListEnumAgeVerificationMethodFieldRefInput<$PrismaModel> | null
    notIn?: $Enums.AgeVerificationMethod[] | ListEnumAgeVerificationMethodFieldRefInput<$PrismaModel> | null
    not?: NestedEnumAgeVerificationMethodNullableWithAggregatesFilter<$PrismaModel> | $Enums.AgeVerificationMethod | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedEnumAgeVerificationMethodNullableFilter<$PrismaModel>
    _max?: NestedEnumAgeVerificationMethodNullableFilter<$PrismaModel>
  }

  export type DateTimeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeWithAggregatesFilter<$PrismaModel> | Date | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedDateTimeFilter<$PrismaModel>
    _max?: NestedDateTimeFilter<$PrismaModel>
  }

  export type EnumAddressTypeFilter<$PrismaModel = never> = {
    equals?: $Enums.AddressType | EnumAddressTypeFieldRefInput<$PrismaModel>
    in?: $Enums.AddressType[] | ListEnumAddressTypeFieldRefInput<$PrismaModel>
    notIn?: $Enums.AddressType[] | ListEnumAddressTypeFieldRefInput<$PrismaModel>
    not?: NestedEnumAddressTypeFilter<$PrismaModel> | $Enums.AddressType
  }

  export type DecimalNullableFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel> | null
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel> | null
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel> | null
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalNullableFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string | null
  }

  export type UserRelationFilter = {
    is?: UserWhereInput
    isNot?: UserWhereInput
  }

  export type UserAddressCountOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
    type?: SortOrder
    addressLine1?: SortOrder
    addressLine2?: SortOrder
    city?: SortOrder
    state?: SortOrder
    postalCode?: SortOrder
    country?: SortOrder
    latitude?: SortOrder
    longitude?: SortOrder
    isDefault?: SortOrder
    verified?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type UserAddressAvgOrderByAggregateInput = {
    latitude?: SortOrder
    longitude?: SortOrder
  }

  export type UserAddressMaxOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
    type?: SortOrder
    addressLine1?: SortOrder
    addressLine2?: SortOrder
    city?: SortOrder
    state?: SortOrder
    postalCode?: SortOrder
    country?: SortOrder
    latitude?: SortOrder
    longitude?: SortOrder
    isDefault?: SortOrder
    verified?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type UserAddressMinOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
    type?: SortOrder
    addressLine1?: SortOrder
    addressLine2?: SortOrder
    city?: SortOrder
    state?: SortOrder
    postalCode?: SortOrder
    country?: SortOrder
    latitude?: SortOrder
    longitude?: SortOrder
    isDefault?: SortOrder
    verified?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type UserAddressSumOrderByAggregateInput = {
    latitude?: SortOrder
    longitude?: SortOrder
  }

  export type EnumAddressTypeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.AddressType | EnumAddressTypeFieldRefInput<$PrismaModel>
    in?: $Enums.AddressType[] | ListEnumAddressTypeFieldRefInput<$PrismaModel>
    notIn?: $Enums.AddressType[] | ListEnumAddressTypeFieldRefInput<$PrismaModel>
    not?: NestedEnumAddressTypeWithAggregatesFilter<$PrismaModel> | $Enums.AddressType
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumAddressTypeFilter<$PrismaModel>
    _max?: NestedEnumAddressTypeFilter<$PrismaModel>
  }

  export type DecimalNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel> | null
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel> | null
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel> | null
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalNullableWithAggregatesFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedDecimalNullableFilter<$PrismaModel>
    _sum?: NestedDecimalNullableFilter<$PrismaModel>
    _min?: NestedDecimalNullableFilter<$PrismaModel>
    _max?: NestedDecimalNullableFilter<$PrismaModel>
  }

  export type UserSessionCountOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
    refreshTokenHash?: SortOrder
    deviceFingerprint?: SortOrder
    ipAddress?: SortOrder
    userAgent?: SortOrder
    locationCountry?: SortOrder
    locationRegion?: SortOrder
    locationCity?: SortOrder
    isActive?: SortOrder
    expiresAt?: SortOrder
    lastUsedAt?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type UserSessionMaxOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
    refreshTokenHash?: SortOrder
    deviceFingerprint?: SortOrder
    ipAddress?: SortOrder
    userAgent?: SortOrder
    locationCountry?: SortOrder
    locationRegion?: SortOrder
    locationCity?: SortOrder
    isActive?: SortOrder
    expiresAt?: SortOrder
    lastUsedAt?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type UserSessionMinOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
    refreshTokenHash?: SortOrder
    deviceFingerprint?: SortOrder
    ipAddress?: SortOrder
    userAgent?: SortOrder
    locationCountry?: SortOrder
    locationRegion?: SortOrder
    locationCity?: SortOrder
    isActive?: SortOrder
    expiresAt?: SortOrder
    lastUsedAt?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type DecimalFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel>
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel>
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string
  }

  export type EnumBusinessTypeFilter<$PrismaModel = never> = {
    equals?: $Enums.BusinessType | EnumBusinessTypeFieldRefInput<$PrismaModel>
    in?: $Enums.BusinessType[] | ListEnumBusinessTypeFieldRefInput<$PrismaModel>
    notIn?: $Enums.BusinessType[] | ListEnumBusinessTypeFieldRefInput<$PrismaModel>
    not?: NestedEnumBusinessTypeFilter<$PrismaModel> | $Enums.BusinessType
  }
  export type JsonNullableFilter<$PrismaModel = never> = 
    | PatchUndefined<
        Either<Required<JsonNullableFilterBase<$PrismaModel>>, Exclude<keyof Required<JsonNullableFilterBase<$PrismaModel>>, 'path'>>,
        Required<JsonNullableFilterBase<$PrismaModel>>
      >
    | OptionalFlat<Omit<Required<JsonNullableFilterBase<$PrismaModel>>, 'path'>>

  export type JsonNullableFilterBase<$PrismaModel = never> = {
    equals?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
    path?: string[]
    string_contains?: string | StringFieldRefInput<$PrismaModel>
    string_starts_with?: string | StringFieldRefInput<$PrismaModel>
    string_ends_with?: string | StringFieldRefInput<$PrismaModel>
    array_contains?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_starts_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_ends_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    lt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    lte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    not?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
  }

  export type IntNullableFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableFilter<$PrismaModel> | number | null
  }

  export type EnumStoreStatusFilter<$PrismaModel = never> = {
    equals?: $Enums.StoreStatus | EnumStoreStatusFieldRefInput<$PrismaModel>
    in?: $Enums.StoreStatus[] | ListEnumStoreStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.StoreStatus[] | ListEnumStoreStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumStoreStatusFilter<$PrismaModel> | $Enums.StoreStatus
  }

  export type EnumComplianceStatusFilter<$PrismaModel = never> = {
    equals?: $Enums.ComplianceStatus | EnumComplianceStatusFieldRefInput<$PrismaModel>
    in?: $Enums.ComplianceStatus[] | ListEnumComplianceStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.ComplianceStatus[] | ListEnumComplianceStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumComplianceStatusFilter<$PrismaModel> | $Enums.ComplianceStatus
  }

  export type EnumTrackTraceSystemNullableFilter<$PrismaModel = never> = {
    equals?: $Enums.TrackTraceSystem | EnumTrackTraceSystemFieldRefInput<$PrismaModel> | null
    in?: $Enums.TrackTraceSystem[] | ListEnumTrackTraceSystemFieldRefInput<$PrismaModel> | null
    notIn?: $Enums.TrackTraceSystem[] | ListEnumTrackTraceSystemFieldRefInput<$PrismaModel> | null
    not?: NestedEnumTrackTraceSystemNullableFilter<$PrismaModel> | $Enums.TrackTraceSystem | null
  }

  export type ProductListRelationFilter = {
    every?: ProductWhereInput
    some?: ProductWhereInput
    none?: ProductWhereInput
  }

  export type ProductOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type StoreCountOrderByAggregateInput = {
    id?: SortOrder
    ownerId?: SortOrder
    name?: SortOrder
    slug?: SortOrder
    description?: SortOrder
    email?: SortOrder
    phone?: SortOrder
    website?: SortOrder
    addressLine1?: SortOrder
    addressLine2?: SortOrder
    city?: SortOrder
    state?: SortOrder
    postalCode?: SortOrder
    latitude?: SortOrder
    longitude?: SortOrder
    businessType?: SortOrder
    licenseNumber?: SortOrder
    licenseType?: SortOrder
    licenseState?: SortOrder
    licenseExpiresAt?: SortOrder
    features?: SortOrder
    paymentMethods?: SortOrder
    deliveryRadius?: SortOrder
    minimumOrder?: SortOrder
    deliveryFee?: SortOrder
    operatingHours?: SortOrder
    status?: SortOrder
    verified?: SortOrder
    verifiedAt?: SortOrder
    verifiedBy?: SortOrder
    logoUrl?: SortOrder
    coverImageUrl?: SortOrder
    galleryImages?: SortOrder
    metaTitle?: SortOrder
    metaDescription?: SortOrder
    socialMedia?: SortOrder
    metrcLicenseId?: SortOrder
    metrcLastSync?: SortOrder
    complianceStatus?: SortOrder
    trackTraceSystem?: SortOrder
    totalProducts?: SortOrder
    averageRating?: SortOrder
    totalReviews?: SortOrder
    totalOrders?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    createdBy?: SortOrder
    updatedBy?: SortOrder
  }

  export type StoreAvgOrderByAggregateInput = {
    latitude?: SortOrder
    longitude?: SortOrder
    deliveryRadius?: SortOrder
    minimumOrder?: SortOrder
    deliveryFee?: SortOrder
    totalProducts?: SortOrder
    averageRating?: SortOrder
    totalReviews?: SortOrder
    totalOrders?: SortOrder
  }

  export type StoreMaxOrderByAggregateInput = {
    id?: SortOrder
    ownerId?: SortOrder
    name?: SortOrder
    slug?: SortOrder
    description?: SortOrder
    email?: SortOrder
    phone?: SortOrder
    website?: SortOrder
    addressLine1?: SortOrder
    addressLine2?: SortOrder
    city?: SortOrder
    state?: SortOrder
    postalCode?: SortOrder
    latitude?: SortOrder
    longitude?: SortOrder
    businessType?: SortOrder
    licenseNumber?: SortOrder
    licenseType?: SortOrder
    licenseState?: SortOrder
    licenseExpiresAt?: SortOrder
    deliveryRadius?: SortOrder
    minimumOrder?: SortOrder
    deliveryFee?: SortOrder
    status?: SortOrder
    verified?: SortOrder
    verifiedAt?: SortOrder
    verifiedBy?: SortOrder
    logoUrl?: SortOrder
    coverImageUrl?: SortOrder
    metaTitle?: SortOrder
    metaDescription?: SortOrder
    metrcLicenseId?: SortOrder
    metrcLastSync?: SortOrder
    complianceStatus?: SortOrder
    trackTraceSystem?: SortOrder
    totalProducts?: SortOrder
    averageRating?: SortOrder
    totalReviews?: SortOrder
    totalOrders?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    createdBy?: SortOrder
    updatedBy?: SortOrder
  }

  export type StoreMinOrderByAggregateInput = {
    id?: SortOrder
    ownerId?: SortOrder
    name?: SortOrder
    slug?: SortOrder
    description?: SortOrder
    email?: SortOrder
    phone?: SortOrder
    website?: SortOrder
    addressLine1?: SortOrder
    addressLine2?: SortOrder
    city?: SortOrder
    state?: SortOrder
    postalCode?: SortOrder
    latitude?: SortOrder
    longitude?: SortOrder
    businessType?: SortOrder
    licenseNumber?: SortOrder
    licenseType?: SortOrder
    licenseState?: SortOrder
    licenseExpiresAt?: SortOrder
    deliveryRadius?: SortOrder
    minimumOrder?: SortOrder
    deliveryFee?: SortOrder
    status?: SortOrder
    verified?: SortOrder
    verifiedAt?: SortOrder
    verifiedBy?: SortOrder
    logoUrl?: SortOrder
    coverImageUrl?: SortOrder
    metaTitle?: SortOrder
    metaDescription?: SortOrder
    metrcLicenseId?: SortOrder
    metrcLastSync?: SortOrder
    complianceStatus?: SortOrder
    trackTraceSystem?: SortOrder
    totalProducts?: SortOrder
    averageRating?: SortOrder
    totalReviews?: SortOrder
    totalOrders?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    createdBy?: SortOrder
    updatedBy?: SortOrder
  }

  export type StoreSumOrderByAggregateInput = {
    latitude?: SortOrder
    longitude?: SortOrder
    deliveryRadius?: SortOrder
    minimumOrder?: SortOrder
    deliveryFee?: SortOrder
    totalProducts?: SortOrder
    averageRating?: SortOrder
    totalReviews?: SortOrder
    totalOrders?: SortOrder
  }

  export type DecimalWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel>
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel>
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalWithAggregatesFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedDecimalFilter<$PrismaModel>
    _sum?: NestedDecimalFilter<$PrismaModel>
    _min?: NestedDecimalFilter<$PrismaModel>
    _max?: NestedDecimalFilter<$PrismaModel>
  }

  export type EnumBusinessTypeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.BusinessType | EnumBusinessTypeFieldRefInput<$PrismaModel>
    in?: $Enums.BusinessType[] | ListEnumBusinessTypeFieldRefInput<$PrismaModel>
    notIn?: $Enums.BusinessType[] | ListEnumBusinessTypeFieldRefInput<$PrismaModel>
    not?: NestedEnumBusinessTypeWithAggregatesFilter<$PrismaModel> | $Enums.BusinessType
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumBusinessTypeFilter<$PrismaModel>
    _max?: NestedEnumBusinessTypeFilter<$PrismaModel>
  }
  export type JsonNullableWithAggregatesFilter<$PrismaModel = never> = 
    | PatchUndefined<
        Either<Required<JsonNullableWithAggregatesFilterBase<$PrismaModel>>, Exclude<keyof Required<JsonNullableWithAggregatesFilterBase<$PrismaModel>>, 'path'>>,
        Required<JsonNullableWithAggregatesFilterBase<$PrismaModel>>
      >
    | OptionalFlat<Omit<Required<JsonNullableWithAggregatesFilterBase<$PrismaModel>>, 'path'>>

  export type JsonNullableWithAggregatesFilterBase<$PrismaModel = never> = {
    equals?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
    path?: string[]
    string_contains?: string | StringFieldRefInput<$PrismaModel>
    string_starts_with?: string | StringFieldRefInput<$PrismaModel>
    string_ends_with?: string | StringFieldRefInput<$PrismaModel>
    array_contains?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_starts_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_ends_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    lt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    lte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    not?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedJsonNullableFilter<$PrismaModel>
    _max?: NestedJsonNullableFilter<$PrismaModel>
  }

  export type IntNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableWithAggregatesFilter<$PrismaModel> | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedIntNullableFilter<$PrismaModel>
    _max?: NestedIntNullableFilter<$PrismaModel>
  }

  export type EnumStoreStatusWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.StoreStatus | EnumStoreStatusFieldRefInput<$PrismaModel>
    in?: $Enums.StoreStatus[] | ListEnumStoreStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.StoreStatus[] | ListEnumStoreStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumStoreStatusWithAggregatesFilter<$PrismaModel> | $Enums.StoreStatus
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumStoreStatusFilter<$PrismaModel>
    _max?: NestedEnumStoreStatusFilter<$PrismaModel>
  }

  export type EnumComplianceStatusWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.ComplianceStatus | EnumComplianceStatusFieldRefInput<$PrismaModel>
    in?: $Enums.ComplianceStatus[] | ListEnumComplianceStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.ComplianceStatus[] | ListEnumComplianceStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumComplianceStatusWithAggregatesFilter<$PrismaModel> | $Enums.ComplianceStatus
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumComplianceStatusFilter<$PrismaModel>
    _max?: NestedEnumComplianceStatusFilter<$PrismaModel>
  }

  export type EnumTrackTraceSystemNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.TrackTraceSystem | EnumTrackTraceSystemFieldRefInput<$PrismaModel> | null
    in?: $Enums.TrackTraceSystem[] | ListEnumTrackTraceSystemFieldRefInput<$PrismaModel> | null
    notIn?: $Enums.TrackTraceSystem[] | ListEnumTrackTraceSystemFieldRefInput<$PrismaModel> | null
    not?: NestedEnumTrackTraceSystemNullableWithAggregatesFilter<$PrismaModel> | $Enums.TrackTraceSystem | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedEnumTrackTraceSystemNullableFilter<$PrismaModel>
    _max?: NestedEnumTrackTraceSystemNullableFilter<$PrismaModel>
  }

  export type StoreRelationFilter = {
    is?: StoreWhereInput
    isNot?: StoreWhereInput
  }

  export type StoreStaffStoreIdUserIdCompoundUniqueInput = {
    storeId: string
    userId: string
  }

  export type StoreStaffCountOrderByAggregateInput = {
    id?: SortOrder
    storeId?: SortOrder
    userId?: SortOrder
    role?: SortOrder
    permissions?: SortOrder
    employeeId?: SortOrder
    startDate?: SortOrder
    endDate?: SortOrder
    hourlyWage?: SortOrder
    commissionRate?: SortOrder
    status?: SortOrder
    canAccessPos?: SortOrder
    canManageInventory?: SortOrder
    canProcessOrders?: SortOrder
    complianceTrainingCompleted?: SortOrder
    trainingCompletedAt?: SortOrder
    trainingExpiresAt?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    createdBy?: SortOrder
  }

  export type StoreStaffAvgOrderByAggregateInput = {
    hourlyWage?: SortOrder
    commissionRate?: SortOrder
  }

  export type StoreStaffMaxOrderByAggregateInput = {
    id?: SortOrder
    storeId?: SortOrder
    userId?: SortOrder
    role?: SortOrder
    employeeId?: SortOrder
    startDate?: SortOrder
    endDate?: SortOrder
    hourlyWage?: SortOrder
    commissionRate?: SortOrder
    status?: SortOrder
    canAccessPos?: SortOrder
    canManageInventory?: SortOrder
    canProcessOrders?: SortOrder
    complianceTrainingCompleted?: SortOrder
    trainingCompletedAt?: SortOrder
    trainingExpiresAt?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    createdBy?: SortOrder
  }

  export type StoreStaffMinOrderByAggregateInput = {
    id?: SortOrder
    storeId?: SortOrder
    userId?: SortOrder
    role?: SortOrder
    employeeId?: SortOrder
    startDate?: SortOrder
    endDate?: SortOrder
    hourlyWage?: SortOrder
    commissionRate?: SortOrder
    status?: SortOrder
    canAccessPos?: SortOrder
    canManageInventory?: SortOrder
    canProcessOrders?: SortOrder
    complianceTrainingCompleted?: SortOrder
    trainingCompletedAt?: SortOrder
    trainingExpiresAt?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    createdBy?: SortOrder
  }

  export type StoreStaffSumOrderByAggregateInput = {
    hourlyWage?: SortOrder
    commissionRate?: SortOrder
  }

  export type EnumProductTypeFilter<$PrismaModel = never> = {
    equals?: $Enums.ProductType | EnumProductTypeFieldRefInput<$PrismaModel>
    in?: $Enums.ProductType[] | ListEnumProductTypeFieldRefInput<$PrismaModel>
    notIn?: $Enums.ProductType[] | ListEnumProductTypeFieldRefInput<$PrismaModel>
    not?: NestedEnumProductTypeFilter<$PrismaModel> | $Enums.ProductType
  }

  export type ProductCategoryNullableRelationFilter = {
    is?: ProductCategoryWhereInput | null
    isNot?: ProductCategoryWhereInput | null
  }

  export type ProductCategoryListRelationFilter = {
    every?: ProductCategoryWhereInput
    some?: ProductCategoryWhereInput
    none?: ProductCategoryWhereInput
  }

  export type ProductCategoryOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type ProductCategoryCountOrderByAggregateInput = {
    id?: SortOrder
    parentId?: SortOrder
    name?: SortOrder
    slug?: SortOrder
    description?: SortOrder
    iconName?: SortOrder
    colorHex?: SortOrder
    sortOrder?: SortOrder
    productType?: SortOrder
    thcCategory?: SortOrder
    consumptionMethod?: SortOrder
    metaTitle?: SortOrder
    metaDescription?: SortOrder
    isActive?: SortOrder
    requiresCompliance?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type ProductCategoryAvgOrderByAggregateInput = {
    sortOrder?: SortOrder
  }

  export type ProductCategoryMaxOrderByAggregateInput = {
    id?: SortOrder
    parentId?: SortOrder
    name?: SortOrder
    slug?: SortOrder
    description?: SortOrder
    iconName?: SortOrder
    colorHex?: SortOrder
    sortOrder?: SortOrder
    productType?: SortOrder
    thcCategory?: SortOrder
    consumptionMethod?: SortOrder
    metaTitle?: SortOrder
    metaDescription?: SortOrder
    isActive?: SortOrder
    requiresCompliance?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type ProductCategoryMinOrderByAggregateInput = {
    id?: SortOrder
    parentId?: SortOrder
    name?: SortOrder
    slug?: SortOrder
    description?: SortOrder
    iconName?: SortOrder
    colorHex?: SortOrder
    sortOrder?: SortOrder
    productType?: SortOrder
    thcCategory?: SortOrder
    consumptionMethod?: SortOrder
    metaTitle?: SortOrder
    metaDescription?: SortOrder
    isActive?: SortOrder
    requiresCompliance?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type ProductCategorySumOrderByAggregateInput = {
    sortOrder?: SortOrder
  }

  export type EnumProductTypeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.ProductType | EnumProductTypeFieldRefInput<$PrismaModel>
    in?: $Enums.ProductType[] | ListEnumProductTypeFieldRefInput<$PrismaModel>
    notIn?: $Enums.ProductType[] | ListEnumProductTypeFieldRefInput<$PrismaModel>
    not?: NestedEnumProductTypeWithAggregatesFilter<$PrismaModel> | $Enums.ProductType
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumProductTypeFilter<$PrismaModel>
    _max?: NestedEnumProductTypeFilter<$PrismaModel>
  }

  export type EnumStrainTypeNullableFilter<$PrismaModel = never> = {
    equals?: $Enums.StrainType | EnumStrainTypeFieldRefInput<$PrismaModel> | null
    in?: $Enums.StrainType[] | ListEnumStrainTypeFieldRefInput<$PrismaModel> | null
    notIn?: $Enums.StrainType[] | ListEnumStrainTypeFieldRefInput<$PrismaModel> | null
    not?: NestedEnumStrainTypeNullableFilter<$PrismaModel> | $Enums.StrainType | null
  }

  export type EnumProductStatusFilter<$PrismaModel = never> = {
    equals?: $Enums.ProductStatus | EnumProductStatusFieldRefInput<$PrismaModel>
    in?: $Enums.ProductStatus[] | ListEnumProductStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.ProductStatus[] | ListEnumProductStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumProductStatusFilter<$PrismaModel> | $Enums.ProductStatus
  }

  export type ProductCategoryRelationFilter = {
    is?: ProductCategoryWhereInput
    isNot?: ProductCategoryWhereInput
  }

  export type OrderItemListRelationFilter = {
    every?: OrderItemWhereInput
    some?: OrderItemWhereInput
    none?: OrderItemWhereInput
  }

  export type OrderItemOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type ProductStoreIdSkuCompoundUniqueInput = {
    storeId: string
    sku: string
  }

  export type ProductCountOrderByAggregateInput = {
    id?: SortOrder
    storeId?: SortOrder
    categoryId?: SortOrder
    name?: SortOrder
    slug?: SortOrder
    description?: SortOrder
    shortDescription?: SortOrder
    strainName?: SortOrder
    strainType?: SortOrder
    brand?: SortOrder
    manufacturer?: SortOrder
    thcPercentage?: SortOrder
    cbdPercentage?: SortOrder
    thcaPercentage?: SortOrder
    cbdaPercentage?: SortOrder
    totalCannabinoids?: SortOrder
    basePrice?: SortOrder
    salePrice?: SortOrder
    costPrice?: SortOrder
    weightGrams?: SortOrder
    sku?: SortOrder
    barcode?: SortOrder
    stockQuantity?: SortOrder
    reservedQuantity?: SortOrder
    lowStockThreshold?: SortOrder
    metrcId?: SortOrder
    batchNumber?: SortOrder
    harvestDate?: SortOrder
    packageDate?: SortOrder
    expirationDate?: SortOrder
    labTested?: SortOrder
    labTestResults?: SortOrder
    testedDate?: SortOrder
    testingLab?: SortOrder
    featuredImageUrl?: SortOrder
    galleryImages?: SortOrder
    status?: SortOrder
    isFeatured?: SortOrder
    isMedicalOnly?: SortOrder
    ageRestriction?: SortOrder
    metaTitle?: SortOrder
    metaDescription?: SortOrder
    tags?: SortOrder
    searchKeywords?: SortOrder
    viewCount?: SortOrder
    averageRating?: SortOrder
    reviewCount?: SortOrder
    salesCount?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    createdBy?: SortOrder
    updatedBy?: SortOrder
  }

  export type ProductAvgOrderByAggregateInput = {
    thcPercentage?: SortOrder
    cbdPercentage?: SortOrder
    thcaPercentage?: SortOrder
    cbdaPercentage?: SortOrder
    totalCannabinoids?: SortOrder
    basePrice?: SortOrder
    salePrice?: SortOrder
    costPrice?: SortOrder
    weightGrams?: SortOrder
    stockQuantity?: SortOrder
    reservedQuantity?: SortOrder
    lowStockThreshold?: SortOrder
    ageRestriction?: SortOrder
    viewCount?: SortOrder
    averageRating?: SortOrder
    reviewCount?: SortOrder
    salesCount?: SortOrder
  }

  export type ProductMaxOrderByAggregateInput = {
    id?: SortOrder
    storeId?: SortOrder
    categoryId?: SortOrder
    name?: SortOrder
    slug?: SortOrder
    description?: SortOrder
    shortDescription?: SortOrder
    strainName?: SortOrder
    strainType?: SortOrder
    brand?: SortOrder
    manufacturer?: SortOrder
    thcPercentage?: SortOrder
    cbdPercentage?: SortOrder
    thcaPercentage?: SortOrder
    cbdaPercentage?: SortOrder
    totalCannabinoids?: SortOrder
    basePrice?: SortOrder
    salePrice?: SortOrder
    costPrice?: SortOrder
    weightGrams?: SortOrder
    sku?: SortOrder
    barcode?: SortOrder
    stockQuantity?: SortOrder
    reservedQuantity?: SortOrder
    lowStockThreshold?: SortOrder
    metrcId?: SortOrder
    batchNumber?: SortOrder
    harvestDate?: SortOrder
    packageDate?: SortOrder
    expirationDate?: SortOrder
    labTested?: SortOrder
    testedDate?: SortOrder
    testingLab?: SortOrder
    featuredImageUrl?: SortOrder
    status?: SortOrder
    isFeatured?: SortOrder
    isMedicalOnly?: SortOrder
    ageRestriction?: SortOrder
    metaTitle?: SortOrder
    metaDescription?: SortOrder
    searchKeywords?: SortOrder
    viewCount?: SortOrder
    averageRating?: SortOrder
    reviewCount?: SortOrder
    salesCount?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    createdBy?: SortOrder
    updatedBy?: SortOrder
  }

  export type ProductMinOrderByAggregateInput = {
    id?: SortOrder
    storeId?: SortOrder
    categoryId?: SortOrder
    name?: SortOrder
    slug?: SortOrder
    description?: SortOrder
    shortDescription?: SortOrder
    strainName?: SortOrder
    strainType?: SortOrder
    brand?: SortOrder
    manufacturer?: SortOrder
    thcPercentage?: SortOrder
    cbdPercentage?: SortOrder
    thcaPercentage?: SortOrder
    cbdaPercentage?: SortOrder
    totalCannabinoids?: SortOrder
    basePrice?: SortOrder
    salePrice?: SortOrder
    costPrice?: SortOrder
    weightGrams?: SortOrder
    sku?: SortOrder
    barcode?: SortOrder
    stockQuantity?: SortOrder
    reservedQuantity?: SortOrder
    lowStockThreshold?: SortOrder
    metrcId?: SortOrder
    batchNumber?: SortOrder
    harvestDate?: SortOrder
    packageDate?: SortOrder
    expirationDate?: SortOrder
    labTested?: SortOrder
    testedDate?: SortOrder
    testingLab?: SortOrder
    featuredImageUrl?: SortOrder
    status?: SortOrder
    isFeatured?: SortOrder
    isMedicalOnly?: SortOrder
    ageRestriction?: SortOrder
    metaTitle?: SortOrder
    metaDescription?: SortOrder
    searchKeywords?: SortOrder
    viewCount?: SortOrder
    averageRating?: SortOrder
    reviewCount?: SortOrder
    salesCount?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    createdBy?: SortOrder
    updatedBy?: SortOrder
  }

  export type ProductSumOrderByAggregateInput = {
    thcPercentage?: SortOrder
    cbdPercentage?: SortOrder
    thcaPercentage?: SortOrder
    cbdaPercentage?: SortOrder
    totalCannabinoids?: SortOrder
    basePrice?: SortOrder
    salePrice?: SortOrder
    costPrice?: SortOrder
    weightGrams?: SortOrder
    stockQuantity?: SortOrder
    reservedQuantity?: SortOrder
    lowStockThreshold?: SortOrder
    ageRestriction?: SortOrder
    viewCount?: SortOrder
    averageRating?: SortOrder
    reviewCount?: SortOrder
    salesCount?: SortOrder
  }

  export type EnumStrainTypeNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.StrainType | EnumStrainTypeFieldRefInput<$PrismaModel> | null
    in?: $Enums.StrainType[] | ListEnumStrainTypeFieldRefInput<$PrismaModel> | null
    notIn?: $Enums.StrainType[] | ListEnumStrainTypeFieldRefInput<$PrismaModel> | null
    not?: NestedEnumStrainTypeNullableWithAggregatesFilter<$PrismaModel> | $Enums.StrainType | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedEnumStrainTypeNullableFilter<$PrismaModel>
    _max?: NestedEnumStrainTypeNullableFilter<$PrismaModel>
  }

  export type EnumProductStatusWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.ProductStatus | EnumProductStatusFieldRefInput<$PrismaModel>
    in?: $Enums.ProductStatus[] | ListEnumProductStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.ProductStatus[] | ListEnumProductStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumProductStatusWithAggregatesFilter<$PrismaModel> | $Enums.ProductStatus
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumProductStatusFilter<$PrismaModel>
    _max?: NestedEnumProductStatusFilter<$PrismaModel>
  }

  export type EnumOrderTypeFilter<$PrismaModel = never> = {
    equals?: $Enums.OrderType | EnumOrderTypeFieldRefInput<$PrismaModel>
    in?: $Enums.OrderType[] | ListEnumOrderTypeFieldRefInput<$PrismaModel>
    notIn?: $Enums.OrderType[] | ListEnumOrderTypeFieldRefInput<$PrismaModel>
    not?: NestedEnumOrderTypeFilter<$PrismaModel> | $Enums.OrderType
  }

  export type EnumOrderStatusFilter<$PrismaModel = never> = {
    equals?: $Enums.OrderStatus | EnumOrderStatusFieldRefInput<$PrismaModel>
    in?: $Enums.OrderStatus[] | ListEnumOrderStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.OrderStatus[] | ListEnumOrderStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumOrderStatusFilter<$PrismaModel> | $Enums.OrderStatus
  }

  export type EnumPaymentStatusFilter<$PrismaModel = never> = {
    equals?: $Enums.PaymentStatus | EnumPaymentStatusFieldRefInput<$PrismaModel>
    in?: $Enums.PaymentStatus[] | ListEnumPaymentStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.PaymentStatus[] | ListEnumPaymentStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumPaymentStatusFilter<$PrismaModel> | $Enums.PaymentStatus
  }

  export type EnumPaymentMethodFilter<$PrismaModel = never> = {
    equals?: $Enums.PaymentMethod | EnumPaymentMethodFieldRefInput<$PrismaModel>
    in?: $Enums.PaymentMethod[] | ListEnumPaymentMethodFieldRefInput<$PrismaModel>
    notIn?: $Enums.PaymentMethod[] | ListEnumPaymentMethodFieldRefInput<$PrismaModel>
    not?: NestedEnumPaymentMethodFilter<$PrismaModel> | $Enums.PaymentMethod
  }

  export type OrderCountOrderByAggregateInput = {
    id?: SortOrder
    orderNumber?: SortOrder
    userId?: SortOrder
    storeId?: SortOrder
    orderType?: SortOrder
    fulfillmentStatus?: SortOrder
    deliveryAddress?: SortOrder
    deliveryInstructions?: SortOrder
    deliveryTimeRequested?: SortOrder
    deliveryTimeActual?: SortOrder
    deliveryPersonId?: SortOrder
    subtotal?: SortOrder
    taxAmount?: SortOrder
    deliveryFee?: SortOrder
    serviceFee?: SortOrder
    discountAmount?: SortOrder
    tipAmount?: SortOrder
    totalAmount?: SortOrder
    paymentStatus?: SortOrder
    paymentMethod?: SortOrder
    paymentProvider?: SortOrder
    paymentIntentId?: SortOrder
    ageVerifiedAtDelivery?: SortOrder
    idCheckedBy?: SortOrder
    customerNotes?: SortOrder
    internalNotes?: SortOrder
    metrcTransferManifest?: SortOrder
    complianceCheckPassed?: SortOrder
    complianceCheckedAt?: SortOrder
    complianceCheckedBy?: SortOrder
    cancelledAt?: SortOrder
    cancelledBy?: SortOrder
    cancellationReason?: SortOrder
    refundAmount?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type OrderAvgOrderByAggregateInput = {
    subtotal?: SortOrder
    taxAmount?: SortOrder
    deliveryFee?: SortOrder
    serviceFee?: SortOrder
    discountAmount?: SortOrder
    tipAmount?: SortOrder
    totalAmount?: SortOrder
    refundAmount?: SortOrder
  }

  export type OrderMaxOrderByAggregateInput = {
    id?: SortOrder
    orderNumber?: SortOrder
    userId?: SortOrder
    storeId?: SortOrder
    orderType?: SortOrder
    fulfillmentStatus?: SortOrder
    deliveryInstructions?: SortOrder
    deliveryTimeRequested?: SortOrder
    deliveryTimeActual?: SortOrder
    deliveryPersonId?: SortOrder
    subtotal?: SortOrder
    taxAmount?: SortOrder
    deliveryFee?: SortOrder
    serviceFee?: SortOrder
    discountAmount?: SortOrder
    tipAmount?: SortOrder
    totalAmount?: SortOrder
    paymentStatus?: SortOrder
    paymentMethod?: SortOrder
    paymentProvider?: SortOrder
    paymentIntentId?: SortOrder
    ageVerifiedAtDelivery?: SortOrder
    idCheckedBy?: SortOrder
    customerNotes?: SortOrder
    internalNotes?: SortOrder
    metrcTransferManifest?: SortOrder
    complianceCheckPassed?: SortOrder
    complianceCheckedAt?: SortOrder
    complianceCheckedBy?: SortOrder
    cancelledAt?: SortOrder
    cancelledBy?: SortOrder
    cancellationReason?: SortOrder
    refundAmount?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type OrderMinOrderByAggregateInput = {
    id?: SortOrder
    orderNumber?: SortOrder
    userId?: SortOrder
    storeId?: SortOrder
    orderType?: SortOrder
    fulfillmentStatus?: SortOrder
    deliveryInstructions?: SortOrder
    deliveryTimeRequested?: SortOrder
    deliveryTimeActual?: SortOrder
    deliveryPersonId?: SortOrder
    subtotal?: SortOrder
    taxAmount?: SortOrder
    deliveryFee?: SortOrder
    serviceFee?: SortOrder
    discountAmount?: SortOrder
    tipAmount?: SortOrder
    totalAmount?: SortOrder
    paymentStatus?: SortOrder
    paymentMethod?: SortOrder
    paymentProvider?: SortOrder
    paymentIntentId?: SortOrder
    ageVerifiedAtDelivery?: SortOrder
    idCheckedBy?: SortOrder
    customerNotes?: SortOrder
    internalNotes?: SortOrder
    metrcTransferManifest?: SortOrder
    complianceCheckPassed?: SortOrder
    complianceCheckedAt?: SortOrder
    complianceCheckedBy?: SortOrder
    cancelledAt?: SortOrder
    cancelledBy?: SortOrder
    cancellationReason?: SortOrder
    refundAmount?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type OrderSumOrderByAggregateInput = {
    subtotal?: SortOrder
    taxAmount?: SortOrder
    deliveryFee?: SortOrder
    serviceFee?: SortOrder
    discountAmount?: SortOrder
    tipAmount?: SortOrder
    totalAmount?: SortOrder
    refundAmount?: SortOrder
  }

  export type EnumOrderTypeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.OrderType | EnumOrderTypeFieldRefInput<$PrismaModel>
    in?: $Enums.OrderType[] | ListEnumOrderTypeFieldRefInput<$PrismaModel>
    notIn?: $Enums.OrderType[] | ListEnumOrderTypeFieldRefInput<$PrismaModel>
    not?: NestedEnumOrderTypeWithAggregatesFilter<$PrismaModel> | $Enums.OrderType
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumOrderTypeFilter<$PrismaModel>
    _max?: NestedEnumOrderTypeFilter<$PrismaModel>
  }

  export type EnumOrderStatusWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.OrderStatus | EnumOrderStatusFieldRefInput<$PrismaModel>
    in?: $Enums.OrderStatus[] | ListEnumOrderStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.OrderStatus[] | ListEnumOrderStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumOrderStatusWithAggregatesFilter<$PrismaModel> | $Enums.OrderStatus
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumOrderStatusFilter<$PrismaModel>
    _max?: NestedEnumOrderStatusFilter<$PrismaModel>
  }

  export type EnumPaymentStatusWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.PaymentStatus | EnumPaymentStatusFieldRefInput<$PrismaModel>
    in?: $Enums.PaymentStatus[] | ListEnumPaymentStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.PaymentStatus[] | ListEnumPaymentStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumPaymentStatusWithAggregatesFilter<$PrismaModel> | $Enums.PaymentStatus
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumPaymentStatusFilter<$PrismaModel>
    _max?: NestedEnumPaymentStatusFilter<$PrismaModel>
  }

  export type EnumPaymentMethodWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.PaymentMethod | EnumPaymentMethodFieldRefInput<$PrismaModel>
    in?: $Enums.PaymentMethod[] | ListEnumPaymentMethodFieldRefInput<$PrismaModel>
    notIn?: $Enums.PaymentMethod[] | ListEnumPaymentMethodFieldRefInput<$PrismaModel>
    not?: NestedEnumPaymentMethodWithAggregatesFilter<$PrismaModel> | $Enums.PaymentMethod
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumPaymentMethodFilter<$PrismaModel>
    _max?: NestedEnumPaymentMethodFilter<$PrismaModel>
  }

  export type OrderRelationFilter = {
    is?: OrderWhereInput
    isNot?: OrderWhereInput
  }

  export type ProductRelationFilter = {
    is?: ProductWhereInput
    isNot?: ProductWhereInput
  }

  export type OrderItemCountOrderByAggregateInput = {
    id?: SortOrder
    orderId?: SortOrder
    productId?: SortOrder
    quantity?: SortOrder
    unitPrice?: SortOrder
    totalPrice?: SortOrder
    productName?: SortOrder
    productSku?: SortOrder
    productBrand?: SortOrder
    thcPercentage?: SortOrder
    cbdPercentage?: SortOrder
    weightGrams?: SortOrder
    metrcPackageId?: SortOrder
    batchNumber?: SortOrder
    customerNotes?: SortOrder
    createdAt?: SortOrder
  }

  export type OrderItemAvgOrderByAggregateInput = {
    quantity?: SortOrder
    unitPrice?: SortOrder
    totalPrice?: SortOrder
    thcPercentage?: SortOrder
    cbdPercentage?: SortOrder
    weightGrams?: SortOrder
  }

  export type OrderItemMaxOrderByAggregateInput = {
    id?: SortOrder
    orderId?: SortOrder
    productId?: SortOrder
    quantity?: SortOrder
    unitPrice?: SortOrder
    totalPrice?: SortOrder
    productName?: SortOrder
    productSku?: SortOrder
    productBrand?: SortOrder
    thcPercentage?: SortOrder
    cbdPercentage?: SortOrder
    weightGrams?: SortOrder
    metrcPackageId?: SortOrder
    batchNumber?: SortOrder
    customerNotes?: SortOrder
    createdAt?: SortOrder
  }

  export type OrderItemMinOrderByAggregateInput = {
    id?: SortOrder
    orderId?: SortOrder
    productId?: SortOrder
    quantity?: SortOrder
    unitPrice?: SortOrder
    totalPrice?: SortOrder
    productName?: SortOrder
    productSku?: SortOrder
    productBrand?: SortOrder
    thcPercentage?: SortOrder
    cbdPercentage?: SortOrder
    weightGrams?: SortOrder
    metrcPackageId?: SortOrder
    batchNumber?: SortOrder
    customerNotes?: SortOrder
    createdAt?: SortOrder
  }

  export type OrderItemSumOrderByAggregateInput = {
    quantity?: SortOrder
    unitPrice?: SortOrder
    totalPrice?: SortOrder
    thcPercentage?: SortOrder
    cbdPercentage?: SortOrder
    weightGrams?: SortOrder
  }

  export type EnumReviewableTypeFilter<$PrismaModel = never> = {
    equals?: $Enums.ReviewableType | EnumReviewableTypeFieldRefInput<$PrismaModel>
    in?: $Enums.ReviewableType[] | ListEnumReviewableTypeFieldRefInput<$PrismaModel>
    notIn?: $Enums.ReviewableType[] | ListEnumReviewableTypeFieldRefInput<$PrismaModel>
    not?: NestedEnumReviewableTypeFilter<$PrismaModel> | $Enums.ReviewableType
  }

  export type EnumReviewStatusFilter<$PrismaModel = never> = {
    equals?: $Enums.ReviewStatus | EnumReviewStatusFieldRefInput<$PrismaModel>
    in?: $Enums.ReviewStatus[] | ListEnumReviewStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.ReviewStatus[] | ListEnumReviewStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumReviewStatusFilter<$PrismaModel> | $Enums.ReviewStatus
  }

  export type OrderNullableRelationFilter = {
    is?: OrderWhereInput | null
    isNot?: OrderWhereInput | null
  }

  export type StoreNullableRelationFilter = {
    is?: StoreWhereInput | null
    isNot?: StoreWhereInput | null
  }

  export type ProductNullableRelationFilter = {
    is?: ProductWhereInput | null
    isNot?: ProductWhereInput | null
  }

  export type ReviewUserIdReviewableTypeReviewableIdCompoundUniqueInput = {
    userId: string
    reviewableType: $Enums.ReviewableType
    reviewableId: string
  }

  export type ReviewCountOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
    reviewableType?: SortOrder
    reviewableId?: SortOrder
    rating?: SortOrder
    title?: SortOrder
    content?: SortOrder
    qualityRating?: SortOrder
    valueRating?: SortOrder
    serviceRating?: SortOrder
    effectsRating?: SortOrder
    effects?: SortOrder
    medicalBenefits?: SortOrder
    sideEffects?: SortOrder
    images?: SortOrder
    status?: SortOrder
    moderatedAt?: SortOrder
    moderatedBy?: SortOrder
    moderationReason?: SortOrder
    verifiedPurchase?: SortOrder
    orderId?: SortOrder
    helpfulCount?: SortOrder
    totalVotes?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type ReviewAvgOrderByAggregateInput = {
    rating?: SortOrder
    qualityRating?: SortOrder
    valueRating?: SortOrder
    serviceRating?: SortOrder
    effectsRating?: SortOrder
    helpfulCount?: SortOrder
    totalVotes?: SortOrder
  }

  export type ReviewMaxOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
    reviewableType?: SortOrder
    reviewableId?: SortOrder
    rating?: SortOrder
    title?: SortOrder
    content?: SortOrder
    qualityRating?: SortOrder
    valueRating?: SortOrder
    serviceRating?: SortOrder
    effectsRating?: SortOrder
    status?: SortOrder
    moderatedAt?: SortOrder
    moderatedBy?: SortOrder
    moderationReason?: SortOrder
    verifiedPurchase?: SortOrder
    orderId?: SortOrder
    helpfulCount?: SortOrder
    totalVotes?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type ReviewMinOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
    reviewableType?: SortOrder
    reviewableId?: SortOrder
    rating?: SortOrder
    title?: SortOrder
    content?: SortOrder
    qualityRating?: SortOrder
    valueRating?: SortOrder
    serviceRating?: SortOrder
    effectsRating?: SortOrder
    status?: SortOrder
    moderatedAt?: SortOrder
    moderatedBy?: SortOrder
    moderationReason?: SortOrder
    verifiedPurchase?: SortOrder
    orderId?: SortOrder
    helpfulCount?: SortOrder
    totalVotes?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type ReviewSumOrderByAggregateInput = {
    rating?: SortOrder
    qualityRating?: SortOrder
    valueRating?: SortOrder
    serviceRating?: SortOrder
    effectsRating?: SortOrder
    helpfulCount?: SortOrder
    totalVotes?: SortOrder
  }

  export type EnumReviewableTypeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.ReviewableType | EnumReviewableTypeFieldRefInput<$PrismaModel>
    in?: $Enums.ReviewableType[] | ListEnumReviewableTypeFieldRefInput<$PrismaModel>
    notIn?: $Enums.ReviewableType[] | ListEnumReviewableTypeFieldRefInput<$PrismaModel>
    not?: NestedEnumReviewableTypeWithAggregatesFilter<$PrismaModel> | $Enums.ReviewableType
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumReviewableTypeFilter<$PrismaModel>
    _max?: NestedEnumReviewableTypeFilter<$PrismaModel>
  }

  export type EnumReviewStatusWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.ReviewStatus | EnumReviewStatusFieldRefInput<$PrismaModel>
    in?: $Enums.ReviewStatus[] | ListEnumReviewStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.ReviewStatus[] | ListEnumReviewStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumReviewStatusWithAggregatesFilter<$PrismaModel> | $Enums.ReviewStatus
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumReviewStatusFilter<$PrismaModel>
    _max?: NestedEnumReviewStatusFilter<$PrismaModel>
  }

  export type EnumProfessionalTypeFilter<$PrismaModel = never> = {
    equals?: $Enums.ProfessionalType | EnumProfessionalTypeFieldRefInput<$PrismaModel>
    in?: $Enums.ProfessionalType[] | ListEnumProfessionalTypeFieldRefInput<$PrismaModel>
    notIn?: $Enums.ProfessionalType[] | ListEnumProfessionalTypeFieldRefInput<$PrismaModel>
    not?: NestedEnumProfessionalTypeFilter<$PrismaModel> | $Enums.ProfessionalType
  }

  export type ProfessionalCountOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
    professionalType?: SortOrder
    licenseNumber?: SortOrder
    licenseState?: SortOrder
    licenseExpiresAt?: SortOrder
    specializations?: SortOrder
    certifications?: SortOrder
    practiceName?: SortOrder
    practiceAddress?: SortOrder
    practicePhone?: SortOrder
    practiceWebsite?: SortOrder
    cannabisExperienceYears?: SortOrder
    cannabisCertifications?: SortOrder
    preferredProducts?: SortOrder
    treatmentApproaches?: SortOrder
    consultationTypes?: SortOrder
    hourlyRate?: SortOrder
    acceptsInsurance?: SortOrder
    insuranceProviders?: SortOrder
    verified?: SortOrder
    verifiedAt?: SortOrder
    verifiedBy?: SortOrder
    verificationDocuments?: SortOrder
    consultationCount?: SortOrder
    averageRating?: SortOrder
    reviewCount?: SortOrder
    status?: SortOrder
    acceptingNewPatients?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type ProfessionalAvgOrderByAggregateInput = {
    cannabisExperienceYears?: SortOrder
    hourlyRate?: SortOrder
    consultationCount?: SortOrder
    averageRating?: SortOrder
    reviewCount?: SortOrder
  }

  export type ProfessionalMaxOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
    professionalType?: SortOrder
    licenseNumber?: SortOrder
    licenseState?: SortOrder
    licenseExpiresAt?: SortOrder
    practiceName?: SortOrder
    practicePhone?: SortOrder
    practiceWebsite?: SortOrder
    cannabisExperienceYears?: SortOrder
    hourlyRate?: SortOrder
    acceptsInsurance?: SortOrder
    verified?: SortOrder
    verifiedAt?: SortOrder
    verifiedBy?: SortOrder
    consultationCount?: SortOrder
    averageRating?: SortOrder
    reviewCount?: SortOrder
    status?: SortOrder
    acceptingNewPatients?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type ProfessionalMinOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
    professionalType?: SortOrder
    licenseNumber?: SortOrder
    licenseState?: SortOrder
    licenseExpiresAt?: SortOrder
    practiceName?: SortOrder
    practicePhone?: SortOrder
    practiceWebsite?: SortOrder
    cannabisExperienceYears?: SortOrder
    hourlyRate?: SortOrder
    acceptsInsurance?: SortOrder
    verified?: SortOrder
    verifiedAt?: SortOrder
    verifiedBy?: SortOrder
    consultationCount?: SortOrder
    averageRating?: SortOrder
    reviewCount?: SortOrder
    status?: SortOrder
    acceptingNewPatients?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type ProfessionalSumOrderByAggregateInput = {
    cannabisExperienceYears?: SortOrder
    hourlyRate?: SortOrder
    consultationCount?: SortOrder
    averageRating?: SortOrder
    reviewCount?: SortOrder
  }

  export type EnumProfessionalTypeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.ProfessionalType | EnumProfessionalTypeFieldRefInput<$PrismaModel>
    in?: $Enums.ProfessionalType[] | ListEnumProfessionalTypeFieldRefInput<$PrismaModel>
    notIn?: $Enums.ProfessionalType[] | ListEnumProfessionalTypeFieldRefInput<$PrismaModel>
    not?: NestedEnumProfessionalTypeWithAggregatesFilter<$PrismaModel> | $Enums.ProfessionalType
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumProfessionalTypeFilter<$PrismaModel>
    _max?: NestedEnumProfessionalTypeFilter<$PrismaModel>
  }

  export type EnumConsultationTypeFilter<$PrismaModel = never> = {
    equals?: $Enums.ConsultationType | EnumConsultationTypeFieldRefInput<$PrismaModel>
    in?: $Enums.ConsultationType[] | ListEnumConsultationTypeFieldRefInput<$PrismaModel>
    notIn?: $Enums.ConsultationType[] | ListEnumConsultationTypeFieldRefInput<$PrismaModel>
    not?: NestedEnumConsultationTypeFilter<$PrismaModel> | $Enums.ConsultationType
  }

  export type EnumSessionTypeFilter<$PrismaModel = never> = {
    equals?: $Enums.SessionType | EnumSessionTypeFieldRefInput<$PrismaModel>
    in?: $Enums.SessionType[] | ListEnumSessionTypeFieldRefInput<$PrismaModel>
    notIn?: $Enums.SessionType[] | ListEnumSessionTypeFieldRefInput<$PrismaModel>
    not?: NestedEnumSessionTypeFilter<$PrismaModel> | $Enums.SessionType
  }

  export type ProfessionalRelationFilter = {
    is?: ProfessionalWhereInput
    isNot?: ProfessionalWhereInput
  }

  export type ConsultationCountOrderByAggregateInput = {
    id?: SortOrder
    patientId?: SortOrder
    professionalId?: SortOrder
    consultationType?: SortOrder
    sessionType?: SortOrder
    scheduledAt?: SortOrder
    durationMinutes?: SortOrder
    timezone?: SortOrder
    status?: SortOrder
    meetingUrl?: SortOrder
    meetingId?: SortOrder
    meetingPassword?: SortOrder
    chiefComplaint?: SortOrder
    symptoms?: SortOrder
    currentMedications?: SortOrder
    cannabisExperience?: SortOrder
    previousCannabisUse?: SortOrder
    assessment?: SortOrder
    recommendations?: SortOrder
    prescribedProducts?: SortOrder
    followUpNeeded?: SortOrder
    followUpDate?: SortOrder
    consultationFee?: SortOrder
    paymentStatus?: SortOrder
    paymentId?: SortOrder
    medicalConsentSigned?: SortOrder
    privacyConsentSigned?: SortOrder
    consultationAgreementSigned?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type ConsultationAvgOrderByAggregateInput = {
    durationMinutes?: SortOrder
    consultationFee?: SortOrder
  }

  export type ConsultationMaxOrderByAggregateInput = {
    id?: SortOrder
    patientId?: SortOrder
    professionalId?: SortOrder
    consultationType?: SortOrder
    sessionType?: SortOrder
    scheduledAt?: SortOrder
    durationMinutes?: SortOrder
    timezone?: SortOrder
    status?: SortOrder
    meetingUrl?: SortOrder
    meetingId?: SortOrder
    meetingPassword?: SortOrder
    chiefComplaint?: SortOrder
    cannabisExperience?: SortOrder
    previousCannabisUse?: SortOrder
    assessment?: SortOrder
    recommendations?: SortOrder
    followUpNeeded?: SortOrder
    followUpDate?: SortOrder
    consultationFee?: SortOrder
    paymentStatus?: SortOrder
    paymentId?: SortOrder
    medicalConsentSigned?: SortOrder
    privacyConsentSigned?: SortOrder
    consultationAgreementSigned?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type ConsultationMinOrderByAggregateInput = {
    id?: SortOrder
    patientId?: SortOrder
    professionalId?: SortOrder
    consultationType?: SortOrder
    sessionType?: SortOrder
    scheduledAt?: SortOrder
    durationMinutes?: SortOrder
    timezone?: SortOrder
    status?: SortOrder
    meetingUrl?: SortOrder
    meetingId?: SortOrder
    meetingPassword?: SortOrder
    chiefComplaint?: SortOrder
    cannabisExperience?: SortOrder
    previousCannabisUse?: SortOrder
    assessment?: SortOrder
    recommendations?: SortOrder
    followUpNeeded?: SortOrder
    followUpDate?: SortOrder
    consultationFee?: SortOrder
    paymentStatus?: SortOrder
    paymentId?: SortOrder
    medicalConsentSigned?: SortOrder
    privacyConsentSigned?: SortOrder
    consultationAgreementSigned?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type ConsultationSumOrderByAggregateInput = {
    durationMinutes?: SortOrder
    consultationFee?: SortOrder
  }

  export type EnumConsultationTypeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.ConsultationType | EnumConsultationTypeFieldRefInput<$PrismaModel>
    in?: $Enums.ConsultationType[] | ListEnumConsultationTypeFieldRefInput<$PrismaModel>
    notIn?: $Enums.ConsultationType[] | ListEnumConsultationTypeFieldRefInput<$PrismaModel>
    not?: NestedEnumConsultationTypeWithAggregatesFilter<$PrismaModel> | $Enums.ConsultationType
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumConsultationTypeFilter<$PrismaModel>
    _max?: NestedEnumConsultationTypeFilter<$PrismaModel>
  }

  export type EnumSessionTypeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.SessionType | EnumSessionTypeFieldRefInput<$PrismaModel>
    in?: $Enums.SessionType[] | ListEnumSessionTypeFieldRefInput<$PrismaModel>
    notIn?: $Enums.SessionType[] | ListEnumSessionTypeFieldRefInput<$PrismaModel>
    not?: NestedEnumSessionTypeWithAggregatesFilter<$PrismaModel> | $Enums.SessionType
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumSessionTypeFilter<$PrismaModel>
    _max?: NestedEnumSessionTypeFilter<$PrismaModel>
  }

  export type EnumBlogCategoryFilter<$PrismaModel = never> = {
    equals?: $Enums.BlogCategory | EnumBlogCategoryFieldRefInput<$PrismaModel>
    in?: $Enums.BlogCategory[] | ListEnumBlogCategoryFieldRefInput<$PrismaModel>
    notIn?: $Enums.BlogCategory[] | ListEnumBlogCategoryFieldRefInput<$PrismaModel>
    not?: NestedEnumBlogCategoryFilter<$PrismaModel> | $Enums.BlogCategory
  }

  export type EnumBlogStatusFilter<$PrismaModel = never> = {
    equals?: $Enums.BlogStatus | EnumBlogStatusFieldRefInput<$PrismaModel>
    in?: $Enums.BlogStatus[] | ListEnumBlogStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.BlogStatus[] | ListEnumBlogStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumBlogStatusFilter<$PrismaModel> | $Enums.BlogStatus
  }

  export type BlogPostCountOrderByAggregateInput = {
    id?: SortOrder
    authorId?: SortOrder
    title?: SortOrder
    slug?: SortOrder
    excerpt?: SortOrder
    content?: SortOrder
    featuredImageUrl?: SortOrder
    category?: SortOrder
    tags?: SortOrder
    metaTitle?: SortOrder
    metaDescription?: SortOrder
    metaKeywords?: SortOrder
    status?: SortOrder
    publishedAt?: SortOrder
    scheduledFor?: SortOrder
    viewCount?: SortOrder
    likeCount?: SortOrder
    commentCount?: SortOrder
    shareCount?: SortOrder
    factChecked?: SortOrder
    factCheckedBy?: SortOrder
    factCheckedAt?: SortOrder
    medicalDisclaimer?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type BlogPostAvgOrderByAggregateInput = {
    viewCount?: SortOrder
    likeCount?: SortOrder
    commentCount?: SortOrder
    shareCount?: SortOrder
  }

  export type BlogPostMaxOrderByAggregateInput = {
    id?: SortOrder
    authorId?: SortOrder
    title?: SortOrder
    slug?: SortOrder
    excerpt?: SortOrder
    content?: SortOrder
    featuredImageUrl?: SortOrder
    category?: SortOrder
    metaTitle?: SortOrder
    metaDescription?: SortOrder
    metaKeywords?: SortOrder
    status?: SortOrder
    publishedAt?: SortOrder
    scheduledFor?: SortOrder
    viewCount?: SortOrder
    likeCount?: SortOrder
    commentCount?: SortOrder
    shareCount?: SortOrder
    factChecked?: SortOrder
    factCheckedBy?: SortOrder
    factCheckedAt?: SortOrder
    medicalDisclaimer?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type BlogPostMinOrderByAggregateInput = {
    id?: SortOrder
    authorId?: SortOrder
    title?: SortOrder
    slug?: SortOrder
    excerpt?: SortOrder
    content?: SortOrder
    featuredImageUrl?: SortOrder
    category?: SortOrder
    metaTitle?: SortOrder
    metaDescription?: SortOrder
    metaKeywords?: SortOrder
    status?: SortOrder
    publishedAt?: SortOrder
    scheduledFor?: SortOrder
    viewCount?: SortOrder
    likeCount?: SortOrder
    commentCount?: SortOrder
    shareCount?: SortOrder
    factChecked?: SortOrder
    factCheckedBy?: SortOrder
    factCheckedAt?: SortOrder
    medicalDisclaimer?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type BlogPostSumOrderByAggregateInput = {
    viewCount?: SortOrder
    likeCount?: SortOrder
    commentCount?: SortOrder
    shareCount?: SortOrder
  }

  export type EnumBlogCategoryWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.BlogCategory | EnumBlogCategoryFieldRefInput<$PrismaModel>
    in?: $Enums.BlogCategory[] | ListEnumBlogCategoryFieldRefInput<$PrismaModel>
    notIn?: $Enums.BlogCategory[] | ListEnumBlogCategoryFieldRefInput<$PrismaModel>
    not?: NestedEnumBlogCategoryWithAggregatesFilter<$PrismaModel> | $Enums.BlogCategory
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumBlogCategoryFilter<$PrismaModel>
    _max?: NestedEnumBlogCategoryFilter<$PrismaModel>
  }

  export type EnumBlogStatusWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.BlogStatus | EnumBlogStatusFieldRefInput<$PrismaModel>
    in?: $Enums.BlogStatus[] | ListEnumBlogStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.BlogStatus[] | ListEnumBlogStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumBlogStatusWithAggregatesFilter<$PrismaModel> | $Enums.BlogStatus
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumBlogStatusFilter<$PrismaModel>
    _max?: NestedEnumBlogStatusFilter<$PrismaModel>
  }

  export type AuditLogCountOrderByAggregateInput = {
    id?: SortOrder
    action?: SortOrder
    resourceType?: SortOrder
    resourceId?: SortOrder
    userId?: SortOrder
    sessionId?: SortOrder
    ipAddress?: SortOrder
    userAgent?: SortOrder
    oldValues?: SortOrder
    newValues?: SortOrder
    requestId?: SortOrder
    endpoint?: SortOrder
    httpMethod?: SortOrder
    riskLevel?: SortOrder
    complianceRelevant?: SortOrder
    result?: SortOrder
    errorMessage?: SortOrder
    timestamp?: SortOrder
  }

  export type AuditLogMaxOrderByAggregateInput = {
    id?: SortOrder
    action?: SortOrder
    resourceType?: SortOrder
    resourceId?: SortOrder
    userId?: SortOrder
    sessionId?: SortOrder
    ipAddress?: SortOrder
    userAgent?: SortOrder
    requestId?: SortOrder
    endpoint?: SortOrder
    httpMethod?: SortOrder
    riskLevel?: SortOrder
    complianceRelevant?: SortOrder
    result?: SortOrder
    errorMessage?: SortOrder
    timestamp?: SortOrder
  }

  export type AuditLogMinOrderByAggregateInput = {
    id?: SortOrder
    action?: SortOrder
    resourceType?: SortOrder
    resourceId?: SortOrder
    userId?: SortOrder
    sessionId?: SortOrder
    ipAddress?: SortOrder
    userAgent?: SortOrder
    requestId?: SortOrder
    endpoint?: SortOrder
    httpMethod?: SortOrder
    riskLevel?: SortOrder
    complianceRelevant?: SortOrder
    result?: SortOrder
    errorMessage?: SortOrder
    timestamp?: SortOrder
  }

  export type UserAddressCreateNestedManyWithoutUserInput = {
    create?: XOR<UserAddressCreateWithoutUserInput, UserAddressUncheckedCreateWithoutUserInput> | UserAddressCreateWithoutUserInput[] | UserAddressUncheckedCreateWithoutUserInput[]
    connectOrCreate?: UserAddressCreateOrConnectWithoutUserInput | UserAddressCreateOrConnectWithoutUserInput[]
    createMany?: UserAddressCreateManyUserInputEnvelope
    connect?: UserAddressWhereUniqueInput | UserAddressWhereUniqueInput[]
  }

  export type UserSessionCreateNestedManyWithoutUserInput = {
    create?: XOR<UserSessionCreateWithoutUserInput, UserSessionUncheckedCreateWithoutUserInput> | UserSessionCreateWithoutUserInput[] | UserSessionUncheckedCreateWithoutUserInput[]
    connectOrCreate?: UserSessionCreateOrConnectWithoutUserInput | UserSessionCreateOrConnectWithoutUserInput[]
    createMany?: UserSessionCreateManyUserInputEnvelope
    connect?: UserSessionWhereUniqueInput | UserSessionWhereUniqueInput[]
  }

  export type StoreCreateNestedManyWithoutOwnerInput = {
    create?: XOR<StoreCreateWithoutOwnerInput, StoreUncheckedCreateWithoutOwnerInput> | StoreCreateWithoutOwnerInput[] | StoreUncheckedCreateWithoutOwnerInput[]
    connectOrCreate?: StoreCreateOrConnectWithoutOwnerInput | StoreCreateOrConnectWithoutOwnerInput[]
    createMany?: StoreCreateManyOwnerInputEnvelope
    connect?: StoreWhereUniqueInput | StoreWhereUniqueInput[]
  }

  export type OrderCreateNestedManyWithoutUserInput = {
    create?: XOR<OrderCreateWithoutUserInput, OrderUncheckedCreateWithoutUserInput> | OrderCreateWithoutUserInput[] | OrderUncheckedCreateWithoutUserInput[]
    connectOrCreate?: OrderCreateOrConnectWithoutUserInput | OrderCreateOrConnectWithoutUserInput[]
    createMany?: OrderCreateManyUserInputEnvelope
    connect?: OrderWhereUniqueInput | OrderWhereUniqueInput[]
  }

  export type ReviewCreateNestedManyWithoutUserInput = {
    create?: XOR<ReviewCreateWithoutUserInput, ReviewUncheckedCreateWithoutUserInput> | ReviewCreateWithoutUserInput[] | ReviewUncheckedCreateWithoutUserInput[]
    connectOrCreate?: ReviewCreateOrConnectWithoutUserInput | ReviewCreateOrConnectWithoutUserInput[]
    createMany?: ReviewCreateManyUserInputEnvelope
    connect?: ReviewWhereUniqueInput | ReviewWhereUniqueInput[]
  }

  export type ProfessionalCreateNestedOneWithoutUserInput = {
    create?: XOR<ProfessionalCreateWithoutUserInput, ProfessionalUncheckedCreateWithoutUserInput>
    connectOrCreate?: ProfessionalCreateOrConnectWithoutUserInput
    connect?: ProfessionalWhereUniqueInput
  }

  export type StoreStaffCreateNestedManyWithoutUserInput = {
    create?: XOR<StoreStaffCreateWithoutUserInput, StoreStaffUncheckedCreateWithoutUserInput> | StoreStaffCreateWithoutUserInput[] | StoreStaffUncheckedCreateWithoutUserInput[]
    connectOrCreate?: StoreStaffCreateOrConnectWithoutUserInput | StoreStaffCreateOrConnectWithoutUserInput[]
    createMany?: StoreStaffCreateManyUserInputEnvelope
    connect?: StoreStaffWhereUniqueInput | StoreStaffWhereUniqueInput[]
  }

  export type ConsultationCreateNestedManyWithoutPatientInput = {
    create?: XOR<ConsultationCreateWithoutPatientInput, ConsultationUncheckedCreateWithoutPatientInput> | ConsultationCreateWithoutPatientInput[] | ConsultationUncheckedCreateWithoutPatientInput[]
    connectOrCreate?: ConsultationCreateOrConnectWithoutPatientInput | ConsultationCreateOrConnectWithoutPatientInput[]
    createMany?: ConsultationCreateManyPatientInputEnvelope
    connect?: ConsultationWhereUniqueInput | ConsultationWhereUniqueInput[]
  }

  export type UserCreateNestedOneWithoutAgeVerificationsInput = {
    create?: XOR<UserCreateWithoutAgeVerificationsInput, UserUncheckedCreateWithoutAgeVerificationsInput>
    connectOrCreate?: UserCreateOrConnectWithoutAgeVerificationsInput
    connect?: UserWhereUniqueInput
  }

  export type UserCreateNestedManyWithoutAgeVerifierInput = {
    create?: XOR<UserCreateWithoutAgeVerifierInput, UserUncheckedCreateWithoutAgeVerifierInput> | UserCreateWithoutAgeVerifierInput[] | UserUncheckedCreateWithoutAgeVerifierInput[]
    connectOrCreate?: UserCreateOrConnectWithoutAgeVerifierInput | UserCreateOrConnectWithoutAgeVerifierInput[]
    createMany?: UserCreateManyAgeVerifierInputEnvelope
    connect?: UserWhereUniqueInput | UserWhereUniqueInput[]
  }

  export type BlogPostCreateNestedManyWithoutAuthorInput = {
    create?: XOR<BlogPostCreateWithoutAuthorInput, BlogPostUncheckedCreateWithoutAuthorInput> | BlogPostCreateWithoutAuthorInput[] | BlogPostUncheckedCreateWithoutAuthorInput[]
    connectOrCreate?: BlogPostCreateOrConnectWithoutAuthorInput | BlogPostCreateOrConnectWithoutAuthorInput[]
    createMany?: BlogPostCreateManyAuthorInputEnvelope
    connect?: BlogPostWhereUniqueInput | BlogPostWhereUniqueInput[]
  }

  export type BlogPostCreateNestedManyWithoutFactCheckerInput = {
    create?: XOR<BlogPostCreateWithoutFactCheckerInput, BlogPostUncheckedCreateWithoutFactCheckerInput> | BlogPostCreateWithoutFactCheckerInput[] | BlogPostUncheckedCreateWithoutFactCheckerInput[]
    connectOrCreate?: BlogPostCreateOrConnectWithoutFactCheckerInput | BlogPostCreateOrConnectWithoutFactCheckerInput[]
    createMany?: BlogPostCreateManyFactCheckerInputEnvelope
    connect?: BlogPostWhereUniqueInput | BlogPostWhereUniqueInput[]
  }

  export type UserAddressUncheckedCreateNestedManyWithoutUserInput = {
    create?: XOR<UserAddressCreateWithoutUserInput, UserAddressUncheckedCreateWithoutUserInput> | UserAddressCreateWithoutUserInput[] | UserAddressUncheckedCreateWithoutUserInput[]
    connectOrCreate?: UserAddressCreateOrConnectWithoutUserInput | UserAddressCreateOrConnectWithoutUserInput[]
    createMany?: UserAddressCreateManyUserInputEnvelope
    connect?: UserAddressWhereUniqueInput | UserAddressWhereUniqueInput[]
  }

  export type UserSessionUncheckedCreateNestedManyWithoutUserInput = {
    create?: XOR<UserSessionCreateWithoutUserInput, UserSessionUncheckedCreateWithoutUserInput> | UserSessionCreateWithoutUserInput[] | UserSessionUncheckedCreateWithoutUserInput[]
    connectOrCreate?: UserSessionCreateOrConnectWithoutUserInput | UserSessionCreateOrConnectWithoutUserInput[]
    createMany?: UserSessionCreateManyUserInputEnvelope
    connect?: UserSessionWhereUniqueInput | UserSessionWhereUniqueInput[]
  }

  export type StoreUncheckedCreateNestedManyWithoutOwnerInput = {
    create?: XOR<StoreCreateWithoutOwnerInput, StoreUncheckedCreateWithoutOwnerInput> | StoreCreateWithoutOwnerInput[] | StoreUncheckedCreateWithoutOwnerInput[]
    connectOrCreate?: StoreCreateOrConnectWithoutOwnerInput | StoreCreateOrConnectWithoutOwnerInput[]
    createMany?: StoreCreateManyOwnerInputEnvelope
    connect?: StoreWhereUniqueInput | StoreWhereUniqueInput[]
  }

  export type OrderUncheckedCreateNestedManyWithoutUserInput = {
    create?: XOR<OrderCreateWithoutUserInput, OrderUncheckedCreateWithoutUserInput> | OrderCreateWithoutUserInput[] | OrderUncheckedCreateWithoutUserInput[]
    connectOrCreate?: OrderCreateOrConnectWithoutUserInput | OrderCreateOrConnectWithoutUserInput[]
    createMany?: OrderCreateManyUserInputEnvelope
    connect?: OrderWhereUniqueInput | OrderWhereUniqueInput[]
  }

  export type ReviewUncheckedCreateNestedManyWithoutUserInput = {
    create?: XOR<ReviewCreateWithoutUserInput, ReviewUncheckedCreateWithoutUserInput> | ReviewCreateWithoutUserInput[] | ReviewUncheckedCreateWithoutUserInput[]
    connectOrCreate?: ReviewCreateOrConnectWithoutUserInput | ReviewCreateOrConnectWithoutUserInput[]
    createMany?: ReviewCreateManyUserInputEnvelope
    connect?: ReviewWhereUniqueInput | ReviewWhereUniqueInput[]
  }

  export type ProfessionalUncheckedCreateNestedOneWithoutUserInput = {
    create?: XOR<ProfessionalCreateWithoutUserInput, ProfessionalUncheckedCreateWithoutUserInput>
    connectOrCreate?: ProfessionalCreateOrConnectWithoutUserInput
    connect?: ProfessionalWhereUniqueInput
  }

  export type StoreStaffUncheckedCreateNestedManyWithoutUserInput = {
    create?: XOR<StoreStaffCreateWithoutUserInput, StoreStaffUncheckedCreateWithoutUserInput> | StoreStaffCreateWithoutUserInput[] | StoreStaffUncheckedCreateWithoutUserInput[]
    connectOrCreate?: StoreStaffCreateOrConnectWithoutUserInput | StoreStaffCreateOrConnectWithoutUserInput[]
    createMany?: StoreStaffCreateManyUserInputEnvelope
    connect?: StoreStaffWhereUniqueInput | StoreStaffWhereUniqueInput[]
  }

  export type ConsultationUncheckedCreateNestedManyWithoutPatientInput = {
    create?: XOR<ConsultationCreateWithoutPatientInput, ConsultationUncheckedCreateWithoutPatientInput> | ConsultationCreateWithoutPatientInput[] | ConsultationUncheckedCreateWithoutPatientInput[]
    connectOrCreate?: ConsultationCreateOrConnectWithoutPatientInput | ConsultationCreateOrConnectWithoutPatientInput[]
    createMany?: ConsultationCreateManyPatientInputEnvelope
    connect?: ConsultationWhereUniqueInput | ConsultationWhereUniqueInput[]
  }

  export type UserUncheckedCreateNestedManyWithoutAgeVerifierInput = {
    create?: XOR<UserCreateWithoutAgeVerifierInput, UserUncheckedCreateWithoutAgeVerifierInput> | UserCreateWithoutAgeVerifierInput[] | UserUncheckedCreateWithoutAgeVerifierInput[]
    connectOrCreate?: UserCreateOrConnectWithoutAgeVerifierInput | UserCreateOrConnectWithoutAgeVerifierInput[]
    createMany?: UserCreateManyAgeVerifierInputEnvelope
    connect?: UserWhereUniqueInput | UserWhereUniqueInput[]
  }

  export type BlogPostUncheckedCreateNestedManyWithoutAuthorInput = {
    create?: XOR<BlogPostCreateWithoutAuthorInput, BlogPostUncheckedCreateWithoutAuthorInput> | BlogPostCreateWithoutAuthorInput[] | BlogPostUncheckedCreateWithoutAuthorInput[]
    connectOrCreate?: BlogPostCreateOrConnectWithoutAuthorInput | BlogPostCreateOrConnectWithoutAuthorInput[]
    createMany?: BlogPostCreateManyAuthorInputEnvelope
    connect?: BlogPostWhereUniqueInput | BlogPostWhereUniqueInput[]
  }

  export type BlogPostUncheckedCreateNestedManyWithoutFactCheckerInput = {
    create?: XOR<BlogPostCreateWithoutFactCheckerInput, BlogPostUncheckedCreateWithoutFactCheckerInput> | BlogPostCreateWithoutFactCheckerInput[] | BlogPostUncheckedCreateWithoutFactCheckerInput[]
    connectOrCreate?: BlogPostCreateOrConnectWithoutFactCheckerInput | BlogPostCreateOrConnectWithoutFactCheckerInput[]
    createMany?: BlogPostCreateManyFactCheckerInputEnvelope
    connect?: BlogPostWhereUniqueInput | BlogPostWhereUniqueInput[]
  }

  export type StringFieldUpdateOperationsInput = {
    set?: string
  }

  export type BoolFieldUpdateOperationsInput = {
    set?: boolean
  }

  export type EnumUserRoleFieldUpdateOperationsInput = {
    set?: $Enums.UserRole
  }

  export type NullableStringFieldUpdateOperationsInput = {
    set?: string | null
  }

  export type NullableDateTimeFieldUpdateOperationsInput = {
    set?: Date | string | null
  }

  export type EnumUserStatusFieldUpdateOperationsInput = {
    set?: $Enums.UserStatus
  }

  export type IntFieldUpdateOperationsInput = {
    set?: number
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type NullableEnumAgeVerificationMethodFieldUpdateOperationsInput = {
    set?: $Enums.AgeVerificationMethod | null
  }

  export type DateTimeFieldUpdateOperationsInput = {
    set?: Date | string
  }

  export type UserAddressUpdateManyWithoutUserNestedInput = {
    create?: XOR<UserAddressCreateWithoutUserInput, UserAddressUncheckedCreateWithoutUserInput> | UserAddressCreateWithoutUserInput[] | UserAddressUncheckedCreateWithoutUserInput[]
    connectOrCreate?: UserAddressCreateOrConnectWithoutUserInput | UserAddressCreateOrConnectWithoutUserInput[]
    upsert?: UserAddressUpsertWithWhereUniqueWithoutUserInput | UserAddressUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: UserAddressCreateManyUserInputEnvelope
    set?: UserAddressWhereUniqueInput | UserAddressWhereUniqueInput[]
    disconnect?: UserAddressWhereUniqueInput | UserAddressWhereUniqueInput[]
    delete?: UserAddressWhereUniqueInput | UserAddressWhereUniqueInput[]
    connect?: UserAddressWhereUniqueInput | UserAddressWhereUniqueInput[]
    update?: UserAddressUpdateWithWhereUniqueWithoutUserInput | UserAddressUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: UserAddressUpdateManyWithWhereWithoutUserInput | UserAddressUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: UserAddressScalarWhereInput | UserAddressScalarWhereInput[]
  }

  export type UserSessionUpdateManyWithoutUserNestedInput = {
    create?: XOR<UserSessionCreateWithoutUserInput, UserSessionUncheckedCreateWithoutUserInput> | UserSessionCreateWithoutUserInput[] | UserSessionUncheckedCreateWithoutUserInput[]
    connectOrCreate?: UserSessionCreateOrConnectWithoutUserInput | UserSessionCreateOrConnectWithoutUserInput[]
    upsert?: UserSessionUpsertWithWhereUniqueWithoutUserInput | UserSessionUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: UserSessionCreateManyUserInputEnvelope
    set?: UserSessionWhereUniqueInput | UserSessionWhereUniqueInput[]
    disconnect?: UserSessionWhereUniqueInput | UserSessionWhereUniqueInput[]
    delete?: UserSessionWhereUniqueInput | UserSessionWhereUniqueInput[]
    connect?: UserSessionWhereUniqueInput | UserSessionWhereUniqueInput[]
    update?: UserSessionUpdateWithWhereUniqueWithoutUserInput | UserSessionUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: UserSessionUpdateManyWithWhereWithoutUserInput | UserSessionUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: UserSessionScalarWhereInput | UserSessionScalarWhereInput[]
  }

  export type StoreUpdateManyWithoutOwnerNestedInput = {
    create?: XOR<StoreCreateWithoutOwnerInput, StoreUncheckedCreateWithoutOwnerInput> | StoreCreateWithoutOwnerInput[] | StoreUncheckedCreateWithoutOwnerInput[]
    connectOrCreate?: StoreCreateOrConnectWithoutOwnerInput | StoreCreateOrConnectWithoutOwnerInput[]
    upsert?: StoreUpsertWithWhereUniqueWithoutOwnerInput | StoreUpsertWithWhereUniqueWithoutOwnerInput[]
    createMany?: StoreCreateManyOwnerInputEnvelope
    set?: StoreWhereUniqueInput | StoreWhereUniqueInput[]
    disconnect?: StoreWhereUniqueInput | StoreWhereUniqueInput[]
    delete?: StoreWhereUniqueInput | StoreWhereUniqueInput[]
    connect?: StoreWhereUniqueInput | StoreWhereUniqueInput[]
    update?: StoreUpdateWithWhereUniqueWithoutOwnerInput | StoreUpdateWithWhereUniqueWithoutOwnerInput[]
    updateMany?: StoreUpdateManyWithWhereWithoutOwnerInput | StoreUpdateManyWithWhereWithoutOwnerInput[]
    deleteMany?: StoreScalarWhereInput | StoreScalarWhereInput[]
  }

  export type OrderUpdateManyWithoutUserNestedInput = {
    create?: XOR<OrderCreateWithoutUserInput, OrderUncheckedCreateWithoutUserInput> | OrderCreateWithoutUserInput[] | OrderUncheckedCreateWithoutUserInput[]
    connectOrCreate?: OrderCreateOrConnectWithoutUserInput | OrderCreateOrConnectWithoutUserInput[]
    upsert?: OrderUpsertWithWhereUniqueWithoutUserInput | OrderUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: OrderCreateManyUserInputEnvelope
    set?: OrderWhereUniqueInput | OrderWhereUniqueInput[]
    disconnect?: OrderWhereUniqueInput | OrderWhereUniqueInput[]
    delete?: OrderWhereUniqueInput | OrderWhereUniqueInput[]
    connect?: OrderWhereUniqueInput | OrderWhereUniqueInput[]
    update?: OrderUpdateWithWhereUniqueWithoutUserInput | OrderUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: OrderUpdateManyWithWhereWithoutUserInput | OrderUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: OrderScalarWhereInput | OrderScalarWhereInput[]
  }

  export type ReviewUpdateManyWithoutUserNestedInput = {
    create?: XOR<ReviewCreateWithoutUserInput, ReviewUncheckedCreateWithoutUserInput> | ReviewCreateWithoutUserInput[] | ReviewUncheckedCreateWithoutUserInput[]
    connectOrCreate?: ReviewCreateOrConnectWithoutUserInput | ReviewCreateOrConnectWithoutUserInput[]
    upsert?: ReviewUpsertWithWhereUniqueWithoutUserInput | ReviewUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: ReviewCreateManyUserInputEnvelope
    set?: ReviewWhereUniqueInput | ReviewWhereUniqueInput[]
    disconnect?: ReviewWhereUniqueInput | ReviewWhereUniqueInput[]
    delete?: ReviewWhereUniqueInput | ReviewWhereUniqueInput[]
    connect?: ReviewWhereUniqueInput | ReviewWhereUniqueInput[]
    update?: ReviewUpdateWithWhereUniqueWithoutUserInput | ReviewUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: ReviewUpdateManyWithWhereWithoutUserInput | ReviewUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: ReviewScalarWhereInput | ReviewScalarWhereInput[]
  }

  export type ProfessionalUpdateOneWithoutUserNestedInput = {
    create?: XOR<ProfessionalCreateWithoutUserInput, ProfessionalUncheckedCreateWithoutUserInput>
    connectOrCreate?: ProfessionalCreateOrConnectWithoutUserInput
    upsert?: ProfessionalUpsertWithoutUserInput
    disconnect?: ProfessionalWhereInput | boolean
    delete?: ProfessionalWhereInput | boolean
    connect?: ProfessionalWhereUniqueInput
    update?: XOR<XOR<ProfessionalUpdateToOneWithWhereWithoutUserInput, ProfessionalUpdateWithoutUserInput>, ProfessionalUncheckedUpdateWithoutUserInput>
  }

  export type StoreStaffUpdateManyWithoutUserNestedInput = {
    create?: XOR<StoreStaffCreateWithoutUserInput, StoreStaffUncheckedCreateWithoutUserInput> | StoreStaffCreateWithoutUserInput[] | StoreStaffUncheckedCreateWithoutUserInput[]
    connectOrCreate?: StoreStaffCreateOrConnectWithoutUserInput | StoreStaffCreateOrConnectWithoutUserInput[]
    upsert?: StoreStaffUpsertWithWhereUniqueWithoutUserInput | StoreStaffUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: StoreStaffCreateManyUserInputEnvelope
    set?: StoreStaffWhereUniqueInput | StoreStaffWhereUniqueInput[]
    disconnect?: StoreStaffWhereUniqueInput | StoreStaffWhereUniqueInput[]
    delete?: StoreStaffWhereUniqueInput | StoreStaffWhereUniqueInput[]
    connect?: StoreStaffWhereUniqueInput | StoreStaffWhereUniqueInput[]
    update?: StoreStaffUpdateWithWhereUniqueWithoutUserInput | StoreStaffUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: StoreStaffUpdateManyWithWhereWithoutUserInput | StoreStaffUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: StoreStaffScalarWhereInput | StoreStaffScalarWhereInput[]
  }

  export type ConsultationUpdateManyWithoutPatientNestedInput = {
    create?: XOR<ConsultationCreateWithoutPatientInput, ConsultationUncheckedCreateWithoutPatientInput> | ConsultationCreateWithoutPatientInput[] | ConsultationUncheckedCreateWithoutPatientInput[]
    connectOrCreate?: ConsultationCreateOrConnectWithoutPatientInput | ConsultationCreateOrConnectWithoutPatientInput[]
    upsert?: ConsultationUpsertWithWhereUniqueWithoutPatientInput | ConsultationUpsertWithWhereUniqueWithoutPatientInput[]
    createMany?: ConsultationCreateManyPatientInputEnvelope
    set?: ConsultationWhereUniqueInput | ConsultationWhereUniqueInput[]
    disconnect?: ConsultationWhereUniqueInput | ConsultationWhereUniqueInput[]
    delete?: ConsultationWhereUniqueInput | ConsultationWhereUniqueInput[]
    connect?: ConsultationWhereUniqueInput | ConsultationWhereUniqueInput[]
    update?: ConsultationUpdateWithWhereUniqueWithoutPatientInput | ConsultationUpdateWithWhereUniqueWithoutPatientInput[]
    updateMany?: ConsultationUpdateManyWithWhereWithoutPatientInput | ConsultationUpdateManyWithWhereWithoutPatientInput[]
    deleteMany?: ConsultationScalarWhereInput | ConsultationScalarWhereInput[]
  }

  export type UserUpdateOneWithoutAgeVerificationsNestedInput = {
    create?: XOR<UserCreateWithoutAgeVerificationsInput, UserUncheckedCreateWithoutAgeVerificationsInput>
    connectOrCreate?: UserCreateOrConnectWithoutAgeVerificationsInput
    upsert?: UserUpsertWithoutAgeVerificationsInput
    disconnect?: UserWhereInput | boolean
    delete?: UserWhereInput | boolean
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutAgeVerificationsInput, UserUpdateWithoutAgeVerificationsInput>, UserUncheckedUpdateWithoutAgeVerificationsInput>
  }

  export type UserUpdateManyWithoutAgeVerifierNestedInput = {
    create?: XOR<UserCreateWithoutAgeVerifierInput, UserUncheckedCreateWithoutAgeVerifierInput> | UserCreateWithoutAgeVerifierInput[] | UserUncheckedCreateWithoutAgeVerifierInput[]
    connectOrCreate?: UserCreateOrConnectWithoutAgeVerifierInput | UserCreateOrConnectWithoutAgeVerifierInput[]
    upsert?: UserUpsertWithWhereUniqueWithoutAgeVerifierInput | UserUpsertWithWhereUniqueWithoutAgeVerifierInput[]
    createMany?: UserCreateManyAgeVerifierInputEnvelope
    set?: UserWhereUniqueInput | UserWhereUniqueInput[]
    disconnect?: UserWhereUniqueInput | UserWhereUniqueInput[]
    delete?: UserWhereUniqueInput | UserWhereUniqueInput[]
    connect?: UserWhereUniqueInput | UserWhereUniqueInput[]
    update?: UserUpdateWithWhereUniqueWithoutAgeVerifierInput | UserUpdateWithWhereUniqueWithoutAgeVerifierInput[]
    updateMany?: UserUpdateManyWithWhereWithoutAgeVerifierInput | UserUpdateManyWithWhereWithoutAgeVerifierInput[]
    deleteMany?: UserScalarWhereInput | UserScalarWhereInput[]
  }

  export type BlogPostUpdateManyWithoutAuthorNestedInput = {
    create?: XOR<BlogPostCreateWithoutAuthorInput, BlogPostUncheckedCreateWithoutAuthorInput> | BlogPostCreateWithoutAuthorInput[] | BlogPostUncheckedCreateWithoutAuthorInput[]
    connectOrCreate?: BlogPostCreateOrConnectWithoutAuthorInput | BlogPostCreateOrConnectWithoutAuthorInput[]
    upsert?: BlogPostUpsertWithWhereUniqueWithoutAuthorInput | BlogPostUpsertWithWhereUniqueWithoutAuthorInput[]
    createMany?: BlogPostCreateManyAuthorInputEnvelope
    set?: BlogPostWhereUniqueInput | BlogPostWhereUniqueInput[]
    disconnect?: BlogPostWhereUniqueInput | BlogPostWhereUniqueInput[]
    delete?: BlogPostWhereUniqueInput | BlogPostWhereUniqueInput[]
    connect?: BlogPostWhereUniqueInput | BlogPostWhereUniqueInput[]
    update?: BlogPostUpdateWithWhereUniqueWithoutAuthorInput | BlogPostUpdateWithWhereUniqueWithoutAuthorInput[]
    updateMany?: BlogPostUpdateManyWithWhereWithoutAuthorInput | BlogPostUpdateManyWithWhereWithoutAuthorInput[]
    deleteMany?: BlogPostScalarWhereInput | BlogPostScalarWhereInput[]
  }

  export type BlogPostUpdateManyWithoutFactCheckerNestedInput = {
    create?: XOR<BlogPostCreateWithoutFactCheckerInput, BlogPostUncheckedCreateWithoutFactCheckerInput> | BlogPostCreateWithoutFactCheckerInput[] | BlogPostUncheckedCreateWithoutFactCheckerInput[]
    connectOrCreate?: BlogPostCreateOrConnectWithoutFactCheckerInput | BlogPostCreateOrConnectWithoutFactCheckerInput[]
    upsert?: BlogPostUpsertWithWhereUniqueWithoutFactCheckerInput | BlogPostUpsertWithWhereUniqueWithoutFactCheckerInput[]
    createMany?: BlogPostCreateManyFactCheckerInputEnvelope
    set?: BlogPostWhereUniqueInput | BlogPostWhereUniqueInput[]
    disconnect?: BlogPostWhereUniqueInput | BlogPostWhereUniqueInput[]
    delete?: BlogPostWhereUniqueInput | BlogPostWhereUniqueInput[]
    connect?: BlogPostWhereUniqueInput | BlogPostWhereUniqueInput[]
    update?: BlogPostUpdateWithWhereUniqueWithoutFactCheckerInput | BlogPostUpdateWithWhereUniqueWithoutFactCheckerInput[]
    updateMany?: BlogPostUpdateManyWithWhereWithoutFactCheckerInput | BlogPostUpdateManyWithWhereWithoutFactCheckerInput[]
    deleteMany?: BlogPostScalarWhereInput | BlogPostScalarWhereInput[]
  }

  export type UserAddressUncheckedUpdateManyWithoutUserNestedInput = {
    create?: XOR<UserAddressCreateWithoutUserInput, UserAddressUncheckedCreateWithoutUserInput> | UserAddressCreateWithoutUserInput[] | UserAddressUncheckedCreateWithoutUserInput[]
    connectOrCreate?: UserAddressCreateOrConnectWithoutUserInput | UserAddressCreateOrConnectWithoutUserInput[]
    upsert?: UserAddressUpsertWithWhereUniqueWithoutUserInput | UserAddressUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: UserAddressCreateManyUserInputEnvelope
    set?: UserAddressWhereUniqueInput | UserAddressWhereUniqueInput[]
    disconnect?: UserAddressWhereUniqueInput | UserAddressWhereUniqueInput[]
    delete?: UserAddressWhereUniqueInput | UserAddressWhereUniqueInput[]
    connect?: UserAddressWhereUniqueInput | UserAddressWhereUniqueInput[]
    update?: UserAddressUpdateWithWhereUniqueWithoutUserInput | UserAddressUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: UserAddressUpdateManyWithWhereWithoutUserInput | UserAddressUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: UserAddressScalarWhereInput | UserAddressScalarWhereInput[]
  }

  export type UserSessionUncheckedUpdateManyWithoutUserNestedInput = {
    create?: XOR<UserSessionCreateWithoutUserInput, UserSessionUncheckedCreateWithoutUserInput> | UserSessionCreateWithoutUserInput[] | UserSessionUncheckedCreateWithoutUserInput[]
    connectOrCreate?: UserSessionCreateOrConnectWithoutUserInput | UserSessionCreateOrConnectWithoutUserInput[]
    upsert?: UserSessionUpsertWithWhereUniqueWithoutUserInput | UserSessionUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: UserSessionCreateManyUserInputEnvelope
    set?: UserSessionWhereUniqueInput | UserSessionWhereUniqueInput[]
    disconnect?: UserSessionWhereUniqueInput | UserSessionWhereUniqueInput[]
    delete?: UserSessionWhereUniqueInput | UserSessionWhereUniqueInput[]
    connect?: UserSessionWhereUniqueInput | UserSessionWhereUniqueInput[]
    update?: UserSessionUpdateWithWhereUniqueWithoutUserInput | UserSessionUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: UserSessionUpdateManyWithWhereWithoutUserInput | UserSessionUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: UserSessionScalarWhereInput | UserSessionScalarWhereInput[]
  }

  export type StoreUncheckedUpdateManyWithoutOwnerNestedInput = {
    create?: XOR<StoreCreateWithoutOwnerInput, StoreUncheckedCreateWithoutOwnerInput> | StoreCreateWithoutOwnerInput[] | StoreUncheckedCreateWithoutOwnerInput[]
    connectOrCreate?: StoreCreateOrConnectWithoutOwnerInput | StoreCreateOrConnectWithoutOwnerInput[]
    upsert?: StoreUpsertWithWhereUniqueWithoutOwnerInput | StoreUpsertWithWhereUniqueWithoutOwnerInput[]
    createMany?: StoreCreateManyOwnerInputEnvelope
    set?: StoreWhereUniqueInput | StoreWhereUniqueInput[]
    disconnect?: StoreWhereUniqueInput | StoreWhereUniqueInput[]
    delete?: StoreWhereUniqueInput | StoreWhereUniqueInput[]
    connect?: StoreWhereUniqueInput | StoreWhereUniqueInput[]
    update?: StoreUpdateWithWhereUniqueWithoutOwnerInput | StoreUpdateWithWhereUniqueWithoutOwnerInput[]
    updateMany?: StoreUpdateManyWithWhereWithoutOwnerInput | StoreUpdateManyWithWhereWithoutOwnerInput[]
    deleteMany?: StoreScalarWhereInput | StoreScalarWhereInput[]
  }

  export type OrderUncheckedUpdateManyWithoutUserNestedInput = {
    create?: XOR<OrderCreateWithoutUserInput, OrderUncheckedCreateWithoutUserInput> | OrderCreateWithoutUserInput[] | OrderUncheckedCreateWithoutUserInput[]
    connectOrCreate?: OrderCreateOrConnectWithoutUserInput | OrderCreateOrConnectWithoutUserInput[]
    upsert?: OrderUpsertWithWhereUniqueWithoutUserInput | OrderUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: OrderCreateManyUserInputEnvelope
    set?: OrderWhereUniqueInput | OrderWhereUniqueInput[]
    disconnect?: OrderWhereUniqueInput | OrderWhereUniqueInput[]
    delete?: OrderWhereUniqueInput | OrderWhereUniqueInput[]
    connect?: OrderWhereUniqueInput | OrderWhereUniqueInput[]
    update?: OrderUpdateWithWhereUniqueWithoutUserInput | OrderUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: OrderUpdateManyWithWhereWithoutUserInput | OrderUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: OrderScalarWhereInput | OrderScalarWhereInput[]
  }

  export type ReviewUncheckedUpdateManyWithoutUserNestedInput = {
    create?: XOR<ReviewCreateWithoutUserInput, ReviewUncheckedCreateWithoutUserInput> | ReviewCreateWithoutUserInput[] | ReviewUncheckedCreateWithoutUserInput[]
    connectOrCreate?: ReviewCreateOrConnectWithoutUserInput | ReviewCreateOrConnectWithoutUserInput[]
    upsert?: ReviewUpsertWithWhereUniqueWithoutUserInput | ReviewUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: ReviewCreateManyUserInputEnvelope
    set?: ReviewWhereUniqueInput | ReviewWhereUniqueInput[]
    disconnect?: ReviewWhereUniqueInput | ReviewWhereUniqueInput[]
    delete?: ReviewWhereUniqueInput | ReviewWhereUniqueInput[]
    connect?: ReviewWhereUniqueInput | ReviewWhereUniqueInput[]
    update?: ReviewUpdateWithWhereUniqueWithoutUserInput | ReviewUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: ReviewUpdateManyWithWhereWithoutUserInput | ReviewUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: ReviewScalarWhereInput | ReviewScalarWhereInput[]
  }

  export type ProfessionalUncheckedUpdateOneWithoutUserNestedInput = {
    create?: XOR<ProfessionalCreateWithoutUserInput, ProfessionalUncheckedCreateWithoutUserInput>
    connectOrCreate?: ProfessionalCreateOrConnectWithoutUserInput
    upsert?: ProfessionalUpsertWithoutUserInput
    disconnect?: ProfessionalWhereInput | boolean
    delete?: ProfessionalWhereInput | boolean
    connect?: ProfessionalWhereUniqueInput
    update?: XOR<XOR<ProfessionalUpdateToOneWithWhereWithoutUserInput, ProfessionalUpdateWithoutUserInput>, ProfessionalUncheckedUpdateWithoutUserInput>
  }

  export type StoreStaffUncheckedUpdateManyWithoutUserNestedInput = {
    create?: XOR<StoreStaffCreateWithoutUserInput, StoreStaffUncheckedCreateWithoutUserInput> | StoreStaffCreateWithoutUserInput[] | StoreStaffUncheckedCreateWithoutUserInput[]
    connectOrCreate?: StoreStaffCreateOrConnectWithoutUserInput | StoreStaffCreateOrConnectWithoutUserInput[]
    upsert?: StoreStaffUpsertWithWhereUniqueWithoutUserInput | StoreStaffUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: StoreStaffCreateManyUserInputEnvelope
    set?: StoreStaffWhereUniqueInput | StoreStaffWhereUniqueInput[]
    disconnect?: StoreStaffWhereUniqueInput | StoreStaffWhereUniqueInput[]
    delete?: StoreStaffWhereUniqueInput | StoreStaffWhereUniqueInput[]
    connect?: StoreStaffWhereUniqueInput | StoreStaffWhereUniqueInput[]
    update?: StoreStaffUpdateWithWhereUniqueWithoutUserInput | StoreStaffUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: StoreStaffUpdateManyWithWhereWithoutUserInput | StoreStaffUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: StoreStaffScalarWhereInput | StoreStaffScalarWhereInput[]
  }

  export type ConsultationUncheckedUpdateManyWithoutPatientNestedInput = {
    create?: XOR<ConsultationCreateWithoutPatientInput, ConsultationUncheckedCreateWithoutPatientInput> | ConsultationCreateWithoutPatientInput[] | ConsultationUncheckedCreateWithoutPatientInput[]
    connectOrCreate?: ConsultationCreateOrConnectWithoutPatientInput | ConsultationCreateOrConnectWithoutPatientInput[]
    upsert?: ConsultationUpsertWithWhereUniqueWithoutPatientInput | ConsultationUpsertWithWhereUniqueWithoutPatientInput[]
    createMany?: ConsultationCreateManyPatientInputEnvelope
    set?: ConsultationWhereUniqueInput | ConsultationWhereUniqueInput[]
    disconnect?: ConsultationWhereUniqueInput | ConsultationWhereUniqueInput[]
    delete?: ConsultationWhereUniqueInput | ConsultationWhereUniqueInput[]
    connect?: ConsultationWhereUniqueInput | ConsultationWhereUniqueInput[]
    update?: ConsultationUpdateWithWhereUniqueWithoutPatientInput | ConsultationUpdateWithWhereUniqueWithoutPatientInput[]
    updateMany?: ConsultationUpdateManyWithWhereWithoutPatientInput | ConsultationUpdateManyWithWhereWithoutPatientInput[]
    deleteMany?: ConsultationScalarWhereInput | ConsultationScalarWhereInput[]
  }

  export type UserUncheckedUpdateManyWithoutAgeVerifierNestedInput = {
    create?: XOR<UserCreateWithoutAgeVerifierInput, UserUncheckedCreateWithoutAgeVerifierInput> | UserCreateWithoutAgeVerifierInput[] | UserUncheckedCreateWithoutAgeVerifierInput[]
    connectOrCreate?: UserCreateOrConnectWithoutAgeVerifierInput | UserCreateOrConnectWithoutAgeVerifierInput[]
    upsert?: UserUpsertWithWhereUniqueWithoutAgeVerifierInput | UserUpsertWithWhereUniqueWithoutAgeVerifierInput[]
    createMany?: UserCreateManyAgeVerifierInputEnvelope
    set?: UserWhereUniqueInput | UserWhereUniqueInput[]
    disconnect?: UserWhereUniqueInput | UserWhereUniqueInput[]
    delete?: UserWhereUniqueInput | UserWhereUniqueInput[]
    connect?: UserWhereUniqueInput | UserWhereUniqueInput[]
    update?: UserUpdateWithWhereUniqueWithoutAgeVerifierInput | UserUpdateWithWhereUniqueWithoutAgeVerifierInput[]
    updateMany?: UserUpdateManyWithWhereWithoutAgeVerifierInput | UserUpdateManyWithWhereWithoutAgeVerifierInput[]
    deleteMany?: UserScalarWhereInput | UserScalarWhereInput[]
  }

  export type BlogPostUncheckedUpdateManyWithoutAuthorNestedInput = {
    create?: XOR<BlogPostCreateWithoutAuthorInput, BlogPostUncheckedCreateWithoutAuthorInput> | BlogPostCreateWithoutAuthorInput[] | BlogPostUncheckedCreateWithoutAuthorInput[]
    connectOrCreate?: BlogPostCreateOrConnectWithoutAuthorInput | BlogPostCreateOrConnectWithoutAuthorInput[]
    upsert?: BlogPostUpsertWithWhereUniqueWithoutAuthorInput | BlogPostUpsertWithWhereUniqueWithoutAuthorInput[]
    createMany?: BlogPostCreateManyAuthorInputEnvelope
    set?: BlogPostWhereUniqueInput | BlogPostWhereUniqueInput[]
    disconnect?: BlogPostWhereUniqueInput | BlogPostWhereUniqueInput[]
    delete?: BlogPostWhereUniqueInput | BlogPostWhereUniqueInput[]
    connect?: BlogPostWhereUniqueInput | BlogPostWhereUniqueInput[]
    update?: BlogPostUpdateWithWhereUniqueWithoutAuthorInput | BlogPostUpdateWithWhereUniqueWithoutAuthorInput[]
    updateMany?: BlogPostUpdateManyWithWhereWithoutAuthorInput | BlogPostUpdateManyWithWhereWithoutAuthorInput[]
    deleteMany?: BlogPostScalarWhereInput | BlogPostScalarWhereInput[]
  }

  export type BlogPostUncheckedUpdateManyWithoutFactCheckerNestedInput = {
    create?: XOR<BlogPostCreateWithoutFactCheckerInput, BlogPostUncheckedCreateWithoutFactCheckerInput> | BlogPostCreateWithoutFactCheckerInput[] | BlogPostUncheckedCreateWithoutFactCheckerInput[]
    connectOrCreate?: BlogPostCreateOrConnectWithoutFactCheckerInput | BlogPostCreateOrConnectWithoutFactCheckerInput[]
    upsert?: BlogPostUpsertWithWhereUniqueWithoutFactCheckerInput | BlogPostUpsertWithWhereUniqueWithoutFactCheckerInput[]
    createMany?: BlogPostCreateManyFactCheckerInputEnvelope
    set?: BlogPostWhereUniqueInput | BlogPostWhereUniqueInput[]
    disconnect?: BlogPostWhereUniqueInput | BlogPostWhereUniqueInput[]
    delete?: BlogPostWhereUniqueInput | BlogPostWhereUniqueInput[]
    connect?: BlogPostWhereUniqueInput | BlogPostWhereUniqueInput[]
    update?: BlogPostUpdateWithWhereUniqueWithoutFactCheckerInput | BlogPostUpdateWithWhereUniqueWithoutFactCheckerInput[]
    updateMany?: BlogPostUpdateManyWithWhereWithoutFactCheckerInput | BlogPostUpdateManyWithWhereWithoutFactCheckerInput[]
    deleteMany?: BlogPostScalarWhereInput | BlogPostScalarWhereInput[]
  }

  export type UserCreateNestedOneWithoutAddressesInput = {
    create?: XOR<UserCreateWithoutAddressesInput, UserUncheckedCreateWithoutAddressesInput>
    connectOrCreate?: UserCreateOrConnectWithoutAddressesInput
    connect?: UserWhereUniqueInput
  }

  export type EnumAddressTypeFieldUpdateOperationsInput = {
    set?: $Enums.AddressType
  }

  export type NullableDecimalFieldUpdateOperationsInput = {
    set?: Decimal | DecimalJsLike | number | string | null
    increment?: Decimal | DecimalJsLike | number | string
    decrement?: Decimal | DecimalJsLike | number | string
    multiply?: Decimal | DecimalJsLike | number | string
    divide?: Decimal | DecimalJsLike | number | string
  }

  export type UserUpdateOneRequiredWithoutAddressesNestedInput = {
    create?: XOR<UserCreateWithoutAddressesInput, UserUncheckedCreateWithoutAddressesInput>
    connectOrCreate?: UserCreateOrConnectWithoutAddressesInput
    upsert?: UserUpsertWithoutAddressesInput
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutAddressesInput, UserUpdateWithoutAddressesInput>, UserUncheckedUpdateWithoutAddressesInput>
  }

  export type UserCreateNestedOneWithoutSessionsInput = {
    create?: XOR<UserCreateWithoutSessionsInput, UserUncheckedCreateWithoutSessionsInput>
    connectOrCreate?: UserCreateOrConnectWithoutSessionsInput
    connect?: UserWhereUniqueInput
  }

  export type UserUpdateOneRequiredWithoutSessionsNestedInput = {
    create?: XOR<UserCreateWithoutSessionsInput, UserUncheckedCreateWithoutSessionsInput>
    connectOrCreate?: UserCreateOrConnectWithoutSessionsInput
    upsert?: UserUpsertWithoutSessionsInput
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutSessionsInput, UserUpdateWithoutSessionsInput>, UserUncheckedUpdateWithoutSessionsInput>
  }

  export type UserCreateNestedOneWithoutStoresInput = {
    create?: XOR<UserCreateWithoutStoresInput, UserUncheckedCreateWithoutStoresInput>
    connectOrCreate?: UserCreateOrConnectWithoutStoresInput
    connect?: UserWhereUniqueInput
  }

  export type StoreStaffCreateNestedManyWithoutStoreInput = {
    create?: XOR<StoreStaffCreateWithoutStoreInput, StoreStaffUncheckedCreateWithoutStoreInput> | StoreStaffCreateWithoutStoreInput[] | StoreStaffUncheckedCreateWithoutStoreInput[]
    connectOrCreate?: StoreStaffCreateOrConnectWithoutStoreInput | StoreStaffCreateOrConnectWithoutStoreInput[]
    createMany?: StoreStaffCreateManyStoreInputEnvelope
    connect?: StoreStaffWhereUniqueInput | StoreStaffWhereUniqueInput[]
  }

  export type ProductCreateNestedManyWithoutStoreInput = {
    create?: XOR<ProductCreateWithoutStoreInput, ProductUncheckedCreateWithoutStoreInput> | ProductCreateWithoutStoreInput[] | ProductUncheckedCreateWithoutStoreInput[]
    connectOrCreate?: ProductCreateOrConnectWithoutStoreInput | ProductCreateOrConnectWithoutStoreInput[]
    createMany?: ProductCreateManyStoreInputEnvelope
    connect?: ProductWhereUniqueInput | ProductWhereUniqueInput[]
  }

  export type OrderCreateNestedManyWithoutStoreInput = {
    create?: XOR<OrderCreateWithoutStoreInput, OrderUncheckedCreateWithoutStoreInput> | OrderCreateWithoutStoreInput[] | OrderUncheckedCreateWithoutStoreInput[]
    connectOrCreate?: OrderCreateOrConnectWithoutStoreInput | OrderCreateOrConnectWithoutStoreInput[]
    createMany?: OrderCreateManyStoreInputEnvelope
    connect?: OrderWhereUniqueInput | OrderWhereUniqueInput[]
  }

  export type ReviewCreateNestedManyWithoutStoreInput = {
    create?: XOR<ReviewCreateWithoutStoreInput, ReviewUncheckedCreateWithoutStoreInput> | ReviewCreateWithoutStoreInput[] | ReviewUncheckedCreateWithoutStoreInput[]
    connectOrCreate?: ReviewCreateOrConnectWithoutStoreInput | ReviewCreateOrConnectWithoutStoreInput[]
    createMany?: ReviewCreateManyStoreInputEnvelope
    connect?: ReviewWhereUniqueInput | ReviewWhereUniqueInput[]
  }

  export type StoreStaffUncheckedCreateNestedManyWithoutStoreInput = {
    create?: XOR<StoreStaffCreateWithoutStoreInput, StoreStaffUncheckedCreateWithoutStoreInput> | StoreStaffCreateWithoutStoreInput[] | StoreStaffUncheckedCreateWithoutStoreInput[]
    connectOrCreate?: StoreStaffCreateOrConnectWithoutStoreInput | StoreStaffCreateOrConnectWithoutStoreInput[]
    createMany?: StoreStaffCreateManyStoreInputEnvelope
    connect?: StoreStaffWhereUniqueInput | StoreStaffWhereUniqueInput[]
  }

  export type ProductUncheckedCreateNestedManyWithoutStoreInput = {
    create?: XOR<ProductCreateWithoutStoreInput, ProductUncheckedCreateWithoutStoreInput> | ProductCreateWithoutStoreInput[] | ProductUncheckedCreateWithoutStoreInput[]
    connectOrCreate?: ProductCreateOrConnectWithoutStoreInput | ProductCreateOrConnectWithoutStoreInput[]
    createMany?: ProductCreateManyStoreInputEnvelope
    connect?: ProductWhereUniqueInput | ProductWhereUniqueInput[]
  }

  export type OrderUncheckedCreateNestedManyWithoutStoreInput = {
    create?: XOR<OrderCreateWithoutStoreInput, OrderUncheckedCreateWithoutStoreInput> | OrderCreateWithoutStoreInput[] | OrderUncheckedCreateWithoutStoreInput[]
    connectOrCreate?: OrderCreateOrConnectWithoutStoreInput | OrderCreateOrConnectWithoutStoreInput[]
    createMany?: OrderCreateManyStoreInputEnvelope
    connect?: OrderWhereUniqueInput | OrderWhereUniqueInput[]
  }

  export type ReviewUncheckedCreateNestedManyWithoutStoreInput = {
    create?: XOR<ReviewCreateWithoutStoreInput, ReviewUncheckedCreateWithoutStoreInput> | ReviewCreateWithoutStoreInput[] | ReviewUncheckedCreateWithoutStoreInput[]
    connectOrCreate?: ReviewCreateOrConnectWithoutStoreInput | ReviewCreateOrConnectWithoutStoreInput[]
    createMany?: ReviewCreateManyStoreInputEnvelope
    connect?: ReviewWhereUniqueInput | ReviewWhereUniqueInput[]
  }

  export type DecimalFieldUpdateOperationsInput = {
    set?: Decimal | DecimalJsLike | number | string
    increment?: Decimal | DecimalJsLike | number | string
    decrement?: Decimal | DecimalJsLike | number | string
    multiply?: Decimal | DecimalJsLike | number | string
    divide?: Decimal | DecimalJsLike | number | string
  }

  export type EnumBusinessTypeFieldUpdateOperationsInput = {
    set?: $Enums.BusinessType
  }

  export type NullableIntFieldUpdateOperationsInput = {
    set?: number | null
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type EnumStoreStatusFieldUpdateOperationsInput = {
    set?: $Enums.StoreStatus
  }

  export type EnumComplianceStatusFieldUpdateOperationsInput = {
    set?: $Enums.ComplianceStatus
  }

  export type NullableEnumTrackTraceSystemFieldUpdateOperationsInput = {
    set?: $Enums.TrackTraceSystem | null
  }

  export type UserUpdateOneRequiredWithoutStoresNestedInput = {
    create?: XOR<UserCreateWithoutStoresInput, UserUncheckedCreateWithoutStoresInput>
    connectOrCreate?: UserCreateOrConnectWithoutStoresInput
    upsert?: UserUpsertWithoutStoresInput
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutStoresInput, UserUpdateWithoutStoresInput>, UserUncheckedUpdateWithoutStoresInput>
  }

  export type StoreStaffUpdateManyWithoutStoreNestedInput = {
    create?: XOR<StoreStaffCreateWithoutStoreInput, StoreStaffUncheckedCreateWithoutStoreInput> | StoreStaffCreateWithoutStoreInput[] | StoreStaffUncheckedCreateWithoutStoreInput[]
    connectOrCreate?: StoreStaffCreateOrConnectWithoutStoreInput | StoreStaffCreateOrConnectWithoutStoreInput[]
    upsert?: StoreStaffUpsertWithWhereUniqueWithoutStoreInput | StoreStaffUpsertWithWhereUniqueWithoutStoreInput[]
    createMany?: StoreStaffCreateManyStoreInputEnvelope
    set?: StoreStaffWhereUniqueInput | StoreStaffWhereUniqueInput[]
    disconnect?: StoreStaffWhereUniqueInput | StoreStaffWhereUniqueInput[]
    delete?: StoreStaffWhereUniqueInput | StoreStaffWhereUniqueInput[]
    connect?: StoreStaffWhereUniqueInput | StoreStaffWhereUniqueInput[]
    update?: StoreStaffUpdateWithWhereUniqueWithoutStoreInput | StoreStaffUpdateWithWhereUniqueWithoutStoreInput[]
    updateMany?: StoreStaffUpdateManyWithWhereWithoutStoreInput | StoreStaffUpdateManyWithWhereWithoutStoreInput[]
    deleteMany?: StoreStaffScalarWhereInput | StoreStaffScalarWhereInput[]
  }

  export type ProductUpdateManyWithoutStoreNestedInput = {
    create?: XOR<ProductCreateWithoutStoreInput, ProductUncheckedCreateWithoutStoreInput> | ProductCreateWithoutStoreInput[] | ProductUncheckedCreateWithoutStoreInput[]
    connectOrCreate?: ProductCreateOrConnectWithoutStoreInput | ProductCreateOrConnectWithoutStoreInput[]
    upsert?: ProductUpsertWithWhereUniqueWithoutStoreInput | ProductUpsertWithWhereUniqueWithoutStoreInput[]
    createMany?: ProductCreateManyStoreInputEnvelope
    set?: ProductWhereUniqueInput | ProductWhereUniqueInput[]
    disconnect?: ProductWhereUniqueInput | ProductWhereUniqueInput[]
    delete?: ProductWhereUniqueInput | ProductWhereUniqueInput[]
    connect?: ProductWhereUniqueInput | ProductWhereUniqueInput[]
    update?: ProductUpdateWithWhereUniqueWithoutStoreInput | ProductUpdateWithWhereUniqueWithoutStoreInput[]
    updateMany?: ProductUpdateManyWithWhereWithoutStoreInput | ProductUpdateManyWithWhereWithoutStoreInput[]
    deleteMany?: ProductScalarWhereInput | ProductScalarWhereInput[]
  }

  export type OrderUpdateManyWithoutStoreNestedInput = {
    create?: XOR<OrderCreateWithoutStoreInput, OrderUncheckedCreateWithoutStoreInput> | OrderCreateWithoutStoreInput[] | OrderUncheckedCreateWithoutStoreInput[]
    connectOrCreate?: OrderCreateOrConnectWithoutStoreInput | OrderCreateOrConnectWithoutStoreInput[]
    upsert?: OrderUpsertWithWhereUniqueWithoutStoreInput | OrderUpsertWithWhereUniqueWithoutStoreInput[]
    createMany?: OrderCreateManyStoreInputEnvelope
    set?: OrderWhereUniqueInput | OrderWhereUniqueInput[]
    disconnect?: OrderWhereUniqueInput | OrderWhereUniqueInput[]
    delete?: OrderWhereUniqueInput | OrderWhereUniqueInput[]
    connect?: OrderWhereUniqueInput | OrderWhereUniqueInput[]
    update?: OrderUpdateWithWhereUniqueWithoutStoreInput | OrderUpdateWithWhereUniqueWithoutStoreInput[]
    updateMany?: OrderUpdateManyWithWhereWithoutStoreInput | OrderUpdateManyWithWhereWithoutStoreInput[]
    deleteMany?: OrderScalarWhereInput | OrderScalarWhereInput[]
  }

  export type ReviewUpdateManyWithoutStoreNestedInput = {
    create?: XOR<ReviewCreateWithoutStoreInput, ReviewUncheckedCreateWithoutStoreInput> | ReviewCreateWithoutStoreInput[] | ReviewUncheckedCreateWithoutStoreInput[]
    connectOrCreate?: ReviewCreateOrConnectWithoutStoreInput | ReviewCreateOrConnectWithoutStoreInput[]
    upsert?: ReviewUpsertWithWhereUniqueWithoutStoreInput | ReviewUpsertWithWhereUniqueWithoutStoreInput[]
    createMany?: ReviewCreateManyStoreInputEnvelope
    set?: ReviewWhereUniqueInput | ReviewWhereUniqueInput[]
    disconnect?: ReviewWhereUniqueInput | ReviewWhereUniqueInput[]
    delete?: ReviewWhereUniqueInput | ReviewWhereUniqueInput[]
    connect?: ReviewWhereUniqueInput | ReviewWhereUniqueInput[]
    update?: ReviewUpdateWithWhereUniqueWithoutStoreInput | ReviewUpdateWithWhereUniqueWithoutStoreInput[]
    updateMany?: ReviewUpdateManyWithWhereWithoutStoreInput | ReviewUpdateManyWithWhereWithoutStoreInput[]
    deleteMany?: ReviewScalarWhereInput | ReviewScalarWhereInput[]
  }

  export type StoreStaffUncheckedUpdateManyWithoutStoreNestedInput = {
    create?: XOR<StoreStaffCreateWithoutStoreInput, StoreStaffUncheckedCreateWithoutStoreInput> | StoreStaffCreateWithoutStoreInput[] | StoreStaffUncheckedCreateWithoutStoreInput[]
    connectOrCreate?: StoreStaffCreateOrConnectWithoutStoreInput | StoreStaffCreateOrConnectWithoutStoreInput[]
    upsert?: StoreStaffUpsertWithWhereUniqueWithoutStoreInput | StoreStaffUpsertWithWhereUniqueWithoutStoreInput[]
    createMany?: StoreStaffCreateManyStoreInputEnvelope
    set?: StoreStaffWhereUniqueInput | StoreStaffWhereUniqueInput[]
    disconnect?: StoreStaffWhereUniqueInput | StoreStaffWhereUniqueInput[]
    delete?: StoreStaffWhereUniqueInput | StoreStaffWhereUniqueInput[]
    connect?: StoreStaffWhereUniqueInput | StoreStaffWhereUniqueInput[]
    update?: StoreStaffUpdateWithWhereUniqueWithoutStoreInput | StoreStaffUpdateWithWhereUniqueWithoutStoreInput[]
    updateMany?: StoreStaffUpdateManyWithWhereWithoutStoreInput | StoreStaffUpdateManyWithWhereWithoutStoreInput[]
    deleteMany?: StoreStaffScalarWhereInput | StoreStaffScalarWhereInput[]
  }

  export type ProductUncheckedUpdateManyWithoutStoreNestedInput = {
    create?: XOR<ProductCreateWithoutStoreInput, ProductUncheckedCreateWithoutStoreInput> | ProductCreateWithoutStoreInput[] | ProductUncheckedCreateWithoutStoreInput[]
    connectOrCreate?: ProductCreateOrConnectWithoutStoreInput | ProductCreateOrConnectWithoutStoreInput[]
    upsert?: ProductUpsertWithWhereUniqueWithoutStoreInput | ProductUpsertWithWhereUniqueWithoutStoreInput[]
    createMany?: ProductCreateManyStoreInputEnvelope
    set?: ProductWhereUniqueInput | ProductWhereUniqueInput[]
    disconnect?: ProductWhereUniqueInput | ProductWhereUniqueInput[]
    delete?: ProductWhereUniqueInput | ProductWhereUniqueInput[]
    connect?: ProductWhereUniqueInput | ProductWhereUniqueInput[]
    update?: ProductUpdateWithWhereUniqueWithoutStoreInput | ProductUpdateWithWhereUniqueWithoutStoreInput[]
    updateMany?: ProductUpdateManyWithWhereWithoutStoreInput | ProductUpdateManyWithWhereWithoutStoreInput[]
    deleteMany?: ProductScalarWhereInput | ProductScalarWhereInput[]
  }

  export type OrderUncheckedUpdateManyWithoutStoreNestedInput = {
    create?: XOR<OrderCreateWithoutStoreInput, OrderUncheckedCreateWithoutStoreInput> | OrderCreateWithoutStoreInput[] | OrderUncheckedCreateWithoutStoreInput[]
    connectOrCreate?: OrderCreateOrConnectWithoutStoreInput | OrderCreateOrConnectWithoutStoreInput[]
    upsert?: OrderUpsertWithWhereUniqueWithoutStoreInput | OrderUpsertWithWhereUniqueWithoutStoreInput[]
    createMany?: OrderCreateManyStoreInputEnvelope
    set?: OrderWhereUniqueInput | OrderWhereUniqueInput[]
    disconnect?: OrderWhereUniqueInput | OrderWhereUniqueInput[]
    delete?: OrderWhereUniqueInput | OrderWhereUniqueInput[]
    connect?: OrderWhereUniqueInput | OrderWhereUniqueInput[]
    update?: OrderUpdateWithWhereUniqueWithoutStoreInput | OrderUpdateWithWhereUniqueWithoutStoreInput[]
    updateMany?: OrderUpdateManyWithWhereWithoutStoreInput | OrderUpdateManyWithWhereWithoutStoreInput[]
    deleteMany?: OrderScalarWhereInput | OrderScalarWhereInput[]
  }

  export type ReviewUncheckedUpdateManyWithoutStoreNestedInput = {
    create?: XOR<ReviewCreateWithoutStoreInput, ReviewUncheckedCreateWithoutStoreInput> | ReviewCreateWithoutStoreInput[] | ReviewUncheckedCreateWithoutStoreInput[]
    connectOrCreate?: ReviewCreateOrConnectWithoutStoreInput | ReviewCreateOrConnectWithoutStoreInput[]
    upsert?: ReviewUpsertWithWhereUniqueWithoutStoreInput | ReviewUpsertWithWhereUniqueWithoutStoreInput[]
    createMany?: ReviewCreateManyStoreInputEnvelope
    set?: ReviewWhereUniqueInput | ReviewWhereUniqueInput[]
    disconnect?: ReviewWhereUniqueInput | ReviewWhereUniqueInput[]
    delete?: ReviewWhereUniqueInput | ReviewWhereUniqueInput[]
    connect?: ReviewWhereUniqueInput | ReviewWhereUniqueInput[]
    update?: ReviewUpdateWithWhereUniqueWithoutStoreInput | ReviewUpdateWithWhereUniqueWithoutStoreInput[]
    updateMany?: ReviewUpdateManyWithWhereWithoutStoreInput | ReviewUpdateManyWithWhereWithoutStoreInput[]
    deleteMany?: ReviewScalarWhereInput | ReviewScalarWhereInput[]
  }

  export type StoreCreateNestedOneWithoutStaffInput = {
    create?: XOR<StoreCreateWithoutStaffInput, StoreUncheckedCreateWithoutStaffInput>
    connectOrCreate?: StoreCreateOrConnectWithoutStaffInput
    connect?: StoreWhereUniqueInput
  }

  export type UserCreateNestedOneWithoutStoreStaffInput = {
    create?: XOR<UserCreateWithoutStoreStaffInput, UserUncheckedCreateWithoutStoreStaffInput>
    connectOrCreate?: UserCreateOrConnectWithoutStoreStaffInput
    connect?: UserWhereUniqueInput
  }

  export type StoreUpdateOneRequiredWithoutStaffNestedInput = {
    create?: XOR<StoreCreateWithoutStaffInput, StoreUncheckedCreateWithoutStaffInput>
    connectOrCreate?: StoreCreateOrConnectWithoutStaffInput
    upsert?: StoreUpsertWithoutStaffInput
    connect?: StoreWhereUniqueInput
    update?: XOR<XOR<StoreUpdateToOneWithWhereWithoutStaffInput, StoreUpdateWithoutStaffInput>, StoreUncheckedUpdateWithoutStaffInput>
  }

  export type UserUpdateOneRequiredWithoutStoreStaffNestedInput = {
    create?: XOR<UserCreateWithoutStoreStaffInput, UserUncheckedCreateWithoutStoreStaffInput>
    connectOrCreate?: UserCreateOrConnectWithoutStoreStaffInput
    upsert?: UserUpsertWithoutStoreStaffInput
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutStoreStaffInput, UserUpdateWithoutStoreStaffInput>, UserUncheckedUpdateWithoutStoreStaffInput>
  }

  export type ProductCategoryCreateNestedOneWithoutChildrenInput = {
    create?: XOR<ProductCategoryCreateWithoutChildrenInput, ProductCategoryUncheckedCreateWithoutChildrenInput>
    connectOrCreate?: ProductCategoryCreateOrConnectWithoutChildrenInput
    connect?: ProductCategoryWhereUniqueInput
  }

  export type ProductCategoryCreateNestedManyWithoutParentInput = {
    create?: XOR<ProductCategoryCreateWithoutParentInput, ProductCategoryUncheckedCreateWithoutParentInput> | ProductCategoryCreateWithoutParentInput[] | ProductCategoryUncheckedCreateWithoutParentInput[]
    connectOrCreate?: ProductCategoryCreateOrConnectWithoutParentInput | ProductCategoryCreateOrConnectWithoutParentInput[]
    createMany?: ProductCategoryCreateManyParentInputEnvelope
    connect?: ProductCategoryWhereUniqueInput | ProductCategoryWhereUniqueInput[]
  }

  export type ProductCreateNestedManyWithoutCategoryInput = {
    create?: XOR<ProductCreateWithoutCategoryInput, ProductUncheckedCreateWithoutCategoryInput> | ProductCreateWithoutCategoryInput[] | ProductUncheckedCreateWithoutCategoryInput[]
    connectOrCreate?: ProductCreateOrConnectWithoutCategoryInput | ProductCreateOrConnectWithoutCategoryInput[]
    createMany?: ProductCreateManyCategoryInputEnvelope
    connect?: ProductWhereUniqueInput | ProductWhereUniqueInput[]
  }

  export type ProductCategoryUncheckedCreateNestedManyWithoutParentInput = {
    create?: XOR<ProductCategoryCreateWithoutParentInput, ProductCategoryUncheckedCreateWithoutParentInput> | ProductCategoryCreateWithoutParentInput[] | ProductCategoryUncheckedCreateWithoutParentInput[]
    connectOrCreate?: ProductCategoryCreateOrConnectWithoutParentInput | ProductCategoryCreateOrConnectWithoutParentInput[]
    createMany?: ProductCategoryCreateManyParentInputEnvelope
    connect?: ProductCategoryWhereUniqueInput | ProductCategoryWhereUniqueInput[]
  }

  export type ProductUncheckedCreateNestedManyWithoutCategoryInput = {
    create?: XOR<ProductCreateWithoutCategoryInput, ProductUncheckedCreateWithoutCategoryInput> | ProductCreateWithoutCategoryInput[] | ProductUncheckedCreateWithoutCategoryInput[]
    connectOrCreate?: ProductCreateOrConnectWithoutCategoryInput | ProductCreateOrConnectWithoutCategoryInput[]
    createMany?: ProductCreateManyCategoryInputEnvelope
    connect?: ProductWhereUniqueInput | ProductWhereUniqueInput[]
  }

  export type EnumProductTypeFieldUpdateOperationsInput = {
    set?: $Enums.ProductType
  }

  export type ProductCategoryUpdateOneWithoutChildrenNestedInput = {
    create?: XOR<ProductCategoryCreateWithoutChildrenInput, ProductCategoryUncheckedCreateWithoutChildrenInput>
    connectOrCreate?: ProductCategoryCreateOrConnectWithoutChildrenInput
    upsert?: ProductCategoryUpsertWithoutChildrenInput
    disconnect?: ProductCategoryWhereInput | boolean
    delete?: ProductCategoryWhereInput | boolean
    connect?: ProductCategoryWhereUniqueInput
    update?: XOR<XOR<ProductCategoryUpdateToOneWithWhereWithoutChildrenInput, ProductCategoryUpdateWithoutChildrenInput>, ProductCategoryUncheckedUpdateWithoutChildrenInput>
  }

  export type ProductCategoryUpdateManyWithoutParentNestedInput = {
    create?: XOR<ProductCategoryCreateWithoutParentInput, ProductCategoryUncheckedCreateWithoutParentInput> | ProductCategoryCreateWithoutParentInput[] | ProductCategoryUncheckedCreateWithoutParentInput[]
    connectOrCreate?: ProductCategoryCreateOrConnectWithoutParentInput | ProductCategoryCreateOrConnectWithoutParentInput[]
    upsert?: ProductCategoryUpsertWithWhereUniqueWithoutParentInput | ProductCategoryUpsertWithWhereUniqueWithoutParentInput[]
    createMany?: ProductCategoryCreateManyParentInputEnvelope
    set?: ProductCategoryWhereUniqueInput | ProductCategoryWhereUniqueInput[]
    disconnect?: ProductCategoryWhereUniqueInput | ProductCategoryWhereUniqueInput[]
    delete?: ProductCategoryWhereUniqueInput | ProductCategoryWhereUniqueInput[]
    connect?: ProductCategoryWhereUniqueInput | ProductCategoryWhereUniqueInput[]
    update?: ProductCategoryUpdateWithWhereUniqueWithoutParentInput | ProductCategoryUpdateWithWhereUniqueWithoutParentInput[]
    updateMany?: ProductCategoryUpdateManyWithWhereWithoutParentInput | ProductCategoryUpdateManyWithWhereWithoutParentInput[]
    deleteMany?: ProductCategoryScalarWhereInput | ProductCategoryScalarWhereInput[]
  }

  export type ProductUpdateManyWithoutCategoryNestedInput = {
    create?: XOR<ProductCreateWithoutCategoryInput, ProductUncheckedCreateWithoutCategoryInput> | ProductCreateWithoutCategoryInput[] | ProductUncheckedCreateWithoutCategoryInput[]
    connectOrCreate?: ProductCreateOrConnectWithoutCategoryInput | ProductCreateOrConnectWithoutCategoryInput[]
    upsert?: ProductUpsertWithWhereUniqueWithoutCategoryInput | ProductUpsertWithWhereUniqueWithoutCategoryInput[]
    createMany?: ProductCreateManyCategoryInputEnvelope
    set?: ProductWhereUniqueInput | ProductWhereUniqueInput[]
    disconnect?: ProductWhereUniqueInput | ProductWhereUniqueInput[]
    delete?: ProductWhereUniqueInput | ProductWhereUniqueInput[]
    connect?: ProductWhereUniqueInput | ProductWhereUniqueInput[]
    update?: ProductUpdateWithWhereUniqueWithoutCategoryInput | ProductUpdateWithWhereUniqueWithoutCategoryInput[]
    updateMany?: ProductUpdateManyWithWhereWithoutCategoryInput | ProductUpdateManyWithWhereWithoutCategoryInput[]
    deleteMany?: ProductScalarWhereInput | ProductScalarWhereInput[]
  }

  export type ProductCategoryUncheckedUpdateManyWithoutParentNestedInput = {
    create?: XOR<ProductCategoryCreateWithoutParentInput, ProductCategoryUncheckedCreateWithoutParentInput> | ProductCategoryCreateWithoutParentInput[] | ProductCategoryUncheckedCreateWithoutParentInput[]
    connectOrCreate?: ProductCategoryCreateOrConnectWithoutParentInput | ProductCategoryCreateOrConnectWithoutParentInput[]
    upsert?: ProductCategoryUpsertWithWhereUniqueWithoutParentInput | ProductCategoryUpsertWithWhereUniqueWithoutParentInput[]
    createMany?: ProductCategoryCreateManyParentInputEnvelope
    set?: ProductCategoryWhereUniqueInput | ProductCategoryWhereUniqueInput[]
    disconnect?: ProductCategoryWhereUniqueInput | ProductCategoryWhereUniqueInput[]
    delete?: ProductCategoryWhereUniqueInput | ProductCategoryWhereUniqueInput[]
    connect?: ProductCategoryWhereUniqueInput | ProductCategoryWhereUniqueInput[]
    update?: ProductCategoryUpdateWithWhereUniqueWithoutParentInput | ProductCategoryUpdateWithWhereUniqueWithoutParentInput[]
    updateMany?: ProductCategoryUpdateManyWithWhereWithoutParentInput | ProductCategoryUpdateManyWithWhereWithoutParentInput[]
    deleteMany?: ProductCategoryScalarWhereInput | ProductCategoryScalarWhereInput[]
  }

  export type ProductUncheckedUpdateManyWithoutCategoryNestedInput = {
    create?: XOR<ProductCreateWithoutCategoryInput, ProductUncheckedCreateWithoutCategoryInput> | ProductCreateWithoutCategoryInput[] | ProductUncheckedCreateWithoutCategoryInput[]
    connectOrCreate?: ProductCreateOrConnectWithoutCategoryInput | ProductCreateOrConnectWithoutCategoryInput[]
    upsert?: ProductUpsertWithWhereUniqueWithoutCategoryInput | ProductUpsertWithWhereUniqueWithoutCategoryInput[]
    createMany?: ProductCreateManyCategoryInputEnvelope
    set?: ProductWhereUniqueInput | ProductWhereUniqueInput[]
    disconnect?: ProductWhereUniqueInput | ProductWhereUniqueInput[]
    delete?: ProductWhereUniqueInput | ProductWhereUniqueInput[]
    connect?: ProductWhereUniqueInput | ProductWhereUniqueInput[]
    update?: ProductUpdateWithWhereUniqueWithoutCategoryInput | ProductUpdateWithWhereUniqueWithoutCategoryInput[]
    updateMany?: ProductUpdateManyWithWhereWithoutCategoryInput | ProductUpdateManyWithWhereWithoutCategoryInput[]
    deleteMany?: ProductScalarWhereInput | ProductScalarWhereInput[]
  }

  export type StoreCreateNestedOneWithoutProductsInput = {
    create?: XOR<StoreCreateWithoutProductsInput, StoreUncheckedCreateWithoutProductsInput>
    connectOrCreate?: StoreCreateOrConnectWithoutProductsInput
    connect?: StoreWhereUniqueInput
  }

  export type ProductCategoryCreateNestedOneWithoutProductsInput = {
    create?: XOR<ProductCategoryCreateWithoutProductsInput, ProductCategoryUncheckedCreateWithoutProductsInput>
    connectOrCreate?: ProductCategoryCreateOrConnectWithoutProductsInput
    connect?: ProductCategoryWhereUniqueInput
  }

  export type ReviewCreateNestedManyWithoutProductInput = {
    create?: XOR<ReviewCreateWithoutProductInput, ReviewUncheckedCreateWithoutProductInput> | ReviewCreateWithoutProductInput[] | ReviewUncheckedCreateWithoutProductInput[]
    connectOrCreate?: ReviewCreateOrConnectWithoutProductInput | ReviewCreateOrConnectWithoutProductInput[]
    createMany?: ReviewCreateManyProductInputEnvelope
    connect?: ReviewWhereUniqueInput | ReviewWhereUniqueInput[]
  }

  export type OrderItemCreateNestedManyWithoutProductInput = {
    create?: XOR<OrderItemCreateWithoutProductInput, OrderItemUncheckedCreateWithoutProductInput> | OrderItemCreateWithoutProductInput[] | OrderItemUncheckedCreateWithoutProductInput[]
    connectOrCreate?: OrderItemCreateOrConnectWithoutProductInput | OrderItemCreateOrConnectWithoutProductInput[]
    createMany?: OrderItemCreateManyProductInputEnvelope
    connect?: OrderItemWhereUniqueInput | OrderItemWhereUniqueInput[]
  }

  export type ReviewUncheckedCreateNestedManyWithoutProductInput = {
    create?: XOR<ReviewCreateWithoutProductInput, ReviewUncheckedCreateWithoutProductInput> | ReviewCreateWithoutProductInput[] | ReviewUncheckedCreateWithoutProductInput[]
    connectOrCreate?: ReviewCreateOrConnectWithoutProductInput | ReviewCreateOrConnectWithoutProductInput[]
    createMany?: ReviewCreateManyProductInputEnvelope
    connect?: ReviewWhereUniqueInput | ReviewWhereUniqueInput[]
  }

  export type OrderItemUncheckedCreateNestedManyWithoutProductInput = {
    create?: XOR<OrderItemCreateWithoutProductInput, OrderItemUncheckedCreateWithoutProductInput> | OrderItemCreateWithoutProductInput[] | OrderItemUncheckedCreateWithoutProductInput[]
    connectOrCreate?: OrderItemCreateOrConnectWithoutProductInput | OrderItemCreateOrConnectWithoutProductInput[]
    createMany?: OrderItemCreateManyProductInputEnvelope
    connect?: OrderItemWhereUniqueInput | OrderItemWhereUniqueInput[]
  }

  export type NullableEnumStrainTypeFieldUpdateOperationsInput = {
    set?: $Enums.StrainType | null
  }

  export type EnumProductStatusFieldUpdateOperationsInput = {
    set?: $Enums.ProductStatus
  }

  export type StoreUpdateOneRequiredWithoutProductsNestedInput = {
    create?: XOR<StoreCreateWithoutProductsInput, StoreUncheckedCreateWithoutProductsInput>
    connectOrCreate?: StoreCreateOrConnectWithoutProductsInput
    upsert?: StoreUpsertWithoutProductsInput
    connect?: StoreWhereUniqueInput
    update?: XOR<XOR<StoreUpdateToOneWithWhereWithoutProductsInput, StoreUpdateWithoutProductsInput>, StoreUncheckedUpdateWithoutProductsInput>
  }

  export type ProductCategoryUpdateOneRequiredWithoutProductsNestedInput = {
    create?: XOR<ProductCategoryCreateWithoutProductsInput, ProductCategoryUncheckedCreateWithoutProductsInput>
    connectOrCreate?: ProductCategoryCreateOrConnectWithoutProductsInput
    upsert?: ProductCategoryUpsertWithoutProductsInput
    connect?: ProductCategoryWhereUniqueInput
    update?: XOR<XOR<ProductCategoryUpdateToOneWithWhereWithoutProductsInput, ProductCategoryUpdateWithoutProductsInput>, ProductCategoryUncheckedUpdateWithoutProductsInput>
  }

  export type ReviewUpdateManyWithoutProductNestedInput = {
    create?: XOR<ReviewCreateWithoutProductInput, ReviewUncheckedCreateWithoutProductInput> | ReviewCreateWithoutProductInput[] | ReviewUncheckedCreateWithoutProductInput[]
    connectOrCreate?: ReviewCreateOrConnectWithoutProductInput | ReviewCreateOrConnectWithoutProductInput[]
    upsert?: ReviewUpsertWithWhereUniqueWithoutProductInput | ReviewUpsertWithWhereUniqueWithoutProductInput[]
    createMany?: ReviewCreateManyProductInputEnvelope
    set?: ReviewWhereUniqueInput | ReviewWhereUniqueInput[]
    disconnect?: ReviewWhereUniqueInput | ReviewWhereUniqueInput[]
    delete?: ReviewWhereUniqueInput | ReviewWhereUniqueInput[]
    connect?: ReviewWhereUniqueInput | ReviewWhereUniqueInput[]
    update?: ReviewUpdateWithWhereUniqueWithoutProductInput | ReviewUpdateWithWhereUniqueWithoutProductInput[]
    updateMany?: ReviewUpdateManyWithWhereWithoutProductInput | ReviewUpdateManyWithWhereWithoutProductInput[]
    deleteMany?: ReviewScalarWhereInput | ReviewScalarWhereInput[]
  }

  export type OrderItemUpdateManyWithoutProductNestedInput = {
    create?: XOR<OrderItemCreateWithoutProductInput, OrderItemUncheckedCreateWithoutProductInput> | OrderItemCreateWithoutProductInput[] | OrderItemUncheckedCreateWithoutProductInput[]
    connectOrCreate?: OrderItemCreateOrConnectWithoutProductInput | OrderItemCreateOrConnectWithoutProductInput[]
    upsert?: OrderItemUpsertWithWhereUniqueWithoutProductInput | OrderItemUpsertWithWhereUniqueWithoutProductInput[]
    createMany?: OrderItemCreateManyProductInputEnvelope
    set?: OrderItemWhereUniqueInput | OrderItemWhereUniqueInput[]
    disconnect?: OrderItemWhereUniqueInput | OrderItemWhereUniqueInput[]
    delete?: OrderItemWhereUniqueInput | OrderItemWhereUniqueInput[]
    connect?: OrderItemWhereUniqueInput | OrderItemWhereUniqueInput[]
    update?: OrderItemUpdateWithWhereUniqueWithoutProductInput | OrderItemUpdateWithWhereUniqueWithoutProductInput[]
    updateMany?: OrderItemUpdateManyWithWhereWithoutProductInput | OrderItemUpdateManyWithWhereWithoutProductInput[]
    deleteMany?: OrderItemScalarWhereInput | OrderItemScalarWhereInput[]
  }

  export type ReviewUncheckedUpdateManyWithoutProductNestedInput = {
    create?: XOR<ReviewCreateWithoutProductInput, ReviewUncheckedCreateWithoutProductInput> | ReviewCreateWithoutProductInput[] | ReviewUncheckedCreateWithoutProductInput[]
    connectOrCreate?: ReviewCreateOrConnectWithoutProductInput | ReviewCreateOrConnectWithoutProductInput[]
    upsert?: ReviewUpsertWithWhereUniqueWithoutProductInput | ReviewUpsertWithWhereUniqueWithoutProductInput[]
    createMany?: ReviewCreateManyProductInputEnvelope
    set?: ReviewWhereUniqueInput | ReviewWhereUniqueInput[]
    disconnect?: ReviewWhereUniqueInput | ReviewWhereUniqueInput[]
    delete?: ReviewWhereUniqueInput | ReviewWhereUniqueInput[]
    connect?: ReviewWhereUniqueInput | ReviewWhereUniqueInput[]
    update?: ReviewUpdateWithWhereUniqueWithoutProductInput | ReviewUpdateWithWhereUniqueWithoutProductInput[]
    updateMany?: ReviewUpdateManyWithWhereWithoutProductInput | ReviewUpdateManyWithWhereWithoutProductInput[]
    deleteMany?: ReviewScalarWhereInput | ReviewScalarWhereInput[]
  }

  export type OrderItemUncheckedUpdateManyWithoutProductNestedInput = {
    create?: XOR<OrderItemCreateWithoutProductInput, OrderItemUncheckedCreateWithoutProductInput> | OrderItemCreateWithoutProductInput[] | OrderItemUncheckedCreateWithoutProductInput[]
    connectOrCreate?: OrderItemCreateOrConnectWithoutProductInput | OrderItemCreateOrConnectWithoutProductInput[]
    upsert?: OrderItemUpsertWithWhereUniqueWithoutProductInput | OrderItemUpsertWithWhereUniqueWithoutProductInput[]
    createMany?: OrderItemCreateManyProductInputEnvelope
    set?: OrderItemWhereUniqueInput | OrderItemWhereUniqueInput[]
    disconnect?: OrderItemWhereUniqueInput | OrderItemWhereUniqueInput[]
    delete?: OrderItemWhereUniqueInput | OrderItemWhereUniqueInput[]
    connect?: OrderItemWhereUniqueInput | OrderItemWhereUniqueInput[]
    update?: OrderItemUpdateWithWhereUniqueWithoutProductInput | OrderItemUpdateWithWhereUniqueWithoutProductInput[]
    updateMany?: OrderItemUpdateManyWithWhereWithoutProductInput | OrderItemUpdateManyWithWhereWithoutProductInput[]
    deleteMany?: OrderItemScalarWhereInput | OrderItemScalarWhereInput[]
  }

  export type UserCreateNestedOneWithoutOrdersInput = {
    create?: XOR<UserCreateWithoutOrdersInput, UserUncheckedCreateWithoutOrdersInput>
    connectOrCreate?: UserCreateOrConnectWithoutOrdersInput
    connect?: UserWhereUniqueInput
  }

  export type StoreCreateNestedOneWithoutOrdersInput = {
    create?: XOR<StoreCreateWithoutOrdersInput, StoreUncheckedCreateWithoutOrdersInput>
    connectOrCreate?: StoreCreateOrConnectWithoutOrdersInput
    connect?: StoreWhereUniqueInput
  }

  export type OrderItemCreateNestedManyWithoutOrderInput = {
    create?: XOR<OrderItemCreateWithoutOrderInput, OrderItemUncheckedCreateWithoutOrderInput> | OrderItemCreateWithoutOrderInput[] | OrderItemUncheckedCreateWithoutOrderInput[]
    connectOrCreate?: OrderItemCreateOrConnectWithoutOrderInput | OrderItemCreateOrConnectWithoutOrderInput[]
    createMany?: OrderItemCreateManyOrderInputEnvelope
    connect?: OrderItemWhereUniqueInput | OrderItemWhereUniqueInput[]
  }

  export type ReviewCreateNestedManyWithoutOrderInput = {
    create?: XOR<ReviewCreateWithoutOrderInput, ReviewUncheckedCreateWithoutOrderInput> | ReviewCreateWithoutOrderInput[] | ReviewUncheckedCreateWithoutOrderInput[]
    connectOrCreate?: ReviewCreateOrConnectWithoutOrderInput | ReviewCreateOrConnectWithoutOrderInput[]
    createMany?: ReviewCreateManyOrderInputEnvelope
    connect?: ReviewWhereUniqueInput | ReviewWhereUniqueInput[]
  }

  export type OrderItemUncheckedCreateNestedManyWithoutOrderInput = {
    create?: XOR<OrderItemCreateWithoutOrderInput, OrderItemUncheckedCreateWithoutOrderInput> | OrderItemCreateWithoutOrderInput[] | OrderItemUncheckedCreateWithoutOrderInput[]
    connectOrCreate?: OrderItemCreateOrConnectWithoutOrderInput | OrderItemCreateOrConnectWithoutOrderInput[]
    createMany?: OrderItemCreateManyOrderInputEnvelope
    connect?: OrderItemWhereUniqueInput | OrderItemWhereUniqueInput[]
  }

  export type ReviewUncheckedCreateNestedManyWithoutOrderInput = {
    create?: XOR<ReviewCreateWithoutOrderInput, ReviewUncheckedCreateWithoutOrderInput> | ReviewCreateWithoutOrderInput[] | ReviewUncheckedCreateWithoutOrderInput[]
    connectOrCreate?: ReviewCreateOrConnectWithoutOrderInput | ReviewCreateOrConnectWithoutOrderInput[]
    createMany?: ReviewCreateManyOrderInputEnvelope
    connect?: ReviewWhereUniqueInput | ReviewWhereUniqueInput[]
  }

  export type EnumOrderTypeFieldUpdateOperationsInput = {
    set?: $Enums.OrderType
  }

  export type EnumOrderStatusFieldUpdateOperationsInput = {
    set?: $Enums.OrderStatus
  }

  export type EnumPaymentStatusFieldUpdateOperationsInput = {
    set?: $Enums.PaymentStatus
  }

  export type EnumPaymentMethodFieldUpdateOperationsInput = {
    set?: $Enums.PaymentMethod
  }

  export type UserUpdateOneRequiredWithoutOrdersNestedInput = {
    create?: XOR<UserCreateWithoutOrdersInput, UserUncheckedCreateWithoutOrdersInput>
    connectOrCreate?: UserCreateOrConnectWithoutOrdersInput
    upsert?: UserUpsertWithoutOrdersInput
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutOrdersInput, UserUpdateWithoutOrdersInput>, UserUncheckedUpdateWithoutOrdersInput>
  }

  export type StoreUpdateOneRequiredWithoutOrdersNestedInput = {
    create?: XOR<StoreCreateWithoutOrdersInput, StoreUncheckedCreateWithoutOrdersInput>
    connectOrCreate?: StoreCreateOrConnectWithoutOrdersInput
    upsert?: StoreUpsertWithoutOrdersInput
    connect?: StoreWhereUniqueInput
    update?: XOR<XOR<StoreUpdateToOneWithWhereWithoutOrdersInput, StoreUpdateWithoutOrdersInput>, StoreUncheckedUpdateWithoutOrdersInput>
  }

  export type OrderItemUpdateManyWithoutOrderNestedInput = {
    create?: XOR<OrderItemCreateWithoutOrderInput, OrderItemUncheckedCreateWithoutOrderInput> | OrderItemCreateWithoutOrderInput[] | OrderItemUncheckedCreateWithoutOrderInput[]
    connectOrCreate?: OrderItemCreateOrConnectWithoutOrderInput | OrderItemCreateOrConnectWithoutOrderInput[]
    upsert?: OrderItemUpsertWithWhereUniqueWithoutOrderInput | OrderItemUpsertWithWhereUniqueWithoutOrderInput[]
    createMany?: OrderItemCreateManyOrderInputEnvelope
    set?: OrderItemWhereUniqueInput | OrderItemWhereUniqueInput[]
    disconnect?: OrderItemWhereUniqueInput | OrderItemWhereUniqueInput[]
    delete?: OrderItemWhereUniqueInput | OrderItemWhereUniqueInput[]
    connect?: OrderItemWhereUniqueInput | OrderItemWhereUniqueInput[]
    update?: OrderItemUpdateWithWhereUniqueWithoutOrderInput | OrderItemUpdateWithWhereUniqueWithoutOrderInput[]
    updateMany?: OrderItemUpdateManyWithWhereWithoutOrderInput | OrderItemUpdateManyWithWhereWithoutOrderInput[]
    deleteMany?: OrderItemScalarWhereInput | OrderItemScalarWhereInput[]
  }

  export type ReviewUpdateManyWithoutOrderNestedInput = {
    create?: XOR<ReviewCreateWithoutOrderInput, ReviewUncheckedCreateWithoutOrderInput> | ReviewCreateWithoutOrderInput[] | ReviewUncheckedCreateWithoutOrderInput[]
    connectOrCreate?: ReviewCreateOrConnectWithoutOrderInput | ReviewCreateOrConnectWithoutOrderInput[]
    upsert?: ReviewUpsertWithWhereUniqueWithoutOrderInput | ReviewUpsertWithWhereUniqueWithoutOrderInput[]
    createMany?: ReviewCreateManyOrderInputEnvelope
    set?: ReviewWhereUniqueInput | ReviewWhereUniqueInput[]
    disconnect?: ReviewWhereUniqueInput | ReviewWhereUniqueInput[]
    delete?: ReviewWhereUniqueInput | ReviewWhereUniqueInput[]
    connect?: ReviewWhereUniqueInput | ReviewWhereUniqueInput[]
    update?: ReviewUpdateWithWhereUniqueWithoutOrderInput | ReviewUpdateWithWhereUniqueWithoutOrderInput[]
    updateMany?: ReviewUpdateManyWithWhereWithoutOrderInput | ReviewUpdateManyWithWhereWithoutOrderInput[]
    deleteMany?: ReviewScalarWhereInput | ReviewScalarWhereInput[]
  }

  export type OrderItemUncheckedUpdateManyWithoutOrderNestedInput = {
    create?: XOR<OrderItemCreateWithoutOrderInput, OrderItemUncheckedCreateWithoutOrderInput> | OrderItemCreateWithoutOrderInput[] | OrderItemUncheckedCreateWithoutOrderInput[]
    connectOrCreate?: OrderItemCreateOrConnectWithoutOrderInput | OrderItemCreateOrConnectWithoutOrderInput[]
    upsert?: OrderItemUpsertWithWhereUniqueWithoutOrderInput | OrderItemUpsertWithWhereUniqueWithoutOrderInput[]
    createMany?: OrderItemCreateManyOrderInputEnvelope
    set?: OrderItemWhereUniqueInput | OrderItemWhereUniqueInput[]
    disconnect?: OrderItemWhereUniqueInput | OrderItemWhereUniqueInput[]
    delete?: OrderItemWhereUniqueInput | OrderItemWhereUniqueInput[]
    connect?: OrderItemWhereUniqueInput | OrderItemWhereUniqueInput[]
    update?: OrderItemUpdateWithWhereUniqueWithoutOrderInput | OrderItemUpdateWithWhereUniqueWithoutOrderInput[]
    updateMany?: OrderItemUpdateManyWithWhereWithoutOrderInput | OrderItemUpdateManyWithWhereWithoutOrderInput[]
    deleteMany?: OrderItemScalarWhereInput | OrderItemScalarWhereInput[]
  }

  export type ReviewUncheckedUpdateManyWithoutOrderNestedInput = {
    create?: XOR<ReviewCreateWithoutOrderInput, ReviewUncheckedCreateWithoutOrderInput> | ReviewCreateWithoutOrderInput[] | ReviewUncheckedCreateWithoutOrderInput[]
    connectOrCreate?: ReviewCreateOrConnectWithoutOrderInput | ReviewCreateOrConnectWithoutOrderInput[]
    upsert?: ReviewUpsertWithWhereUniqueWithoutOrderInput | ReviewUpsertWithWhereUniqueWithoutOrderInput[]
    createMany?: ReviewCreateManyOrderInputEnvelope
    set?: ReviewWhereUniqueInput | ReviewWhereUniqueInput[]
    disconnect?: ReviewWhereUniqueInput | ReviewWhereUniqueInput[]
    delete?: ReviewWhereUniqueInput | ReviewWhereUniqueInput[]
    connect?: ReviewWhereUniqueInput | ReviewWhereUniqueInput[]
    update?: ReviewUpdateWithWhereUniqueWithoutOrderInput | ReviewUpdateWithWhereUniqueWithoutOrderInput[]
    updateMany?: ReviewUpdateManyWithWhereWithoutOrderInput | ReviewUpdateManyWithWhereWithoutOrderInput[]
    deleteMany?: ReviewScalarWhereInput | ReviewScalarWhereInput[]
  }

  export type OrderCreateNestedOneWithoutItemsInput = {
    create?: XOR<OrderCreateWithoutItemsInput, OrderUncheckedCreateWithoutItemsInput>
    connectOrCreate?: OrderCreateOrConnectWithoutItemsInput
    connect?: OrderWhereUniqueInput
  }

  export type ProductCreateNestedOneWithoutOrderItemsInput = {
    create?: XOR<ProductCreateWithoutOrderItemsInput, ProductUncheckedCreateWithoutOrderItemsInput>
    connectOrCreate?: ProductCreateOrConnectWithoutOrderItemsInput
    connect?: ProductWhereUniqueInput
  }

  export type OrderUpdateOneRequiredWithoutItemsNestedInput = {
    create?: XOR<OrderCreateWithoutItemsInput, OrderUncheckedCreateWithoutItemsInput>
    connectOrCreate?: OrderCreateOrConnectWithoutItemsInput
    upsert?: OrderUpsertWithoutItemsInput
    connect?: OrderWhereUniqueInput
    update?: XOR<XOR<OrderUpdateToOneWithWhereWithoutItemsInput, OrderUpdateWithoutItemsInput>, OrderUncheckedUpdateWithoutItemsInput>
  }

  export type ProductUpdateOneRequiredWithoutOrderItemsNestedInput = {
    create?: XOR<ProductCreateWithoutOrderItemsInput, ProductUncheckedCreateWithoutOrderItemsInput>
    connectOrCreate?: ProductCreateOrConnectWithoutOrderItemsInput
    upsert?: ProductUpsertWithoutOrderItemsInput
    connect?: ProductWhereUniqueInput
    update?: XOR<XOR<ProductUpdateToOneWithWhereWithoutOrderItemsInput, ProductUpdateWithoutOrderItemsInput>, ProductUncheckedUpdateWithoutOrderItemsInput>
  }

  export type UserCreateNestedOneWithoutReviewsInput = {
    create?: XOR<UserCreateWithoutReviewsInput, UserUncheckedCreateWithoutReviewsInput>
    connectOrCreate?: UserCreateOrConnectWithoutReviewsInput
    connect?: UserWhereUniqueInput
  }

  export type OrderCreateNestedOneWithoutReviewsInput = {
    create?: XOR<OrderCreateWithoutReviewsInput, OrderUncheckedCreateWithoutReviewsInput>
    connectOrCreate?: OrderCreateOrConnectWithoutReviewsInput
    connect?: OrderWhereUniqueInput
  }

  export type StoreCreateNestedOneWithoutReviewsInput = {
    create?: XOR<StoreCreateWithoutReviewsInput, StoreUncheckedCreateWithoutReviewsInput>
    connectOrCreate?: StoreCreateOrConnectWithoutReviewsInput
    connect?: StoreWhereUniqueInput
  }

  export type ProductCreateNestedOneWithoutReviewsInput = {
    create?: XOR<ProductCreateWithoutReviewsInput, ProductUncheckedCreateWithoutReviewsInput>
    connectOrCreate?: ProductCreateOrConnectWithoutReviewsInput
    connect?: ProductWhereUniqueInput
  }

  export type EnumReviewableTypeFieldUpdateOperationsInput = {
    set?: $Enums.ReviewableType
  }

  export type EnumReviewStatusFieldUpdateOperationsInput = {
    set?: $Enums.ReviewStatus
  }

  export type UserUpdateOneRequiredWithoutReviewsNestedInput = {
    create?: XOR<UserCreateWithoutReviewsInput, UserUncheckedCreateWithoutReviewsInput>
    connectOrCreate?: UserCreateOrConnectWithoutReviewsInput
    upsert?: UserUpsertWithoutReviewsInput
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutReviewsInput, UserUpdateWithoutReviewsInput>, UserUncheckedUpdateWithoutReviewsInput>
  }

  export type OrderUpdateOneWithoutReviewsNestedInput = {
    create?: XOR<OrderCreateWithoutReviewsInput, OrderUncheckedCreateWithoutReviewsInput>
    connectOrCreate?: OrderCreateOrConnectWithoutReviewsInput
    upsert?: OrderUpsertWithoutReviewsInput
    disconnect?: OrderWhereInput | boolean
    delete?: OrderWhereInput | boolean
    connect?: OrderWhereUniqueInput
    update?: XOR<XOR<OrderUpdateToOneWithWhereWithoutReviewsInput, OrderUpdateWithoutReviewsInput>, OrderUncheckedUpdateWithoutReviewsInput>
  }

  export type StoreUpdateOneWithoutReviewsNestedInput = {
    create?: XOR<StoreCreateWithoutReviewsInput, StoreUncheckedCreateWithoutReviewsInput>
    connectOrCreate?: StoreCreateOrConnectWithoutReviewsInput
    upsert?: StoreUpsertWithoutReviewsInput
    disconnect?: StoreWhereInput | boolean
    delete?: StoreWhereInput | boolean
    connect?: StoreWhereUniqueInput
    update?: XOR<XOR<StoreUpdateToOneWithWhereWithoutReviewsInput, StoreUpdateWithoutReviewsInput>, StoreUncheckedUpdateWithoutReviewsInput>
  }

  export type ProductUpdateOneWithoutReviewsNestedInput = {
    create?: XOR<ProductCreateWithoutReviewsInput, ProductUncheckedCreateWithoutReviewsInput>
    connectOrCreate?: ProductCreateOrConnectWithoutReviewsInput
    upsert?: ProductUpsertWithoutReviewsInput
    disconnect?: ProductWhereInput | boolean
    delete?: ProductWhereInput | boolean
    connect?: ProductWhereUniqueInput
    update?: XOR<XOR<ProductUpdateToOneWithWhereWithoutReviewsInput, ProductUpdateWithoutReviewsInput>, ProductUncheckedUpdateWithoutReviewsInput>
  }

  export type UserCreateNestedOneWithoutProfessionalInput = {
    create?: XOR<UserCreateWithoutProfessionalInput, UserUncheckedCreateWithoutProfessionalInput>
    connectOrCreate?: UserCreateOrConnectWithoutProfessionalInput
    connect?: UserWhereUniqueInput
  }

  export type ConsultationCreateNestedManyWithoutProfessionalInput = {
    create?: XOR<ConsultationCreateWithoutProfessionalInput, ConsultationUncheckedCreateWithoutProfessionalInput> | ConsultationCreateWithoutProfessionalInput[] | ConsultationUncheckedCreateWithoutProfessionalInput[]
    connectOrCreate?: ConsultationCreateOrConnectWithoutProfessionalInput | ConsultationCreateOrConnectWithoutProfessionalInput[]
    createMany?: ConsultationCreateManyProfessionalInputEnvelope
    connect?: ConsultationWhereUniqueInput | ConsultationWhereUniqueInput[]
  }

  export type ConsultationUncheckedCreateNestedManyWithoutProfessionalInput = {
    create?: XOR<ConsultationCreateWithoutProfessionalInput, ConsultationUncheckedCreateWithoutProfessionalInput> | ConsultationCreateWithoutProfessionalInput[] | ConsultationUncheckedCreateWithoutProfessionalInput[]
    connectOrCreate?: ConsultationCreateOrConnectWithoutProfessionalInput | ConsultationCreateOrConnectWithoutProfessionalInput[]
    createMany?: ConsultationCreateManyProfessionalInputEnvelope
    connect?: ConsultationWhereUniqueInput | ConsultationWhereUniqueInput[]
  }

  export type EnumProfessionalTypeFieldUpdateOperationsInput = {
    set?: $Enums.ProfessionalType
  }

  export type UserUpdateOneRequiredWithoutProfessionalNestedInput = {
    create?: XOR<UserCreateWithoutProfessionalInput, UserUncheckedCreateWithoutProfessionalInput>
    connectOrCreate?: UserCreateOrConnectWithoutProfessionalInput
    upsert?: UserUpsertWithoutProfessionalInput
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutProfessionalInput, UserUpdateWithoutProfessionalInput>, UserUncheckedUpdateWithoutProfessionalInput>
  }

  export type ConsultationUpdateManyWithoutProfessionalNestedInput = {
    create?: XOR<ConsultationCreateWithoutProfessionalInput, ConsultationUncheckedCreateWithoutProfessionalInput> | ConsultationCreateWithoutProfessionalInput[] | ConsultationUncheckedCreateWithoutProfessionalInput[]
    connectOrCreate?: ConsultationCreateOrConnectWithoutProfessionalInput | ConsultationCreateOrConnectWithoutProfessionalInput[]
    upsert?: ConsultationUpsertWithWhereUniqueWithoutProfessionalInput | ConsultationUpsertWithWhereUniqueWithoutProfessionalInput[]
    createMany?: ConsultationCreateManyProfessionalInputEnvelope
    set?: ConsultationWhereUniqueInput | ConsultationWhereUniqueInput[]
    disconnect?: ConsultationWhereUniqueInput | ConsultationWhereUniqueInput[]
    delete?: ConsultationWhereUniqueInput | ConsultationWhereUniqueInput[]
    connect?: ConsultationWhereUniqueInput | ConsultationWhereUniqueInput[]
    update?: ConsultationUpdateWithWhereUniqueWithoutProfessionalInput | ConsultationUpdateWithWhereUniqueWithoutProfessionalInput[]
    updateMany?: ConsultationUpdateManyWithWhereWithoutProfessionalInput | ConsultationUpdateManyWithWhereWithoutProfessionalInput[]
    deleteMany?: ConsultationScalarWhereInput | ConsultationScalarWhereInput[]
  }

  export type ConsultationUncheckedUpdateManyWithoutProfessionalNestedInput = {
    create?: XOR<ConsultationCreateWithoutProfessionalInput, ConsultationUncheckedCreateWithoutProfessionalInput> | ConsultationCreateWithoutProfessionalInput[] | ConsultationUncheckedCreateWithoutProfessionalInput[]
    connectOrCreate?: ConsultationCreateOrConnectWithoutProfessionalInput | ConsultationCreateOrConnectWithoutProfessionalInput[]
    upsert?: ConsultationUpsertWithWhereUniqueWithoutProfessionalInput | ConsultationUpsertWithWhereUniqueWithoutProfessionalInput[]
    createMany?: ConsultationCreateManyProfessionalInputEnvelope
    set?: ConsultationWhereUniqueInput | ConsultationWhereUniqueInput[]
    disconnect?: ConsultationWhereUniqueInput | ConsultationWhereUniqueInput[]
    delete?: ConsultationWhereUniqueInput | ConsultationWhereUniqueInput[]
    connect?: ConsultationWhereUniqueInput | ConsultationWhereUniqueInput[]
    update?: ConsultationUpdateWithWhereUniqueWithoutProfessionalInput | ConsultationUpdateWithWhereUniqueWithoutProfessionalInput[]
    updateMany?: ConsultationUpdateManyWithWhereWithoutProfessionalInput | ConsultationUpdateManyWithWhereWithoutProfessionalInput[]
    deleteMany?: ConsultationScalarWhereInput | ConsultationScalarWhereInput[]
  }

  export type UserCreateNestedOneWithoutConsultationsAsPatientInput = {
    create?: XOR<UserCreateWithoutConsultationsAsPatientInput, UserUncheckedCreateWithoutConsultationsAsPatientInput>
    connectOrCreate?: UserCreateOrConnectWithoutConsultationsAsPatientInput
    connect?: UserWhereUniqueInput
  }

  export type ProfessionalCreateNestedOneWithoutConsultationsInput = {
    create?: XOR<ProfessionalCreateWithoutConsultationsInput, ProfessionalUncheckedCreateWithoutConsultationsInput>
    connectOrCreate?: ProfessionalCreateOrConnectWithoutConsultationsInput
    connect?: ProfessionalWhereUniqueInput
  }

  export type EnumConsultationTypeFieldUpdateOperationsInput = {
    set?: $Enums.ConsultationType
  }

  export type EnumSessionTypeFieldUpdateOperationsInput = {
    set?: $Enums.SessionType
  }

  export type UserUpdateOneRequiredWithoutConsultationsAsPatientNestedInput = {
    create?: XOR<UserCreateWithoutConsultationsAsPatientInput, UserUncheckedCreateWithoutConsultationsAsPatientInput>
    connectOrCreate?: UserCreateOrConnectWithoutConsultationsAsPatientInput
    upsert?: UserUpsertWithoutConsultationsAsPatientInput
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutConsultationsAsPatientInput, UserUpdateWithoutConsultationsAsPatientInput>, UserUncheckedUpdateWithoutConsultationsAsPatientInput>
  }

  export type ProfessionalUpdateOneRequiredWithoutConsultationsNestedInput = {
    create?: XOR<ProfessionalCreateWithoutConsultationsInput, ProfessionalUncheckedCreateWithoutConsultationsInput>
    connectOrCreate?: ProfessionalCreateOrConnectWithoutConsultationsInput
    upsert?: ProfessionalUpsertWithoutConsultationsInput
    connect?: ProfessionalWhereUniqueInput
    update?: XOR<XOR<ProfessionalUpdateToOneWithWhereWithoutConsultationsInput, ProfessionalUpdateWithoutConsultationsInput>, ProfessionalUncheckedUpdateWithoutConsultationsInput>
  }

  export type UserCreateNestedOneWithoutBlogPostsInput = {
    create?: XOR<UserCreateWithoutBlogPostsInput, UserUncheckedCreateWithoutBlogPostsInput>
    connectOrCreate?: UserCreateOrConnectWithoutBlogPostsInput
    connect?: UserWhereUniqueInput
  }

  export type UserCreateNestedOneWithoutFactCheckedPostsInput = {
    create?: XOR<UserCreateWithoutFactCheckedPostsInput, UserUncheckedCreateWithoutFactCheckedPostsInput>
    connectOrCreate?: UserCreateOrConnectWithoutFactCheckedPostsInput
    connect?: UserWhereUniqueInput
  }

  export type EnumBlogCategoryFieldUpdateOperationsInput = {
    set?: $Enums.BlogCategory
  }

  export type EnumBlogStatusFieldUpdateOperationsInput = {
    set?: $Enums.BlogStatus
  }

  export type UserUpdateOneRequiredWithoutBlogPostsNestedInput = {
    create?: XOR<UserCreateWithoutBlogPostsInput, UserUncheckedCreateWithoutBlogPostsInput>
    connectOrCreate?: UserCreateOrConnectWithoutBlogPostsInput
    upsert?: UserUpsertWithoutBlogPostsInput
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutBlogPostsInput, UserUpdateWithoutBlogPostsInput>, UserUncheckedUpdateWithoutBlogPostsInput>
  }

  export type UserUpdateOneWithoutFactCheckedPostsNestedInput = {
    create?: XOR<UserCreateWithoutFactCheckedPostsInput, UserUncheckedCreateWithoutFactCheckedPostsInput>
    connectOrCreate?: UserCreateOrConnectWithoutFactCheckedPostsInput
    upsert?: UserUpsertWithoutFactCheckedPostsInput
    disconnect?: UserWhereInput | boolean
    delete?: UserWhereInput | boolean
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutFactCheckedPostsInput, UserUpdateWithoutFactCheckedPostsInput>, UserUncheckedUpdateWithoutFactCheckedPostsInput>
  }

  export type NestedStringFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringFilter<$PrismaModel> | string
  }

  export type NestedBoolFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolFilter<$PrismaModel> | boolean
  }

  export type NestedEnumUserRoleFilter<$PrismaModel = never> = {
    equals?: $Enums.UserRole | EnumUserRoleFieldRefInput<$PrismaModel>
    in?: $Enums.UserRole[] | ListEnumUserRoleFieldRefInput<$PrismaModel>
    notIn?: $Enums.UserRole[] | ListEnumUserRoleFieldRefInput<$PrismaModel>
    not?: NestedEnumUserRoleFilter<$PrismaModel> | $Enums.UserRole
  }

  export type NestedStringNullableFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringNullableFilter<$PrismaModel> | string | null
  }

  export type NestedDateTimeNullableFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableFilter<$PrismaModel> | Date | string | null
  }

  export type NestedEnumUserStatusFilter<$PrismaModel = never> = {
    equals?: $Enums.UserStatus | EnumUserStatusFieldRefInput<$PrismaModel>
    in?: $Enums.UserStatus[] | ListEnumUserStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.UserStatus[] | ListEnumUserStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumUserStatusFilter<$PrismaModel> | $Enums.UserStatus
  }

  export type NestedIntFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntFilter<$PrismaModel> | number
  }

  export type NestedEnumAgeVerificationMethodNullableFilter<$PrismaModel = never> = {
    equals?: $Enums.AgeVerificationMethod | EnumAgeVerificationMethodFieldRefInput<$PrismaModel> | null
    in?: $Enums.AgeVerificationMethod[] | ListEnumAgeVerificationMethodFieldRefInput<$PrismaModel> | null
    notIn?: $Enums.AgeVerificationMethod[] | ListEnumAgeVerificationMethodFieldRefInput<$PrismaModel> | null
    not?: NestedEnumAgeVerificationMethodNullableFilter<$PrismaModel> | $Enums.AgeVerificationMethod | null
  }

  export type NestedDateTimeFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeFilter<$PrismaModel> | Date | string
  }

  export type NestedStringWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringWithAggregatesFilter<$PrismaModel> | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedStringFilter<$PrismaModel>
    _max?: NestedStringFilter<$PrismaModel>
  }

  export type NestedBoolWithAggregatesFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolWithAggregatesFilter<$PrismaModel> | boolean
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedBoolFilter<$PrismaModel>
    _max?: NestedBoolFilter<$PrismaModel>
  }

  export type NestedEnumUserRoleWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.UserRole | EnumUserRoleFieldRefInput<$PrismaModel>
    in?: $Enums.UserRole[] | ListEnumUserRoleFieldRefInput<$PrismaModel>
    notIn?: $Enums.UserRole[] | ListEnumUserRoleFieldRefInput<$PrismaModel>
    not?: NestedEnumUserRoleWithAggregatesFilter<$PrismaModel> | $Enums.UserRole
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumUserRoleFilter<$PrismaModel>
    _max?: NestedEnumUserRoleFilter<$PrismaModel>
  }

  export type NestedStringNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringNullableWithAggregatesFilter<$PrismaModel> | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedStringNullableFilter<$PrismaModel>
    _max?: NestedStringNullableFilter<$PrismaModel>
  }

  export type NestedIntNullableFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableFilter<$PrismaModel> | number | null
  }

  export type NestedDateTimeNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableWithAggregatesFilter<$PrismaModel> | Date | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedDateTimeNullableFilter<$PrismaModel>
    _max?: NestedDateTimeNullableFilter<$PrismaModel>
  }

  export type NestedEnumUserStatusWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.UserStatus | EnumUserStatusFieldRefInput<$PrismaModel>
    in?: $Enums.UserStatus[] | ListEnumUserStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.UserStatus[] | ListEnumUserStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumUserStatusWithAggregatesFilter<$PrismaModel> | $Enums.UserStatus
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumUserStatusFilter<$PrismaModel>
    _max?: NestedEnumUserStatusFilter<$PrismaModel>
  }

  export type NestedIntWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedIntFilter<$PrismaModel>
    _min?: NestedIntFilter<$PrismaModel>
    _max?: NestedIntFilter<$PrismaModel>
  }

  export type NestedFloatFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel>
    in?: number[] | ListFloatFieldRefInput<$PrismaModel>
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel>
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatFilter<$PrismaModel> | number
  }

  export type NestedEnumAgeVerificationMethodNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.AgeVerificationMethod | EnumAgeVerificationMethodFieldRefInput<$PrismaModel> | null
    in?: $Enums.AgeVerificationMethod[] | ListEnumAgeVerificationMethodFieldRefInput<$PrismaModel> | null
    notIn?: $Enums.AgeVerificationMethod[] | ListEnumAgeVerificationMethodFieldRefInput<$PrismaModel> | null
    not?: NestedEnumAgeVerificationMethodNullableWithAggregatesFilter<$PrismaModel> | $Enums.AgeVerificationMethod | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedEnumAgeVerificationMethodNullableFilter<$PrismaModel>
    _max?: NestedEnumAgeVerificationMethodNullableFilter<$PrismaModel>
  }

  export type NestedDateTimeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeWithAggregatesFilter<$PrismaModel> | Date | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedDateTimeFilter<$PrismaModel>
    _max?: NestedDateTimeFilter<$PrismaModel>
  }

  export type NestedEnumAddressTypeFilter<$PrismaModel = never> = {
    equals?: $Enums.AddressType | EnumAddressTypeFieldRefInput<$PrismaModel>
    in?: $Enums.AddressType[] | ListEnumAddressTypeFieldRefInput<$PrismaModel>
    notIn?: $Enums.AddressType[] | ListEnumAddressTypeFieldRefInput<$PrismaModel>
    not?: NestedEnumAddressTypeFilter<$PrismaModel> | $Enums.AddressType
  }

  export type NestedDecimalNullableFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel> | null
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel> | null
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel> | null
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalNullableFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string | null
  }

  export type NestedEnumAddressTypeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.AddressType | EnumAddressTypeFieldRefInput<$PrismaModel>
    in?: $Enums.AddressType[] | ListEnumAddressTypeFieldRefInput<$PrismaModel>
    notIn?: $Enums.AddressType[] | ListEnumAddressTypeFieldRefInput<$PrismaModel>
    not?: NestedEnumAddressTypeWithAggregatesFilter<$PrismaModel> | $Enums.AddressType
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumAddressTypeFilter<$PrismaModel>
    _max?: NestedEnumAddressTypeFilter<$PrismaModel>
  }

  export type NestedDecimalNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel> | null
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel> | null
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel> | null
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalNullableWithAggregatesFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedDecimalNullableFilter<$PrismaModel>
    _sum?: NestedDecimalNullableFilter<$PrismaModel>
    _min?: NestedDecimalNullableFilter<$PrismaModel>
    _max?: NestedDecimalNullableFilter<$PrismaModel>
  }

  export type NestedDecimalFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel>
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel>
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string
  }

  export type NestedEnumBusinessTypeFilter<$PrismaModel = never> = {
    equals?: $Enums.BusinessType | EnumBusinessTypeFieldRefInput<$PrismaModel>
    in?: $Enums.BusinessType[] | ListEnumBusinessTypeFieldRefInput<$PrismaModel>
    notIn?: $Enums.BusinessType[] | ListEnumBusinessTypeFieldRefInput<$PrismaModel>
    not?: NestedEnumBusinessTypeFilter<$PrismaModel> | $Enums.BusinessType
  }

  export type NestedEnumStoreStatusFilter<$PrismaModel = never> = {
    equals?: $Enums.StoreStatus | EnumStoreStatusFieldRefInput<$PrismaModel>
    in?: $Enums.StoreStatus[] | ListEnumStoreStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.StoreStatus[] | ListEnumStoreStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumStoreStatusFilter<$PrismaModel> | $Enums.StoreStatus
  }

  export type NestedEnumComplianceStatusFilter<$PrismaModel = never> = {
    equals?: $Enums.ComplianceStatus | EnumComplianceStatusFieldRefInput<$PrismaModel>
    in?: $Enums.ComplianceStatus[] | ListEnumComplianceStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.ComplianceStatus[] | ListEnumComplianceStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumComplianceStatusFilter<$PrismaModel> | $Enums.ComplianceStatus
  }

  export type NestedEnumTrackTraceSystemNullableFilter<$PrismaModel = never> = {
    equals?: $Enums.TrackTraceSystem | EnumTrackTraceSystemFieldRefInput<$PrismaModel> | null
    in?: $Enums.TrackTraceSystem[] | ListEnumTrackTraceSystemFieldRefInput<$PrismaModel> | null
    notIn?: $Enums.TrackTraceSystem[] | ListEnumTrackTraceSystemFieldRefInput<$PrismaModel> | null
    not?: NestedEnumTrackTraceSystemNullableFilter<$PrismaModel> | $Enums.TrackTraceSystem | null
  }

  export type NestedDecimalWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel>
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel>
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalWithAggregatesFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedDecimalFilter<$PrismaModel>
    _sum?: NestedDecimalFilter<$PrismaModel>
    _min?: NestedDecimalFilter<$PrismaModel>
    _max?: NestedDecimalFilter<$PrismaModel>
  }

  export type NestedEnumBusinessTypeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.BusinessType | EnumBusinessTypeFieldRefInput<$PrismaModel>
    in?: $Enums.BusinessType[] | ListEnumBusinessTypeFieldRefInput<$PrismaModel>
    notIn?: $Enums.BusinessType[] | ListEnumBusinessTypeFieldRefInput<$PrismaModel>
    not?: NestedEnumBusinessTypeWithAggregatesFilter<$PrismaModel> | $Enums.BusinessType
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumBusinessTypeFilter<$PrismaModel>
    _max?: NestedEnumBusinessTypeFilter<$PrismaModel>
  }
  export type NestedJsonNullableFilter<$PrismaModel = never> = 
    | PatchUndefined<
        Either<Required<NestedJsonNullableFilterBase<$PrismaModel>>, Exclude<keyof Required<NestedJsonNullableFilterBase<$PrismaModel>>, 'path'>>,
        Required<NestedJsonNullableFilterBase<$PrismaModel>>
      >
    | OptionalFlat<Omit<Required<NestedJsonNullableFilterBase<$PrismaModel>>, 'path'>>

  export type NestedJsonNullableFilterBase<$PrismaModel = never> = {
    equals?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
    path?: string[]
    string_contains?: string | StringFieldRefInput<$PrismaModel>
    string_starts_with?: string | StringFieldRefInput<$PrismaModel>
    string_ends_with?: string | StringFieldRefInput<$PrismaModel>
    array_contains?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_starts_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_ends_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    lt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    lte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    not?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
  }

  export type NestedIntNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableWithAggregatesFilter<$PrismaModel> | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedIntNullableFilter<$PrismaModel>
    _max?: NestedIntNullableFilter<$PrismaModel>
  }

  export type NestedFloatNullableFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel> | null
    in?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatNullableFilter<$PrismaModel> | number | null
  }

  export type NestedEnumStoreStatusWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.StoreStatus | EnumStoreStatusFieldRefInput<$PrismaModel>
    in?: $Enums.StoreStatus[] | ListEnumStoreStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.StoreStatus[] | ListEnumStoreStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumStoreStatusWithAggregatesFilter<$PrismaModel> | $Enums.StoreStatus
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumStoreStatusFilter<$PrismaModel>
    _max?: NestedEnumStoreStatusFilter<$PrismaModel>
  }

  export type NestedEnumComplianceStatusWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.ComplianceStatus | EnumComplianceStatusFieldRefInput<$PrismaModel>
    in?: $Enums.ComplianceStatus[] | ListEnumComplianceStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.ComplianceStatus[] | ListEnumComplianceStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumComplianceStatusWithAggregatesFilter<$PrismaModel> | $Enums.ComplianceStatus
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumComplianceStatusFilter<$PrismaModel>
    _max?: NestedEnumComplianceStatusFilter<$PrismaModel>
  }

  export type NestedEnumTrackTraceSystemNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.TrackTraceSystem | EnumTrackTraceSystemFieldRefInput<$PrismaModel> | null
    in?: $Enums.TrackTraceSystem[] | ListEnumTrackTraceSystemFieldRefInput<$PrismaModel> | null
    notIn?: $Enums.TrackTraceSystem[] | ListEnumTrackTraceSystemFieldRefInput<$PrismaModel> | null
    not?: NestedEnumTrackTraceSystemNullableWithAggregatesFilter<$PrismaModel> | $Enums.TrackTraceSystem | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedEnumTrackTraceSystemNullableFilter<$PrismaModel>
    _max?: NestedEnumTrackTraceSystemNullableFilter<$PrismaModel>
  }

  export type NestedEnumProductTypeFilter<$PrismaModel = never> = {
    equals?: $Enums.ProductType | EnumProductTypeFieldRefInput<$PrismaModel>
    in?: $Enums.ProductType[] | ListEnumProductTypeFieldRefInput<$PrismaModel>
    notIn?: $Enums.ProductType[] | ListEnumProductTypeFieldRefInput<$PrismaModel>
    not?: NestedEnumProductTypeFilter<$PrismaModel> | $Enums.ProductType
  }

  export type NestedEnumProductTypeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.ProductType | EnumProductTypeFieldRefInput<$PrismaModel>
    in?: $Enums.ProductType[] | ListEnumProductTypeFieldRefInput<$PrismaModel>
    notIn?: $Enums.ProductType[] | ListEnumProductTypeFieldRefInput<$PrismaModel>
    not?: NestedEnumProductTypeWithAggregatesFilter<$PrismaModel> | $Enums.ProductType
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumProductTypeFilter<$PrismaModel>
    _max?: NestedEnumProductTypeFilter<$PrismaModel>
  }

  export type NestedEnumStrainTypeNullableFilter<$PrismaModel = never> = {
    equals?: $Enums.StrainType | EnumStrainTypeFieldRefInput<$PrismaModel> | null
    in?: $Enums.StrainType[] | ListEnumStrainTypeFieldRefInput<$PrismaModel> | null
    notIn?: $Enums.StrainType[] | ListEnumStrainTypeFieldRefInput<$PrismaModel> | null
    not?: NestedEnumStrainTypeNullableFilter<$PrismaModel> | $Enums.StrainType | null
  }

  export type NestedEnumProductStatusFilter<$PrismaModel = never> = {
    equals?: $Enums.ProductStatus | EnumProductStatusFieldRefInput<$PrismaModel>
    in?: $Enums.ProductStatus[] | ListEnumProductStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.ProductStatus[] | ListEnumProductStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumProductStatusFilter<$PrismaModel> | $Enums.ProductStatus
  }

  export type NestedEnumStrainTypeNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.StrainType | EnumStrainTypeFieldRefInput<$PrismaModel> | null
    in?: $Enums.StrainType[] | ListEnumStrainTypeFieldRefInput<$PrismaModel> | null
    notIn?: $Enums.StrainType[] | ListEnumStrainTypeFieldRefInput<$PrismaModel> | null
    not?: NestedEnumStrainTypeNullableWithAggregatesFilter<$PrismaModel> | $Enums.StrainType | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedEnumStrainTypeNullableFilter<$PrismaModel>
    _max?: NestedEnumStrainTypeNullableFilter<$PrismaModel>
  }

  export type NestedEnumProductStatusWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.ProductStatus | EnumProductStatusFieldRefInput<$PrismaModel>
    in?: $Enums.ProductStatus[] | ListEnumProductStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.ProductStatus[] | ListEnumProductStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumProductStatusWithAggregatesFilter<$PrismaModel> | $Enums.ProductStatus
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumProductStatusFilter<$PrismaModel>
    _max?: NestedEnumProductStatusFilter<$PrismaModel>
  }

  export type NestedEnumOrderTypeFilter<$PrismaModel = never> = {
    equals?: $Enums.OrderType | EnumOrderTypeFieldRefInput<$PrismaModel>
    in?: $Enums.OrderType[] | ListEnumOrderTypeFieldRefInput<$PrismaModel>
    notIn?: $Enums.OrderType[] | ListEnumOrderTypeFieldRefInput<$PrismaModel>
    not?: NestedEnumOrderTypeFilter<$PrismaModel> | $Enums.OrderType
  }

  export type NestedEnumOrderStatusFilter<$PrismaModel = never> = {
    equals?: $Enums.OrderStatus | EnumOrderStatusFieldRefInput<$PrismaModel>
    in?: $Enums.OrderStatus[] | ListEnumOrderStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.OrderStatus[] | ListEnumOrderStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumOrderStatusFilter<$PrismaModel> | $Enums.OrderStatus
  }

  export type NestedEnumPaymentStatusFilter<$PrismaModel = never> = {
    equals?: $Enums.PaymentStatus | EnumPaymentStatusFieldRefInput<$PrismaModel>
    in?: $Enums.PaymentStatus[] | ListEnumPaymentStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.PaymentStatus[] | ListEnumPaymentStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumPaymentStatusFilter<$PrismaModel> | $Enums.PaymentStatus
  }

  export type NestedEnumPaymentMethodFilter<$PrismaModel = never> = {
    equals?: $Enums.PaymentMethod | EnumPaymentMethodFieldRefInput<$PrismaModel>
    in?: $Enums.PaymentMethod[] | ListEnumPaymentMethodFieldRefInput<$PrismaModel>
    notIn?: $Enums.PaymentMethod[] | ListEnumPaymentMethodFieldRefInput<$PrismaModel>
    not?: NestedEnumPaymentMethodFilter<$PrismaModel> | $Enums.PaymentMethod
  }

  export type NestedEnumOrderTypeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.OrderType | EnumOrderTypeFieldRefInput<$PrismaModel>
    in?: $Enums.OrderType[] | ListEnumOrderTypeFieldRefInput<$PrismaModel>
    notIn?: $Enums.OrderType[] | ListEnumOrderTypeFieldRefInput<$PrismaModel>
    not?: NestedEnumOrderTypeWithAggregatesFilter<$PrismaModel> | $Enums.OrderType
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumOrderTypeFilter<$PrismaModel>
    _max?: NestedEnumOrderTypeFilter<$PrismaModel>
  }

  export type NestedEnumOrderStatusWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.OrderStatus | EnumOrderStatusFieldRefInput<$PrismaModel>
    in?: $Enums.OrderStatus[] | ListEnumOrderStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.OrderStatus[] | ListEnumOrderStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumOrderStatusWithAggregatesFilter<$PrismaModel> | $Enums.OrderStatus
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumOrderStatusFilter<$PrismaModel>
    _max?: NestedEnumOrderStatusFilter<$PrismaModel>
  }

  export type NestedEnumPaymentStatusWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.PaymentStatus | EnumPaymentStatusFieldRefInput<$PrismaModel>
    in?: $Enums.PaymentStatus[] | ListEnumPaymentStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.PaymentStatus[] | ListEnumPaymentStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumPaymentStatusWithAggregatesFilter<$PrismaModel> | $Enums.PaymentStatus
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumPaymentStatusFilter<$PrismaModel>
    _max?: NestedEnumPaymentStatusFilter<$PrismaModel>
  }

  export type NestedEnumPaymentMethodWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.PaymentMethod | EnumPaymentMethodFieldRefInput<$PrismaModel>
    in?: $Enums.PaymentMethod[] | ListEnumPaymentMethodFieldRefInput<$PrismaModel>
    notIn?: $Enums.PaymentMethod[] | ListEnumPaymentMethodFieldRefInput<$PrismaModel>
    not?: NestedEnumPaymentMethodWithAggregatesFilter<$PrismaModel> | $Enums.PaymentMethod
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumPaymentMethodFilter<$PrismaModel>
    _max?: NestedEnumPaymentMethodFilter<$PrismaModel>
  }

  export type NestedEnumReviewableTypeFilter<$PrismaModel = never> = {
    equals?: $Enums.ReviewableType | EnumReviewableTypeFieldRefInput<$PrismaModel>
    in?: $Enums.ReviewableType[] | ListEnumReviewableTypeFieldRefInput<$PrismaModel>
    notIn?: $Enums.ReviewableType[] | ListEnumReviewableTypeFieldRefInput<$PrismaModel>
    not?: NestedEnumReviewableTypeFilter<$PrismaModel> | $Enums.ReviewableType
  }

  export type NestedEnumReviewStatusFilter<$PrismaModel = never> = {
    equals?: $Enums.ReviewStatus | EnumReviewStatusFieldRefInput<$PrismaModel>
    in?: $Enums.ReviewStatus[] | ListEnumReviewStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.ReviewStatus[] | ListEnumReviewStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumReviewStatusFilter<$PrismaModel> | $Enums.ReviewStatus
  }

  export type NestedEnumReviewableTypeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.ReviewableType | EnumReviewableTypeFieldRefInput<$PrismaModel>
    in?: $Enums.ReviewableType[] | ListEnumReviewableTypeFieldRefInput<$PrismaModel>
    notIn?: $Enums.ReviewableType[] | ListEnumReviewableTypeFieldRefInput<$PrismaModel>
    not?: NestedEnumReviewableTypeWithAggregatesFilter<$PrismaModel> | $Enums.ReviewableType
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumReviewableTypeFilter<$PrismaModel>
    _max?: NestedEnumReviewableTypeFilter<$PrismaModel>
  }

  export type NestedEnumReviewStatusWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.ReviewStatus | EnumReviewStatusFieldRefInput<$PrismaModel>
    in?: $Enums.ReviewStatus[] | ListEnumReviewStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.ReviewStatus[] | ListEnumReviewStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumReviewStatusWithAggregatesFilter<$PrismaModel> | $Enums.ReviewStatus
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumReviewStatusFilter<$PrismaModel>
    _max?: NestedEnumReviewStatusFilter<$PrismaModel>
  }

  export type NestedEnumProfessionalTypeFilter<$PrismaModel = never> = {
    equals?: $Enums.ProfessionalType | EnumProfessionalTypeFieldRefInput<$PrismaModel>
    in?: $Enums.ProfessionalType[] | ListEnumProfessionalTypeFieldRefInput<$PrismaModel>
    notIn?: $Enums.ProfessionalType[] | ListEnumProfessionalTypeFieldRefInput<$PrismaModel>
    not?: NestedEnumProfessionalTypeFilter<$PrismaModel> | $Enums.ProfessionalType
  }

  export type NestedEnumProfessionalTypeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.ProfessionalType | EnumProfessionalTypeFieldRefInput<$PrismaModel>
    in?: $Enums.ProfessionalType[] | ListEnumProfessionalTypeFieldRefInput<$PrismaModel>
    notIn?: $Enums.ProfessionalType[] | ListEnumProfessionalTypeFieldRefInput<$PrismaModel>
    not?: NestedEnumProfessionalTypeWithAggregatesFilter<$PrismaModel> | $Enums.ProfessionalType
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumProfessionalTypeFilter<$PrismaModel>
    _max?: NestedEnumProfessionalTypeFilter<$PrismaModel>
  }

  export type NestedEnumConsultationTypeFilter<$PrismaModel = never> = {
    equals?: $Enums.ConsultationType | EnumConsultationTypeFieldRefInput<$PrismaModel>
    in?: $Enums.ConsultationType[] | ListEnumConsultationTypeFieldRefInput<$PrismaModel>
    notIn?: $Enums.ConsultationType[] | ListEnumConsultationTypeFieldRefInput<$PrismaModel>
    not?: NestedEnumConsultationTypeFilter<$PrismaModel> | $Enums.ConsultationType
  }

  export type NestedEnumSessionTypeFilter<$PrismaModel = never> = {
    equals?: $Enums.SessionType | EnumSessionTypeFieldRefInput<$PrismaModel>
    in?: $Enums.SessionType[] | ListEnumSessionTypeFieldRefInput<$PrismaModel>
    notIn?: $Enums.SessionType[] | ListEnumSessionTypeFieldRefInput<$PrismaModel>
    not?: NestedEnumSessionTypeFilter<$PrismaModel> | $Enums.SessionType
  }

  export type NestedEnumConsultationTypeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.ConsultationType | EnumConsultationTypeFieldRefInput<$PrismaModel>
    in?: $Enums.ConsultationType[] | ListEnumConsultationTypeFieldRefInput<$PrismaModel>
    notIn?: $Enums.ConsultationType[] | ListEnumConsultationTypeFieldRefInput<$PrismaModel>
    not?: NestedEnumConsultationTypeWithAggregatesFilter<$PrismaModel> | $Enums.ConsultationType
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumConsultationTypeFilter<$PrismaModel>
    _max?: NestedEnumConsultationTypeFilter<$PrismaModel>
  }

  export type NestedEnumSessionTypeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.SessionType | EnumSessionTypeFieldRefInput<$PrismaModel>
    in?: $Enums.SessionType[] | ListEnumSessionTypeFieldRefInput<$PrismaModel>
    notIn?: $Enums.SessionType[] | ListEnumSessionTypeFieldRefInput<$PrismaModel>
    not?: NestedEnumSessionTypeWithAggregatesFilter<$PrismaModel> | $Enums.SessionType
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumSessionTypeFilter<$PrismaModel>
    _max?: NestedEnumSessionTypeFilter<$PrismaModel>
  }

  export type NestedEnumBlogCategoryFilter<$PrismaModel = never> = {
    equals?: $Enums.BlogCategory | EnumBlogCategoryFieldRefInput<$PrismaModel>
    in?: $Enums.BlogCategory[] | ListEnumBlogCategoryFieldRefInput<$PrismaModel>
    notIn?: $Enums.BlogCategory[] | ListEnumBlogCategoryFieldRefInput<$PrismaModel>
    not?: NestedEnumBlogCategoryFilter<$PrismaModel> | $Enums.BlogCategory
  }

  export type NestedEnumBlogStatusFilter<$PrismaModel = never> = {
    equals?: $Enums.BlogStatus | EnumBlogStatusFieldRefInput<$PrismaModel>
    in?: $Enums.BlogStatus[] | ListEnumBlogStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.BlogStatus[] | ListEnumBlogStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumBlogStatusFilter<$PrismaModel> | $Enums.BlogStatus
  }

  export type NestedEnumBlogCategoryWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.BlogCategory | EnumBlogCategoryFieldRefInput<$PrismaModel>
    in?: $Enums.BlogCategory[] | ListEnumBlogCategoryFieldRefInput<$PrismaModel>
    notIn?: $Enums.BlogCategory[] | ListEnumBlogCategoryFieldRefInput<$PrismaModel>
    not?: NestedEnumBlogCategoryWithAggregatesFilter<$PrismaModel> | $Enums.BlogCategory
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumBlogCategoryFilter<$PrismaModel>
    _max?: NestedEnumBlogCategoryFilter<$PrismaModel>
  }

  export type NestedEnumBlogStatusWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.BlogStatus | EnumBlogStatusFieldRefInput<$PrismaModel>
    in?: $Enums.BlogStatus[] | ListEnumBlogStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.BlogStatus[] | ListEnumBlogStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumBlogStatusWithAggregatesFilter<$PrismaModel> | $Enums.BlogStatus
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumBlogStatusFilter<$PrismaModel>
    _max?: NestedEnumBlogStatusFilter<$PrismaModel>
  }

  export type UserAddressCreateWithoutUserInput = {
    id?: string
    type: $Enums.AddressType
    addressLine1: string
    addressLine2?: string | null
    city: string
    state: string
    postalCode: string
    country?: string
    latitude?: Decimal | DecimalJsLike | number | string | null
    longitude?: Decimal | DecimalJsLike | number | string | null
    isDefault?: boolean
    verified?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type UserAddressUncheckedCreateWithoutUserInput = {
    id?: string
    type: $Enums.AddressType
    addressLine1: string
    addressLine2?: string | null
    city: string
    state: string
    postalCode: string
    country?: string
    latitude?: Decimal | DecimalJsLike | number | string | null
    longitude?: Decimal | DecimalJsLike | number | string | null
    isDefault?: boolean
    verified?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type UserAddressCreateOrConnectWithoutUserInput = {
    where: UserAddressWhereUniqueInput
    create: XOR<UserAddressCreateWithoutUserInput, UserAddressUncheckedCreateWithoutUserInput>
  }

  export type UserAddressCreateManyUserInputEnvelope = {
    data: UserAddressCreateManyUserInput | UserAddressCreateManyUserInput[]
    skipDuplicates?: boolean
  }

  export type UserSessionCreateWithoutUserInput = {
    id?: string
    refreshTokenHash: string
    deviceFingerprint?: string | null
    ipAddress?: string | null
    userAgent?: string | null
    locationCountry?: string | null
    locationRegion?: string | null
    locationCity?: string | null
    isActive?: boolean
    expiresAt: Date | string
    lastUsedAt?: Date | string
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type UserSessionUncheckedCreateWithoutUserInput = {
    id?: string
    refreshTokenHash: string
    deviceFingerprint?: string | null
    ipAddress?: string | null
    userAgent?: string | null
    locationCountry?: string | null
    locationRegion?: string | null
    locationCity?: string | null
    isActive?: boolean
    expiresAt: Date | string
    lastUsedAt?: Date | string
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type UserSessionCreateOrConnectWithoutUserInput = {
    where: UserSessionWhereUniqueInput
    create: XOR<UserSessionCreateWithoutUserInput, UserSessionUncheckedCreateWithoutUserInput>
  }

  export type UserSessionCreateManyUserInputEnvelope = {
    data: UserSessionCreateManyUserInput | UserSessionCreateManyUserInput[]
    skipDuplicates?: boolean
  }

  export type StoreCreateWithoutOwnerInput = {
    id?: string
    name: string
    slug: string
    description?: string | null
    email?: string | null
    phone?: string | null
    website?: string | null
    addressLine1: string
    addressLine2?: string | null
    city: string
    state: string
    postalCode: string
    latitude: Decimal | DecimalJsLike | number | string
    longitude: Decimal | DecimalJsLike | number | string
    businessType: $Enums.BusinessType
    licenseNumber: string
    licenseType: string
    licenseState: string
    licenseExpiresAt: Date | string
    features?: NullableJsonNullValueInput | InputJsonValue
    paymentMethods?: NullableJsonNullValueInput | InputJsonValue
    deliveryRadius?: number | null
    minimumOrder?: Decimal | DecimalJsLike | number | string | null
    deliveryFee?: Decimal | DecimalJsLike | number | string | null
    operatingHours?: NullableJsonNullValueInput | InputJsonValue
    status?: $Enums.StoreStatus
    verified?: boolean
    verifiedAt?: Date | string | null
    verifiedBy?: string | null
    logoUrl?: string | null
    coverImageUrl?: string | null
    galleryImages?: NullableJsonNullValueInput | InputJsonValue
    metaTitle?: string | null
    metaDescription?: string | null
    socialMedia?: NullableJsonNullValueInput | InputJsonValue
    metrcLicenseId?: string | null
    metrcLastSync?: Date | string | null
    complianceStatus?: $Enums.ComplianceStatus
    trackTraceSystem?: $Enums.TrackTraceSystem | null
    totalProducts?: number
    averageRating?: Decimal | DecimalJsLike | number | string
    totalReviews?: number
    totalOrders?: number
    createdAt?: Date | string
    updatedAt?: Date | string
    createdBy?: string | null
    updatedBy?: string | null
    staff?: StoreStaffCreateNestedManyWithoutStoreInput
    products?: ProductCreateNestedManyWithoutStoreInput
    orders?: OrderCreateNestedManyWithoutStoreInput
    reviews?: ReviewCreateNestedManyWithoutStoreInput
  }

  export type StoreUncheckedCreateWithoutOwnerInput = {
    id?: string
    name: string
    slug: string
    description?: string | null
    email?: string | null
    phone?: string | null
    website?: string | null
    addressLine1: string
    addressLine2?: string | null
    city: string
    state: string
    postalCode: string
    latitude: Decimal | DecimalJsLike | number | string
    longitude: Decimal | DecimalJsLike | number | string
    businessType: $Enums.BusinessType
    licenseNumber: string
    licenseType: string
    licenseState: string
    licenseExpiresAt: Date | string
    features?: NullableJsonNullValueInput | InputJsonValue
    paymentMethods?: NullableJsonNullValueInput | InputJsonValue
    deliveryRadius?: number | null
    minimumOrder?: Decimal | DecimalJsLike | number | string | null
    deliveryFee?: Decimal | DecimalJsLike | number | string | null
    operatingHours?: NullableJsonNullValueInput | InputJsonValue
    status?: $Enums.StoreStatus
    verified?: boolean
    verifiedAt?: Date | string | null
    verifiedBy?: string | null
    logoUrl?: string | null
    coverImageUrl?: string | null
    galleryImages?: NullableJsonNullValueInput | InputJsonValue
    metaTitle?: string | null
    metaDescription?: string | null
    socialMedia?: NullableJsonNullValueInput | InputJsonValue
    metrcLicenseId?: string | null
    metrcLastSync?: Date | string | null
    complianceStatus?: $Enums.ComplianceStatus
    trackTraceSystem?: $Enums.TrackTraceSystem | null
    totalProducts?: number
    averageRating?: Decimal | DecimalJsLike | number | string
    totalReviews?: number
    totalOrders?: number
    createdAt?: Date | string
    updatedAt?: Date | string
    createdBy?: string | null
    updatedBy?: string | null
    staff?: StoreStaffUncheckedCreateNestedManyWithoutStoreInput
    products?: ProductUncheckedCreateNestedManyWithoutStoreInput
    orders?: OrderUncheckedCreateNestedManyWithoutStoreInput
    reviews?: ReviewUncheckedCreateNestedManyWithoutStoreInput
  }

  export type StoreCreateOrConnectWithoutOwnerInput = {
    where: StoreWhereUniqueInput
    create: XOR<StoreCreateWithoutOwnerInput, StoreUncheckedCreateWithoutOwnerInput>
  }

  export type StoreCreateManyOwnerInputEnvelope = {
    data: StoreCreateManyOwnerInput | StoreCreateManyOwnerInput[]
    skipDuplicates?: boolean
  }

  export type OrderCreateWithoutUserInput = {
    id?: string
    orderNumber: string
    orderType: $Enums.OrderType
    fulfillmentStatus?: $Enums.OrderStatus
    deliveryAddress?: NullableJsonNullValueInput | InputJsonValue
    deliveryInstructions?: string | null
    deliveryTimeRequested?: Date | string | null
    deliveryTimeActual?: Date | string | null
    deliveryPersonId?: string | null
    subtotal: Decimal | DecimalJsLike | number | string
    taxAmount?: Decimal | DecimalJsLike | number | string
    deliveryFee?: Decimal | DecimalJsLike | number | string
    serviceFee?: Decimal | DecimalJsLike | number | string
    discountAmount?: Decimal | DecimalJsLike | number | string
    tipAmount?: Decimal | DecimalJsLike | number | string
    totalAmount: Decimal | DecimalJsLike | number | string
    paymentStatus?: $Enums.PaymentStatus
    paymentMethod: $Enums.PaymentMethod
    paymentProvider?: string | null
    paymentIntentId?: string | null
    ageVerifiedAtDelivery?: Date | string | null
    idCheckedBy?: string | null
    customerNotes?: string | null
    internalNotes?: string | null
    metrcTransferManifest?: string | null
    complianceCheckPassed?: boolean
    complianceCheckedAt?: Date | string | null
    complianceCheckedBy?: string | null
    cancelledAt?: Date | string | null
    cancelledBy?: string | null
    cancellationReason?: string | null
    refundAmount?: Decimal | DecimalJsLike | number | string
    createdAt?: Date | string
    updatedAt?: Date | string
    store: StoreCreateNestedOneWithoutOrdersInput
    items?: OrderItemCreateNestedManyWithoutOrderInput
    reviews?: ReviewCreateNestedManyWithoutOrderInput
  }

  export type OrderUncheckedCreateWithoutUserInput = {
    id?: string
    orderNumber: string
    storeId: string
    orderType: $Enums.OrderType
    fulfillmentStatus?: $Enums.OrderStatus
    deliveryAddress?: NullableJsonNullValueInput | InputJsonValue
    deliveryInstructions?: string | null
    deliveryTimeRequested?: Date | string | null
    deliveryTimeActual?: Date | string | null
    deliveryPersonId?: string | null
    subtotal: Decimal | DecimalJsLike | number | string
    taxAmount?: Decimal | DecimalJsLike | number | string
    deliveryFee?: Decimal | DecimalJsLike | number | string
    serviceFee?: Decimal | DecimalJsLike | number | string
    discountAmount?: Decimal | DecimalJsLike | number | string
    tipAmount?: Decimal | DecimalJsLike | number | string
    totalAmount: Decimal | DecimalJsLike | number | string
    paymentStatus?: $Enums.PaymentStatus
    paymentMethod: $Enums.PaymentMethod
    paymentProvider?: string | null
    paymentIntentId?: string | null
    ageVerifiedAtDelivery?: Date | string | null
    idCheckedBy?: string | null
    customerNotes?: string | null
    internalNotes?: string | null
    metrcTransferManifest?: string | null
    complianceCheckPassed?: boolean
    complianceCheckedAt?: Date | string | null
    complianceCheckedBy?: string | null
    cancelledAt?: Date | string | null
    cancelledBy?: string | null
    cancellationReason?: string | null
    refundAmount?: Decimal | DecimalJsLike | number | string
    createdAt?: Date | string
    updatedAt?: Date | string
    items?: OrderItemUncheckedCreateNestedManyWithoutOrderInput
    reviews?: ReviewUncheckedCreateNestedManyWithoutOrderInput
  }

  export type OrderCreateOrConnectWithoutUserInput = {
    where: OrderWhereUniqueInput
    create: XOR<OrderCreateWithoutUserInput, OrderUncheckedCreateWithoutUserInput>
  }

  export type OrderCreateManyUserInputEnvelope = {
    data: OrderCreateManyUserInput | OrderCreateManyUserInput[]
    skipDuplicates?: boolean
  }

  export type ReviewCreateWithoutUserInput = {
    id?: string
    reviewableType: $Enums.ReviewableType
    rating: number
    title?: string | null
    content: string
    qualityRating?: number | null
    valueRating?: number | null
    serviceRating?: number | null
    effectsRating?: number | null
    effects?: NullableJsonNullValueInput | InputJsonValue
    medicalBenefits?: NullableJsonNullValueInput | InputJsonValue
    sideEffects?: NullableJsonNullValueInput | InputJsonValue
    images?: NullableJsonNullValueInput | InputJsonValue
    status?: $Enums.ReviewStatus
    moderatedAt?: Date | string | null
    moderatedBy?: string | null
    moderationReason?: string | null
    verifiedPurchase?: boolean
    helpfulCount?: number
    totalVotes?: number
    createdAt?: Date | string
    updatedAt?: Date | string
    order?: OrderCreateNestedOneWithoutReviewsInput
    store?: StoreCreateNestedOneWithoutReviewsInput
    product?: ProductCreateNestedOneWithoutReviewsInput
  }

  export type ReviewUncheckedCreateWithoutUserInput = {
    id?: string
    reviewableType: $Enums.ReviewableType
    reviewableId: string
    rating: number
    title?: string | null
    content: string
    qualityRating?: number | null
    valueRating?: number | null
    serviceRating?: number | null
    effectsRating?: number | null
    effects?: NullableJsonNullValueInput | InputJsonValue
    medicalBenefits?: NullableJsonNullValueInput | InputJsonValue
    sideEffects?: NullableJsonNullValueInput | InputJsonValue
    images?: NullableJsonNullValueInput | InputJsonValue
    status?: $Enums.ReviewStatus
    moderatedAt?: Date | string | null
    moderatedBy?: string | null
    moderationReason?: string | null
    verifiedPurchase?: boolean
    orderId?: string | null
    helpfulCount?: number
    totalVotes?: number
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type ReviewCreateOrConnectWithoutUserInput = {
    where: ReviewWhereUniqueInput
    create: XOR<ReviewCreateWithoutUserInput, ReviewUncheckedCreateWithoutUserInput>
  }

  export type ReviewCreateManyUserInputEnvelope = {
    data: ReviewCreateManyUserInput | ReviewCreateManyUserInput[]
    skipDuplicates?: boolean
  }

  export type ProfessionalCreateWithoutUserInput = {
    id?: string
    professionalType: $Enums.ProfessionalType
    licenseNumber: string
    licenseState: string
    licenseExpiresAt: Date | string
    specializations?: NullableJsonNullValueInput | InputJsonValue
    certifications?: NullableJsonNullValueInput | InputJsonValue
    practiceName?: string | null
    practiceAddress?: NullableJsonNullValueInput | InputJsonValue
    practicePhone?: string | null
    practiceWebsite?: string | null
    cannabisExperienceYears?: number | null
    cannabisCertifications?: NullableJsonNullValueInput | InputJsonValue
    preferredProducts?: NullableJsonNullValueInput | InputJsonValue
    treatmentApproaches?: NullableJsonNullValueInput | InputJsonValue
    consultationTypes?: NullableJsonNullValueInput | InputJsonValue
    hourlyRate?: Decimal | DecimalJsLike | number | string | null
    acceptsInsurance?: boolean
    insuranceProviders?: NullableJsonNullValueInput | InputJsonValue
    verified?: boolean
    verifiedAt?: Date | string | null
    verifiedBy?: string | null
    verificationDocuments?: NullableJsonNullValueInput | InputJsonValue
    consultationCount?: number
    averageRating?: Decimal | DecimalJsLike | number | string
    reviewCount?: number
    status?: string
    acceptingNewPatients?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    consultations?: ConsultationCreateNestedManyWithoutProfessionalInput
  }

  export type ProfessionalUncheckedCreateWithoutUserInput = {
    id?: string
    professionalType: $Enums.ProfessionalType
    licenseNumber: string
    licenseState: string
    licenseExpiresAt: Date | string
    specializations?: NullableJsonNullValueInput | InputJsonValue
    certifications?: NullableJsonNullValueInput | InputJsonValue
    practiceName?: string | null
    practiceAddress?: NullableJsonNullValueInput | InputJsonValue
    practicePhone?: string | null
    practiceWebsite?: string | null
    cannabisExperienceYears?: number | null
    cannabisCertifications?: NullableJsonNullValueInput | InputJsonValue
    preferredProducts?: NullableJsonNullValueInput | InputJsonValue
    treatmentApproaches?: NullableJsonNullValueInput | InputJsonValue
    consultationTypes?: NullableJsonNullValueInput | InputJsonValue
    hourlyRate?: Decimal | DecimalJsLike | number | string | null
    acceptsInsurance?: boolean
    insuranceProviders?: NullableJsonNullValueInput | InputJsonValue
    verified?: boolean
    verifiedAt?: Date | string | null
    verifiedBy?: string | null
    verificationDocuments?: NullableJsonNullValueInput | InputJsonValue
    consultationCount?: number
    averageRating?: Decimal | DecimalJsLike | number | string
    reviewCount?: number
    status?: string
    acceptingNewPatients?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    consultations?: ConsultationUncheckedCreateNestedManyWithoutProfessionalInput
  }

  export type ProfessionalCreateOrConnectWithoutUserInput = {
    where: ProfessionalWhereUniqueInput
    create: XOR<ProfessionalCreateWithoutUserInput, ProfessionalUncheckedCreateWithoutUserInput>
  }

  export type StoreStaffCreateWithoutUserInput = {
    id?: string
    role: string
    permissions?: NullableJsonNullValueInput | InputJsonValue
    employeeId?: string | null
    startDate: Date | string
    endDate?: Date | string | null
    hourlyWage?: Decimal | DecimalJsLike | number | string | null
    commissionRate?: Decimal | DecimalJsLike | number | string | null
    status?: string
    canAccessPos?: boolean
    canManageInventory?: boolean
    canProcessOrders?: boolean
    complianceTrainingCompleted?: boolean
    trainingCompletedAt?: Date | string | null
    trainingExpiresAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    createdBy?: string | null
    store: StoreCreateNestedOneWithoutStaffInput
  }

  export type StoreStaffUncheckedCreateWithoutUserInput = {
    id?: string
    storeId: string
    role: string
    permissions?: NullableJsonNullValueInput | InputJsonValue
    employeeId?: string | null
    startDate: Date | string
    endDate?: Date | string | null
    hourlyWage?: Decimal | DecimalJsLike | number | string | null
    commissionRate?: Decimal | DecimalJsLike | number | string | null
    status?: string
    canAccessPos?: boolean
    canManageInventory?: boolean
    canProcessOrders?: boolean
    complianceTrainingCompleted?: boolean
    trainingCompletedAt?: Date | string | null
    trainingExpiresAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    createdBy?: string | null
  }

  export type StoreStaffCreateOrConnectWithoutUserInput = {
    where: StoreStaffWhereUniqueInput
    create: XOR<StoreStaffCreateWithoutUserInput, StoreStaffUncheckedCreateWithoutUserInput>
  }

  export type StoreStaffCreateManyUserInputEnvelope = {
    data: StoreStaffCreateManyUserInput | StoreStaffCreateManyUserInput[]
    skipDuplicates?: boolean
  }

  export type ConsultationCreateWithoutPatientInput = {
    id?: string
    consultationType: $Enums.ConsultationType
    sessionType: $Enums.SessionType
    scheduledAt: Date | string
    durationMinutes?: number
    timezone: string
    status?: string
    meetingUrl?: string | null
    meetingId?: string | null
    meetingPassword?: string | null
    chiefComplaint?: string | null
    symptoms?: NullableJsonNullValueInput | InputJsonValue
    currentMedications?: NullableJsonNullValueInput | InputJsonValue
    cannabisExperience?: string | null
    previousCannabisUse?: string | null
    assessment?: string | null
    recommendations?: string | null
    prescribedProducts?: NullableJsonNullValueInput | InputJsonValue
    followUpNeeded?: boolean
    followUpDate?: Date | string | null
    consultationFee: Decimal | DecimalJsLike | number | string
    paymentStatus?: string
    paymentId?: string | null
    medicalConsentSigned?: boolean
    privacyConsentSigned?: boolean
    consultationAgreementSigned?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    professional: ProfessionalCreateNestedOneWithoutConsultationsInput
  }

  export type ConsultationUncheckedCreateWithoutPatientInput = {
    id?: string
    professionalId: string
    consultationType: $Enums.ConsultationType
    sessionType: $Enums.SessionType
    scheduledAt: Date | string
    durationMinutes?: number
    timezone: string
    status?: string
    meetingUrl?: string | null
    meetingId?: string | null
    meetingPassword?: string | null
    chiefComplaint?: string | null
    symptoms?: NullableJsonNullValueInput | InputJsonValue
    currentMedications?: NullableJsonNullValueInput | InputJsonValue
    cannabisExperience?: string | null
    previousCannabisUse?: string | null
    assessment?: string | null
    recommendations?: string | null
    prescribedProducts?: NullableJsonNullValueInput | InputJsonValue
    followUpNeeded?: boolean
    followUpDate?: Date | string | null
    consultationFee: Decimal | DecimalJsLike | number | string
    paymentStatus?: string
    paymentId?: string | null
    medicalConsentSigned?: boolean
    privacyConsentSigned?: boolean
    consultationAgreementSigned?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type ConsultationCreateOrConnectWithoutPatientInput = {
    where: ConsultationWhereUniqueInput
    create: XOR<ConsultationCreateWithoutPatientInput, ConsultationUncheckedCreateWithoutPatientInput>
  }

  export type ConsultationCreateManyPatientInputEnvelope = {
    data: ConsultationCreateManyPatientInput | ConsultationCreateManyPatientInput[]
    skipDuplicates?: boolean
  }

  export type UserCreateWithoutAgeVerificationsInput = {
    id?: string
    email: string
    emailVerified?: boolean
    passwordHash: string
    role?: $Enums.UserRole
    firstName?: string | null
    lastName?: string | null
    phone?: string | null
    dateOfBirth?: Date | string | null
    status?: $Enums.UserStatus
    lastLoginAt?: Date | string | null
    failedLoginAttempts?: number
    lockedUntil?: Date | string | null
    ageVerified?: boolean
    ageVerificationMethod?: $Enums.AgeVerificationMethod | null
    ageVerifiedAt?: Date | string | null
    termsAcceptedAt?: Date | string | null
    privacyAcceptedAt?: Date | string | null
    marketingConsent?: boolean
    gdprConsent?: boolean
    ccpaOptOut?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    createdBy?: string | null
    updatedBy?: string | null
    addresses?: UserAddressCreateNestedManyWithoutUserInput
    sessions?: UserSessionCreateNestedManyWithoutUserInput
    stores?: StoreCreateNestedManyWithoutOwnerInput
    orders?: OrderCreateNestedManyWithoutUserInput
    reviews?: ReviewCreateNestedManyWithoutUserInput
    professional?: ProfessionalCreateNestedOneWithoutUserInput
    storeStaff?: StoreStaffCreateNestedManyWithoutUserInput
    consultationsAsPatient?: ConsultationCreateNestedManyWithoutPatientInput
    ageVerifier?: UserCreateNestedOneWithoutAgeVerificationsInput
    blogPosts?: BlogPostCreateNestedManyWithoutAuthorInput
    factCheckedPosts?: BlogPostCreateNestedManyWithoutFactCheckerInput
  }

  export type UserUncheckedCreateWithoutAgeVerificationsInput = {
    id?: string
    email: string
    emailVerified?: boolean
    passwordHash: string
    role?: $Enums.UserRole
    firstName?: string | null
    lastName?: string | null
    phone?: string | null
    dateOfBirth?: Date | string | null
    status?: $Enums.UserStatus
    lastLoginAt?: Date | string | null
    failedLoginAttempts?: number
    lockedUntil?: Date | string | null
    ageVerified?: boolean
    ageVerificationMethod?: $Enums.AgeVerificationMethod | null
    ageVerifiedAt?: Date | string | null
    ageVerifiedBy?: string | null
    termsAcceptedAt?: Date | string | null
    privacyAcceptedAt?: Date | string | null
    marketingConsent?: boolean
    gdprConsent?: boolean
    ccpaOptOut?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    createdBy?: string | null
    updatedBy?: string | null
    addresses?: UserAddressUncheckedCreateNestedManyWithoutUserInput
    sessions?: UserSessionUncheckedCreateNestedManyWithoutUserInput
    stores?: StoreUncheckedCreateNestedManyWithoutOwnerInput
    orders?: OrderUncheckedCreateNestedManyWithoutUserInput
    reviews?: ReviewUncheckedCreateNestedManyWithoutUserInput
    professional?: ProfessionalUncheckedCreateNestedOneWithoutUserInput
    storeStaff?: StoreStaffUncheckedCreateNestedManyWithoutUserInput
    consultationsAsPatient?: ConsultationUncheckedCreateNestedManyWithoutPatientInput
    blogPosts?: BlogPostUncheckedCreateNestedManyWithoutAuthorInput
    factCheckedPosts?: BlogPostUncheckedCreateNestedManyWithoutFactCheckerInput
  }

  export type UserCreateOrConnectWithoutAgeVerificationsInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutAgeVerificationsInput, UserUncheckedCreateWithoutAgeVerificationsInput>
  }

  export type UserCreateWithoutAgeVerifierInput = {
    id?: string
    email: string
    emailVerified?: boolean
    passwordHash: string
    role?: $Enums.UserRole
    firstName?: string | null
    lastName?: string | null
    phone?: string | null
    dateOfBirth?: Date | string | null
    status?: $Enums.UserStatus
    lastLoginAt?: Date | string | null
    failedLoginAttempts?: number
    lockedUntil?: Date | string | null
    ageVerified?: boolean
    ageVerificationMethod?: $Enums.AgeVerificationMethod | null
    ageVerifiedAt?: Date | string | null
    termsAcceptedAt?: Date | string | null
    privacyAcceptedAt?: Date | string | null
    marketingConsent?: boolean
    gdprConsent?: boolean
    ccpaOptOut?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    createdBy?: string | null
    updatedBy?: string | null
    addresses?: UserAddressCreateNestedManyWithoutUserInput
    sessions?: UserSessionCreateNestedManyWithoutUserInput
    stores?: StoreCreateNestedManyWithoutOwnerInput
    orders?: OrderCreateNestedManyWithoutUserInput
    reviews?: ReviewCreateNestedManyWithoutUserInput
    professional?: ProfessionalCreateNestedOneWithoutUserInput
    storeStaff?: StoreStaffCreateNestedManyWithoutUserInput
    consultationsAsPatient?: ConsultationCreateNestedManyWithoutPatientInput
    ageVerifications?: UserCreateNestedManyWithoutAgeVerifierInput
    blogPosts?: BlogPostCreateNestedManyWithoutAuthorInput
    factCheckedPosts?: BlogPostCreateNestedManyWithoutFactCheckerInput
  }

  export type UserUncheckedCreateWithoutAgeVerifierInput = {
    id?: string
    email: string
    emailVerified?: boolean
    passwordHash: string
    role?: $Enums.UserRole
    firstName?: string | null
    lastName?: string | null
    phone?: string | null
    dateOfBirth?: Date | string | null
    status?: $Enums.UserStatus
    lastLoginAt?: Date | string | null
    failedLoginAttempts?: number
    lockedUntil?: Date | string | null
    ageVerified?: boolean
    ageVerificationMethod?: $Enums.AgeVerificationMethod | null
    ageVerifiedAt?: Date | string | null
    termsAcceptedAt?: Date | string | null
    privacyAcceptedAt?: Date | string | null
    marketingConsent?: boolean
    gdprConsent?: boolean
    ccpaOptOut?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    createdBy?: string | null
    updatedBy?: string | null
    addresses?: UserAddressUncheckedCreateNestedManyWithoutUserInput
    sessions?: UserSessionUncheckedCreateNestedManyWithoutUserInput
    stores?: StoreUncheckedCreateNestedManyWithoutOwnerInput
    orders?: OrderUncheckedCreateNestedManyWithoutUserInput
    reviews?: ReviewUncheckedCreateNestedManyWithoutUserInput
    professional?: ProfessionalUncheckedCreateNestedOneWithoutUserInput
    storeStaff?: StoreStaffUncheckedCreateNestedManyWithoutUserInput
    consultationsAsPatient?: ConsultationUncheckedCreateNestedManyWithoutPatientInput
    ageVerifications?: UserUncheckedCreateNestedManyWithoutAgeVerifierInput
    blogPosts?: BlogPostUncheckedCreateNestedManyWithoutAuthorInput
    factCheckedPosts?: BlogPostUncheckedCreateNestedManyWithoutFactCheckerInput
  }

  export type UserCreateOrConnectWithoutAgeVerifierInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutAgeVerifierInput, UserUncheckedCreateWithoutAgeVerifierInput>
  }

  export type UserCreateManyAgeVerifierInputEnvelope = {
    data: UserCreateManyAgeVerifierInput | UserCreateManyAgeVerifierInput[]
    skipDuplicates?: boolean
  }

  export type BlogPostCreateWithoutAuthorInput = {
    id?: string
    title: string
    slug: string
    excerpt?: string | null
    content: string
    featuredImageUrl?: string | null
    category: $Enums.BlogCategory
    tags?: NullableJsonNullValueInput | InputJsonValue
    metaTitle?: string | null
    metaDescription?: string | null
    metaKeywords?: string | null
    status?: $Enums.BlogStatus
    publishedAt?: Date | string | null
    scheduledFor?: Date | string | null
    viewCount?: number
    likeCount?: number
    commentCount?: number
    shareCount?: number
    factChecked?: boolean
    factCheckedAt?: Date | string | null
    medicalDisclaimer?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    factChecker?: UserCreateNestedOneWithoutFactCheckedPostsInput
  }

  export type BlogPostUncheckedCreateWithoutAuthorInput = {
    id?: string
    title: string
    slug: string
    excerpt?: string | null
    content: string
    featuredImageUrl?: string | null
    category: $Enums.BlogCategory
    tags?: NullableJsonNullValueInput | InputJsonValue
    metaTitle?: string | null
    metaDescription?: string | null
    metaKeywords?: string | null
    status?: $Enums.BlogStatus
    publishedAt?: Date | string | null
    scheduledFor?: Date | string | null
    viewCount?: number
    likeCount?: number
    commentCount?: number
    shareCount?: number
    factChecked?: boolean
    factCheckedBy?: string | null
    factCheckedAt?: Date | string | null
    medicalDisclaimer?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type BlogPostCreateOrConnectWithoutAuthorInput = {
    where: BlogPostWhereUniqueInput
    create: XOR<BlogPostCreateWithoutAuthorInput, BlogPostUncheckedCreateWithoutAuthorInput>
  }

  export type BlogPostCreateManyAuthorInputEnvelope = {
    data: BlogPostCreateManyAuthorInput | BlogPostCreateManyAuthorInput[]
    skipDuplicates?: boolean
  }

  export type BlogPostCreateWithoutFactCheckerInput = {
    id?: string
    title: string
    slug: string
    excerpt?: string | null
    content: string
    featuredImageUrl?: string | null
    category: $Enums.BlogCategory
    tags?: NullableJsonNullValueInput | InputJsonValue
    metaTitle?: string | null
    metaDescription?: string | null
    metaKeywords?: string | null
    status?: $Enums.BlogStatus
    publishedAt?: Date | string | null
    scheduledFor?: Date | string | null
    viewCount?: number
    likeCount?: number
    commentCount?: number
    shareCount?: number
    factChecked?: boolean
    factCheckedAt?: Date | string | null
    medicalDisclaimer?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    author: UserCreateNestedOneWithoutBlogPostsInput
  }

  export type BlogPostUncheckedCreateWithoutFactCheckerInput = {
    id?: string
    authorId: string
    title: string
    slug: string
    excerpt?: string | null
    content: string
    featuredImageUrl?: string | null
    category: $Enums.BlogCategory
    tags?: NullableJsonNullValueInput | InputJsonValue
    metaTitle?: string | null
    metaDescription?: string | null
    metaKeywords?: string | null
    status?: $Enums.BlogStatus
    publishedAt?: Date | string | null
    scheduledFor?: Date | string | null
    viewCount?: number
    likeCount?: number
    commentCount?: number
    shareCount?: number
    factChecked?: boolean
    factCheckedAt?: Date | string | null
    medicalDisclaimer?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type BlogPostCreateOrConnectWithoutFactCheckerInput = {
    where: BlogPostWhereUniqueInput
    create: XOR<BlogPostCreateWithoutFactCheckerInput, BlogPostUncheckedCreateWithoutFactCheckerInput>
  }

  export type BlogPostCreateManyFactCheckerInputEnvelope = {
    data: BlogPostCreateManyFactCheckerInput | BlogPostCreateManyFactCheckerInput[]
    skipDuplicates?: boolean
  }

  export type UserAddressUpsertWithWhereUniqueWithoutUserInput = {
    where: UserAddressWhereUniqueInput
    update: XOR<UserAddressUpdateWithoutUserInput, UserAddressUncheckedUpdateWithoutUserInput>
    create: XOR<UserAddressCreateWithoutUserInput, UserAddressUncheckedCreateWithoutUserInput>
  }

  export type UserAddressUpdateWithWhereUniqueWithoutUserInput = {
    where: UserAddressWhereUniqueInput
    data: XOR<UserAddressUpdateWithoutUserInput, UserAddressUncheckedUpdateWithoutUserInput>
  }

  export type UserAddressUpdateManyWithWhereWithoutUserInput = {
    where: UserAddressScalarWhereInput
    data: XOR<UserAddressUpdateManyMutationInput, UserAddressUncheckedUpdateManyWithoutUserInput>
  }

  export type UserAddressScalarWhereInput = {
    AND?: UserAddressScalarWhereInput | UserAddressScalarWhereInput[]
    OR?: UserAddressScalarWhereInput[]
    NOT?: UserAddressScalarWhereInput | UserAddressScalarWhereInput[]
    id?: StringFilter<"UserAddress"> | string
    userId?: StringFilter<"UserAddress"> | string
    type?: EnumAddressTypeFilter<"UserAddress"> | $Enums.AddressType
    addressLine1?: StringFilter<"UserAddress"> | string
    addressLine2?: StringNullableFilter<"UserAddress"> | string | null
    city?: StringFilter<"UserAddress"> | string
    state?: StringFilter<"UserAddress"> | string
    postalCode?: StringFilter<"UserAddress"> | string
    country?: StringFilter<"UserAddress"> | string
    latitude?: DecimalNullableFilter<"UserAddress"> | Decimal | DecimalJsLike | number | string | null
    longitude?: DecimalNullableFilter<"UserAddress"> | Decimal | DecimalJsLike | number | string | null
    isDefault?: BoolFilter<"UserAddress"> | boolean
    verified?: BoolFilter<"UserAddress"> | boolean
    createdAt?: DateTimeFilter<"UserAddress"> | Date | string
    updatedAt?: DateTimeFilter<"UserAddress"> | Date | string
  }

  export type UserSessionUpsertWithWhereUniqueWithoutUserInput = {
    where: UserSessionWhereUniqueInput
    update: XOR<UserSessionUpdateWithoutUserInput, UserSessionUncheckedUpdateWithoutUserInput>
    create: XOR<UserSessionCreateWithoutUserInput, UserSessionUncheckedCreateWithoutUserInput>
  }

  export type UserSessionUpdateWithWhereUniqueWithoutUserInput = {
    where: UserSessionWhereUniqueInput
    data: XOR<UserSessionUpdateWithoutUserInput, UserSessionUncheckedUpdateWithoutUserInput>
  }

  export type UserSessionUpdateManyWithWhereWithoutUserInput = {
    where: UserSessionScalarWhereInput
    data: XOR<UserSessionUpdateManyMutationInput, UserSessionUncheckedUpdateManyWithoutUserInput>
  }

  export type UserSessionScalarWhereInput = {
    AND?: UserSessionScalarWhereInput | UserSessionScalarWhereInput[]
    OR?: UserSessionScalarWhereInput[]
    NOT?: UserSessionScalarWhereInput | UserSessionScalarWhereInput[]
    id?: StringFilter<"UserSession"> | string
    userId?: StringFilter<"UserSession"> | string
    refreshTokenHash?: StringFilter<"UserSession"> | string
    deviceFingerprint?: StringNullableFilter<"UserSession"> | string | null
    ipAddress?: StringNullableFilter<"UserSession"> | string | null
    userAgent?: StringNullableFilter<"UserSession"> | string | null
    locationCountry?: StringNullableFilter<"UserSession"> | string | null
    locationRegion?: StringNullableFilter<"UserSession"> | string | null
    locationCity?: StringNullableFilter<"UserSession"> | string | null
    isActive?: BoolFilter<"UserSession"> | boolean
    expiresAt?: DateTimeFilter<"UserSession"> | Date | string
    lastUsedAt?: DateTimeFilter<"UserSession"> | Date | string
    createdAt?: DateTimeFilter<"UserSession"> | Date | string
    updatedAt?: DateTimeFilter<"UserSession"> | Date | string
  }

  export type StoreUpsertWithWhereUniqueWithoutOwnerInput = {
    where: StoreWhereUniqueInput
    update: XOR<StoreUpdateWithoutOwnerInput, StoreUncheckedUpdateWithoutOwnerInput>
    create: XOR<StoreCreateWithoutOwnerInput, StoreUncheckedCreateWithoutOwnerInput>
  }

  export type StoreUpdateWithWhereUniqueWithoutOwnerInput = {
    where: StoreWhereUniqueInput
    data: XOR<StoreUpdateWithoutOwnerInput, StoreUncheckedUpdateWithoutOwnerInput>
  }

  export type StoreUpdateManyWithWhereWithoutOwnerInput = {
    where: StoreScalarWhereInput
    data: XOR<StoreUpdateManyMutationInput, StoreUncheckedUpdateManyWithoutOwnerInput>
  }

  export type StoreScalarWhereInput = {
    AND?: StoreScalarWhereInput | StoreScalarWhereInput[]
    OR?: StoreScalarWhereInput[]
    NOT?: StoreScalarWhereInput | StoreScalarWhereInput[]
    id?: StringFilter<"Store"> | string
    ownerId?: StringFilter<"Store"> | string
    name?: StringFilter<"Store"> | string
    slug?: StringFilter<"Store"> | string
    description?: StringNullableFilter<"Store"> | string | null
    email?: StringNullableFilter<"Store"> | string | null
    phone?: StringNullableFilter<"Store"> | string | null
    website?: StringNullableFilter<"Store"> | string | null
    addressLine1?: StringFilter<"Store"> | string
    addressLine2?: StringNullableFilter<"Store"> | string | null
    city?: StringFilter<"Store"> | string
    state?: StringFilter<"Store"> | string
    postalCode?: StringFilter<"Store"> | string
    latitude?: DecimalFilter<"Store"> | Decimal | DecimalJsLike | number | string
    longitude?: DecimalFilter<"Store"> | Decimal | DecimalJsLike | number | string
    businessType?: EnumBusinessTypeFilter<"Store"> | $Enums.BusinessType
    licenseNumber?: StringFilter<"Store"> | string
    licenseType?: StringFilter<"Store"> | string
    licenseState?: StringFilter<"Store"> | string
    licenseExpiresAt?: DateTimeFilter<"Store"> | Date | string
    features?: JsonNullableFilter<"Store">
    paymentMethods?: JsonNullableFilter<"Store">
    deliveryRadius?: IntNullableFilter<"Store"> | number | null
    minimumOrder?: DecimalNullableFilter<"Store"> | Decimal | DecimalJsLike | number | string | null
    deliveryFee?: DecimalNullableFilter<"Store"> | Decimal | DecimalJsLike | number | string | null
    operatingHours?: JsonNullableFilter<"Store">
    status?: EnumStoreStatusFilter<"Store"> | $Enums.StoreStatus
    verified?: BoolFilter<"Store"> | boolean
    verifiedAt?: DateTimeNullableFilter<"Store"> | Date | string | null
    verifiedBy?: StringNullableFilter<"Store"> | string | null
    logoUrl?: StringNullableFilter<"Store"> | string | null
    coverImageUrl?: StringNullableFilter<"Store"> | string | null
    galleryImages?: JsonNullableFilter<"Store">
    metaTitle?: StringNullableFilter<"Store"> | string | null
    metaDescription?: StringNullableFilter<"Store"> | string | null
    socialMedia?: JsonNullableFilter<"Store">
    metrcLicenseId?: StringNullableFilter<"Store"> | string | null
    metrcLastSync?: DateTimeNullableFilter<"Store"> | Date | string | null
    complianceStatus?: EnumComplianceStatusFilter<"Store"> | $Enums.ComplianceStatus
    trackTraceSystem?: EnumTrackTraceSystemNullableFilter<"Store"> | $Enums.TrackTraceSystem | null
    totalProducts?: IntFilter<"Store"> | number
    averageRating?: DecimalFilter<"Store"> | Decimal | DecimalJsLike | number | string
    totalReviews?: IntFilter<"Store"> | number
    totalOrders?: IntFilter<"Store"> | number
    createdAt?: DateTimeFilter<"Store"> | Date | string
    updatedAt?: DateTimeFilter<"Store"> | Date | string
    createdBy?: StringNullableFilter<"Store"> | string | null
    updatedBy?: StringNullableFilter<"Store"> | string | null
  }

  export type OrderUpsertWithWhereUniqueWithoutUserInput = {
    where: OrderWhereUniqueInput
    update: XOR<OrderUpdateWithoutUserInput, OrderUncheckedUpdateWithoutUserInput>
    create: XOR<OrderCreateWithoutUserInput, OrderUncheckedCreateWithoutUserInput>
  }

  export type OrderUpdateWithWhereUniqueWithoutUserInput = {
    where: OrderWhereUniqueInput
    data: XOR<OrderUpdateWithoutUserInput, OrderUncheckedUpdateWithoutUserInput>
  }

  export type OrderUpdateManyWithWhereWithoutUserInput = {
    where: OrderScalarWhereInput
    data: XOR<OrderUpdateManyMutationInput, OrderUncheckedUpdateManyWithoutUserInput>
  }

  export type OrderScalarWhereInput = {
    AND?: OrderScalarWhereInput | OrderScalarWhereInput[]
    OR?: OrderScalarWhereInput[]
    NOT?: OrderScalarWhereInput | OrderScalarWhereInput[]
    id?: StringFilter<"Order"> | string
    orderNumber?: StringFilter<"Order"> | string
    userId?: StringFilter<"Order"> | string
    storeId?: StringFilter<"Order"> | string
    orderType?: EnumOrderTypeFilter<"Order"> | $Enums.OrderType
    fulfillmentStatus?: EnumOrderStatusFilter<"Order"> | $Enums.OrderStatus
    deliveryAddress?: JsonNullableFilter<"Order">
    deliveryInstructions?: StringNullableFilter<"Order"> | string | null
    deliveryTimeRequested?: DateTimeNullableFilter<"Order"> | Date | string | null
    deliveryTimeActual?: DateTimeNullableFilter<"Order"> | Date | string | null
    deliveryPersonId?: StringNullableFilter<"Order"> | string | null
    subtotal?: DecimalFilter<"Order"> | Decimal | DecimalJsLike | number | string
    taxAmount?: DecimalFilter<"Order"> | Decimal | DecimalJsLike | number | string
    deliveryFee?: DecimalFilter<"Order"> | Decimal | DecimalJsLike | number | string
    serviceFee?: DecimalFilter<"Order"> | Decimal | DecimalJsLike | number | string
    discountAmount?: DecimalFilter<"Order"> | Decimal | DecimalJsLike | number | string
    tipAmount?: DecimalFilter<"Order"> | Decimal | DecimalJsLike | number | string
    totalAmount?: DecimalFilter<"Order"> | Decimal | DecimalJsLike | number | string
    paymentStatus?: EnumPaymentStatusFilter<"Order"> | $Enums.PaymentStatus
    paymentMethod?: EnumPaymentMethodFilter<"Order"> | $Enums.PaymentMethod
    paymentProvider?: StringNullableFilter<"Order"> | string | null
    paymentIntentId?: StringNullableFilter<"Order"> | string | null
    ageVerifiedAtDelivery?: DateTimeNullableFilter<"Order"> | Date | string | null
    idCheckedBy?: StringNullableFilter<"Order"> | string | null
    customerNotes?: StringNullableFilter<"Order"> | string | null
    internalNotes?: StringNullableFilter<"Order"> | string | null
    metrcTransferManifest?: StringNullableFilter<"Order"> | string | null
    complianceCheckPassed?: BoolFilter<"Order"> | boolean
    complianceCheckedAt?: DateTimeNullableFilter<"Order"> | Date | string | null
    complianceCheckedBy?: StringNullableFilter<"Order"> | string | null
    cancelledAt?: DateTimeNullableFilter<"Order"> | Date | string | null
    cancelledBy?: StringNullableFilter<"Order"> | string | null
    cancellationReason?: StringNullableFilter<"Order"> | string | null
    refundAmount?: DecimalFilter<"Order"> | Decimal | DecimalJsLike | number | string
    createdAt?: DateTimeFilter<"Order"> | Date | string
    updatedAt?: DateTimeFilter<"Order"> | Date | string
  }

  export type ReviewUpsertWithWhereUniqueWithoutUserInput = {
    where: ReviewWhereUniqueInput
    update: XOR<ReviewUpdateWithoutUserInput, ReviewUncheckedUpdateWithoutUserInput>
    create: XOR<ReviewCreateWithoutUserInput, ReviewUncheckedCreateWithoutUserInput>
  }

  export type ReviewUpdateWithWhereUniqueWithoutUserInput = {
    where: ReviewWhereUniqueInput
    data: XOR<ReviewUpdateWithoutUserInput, ReviewUncheckedUpdateWithoutUserInput>
  }

  export type ReviewUpdateManyWithWhereWithoutUserInput = {
    where: ReviewScalarWhereInput
    data: XOR<ReviewUpdateManyMutationInput, ReviewUncheckedUpdateManyWithoutUserInput>
  }

  export type ReviewScalarWhereInput = {
    AND?: ReviewScalarWhereInput | ReviewScalarWhereInput[]
    OR?: ReviewScalarWhereInput[]
    NOT?: ReviewScalarWhereInput | ReviewScalarWhereInput[]
    id?: StringFilter<"Review"> | string
    userId?: StringFilter<"Review"> | string
    reviewableType?: EnumReviewableTypeFilter<"Review"> | $Enums.ReviewableType
    reviewableId?: StringFilter<"Review"> | string
    rating?: IntFilter<"Review"> | number
    title?: StringNullableFilter<"Review"> | string | null
    content?: StringFilter<"Review"> | string
    qualityRating?: IntNullableFilter<"Review"> | number | null
    valueRating?: IntNullableFilter<"Review"> | number | null
    serviceRating?: IntNullableFilter<"Review"> | number | null
    effectsRating?: IntNullableFilter<"Review"> | number | null
    effects?: JsonNullableFilter<"Review">
    medicalBenefits?: JsonNullableFilter<"Review">
    sideEffects?: JsonNullableFilter<"Review">
    images?: JsonNullableFilter<"Review">
    status?: EnumReviewStatusFilter<"Review"> | $Enums.ReviewStatus
    moderatedAt?: DateTimeNullableFilter<"Review"> | Date | string | null
    moderatedBy?: StringNullableFilter<"Review"> | string | null
    moderationReason?: StringNullableFilter<"Review"> | string | null
    verifiedPurchase?: BoolFilter<"Review"> | boolean
    orderId?: StringNullableFilter<"Review"> | string | null
    helpfulCount?: IntFilter<"Review"> | number
    totalVotes?: IntFilter<"Review"> | number
    createdAt?: DateTimeFilter<"Review"> | Date | string
    updatedAt?: DateTimeFilter<"Review"> | Date | string
  }

  export type ProfessionalUpsertWithoutUserInput = {
    update: XOR<ProfessionalUpdateWithoutUserInput, ProfessionalUncheckedUpdateWithoutUserInput>
    create: XOR<ProfessionalCreateWithoutUserInput, ProfessionalUncheckedCreateWithoutUserInput>
    where?: ProfessionalWhereInput
  }

  export type ProfessionalUpdateToOneWithWhereWithoutUserInput = {
    where?: ProfessionalWhereInput
    data: XOR<ProfessionalUpdateWithoutUserInput, ProfessionalUncheckedUpdateWithoutUserInput>
  }

  export type ProfessionalUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    professionalType?: EnumProfessionalTypeFieldUpdateOperationsInput | $Enums.ProfessionalType
    licenseNumber?: StringFieldUpdateOperationsInput | string
    licenseState?: StringFieldUpdateOperationsInput | string
    licenseExpiresAt?: DateTimeFieldUpdateOperationsInput | Date | string
    specializations?: NullableJsonNullValueInput | InputJsonValue
    certifications?: NullableJsonNullValueInput | InputJsonValue
    practiceName?: NullableStringFieldUpdateOperationsInput | string | null
    practiceAddress?: NullableJsonNullValueInput | InputJsonValue
    practicePhone?: NullableStringFieldUpdateOperationsInput | string | null
    practiceWebsite?: NullableStringFieldUpdateOperationsInput | string | null
    cannabisExperienceYears?: NullableIntFieldUpdateOperationsInput | number | null
    cannabisCertifications?: NullableJsonNullValueInput | InputJsonValue
    preferredProducts?: NullableJsonNullValueInput | InputJsonValue
    treatmentApproaches?: NullableJsonNullValueInput | InputJsonValue
    consultationTypes?: NullableJsonNullValueInput | InputJsonValue
    hourlyRate?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    acceptsInsurance?: BoolFieldUpdateOperationsInput | boolean
    insuranceProviders?: NullableJsonNullValueInput | InputJsonValue
    verified?: BoolFieldUpdateOperationsInput | boolean
    verifiedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    verifiedBy?: NullableStringFieldUpdateOperationsInput | string | null
    verificationDocuments?: NullableJsonNullValueInput | InputJsonValue
    consultationCount?: IntFieldUpdateOperationsInput | number
    averageRating?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    reviewCount?: IntFieldUpdateOperationsInput | number
    status?: StringFieldUpdateOperationsInput | string
    acceptingNewPatients?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    consultations?: ConsultationUpdateManyWithoutProfessionalNestedInput
  }

  export type ProfessionalUncheckedUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    professionalType?: EnumProfessionalTypeFieldUpdateOperationsInput | $Enums.ProfessionalType
    licenseNumber?: StringFieldUpdateOperationsInput | string
    licenseState?: StringFieldUpdateOperationsInput | string
    licenseExpiresAt?: DateTimeFieldUpdateOperationsInput | Date | string
    specializations?: NullableJsonNullValueInput | InputJsonValue
    certifications?: NullableJsonNullValueInput | InputJsonValue
    practiceName?: NullableStringFieldUpdateOperationsInput | string | null
    practiceAddress?: NullableJsonNullValueInput | InputJsonValue
    practicePhone?: NullableStringFieldUpdateOperationsInput | string | null
    practiceWebsite?: NullableStringFieldUpdateOperationsInput | string | null
    cannabisExperienceYears?: NullableIntFieldUpdateOperationsInput | number | null
    cannabisCertifications?: NullableJsonNullValueInput | InputJsonValue
    preferredProducts?: NullableJsonNullValueInput | InputJsonValue
    treatmentApproaches?: NullableJsonNullValueInput | InputJsonValue
    consultationTypes?: NullableJsonNullValueInput | InputJsonValue
    hourlyRate?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    acceptsInsurance?: BoolFieldUpdateOperationsInput | boolean
    insuranceProviders?: NullableJsonNullValueInput | InputJsonValue
    verified?: BoolFieldUpdateOperationsInput | boolean
    verifiedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    verifiedBy?: NullableStringFieldUpdateOperationsInput | string | null
    verificationDocuments?: NullableJsonNullValueInput | InputJsonValue
    consultationCount?: IntFieldUpdateOperationsInput | number
    averageRating?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    reviewCount?: IntFieldUpdateOperationsInput | number
    status?: StringFieldUpdateOperationsInput | string
    acceptingNewPatients?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    consultations?: ConsultationUncheckedUpdateManyWithoutProfessionalNestedInput
  }

  export type StoreStaffUpsertWithWhereUniqueWithoutUserInput = {
    where: StoreStaffWhereUniqueInput
    update: XOR<StoreStaffUpdateWithoutUserInput, StoreStaffUncheckedUpdateWithoutUserInput>
    create: XOR<StoreStaffCreateWithoutUserInput, StoreStaffUncheckedCreateWithoutUserInput>
  }

  export type StoreStaffUpdateWithWhereUniqueWithoutUserInput = {
    where: StoreStaffWhereUniqueInput
    data: XOR<StoreStaffUpdateWithoutUserInput, StoreStaffUncheckedUpdateWithoutUserInput>
  }

  export type StoreStaffUpdateManyWithWhereWithoutUserInput = {
    where: StoreStaffScalarWhereInput
    data: XOR<StoreStaffUpdateManyMutationInput, StoreStaffUncheckedUpdateManyWithoutUserInput>
  }

  export type StoreStaffScalarWhereInput = {
    AND?: StoreStaffScalarWhereInput | StoreStaffScalarWhereInput[]
    OR?: StoreStaffScalarWhereInput[]
    NOT?: StoreStaffScalarWhereInput | StoreStaffScalarWhereInput[]
    id?: StringFilter<"StoreStaff"> | string
    storeId?: StringFilter<"StoreStaff"> | string
    userId?: StringFilter<"StoreStaff"> | string
    role?: StringFilter<"StoreStaff"> | string
    permissions?: JsonNullableFilter<"StoreStaff">
    employeeId?: StringNullableFilter<"StoreStaff"> | string | null
    startDate?: DateTimeFilter<"StoreStaff"> | Date | string
    endDate?: DateTimeNullableFilter<"StoreStaff"> | Date | string | null
    hourlyWage?: DecimalNullableFilter<"StoreStaff"> | Decimal | DecimalJsLike | number | string | null
    commissionRate?: DecimalNullableFilter<"StoreStaff"> | Decimal | DecimalJsLike | number | string | null
    status?: StringFilter<"StoreStaff"> | string
    canAccessPos?: BoolFilter<"StoreStaff"> | boolean
    canManageInventory?: BoolFilter<"StoreStaff"> | boolean
    canProcessOrders?: BoolFilter<"StoreStaff"> | boolean
    complianceTrainingCompleted?: BoolFilter<"StoreStaff"> | boolean
    trainingCompletedAt?: DateTimeNullableFilter<"StoreStaff"> | Date | string | null
    trainingExpiresAt?: DateTimeNullableFilter<"StoreStaff"> | Date | string | null
    createdAt?: DateTimeFilter<"StoreStaff"> | Date | string
    updatedAt?: DateTimeFilter<"StoreStaff"> | Date | string
    createdBy?: StringNullableFilter<"StoreStaff"> | string | null
  }

  export type ConsultationUpsertWithWhereUniqueWithoutPatientInput = {
    where: ConsultationWhereUniqueInput
    update: XOR<ConsultationUpdateWithoutPatientInput, ConsultationUncheckedUpdateWithoutPatientInput>
    create: XOR<ConsultationCreateWithoutPatientInput, ConsultationUncheckedCreateWithoutPatientInput>
  }

  export type ConsultationUpdateWithWhereUniqueWithoutPatientInput = {
    where: ConsultationWhereUniqueInput
    data: XOR<ConsultationUpdateWithoutPatientInput, ConsultationUncheckedUpdateWithoutPatientInput>
  }

  export type ConsultationUpdateManyWithWhereWithoutPatientInput = {
    where: ConsultationScalarWhereInput
    data: XOR<ConsultationUpdateManyMutationInput, ConsultationUncheckedUpdateManyWithoutPatientInput>
  }

  export type ConsultationScalarWhereInput = {
    AND?: ConsultationScalarWhereInput | ConsultationScalarWhereInput[]
    OR?: ConsultationScalarWhereInput[]
    NOT?: ConsultationScalarWhereInput | ConsultationScalarWhereInput[]
    id?: StringFilter<"Consultation"> | string
    patientId?: StringFilter<"Consultation"> | string
    professionalId?: StringFilter<"Consultation"> | string
    consultationType?: EnumConsultationTypeFilter<"Consultation"> | $Enums.ConsultationType
    sessionType?: EnumSessionTypeFilter<"Consultation"> | $Enums.SessionType
    scheduledAt?: DateTimeFilter<"Consultation"> | Date | string
    durationMinutes?: IntFilter<"Consultation"> | number
    timezone?: StringFilter<"Consultation"> | string
    status?: StringFilter<"Consultation"> | string
    meetingUrl?: StringNullableFilter<"Consultation"> | string | null
    meetingId?: StringNullableFilter<"Consultation"> | string | null
    meetingPassword?: StringNullableFilter<"Consultation"> | string | null
    chiefComplaint?: StringNullableFilter<"Consultation"> | string | null
    symptoms?: JsonNullableFilter<"Consultation">
    currentMedications?: JsonNullableFilter<"Consultation">
    cannabisExperience?: StringNullableFilter<"Consultation"> | string | null
    previousCannabisUse?: StringNullableFilter<"Consultation"> | string | null
    assessment?: StringNullableFilter<"Consultation"> | string | null
    recommendations?: StringNullableFilter<"Consultation"> | string | null
    prescribedProducts?: JsonNullableFilter<"Consultation">
    followUpNeeded?: BoolFilter<"Consultation"> | boolean
    followUpDate?: DateTimeNullableFilter<"Consultation"> | Date | string | null
    consultationFee?: DecimalFilter<"Consultation"> | Decimal | DecimalJsLike | number | string
    paymentStatus?: StringFilter<"Consultation"> | string
    paymentId?: StringNullableFilter<"Consultation"> | string | null
    medicalConsentSigned?: BoolFilter<"Consultation"> | boolean
    privacyConsentSigned?: BoolFilter<"Consultation"> | boolean
    consultationAgreementSigned?: BoolFilter<"Consultation"> | boolean
    createdAt?: DateTimeFilter<"Consultation"> | Date | string
    updatedAt?: DateTimeFilter<"Consultation"> | Date | string
  }

  export type UserUpsertWithoutAgeVerificationsInput = {
    update: XOR<UserUpdateWithoutAgeVerificationsInput, UserUncheckedUpdateWithoutAgeVerificationsInput>
    create: XOR<UserCreateWithoutAgeVerificationsInput, UserUncheckedCreateWithoutAgeVerificationsInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutAgeVerificationsInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutAgeVerificationsInput, UserUncheckedUpdateWithoutAgeVerificationsInput>
  }

  export type UserUpdateWithoutAgeVerificationsInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    emailVerified?: BoolFieldUpdateOperationsInput | boolean
    passwordHash?: StringFieldUpdateOperationsInput | string
    role?: EnumUserRoleFieldUpdateOperationsInput | $Enums.UserRole
    firstName?: NullableStringFieldUpdateOperationsInput | string | null
    lastName?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    dateOfBirth?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: EnumUserStatusFieldUpdateOperationsInput | $Enums.UserStatus
    lastLoginAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    failedLoginAttempts?: IntFieldUpdateOperationsInput | number
    lockedUntil?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    ageVerified?: BoolFieldUpdateOperationsInput | boolean
    ageVerificationMethod?: NullableEnumAgeVerificationMethodFieldUpdateOperationsInput | $Enums.AgeVerificationMethod | null
    ageVerifiedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    termsAcceptedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    privacyAcceptedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    marketingConsent?: BoolFieldUpdateOperationsInput | boolean
    gdprConsent?: BoolFieldUpdateOperationsInput | boolean
    ccpaOptOut?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    addresses?: UserAddressUpdateManyWithoutUserNestedInput
    sessions?: UserSessionUpdateManyWithoutUserNestedInput
    stores?: StoreUpdateManyWithoutOwnerNestedInput
    orders?: OrderUpdateManyWithoutUserNestedInput
    reviews?: ReviewUpdateManyWithoutUserNestedInput
    professional?: ProfessionalUpdateOneWithoutUserNestedInput
    storeStaff?: StoreStaffUpdateManyWithoutUserNestedInput
    consultationsAsPatient?: ConsultationUpdateManyWithoutPatientNestedInput
    ageVerifier?: UserUpdateOneWithoutAgeVerificationsNestedInput
    blogPosts?: BlogPostUpdateManyWithoutAuthorNestedInput
    factCheckedPosts?: BlogPostUpdateManyWithoutFactCheckerNestedInput
  }

  export type UserUncheckedUpdateWithoutAgeVerificationsInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    emailVerified?: BoolFieldUpdateOperationsInput | boolean
    passwordHash?: StringFieldUpdateOperationsInput | string
    role?: EnumUserRoleFieldUpdateOperationsInput | $Enums.UserRole
    firstName?: NullableStringFieldUpdateOperationsInput | string | null
    lastName?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    dateOfBirth?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: EnumUserStatusFieldUpdateOperationsInput | $Enums.UserStatus
    lastLoginAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    failedLoginAttempts?: IntFieldUpdateOperationsInput | number
    lockedUntil?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    ageVerified?: BoolFieldUpdateOperationsInput | boolean
    ageVerificationMethod?: NullableEnumAgeVerificationMethodFieldUpdateOperationsInput | $Enums.AgeVerificationMethod | null
    ageVerifiedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    ageVerifiedBy?: NullableStringFieldUpdateOperationsInput | string | null
    termsAcceptedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    privacyAcceptedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    marketingConsent?: BoolFieldUpdateOperationsInput | boolean
    gdprConsent?: BoolFieldUpdateOperationsInput | boolean
    ccpaOptOut?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    addresses?: UserAddressUncheckedUpdateManyWithoutUserNestedInput
    sessions?: UserSessionUncheckedUpdateManyWithoutUserNestedInput
    stores?: StoreUncheckedUpdateManyWithoutOwnerNestedInput
    orders?: OrderUncheckedUpdateManyWithoutUserNestedInput
    reviews?: ReviewUncheckedUpdateManyWithoutUserNestedInput
    professional?: ProfessionalUncheckedUpdateOneWithoutUserNestedInput
    storeStaff?: StoreStaffUncheckedUpdateManyWithoutUserNestedInput
    consultationsAsPatient?: ConsultationUncheckedUpdateManyWithoutPatientNestedInput
    blogPosts?: BlogPostUncheckedUpdateManyWithoutAuthorNestedInput
    factCheckedPosts?: BlogPostUncheckedUpdateManyWithoutFactCheckerNestedInput
  }

  export type UserUpsertWithWhereUniqueWithoutAgeVerifierInput = {
    where: UserWhereUniqueInput
    update: XOR<UserUpdateWithoutAgeVerifierInput, UserUncheckedUpdateWithoutAgeVerifierInput>
    create: XOR<UserCreateWithoutAgeVerifierInput, UserUncheckedCreateWithoutAgeVerifierInput>
  }

  export type UserUpdateWithWhereUniqueWithoutAgeVerifierInput = {
    where: UserWhereUniqueInput
    data: XOR<UserUpdateWithoutAgeVerifierInput, UserUncheckedUpdateWithoutAgeVerifierInput>
  }

  export type UserUpdateManyWithWhereWithoutAgeVerifierInput = {
    where: UserScalarWhereInput
    data: XOR<UserUpdateManyMutationInput, UserUncheckedUpdateManyWithoutAgeVerifierInput>
  }

  export type UserScalarWhereInput = {
    AND?: UserScalarWhereInput | UserScalarWhereInput[]
    OR?: UserScalarWhereInput[]
    NOT?: UserScalarWhereInput | UserScalarWhereInput[]
    id?: StringFilter<"User"> | string
    email?: StringFilter<"User"> | string
    emailVerified?: BoolFilter<"User"> | boolean
    passwordHash?: StringFilter<"User"> | string
    role?: EnumUserRoleFilter<"User"> | $Enums.UserRole
    firstName?: StringNullableFilter<"User"> | string | null
    lastName?: StringNullableFilter<"User"> | string | null
    phone?: StringNullableFilter<"User"> | string | null
    dateOfBirth?: DateTimeNullableFilter<"User"> | Date | string | null
    status?: EnumUserStatusFilter<"User"> | $Enums.UserStatus
    lastLoginAt?: DateTimeNullableFilter<"User"> | Date | string | null
    failedLoginAttempts?: IntFilter<"User"> | number
    lockedUntil?: DateTimeNullableFilter<"User"> | Date | string | null
    ageVerified?: BoolFilter<"User"> | boolean
    ageVerificationMethod?: EnumAgeVerificationMethodNullableFilter<"User"> | $Enums.AgeVerificationMethod | null
    ageVerifiedAt?: DateTimeNullableFilter<"User"> | Date | string | null
    ageVerifiedBy?: StringNullableFilter<"User"> | string | null
    termsAcceptedAt?: DateTimeNullableFilter<"User"> | Date | string | null
    privacyAcceptedAt?: DateTimeNullableFilter<"User"> | Date | string | null
    marketingConsent?: BoolFilter<"User"> | boolean
    gdprConsent?: BoolFilter<"User"> | boolean
    ccpaOptOut?: BoolFilter<"User"> | boolean
    createdAt?: DateTimeFilter<"User"> | Date | string
    updatedAt?: DateTimeFilter<"User"> | Date | string
    createdBy?: StringNullableFilter<"User"> | string | null
    updatedBy?: StringNullableFilter<"User"> | string | null
  }

  export type BlogPostUpsertWithWhereUniqueWithoutAuthorInput = {
    where: BlogPostWhereUniqueInput
    update: XOR<BlogPostUpdateWithoutAuthorInput, BlogPostUncheckedUpdateWithoutAuthorInput>
    create: XOR<BlogPostCreateWithoutAuthorInput, BlogPostUncheckedCreateWithoutAuthorInput>
  }

  export type BlogPostUpdateWithWhereUniqueWithoutAuthorInput = {
    where: BlogPostWhereUniqueInput
    data: XOR<BlogPostUpdateWithoutAuthorInput, BlogPostUncheckedUpdateWithoutAuthorInput>
  }

  export type BlogPostUpdateManyWithWhereWithoutAuthorInput = {
    where: BlogPostScalarWhereInput
    data: XOR<BlogPostUpdateManyMutationInput, BlogPostUncheckedUpdateManyWithoutAuthorInput>
  }

  export type BlogPostScalarWhereInput = {
    AND?: BlogPostScalarWhereInput | BlogPostScalarWhereInput[]
    OR?: BlogPostScalarWhereInput[]
    NOT?: BlogPostScalarWhereInput | BlogPostScalarWhereInput[]
    id?: StringFilter<"BlogPost"> | string
    authorId?: StringFilter<"BlogPost"> | string
    title?: StringFilter<"BlogPost"> | string
    slug?: StringFilter<"BlogPost"> | string
    excerpt?: StringNullableFilter<"BlogPost"> | string | null
    content?: StringFilter<"BlogPost"> | string
    featuredImageUrl?: StringNullableFilter<"BlogPost"> | string | null
    category?: EnumBlogCategoryFilter<"BlogPost"> | $Enums.BlogCategory
    tags?: JsonNullableFilter<"BlogPost">
    metaTitle?: StringNullableFilter<"BlogPost"> | string | null
    metaDescription?: StringNullableFilter<"BlogPost"> | string | null
    metaKeywords?: StringNullableFilter<"BlogPost"> | string | null
    status?: EnumBlogStatusFilter<"BlogPost"> | $Enums.BlogStatus
    publishedAt?: DateTimeNullableFilter<"BlogPost"> | Date | string | null
    scheduledFor?: DateTimeNullableFilter<"BlogPost"> | Date | string | null
    viewCount?: IntFilter<"BlogPost"> | number
    likeCount?: IntFilter<"BlogPost"> | number
    commentCount?: IntFilter<"BlogPost"> | number
    shareCount?: IntFilter<"BlogPost"> | number
    factChecked?: BoolFilter<"BlogPost"> | boolean
    factCheckedBy?: StringNullableFilter<"BlogPost"> | string | null
    factCheckedAt?: DateTimeNullableFilter<"BlogPost"> | Date | string | null
    medicalDisclaimer?: BoolFilter<"BlogPost"> | boolean
    createdAt?: DateTimeFilter<"BlogPost"> | Date | string
    updatedAt?: DateTimeFilter<"BlogPost"> | Date | string
  }

  export type BlogPostUpsertWithWhereUniqueWithoutFactCheckerInput = {
    where: BlogPostWhereUniqueInput
    update: XOR<BlogPostUpdateWithoutFactCheckerInput, BlogPostUncheckedUpdateWithoutFactCheckerInput>
    create: XOR<BlogPostCreateWithoutFactCheckerInput, BlogPostUncheckedCreateWithoutFactCheckerInput>
  }

  export type BlogPostUpdateWithWhereUniqueWithoutFactCheckerInput = {
    where: BlogPostWhereUniqueInput
    data: XOR<BlogPostUpdateWithoutFactCheckerInput, BlogPostUncheckedUpdateWithoutFactCheckerInput>
  }

  export type BlogPostUpdateManyWithWhereWithoutFactCheckerInput = {
    where: BlogPostScalarWhereInput
    data: XOR<BlogPostUpdateManyMutationInput, BlogPostUncheckedUpdateManyWithoutFactCheckerInput>
  }

  export type UserCreateWithoutAddressesInput = {
    id?: string
    email: string
    emailVerified?: boolean
    passwordHash: string
    role?: $Enums.UserRole
    firstName?: string | null
    lastName?: string | null
    phone?: string | null
    dateOfBirth?: Date | string | null
    status?: $Enums.UserStatus
    lastLoginAt?: Date | string | null
    failedLoginAttempts?: number
    lockedUntil?: Date | string | null
    ageVerified?: boolean
    ageVerificationMethod?: $Enums.AgeVerificationMethod | null
    ageVerifiedAt?: Date | string | null
    termsAcceptedAt?: Date | string | null
    privacyAcceptedAt?: Date | string | null
    marketingConsent?: boolean
    gdprConsent?: boolean
    ccpaOptOut?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    createdBy?: string | null
    updatedBy?: string | null
    sessions?: UserSessionCreateNestedManyWithoutUserInput
    stores?: StoreCreateNestedManyWithoutOwnerInput
    orders?: OrderCreateNestedManyWithoutUserInput
    reviews?: ReviewCreateNestedManyWithoutUserInput
    professional?: ProfessionalCreateNestedOneWithoutUserInput
    storeStaff?: StoreStaffCreateNestedManyWithoutUserInput
    consultationsAsPatient?: ConsultationCreateNestedManyWithoutPatientInput
    ageVerifier?: UserCreateNestedOneWithoutAgeVerificationsInput
    ageVerifications?: UserCreateNestedManyWithoutAgeVerifierInput
    blogPosts?: BlogPostCreateNestedManyWithoutAuthorInput
    factCheckedPosts?: BlogPostCreateNestedManyWithoutFactCheckerInput
  }

  export type UserUncheckedCreateWithoutAddressesInput = {
    id?: string
    email: string
    emailVerified?: boolean
    passwordHash: string
    role?: $Enums.UserRole
    firstName?: string | null
    lastName?: string | null
    phone?: string | null
    dateOfBirth?: Date | string | null
    status?: $Enums.UserStatus
    lastLoginAt?: Date | string | null
    failedLoginAttempts?: number
    lockedUntil?: Date | string | null
    ageVerified?: boolean
    ageVerificationMethod?: $Enums.AgeVerificationMethod | null
    ageVerifiedAt?: Date | string | null
    ageVerifiedBy?: string | null
    termsAcceptedAt?: Date | string | null
    privacyAcceptedAt?: Date | string | null
    marketingConsent?: boolean
    gdprConsent?: boolean
    ccpaOptOut?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    createdBy?: string | null
    updatedBy?: string | null
    sessions?: UserSessionUncheckedCreateNestedManyWithoutUserInput
    stores?: StoreUncheckedCreateNestedManyWithoutOwnerInput
    orders?: OrderUncheckedCreateNestedManyWithoutUserInput
    reviews?: ReviewUncheckedCreateNestedManyWithoutUserInput
    professional?: ProfessionalUncheckedCreateNestedOneWithoutUserInput
    storeStaff?: StoreStaffUncheckedCreateNestedManyWithoutUserInput
    consultationsAsPatient?: ConsultationUncheckedCreateNestedManyWithoutPatientInput
    ageVerifications?: UserUncheckedCreateNestedManyWithoutAgeVerifierInput
    blogPosts?: BlogPostUncheckedCreateNestedManyWithoutAuthorInput
    factCheckedPosts?: BlogPostUncheckedCreateNestedManyWithoutFactCheckerInput
  }

  export type UserCreateOrConnectWithoutAddressesInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutAddressesInput, UserUncheckedCreateWithoutAddressesInput>
  }

  export type UserUpsertWithoutAddressesInput = {
    update: XOR<UserUpdateWithoutAddressesInput, UserUncheckedUpdateWithoutAddressesInput>
    create: XOR<UserCreateWithoutAddressesInput, UserUncheckedCreateWithoutAddressesInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutAddressesInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutAddressesInput, UserUncheckedUpdateWithoutAddressesInput>
  }

  export type UserUpdateWithoutAddressesInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    emailVerified?: BoolFieldUpdateOperationsInput | boolean
    passwordHash?: StringFieldUpdateOperationsInput | string
    role?: EnumUserRoleFieldUpdateOperationsInput | $Enums.UserRole
    firstName?: NullableStringFieldUpdateOperationsInput | string | null
    lastName?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    dateOfBirth?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: EnumUserStatusFieldUpdateOperationsInput | $Enums.UserStatus
    lastLoginAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    failedLoginAttempts?: IntFieldUpdateOperationsInput | number
    lockedUntil?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    ageVerified?: BoolFieldUpdateOperationsInput | boolean
    ageVerificationMethod?: NullableEnumAgeVerificationMethodFieldUpdateOperationsInput | $Enums.AgeVerificationMethod | null
    ageVerifiedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    termsAcceptedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    privacyAcceptedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    marketingConsent?: BoolFieldUpdateOperationsInput | boolean
    gdprConsent?: BoolFieldUpdateOperationsInput | boolean
    ccpaOptOut?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    sessions?: UserSessionUpdateManyWithoutUserNestedInput
    stores?: StoreUpdateManyWithoutOwnerNestedInput
    orders?: OrderUpdateManyWithoutUserNestedInput
    reviews?: ReviewUpdateManyWithoutUserNestedInput
    professional?: ProfessionalUpdateOneWithoutUserNestedInput
    storeStaff?: StoreStaffUpdateManyWithoutUserNestedInput
    consultationsAsPatient?: ConsultationUpdateManyWithoutPatientNestedInput
    ageVerifier?: UserUpdateOneWithoutAgeVerificationsNestedInput
    ageVerifications?: UserUpdateManyWithoutAgeVerifierNestedInput
    blogPosts?: BlogPostUpdateManyWithoutAuthorNestedInput
    factCheckedPosts?: BlogPostUpdateManyWithoutFactCheckerNestedInput
  }

  export type UserUncheckedUpdateWithoutAddressesInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    emailVerified?: BoolFieldUpdateOperationsInput | boolean
    passwordHash?: StringFieldUpdateOperationsInput | string
    role?: EnumUserRoleFieldUpdateOperationsInput | $Enums.UserRole
    firstName?: NullableStringFieldUpdateOperationsInput | string | null
    lastName?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    dateOfBirth?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: EnumUserStatusFieldUpdateOperationsInput | $Enums.UserStatus
    lastLoginAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    failedLoginAttempts?: IntFieldUpdateOperationsInput | number
    lockedUntil?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    ageVerified?: BoolFieldUpdateOperationsInput | boolean
    ageVerificationMethod?: NullableEnumAgeVerificationMethodFieldUpdateOperationsInput | $Enums.AgeVerificationMethod | null
    ageVerifiedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    ageVerifiedBy?: NullableStringFieldUpdateOperationsInput | string | null
    termsAcceptedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    privacyAcceptedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    marketingConsent?: BoolFieldUpdateOperationsInput | boolean
    gdprConsent?: BoolFieldUpdateOperationsInput | boolean
    ccpaOptOut?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    sessions?: UserSessionUncheckedUpdateManyWithoutUserNestedInput
    stores?: StoreUncheckedUpdateManyWithoutOwnerNestedInput
    orders?: OrderUncheckedUpdateManyWithoutUserNestedInput
    reviews?: ReviewUncheckedUpdateManyWithoutUserNestedInput
    professional?: ProfessionalUncheckedUpdateOneWithoutUserNestedInput
    storeStaff?: StoreStaffUncheckedUpdateManyWithoutUserNestedInput
    consultationsAsPatient?: ConsultationUncheckedUpdateManyWithoutPatientNestedInput
    ageVerifications?: UserUncheckedUpdateManyWithoutAgeVerifierNestedInput
    blogPosts?: BlogPostUncheckedUpdateManyWithoutAuthorNestedInput
    factCheckedPosts?: BlogPostUncheckedUpdateManyWithoutFactCheckerNestedInput
  }

  export type UserCreateWithoutSessionsInput = {
    id?: string
    email: string
    emailVerified?: boolean
    passwordHash: string
    role?: $Enums.UserRole
    firstName?: string | null
    lastName?: string | null
    phone?: string | null
    dateOfBirth?: Date | string | null
    status?: $Enums.UserStatus
    lastLoginAt?: Date | string | null
    failedLoginAttempts?: number
    lockedUntil?: Date | string | null
    ageVerified?: boolean
    ageVerificationMethod?: $Enums.AgeVerificationMethod | null
    ageVerifiedAt?: Date | string | null
    termsAcceptedAt?: Date | string | null
    privacyAcceptedAt?: Date | string | null
    marketingConsent?: boolean
    gdprConsent?: boolean
    ccpaOptOut?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    createdBy?: string | null
    updatedBy?: string | null
    addresses?: UserAddressCreateNestedManyWithoutUserInput
    stores?: StoreCreateNestedManyWithoutOwnerInput
    orders?: OrderCreateNestedManyWithoutUserInput
    reviews?: ReviewCreateNestedManyWithoutUserInput
    professional?: ProfessionalCreateNestedOneWithoutUserInput
    storeStaff?: StoreStaffCreateNestedManyWithoutUserInput
    consultationsAsPatient?: ConsultationCreateNestedManyWithoutPatientInput
    ageVerifier?: UserCreateNestedOneWithoutAgeVerificationsInput
    ageVerifications?: UserCreateNestedManyWithoutAgeVerifierInput
    blogPosts?: BlogPostCreateNestedManyWithoutAuthorInput
    factCheckedPosts?: BlogPostCreateNestedManyWithoutFactCheckerInput
  }

  export type UserUncheckedCreateWithoutSessionsInput = {
    id?: string
    email: string
    emailVerified?: boolean
    passwordHash: string
    role?: $Enums.UserRole
    firstName?: string | null
    lastName?: string | null
    phone?: string | null
    dateOfBirth?: Date | string | null
    status?: $Enums.UserStatus
    lastLoginAt?: Date | string | null
    failedLoginAttempts?: number
    lockedUntil?: Date | string | null
    ageVerified?: boolean
    ageVerificationMethod?: $Enums.AgeVerificationMethod | null
    ageVerifiedAt?: Date | string | null
    ageVerifiedBy?: string | null
    termsAcceptedAt?: Date | string | null
    privacyAcceptedAt?: Date | string | null
    marketingConsent?: boolean
    gdprConsent?: boolean
    ccpaOptOut?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    createdBy?: string | null
    updatedBy?: string | null
    addresses?: UserAddressUncheckedCreateNestedManyWithoutUserInput
    stores?: StoreUncheckedCreateNestedManyWithoutOwnerInput
    orders?: OrderUncheckedCreateNestedManyWithoutUserInput
    reviews?: ReviewUncheckedCreateNestedManyWithoutUserInput
    professional?: ProfessionalUncheckedCreateNestedOneWithoutUserInput
    storeStaff?: StoreStaffUncheckedCreateNestedManyWithoutUserInput
    consultationsAsPatient?: ConsultationUncheckedCreateNestedManyWithoutPatientInput
    ageVerifications?: UserUncheckedCreateNestedManyWithoutAgeVerifierInput
    blogPosts?: BlogPostUncheckedCreateNestedManyWithoutAuthorInput
    factCheckedPosts?: BlogPostUncheckedCreateNestedManyWithoutFactCheckerInput
  }

  export type UserCreateOrConnectWithoutSessionsInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutSessionsInput, UserUncheckedCreateWithoutSessionsInput>
  }

  export type UserUpsertWithoutSessionsInput = {
    update: XOR<UserUpdateWithoutSessionsInput, UserUncheckedUpdateWithoutSessionsInput>
    create: XOR<UserCreateWithoutSessionsInput, UserUncheckedCreateWithoutSessionsInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutSessionsInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutSessionsInput, UserUncheckedUpdateWithoutSessionsInput>
  }

  export type UserUpdateWithoutSessionsInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    emailVerified?: BoolFieldUpdateOperationsInput | boolean
    passwordHash?: StringFieldUpdateOperationsInput | string
    role?: EnumUserRoleFieldUpdateOperationsInput | $Enums.UserRole
    firstName?: NullableStringFieldUpdateOperationsInput | string | null
    lastName?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    dateOfBirth?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: EnumUserStatusFieldUpdateOperationsInput | $Enums.UserStatus
    lastLoginAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    failedLoginAttempts?: IntFieldUpdateOperationsInput | number
    lockedUntil?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    ageVerified?: BoolFieldUpdateOperationsInput | boolean
    ageVerificationMethod?: NullableEnumAgeVerificationMethodFieldUpdateOperationsInput | $Enums.AgeVerificationMethod | null
    ageVerifiedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    termsAcceptedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    privacyAcceptedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    marketingConsent?: BoolFieldUpdateOperationsInput | boolean
    gdprConsent?: BoolFieldUpdateOperationsInput | boolean
    ccpaOptOut?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    addresses?: UserAddressUpdateManyWithoutUserNestedInput
    stores?: StoreUpdateManyWithoutOwnerNestedInput
    orders?: OrderUpdateManyWithoutUserNestedInput
    reviews?: ReviewUpdateManyWithoutUserNestedInput
    professional?: ProfessionalUpdateOneWithoutUserNestedInput
    storeStaff?: StoreStaffUpdateManyWithoutUserNestedInput
    consultationsAsPatient?: ConsultationUpdateManyWithoutPatientNestedInput
    ageVerifier?: UserUpdateOneWithoutAgeVerificationsNestedInput
    ageVerifications?: UserUpdateManyWithoutAgeVerifierNestedInput
    blogPosts?: BlogPostUpdateManyWithoutAuthorNestedInput
    factCheckedPosts?: BlogPostUpdateManyWithoutFactCheckerNestedInput
  }

  export type UserUncheckedUpdateWithoutSessionsInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    emailVerified?: BoolFieldUpdateOperationsInput | boolean
    passwordHash?: StringFieldUpdateOperationsInput | string
    role?: EnumUserRoleFieldUpdateOperationsInput | $Enums.UserRole
    firstName?: NullableStringFieldUpdateOperationsInput | string | null
    lastName?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    dateOfBirth?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: EnumUserStatusFieldUpdateOperationsInput | $Enums.UserStatus
    lastLoginAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    failedLoginAttempts?: IntFieldUpdateOperationsInput | number
    lockedUntil?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    ageVerified?: BoolFieldUpdateOperationsInput | boolean
    ageVerificationMethod?: NullableEnumAgeVerificationMethodFieldUpdateOperationsInput | $Enums.AgeVerificationMethod | null
    ageVerifiedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    ageVerifiedBy?: NullableStringFieldUpdateOperationsInput | string | null
    termsAcceptedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    privacyAcceptedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    marketingConsent?: BoolFieldUpdateOperationsInput | boolean
    gdprConsent?: BoolFieldUpdateOperationsInput | boolean
    ccpaOptOut?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    addresses?: UserAddressUncheckedUpdateManyWithoutUserNestedInput
    stores?: StoreUncheckedUpdateManyWithoutOwnerNestedInput
    orders?: OrderUncheckedUpdateManyWithoutUserNestedInput
    reviews?: ReviewUncheckedUpdateManyWithoutUserNestedInput
    professional?: ProfessionalUncheckedUpdateOneWithoutUserNestedInput
    storeStaff?: StoreStaffUncheckedUpdateManyWithoutUserNestedInput
    consultationsAsPatient?: ConsultationUncheckedUpdateManyWithoutPatientNestedInput
    ageVerifications?: UserUncheckedUpdateManyWithoutAgeVerifierNestedInput
    blogPosts?: BlogPostUncheckedUpdateManyWithoutAuthorNestedInput
    factCheckedPosts?: BlogPostUncheckedUpdateManyWithoutFactCheckerNestedInput
  }

  export type UserCreateWithoutStoresInput = {
    id?: string
    email: string
    emailVerified?: boolean
    passwordHash: string
    role?: $Enums.UserRole
    firstName?: string | null
    lastName?: string | null
    phone?: string | null
    dateOfBirth?: Date | string | null
    status?: $Enums.UserStatus
    lastLoginAt?: Date | string | null
    failedLoginAttempts?: number
    lockedUntil?: Date | string | null
    ageVerified?: boolean
    ageVerificationMethod?: $Enums.AgeVerificationMethod | null
    ageVerifiedAt?: Date | string | null
    termsAcceptedAt?: Date | string | null
    privacyAcceptedAt?: Date | string | null
    marketingConsent?: boolean
    gdprConsent?: boolean
    ccpaOptOut?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    createdBy?: string | null
    updatedBy?: string | null
    addresses?: UserAddressCreateNestedManyWithoutUserInput
    sessions?: UserSessionCreateNestedManyWithoutUserInput
    orders?: OrderCreateNestedManyWithoutUserInput
    reviews?: ReviewCreateNestedManyWithoutUserInput
    professional?: ProfessionalCreateNestedOneWithoutUserInput
    storeStaff?: StoreStaffCreateNestedManyWithoutUserInput
    consultationsAsPatient?: ConsultationCreateNestedManyWithoutPatientInput
    ageVerifier?: UserCreateNestedOneWithoutAgeVerificationsInput
    ageVerifications?: UserCreateNestedManyWithoutAgeVerifierInput
    blogPosts?: BlogPostCreateNestedManyWithoutAuthorInput
    factCheckedPosts?: BlogPostCreateNestedManyWithoutFactCheckerInput
  }

  export type UserUncheckedCreateWithoutStoresInput = {
    id?: string
    email: string
    emailVerified?: boolean
    passwordHash: string
    role?: $Enums.UserRole
    firstName?: string | null
    lastName?: string | null
    phone?: string | null
    dateOfBirth?: Date | string | null
    status?: $Enums.UserStatus
    lastLoginAt?: Date | string | null
    failedLoginAttempts?: number
    lockedUntil?: Date | string | null
    ageVerified?: boolean
    ageVerificationMethod?: $Enums.AgeVerificationMethod | null
    ageVerifiedAt?: Date | string | null
    ageVerifiedBy?: string | null
    termsAcceptedAt?: Date | string | null
    privacyAcceptedAt?: Date | string | null
    marketingConsent?: boolean
    gdprConsent?: boolean
    ccpaOptOut?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    createdBy?: string | null
    updatedBy?: string | null
    addresses?: UserAddressUncheckedCreateNestedManyWithoutUserInput
    sessions?: UserSessionUncheckedCreateNestedManyWithoutUserInput
    orders?: OrderUncheckedCreateNestedManyWithoutUserInput
    reviews?: ReviewUncheckedCreateNestedManyWithoutUserInput
    professional?: ProfessionalUncheckedCreateNestedOneWithoutUserInput
    storeStaff?: StoreStaffUncheckedCreateNestedManyWithoutUserInput
    consultationsAsPatient?: ConsultationUncheckedCreateNestedManyWithoutPatientInput
    ageVerifications?: UserUncheckedCreateNestedManyWithoutAgeVerifierInput
    blogPosts?: BlogPostUncheckedCreateNestedManyWithoutAuthorInput
    factCheckedPosts?: BlogPostUncheckedCreateNestedManyWithoutFactCheckerInput
  }

  export type UserCreateOrConnectWithoutStoresInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutStoresInput, UserUncheckedCreateWithoutStoresInput>
  }

  export type StoreStaffCreateWithoutStoreInput = {
    id?: string
    role: string
    permissions?: NullableJsonNullValueInput | InputJsonValue
    employeeId?: string | null
    startDate: Date | string
    endDate?: Date | string | null
    hourlyWage?: Decimal | DecimalJsLike | number | string | null
    commissionRate?: Decimal | DecimalJsLike | number | string | null
    status?: string
    canAccessPos?: boolean
    canManageInventory?: boolean
    canProcessOrders?: boolean
    complianceTrainingCompleted?: boolean
    trainingCompletedAt?: Date | string | null
    trainingExpiresAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    createdBy?: string | null
    user: UserCreateNestedOneWithoutStoreStaffInput
  }

  export type StoreStaffUncheckedCreateWithoutStoreInput = {
    id?: string
    userId: string
    role: string
    permissions?: NullableJsonNullValueInput | InputJsonValue
    employeeId?: string | null
    startDate: Date | string
    endDate?: Date | string | null
    hourlyWage?: Decimal | DecimalJsLike | number | string | null
    commissionRate?: Decimal | DecimalJsLike | number | string | null
    status?: string
    canAccessPos?: boolean
    canManageInventory?: boolean
    canProcessOrders?: boolean
    complianceTrainingCompleted?: boolean
    trainingCompletedAt?: Date | string | null
    trainingExpiresAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    createdBy?: string | null
  }

  export type StoreStaffCreateOrConnectWithoutStoreInput = {
    where: StoreStaffWhereUniqueInput
    create: XOR<StoreStaffCreateWithoutStoreInput, StoreStaffUncheckedCreateWithoutStoreInput>
  }

  export type StoreStaffCreateManyStoreInputEnvelope = {
    data: StoreStaffCreateManyStoreInput | StoreStaffCreateManyStoreInput[]
    skipDuplicates?: boolean
  }

  export type ProductCreateWithoutStoreInput = {
    id?: string
    name: string
    slug: string
    description?: string | null
    shortDescription?: string | null
    strainName?: string | null
    strainType?: $Enums.StrainType | null
    brand?: string | null
    manufacturer?: string | null
    thcPercentage?: Decimal | DecimalJsLike | number | string | null
    cbdPercentage?: Decimal | DecimalJsLike | number | string | null
    thcaPercentage?: Decimal | DecimalJsLike | number | string | null
    cbdaPercentage?: Decimal | DecimalJsLike | number | string | null
    totalCannabinoids?: Decimal | DecimalJsLike | number | string | null
    basePrice: Decimal | DecimalJsLike | number | string
    salePrice?: Decimal | DecimalJsLike | number | string | null
    costPrice?: Decimal | DecimalJsLike | number | string | null
    weightGrams?: Decimal | DecimalJsLike | number | string | null
    sku: string
    barcode?: string | null
    stockQuantity?: number
    reservedQuantity?: number
    lowStockThreshold?: number
    metrcId?: string | null
    batchNumber?: string | null
    harvestDate?: Date | string | null
    packageDate?: Date | string | null
    expirationDate?: Date | string | null
    labTested?: boolean
    labTestResults?: NullableJsonNullValueInput | InputJsonValue
    testedDate?: Date | string | null
    testingLab?: string | null
    featuredImageUrl?: string | null
    galleryImages?: NullableJsonNullValueInput | InputJsonValue
    status?: $Enums.ProductStatus
    isFeatured?: boolean
    isMedicalOnly?: boolean
    ageRestriction?: number
    metaTitle?: string | null
    metaDescription?: string | null
    tags?: NullableJsonNullValueInput | InputJsonValue
    searchKeywords?: string | null
    viewCount?: number
    averageRating?: Decimal | DecimalJsLike | number | string
    reviewCount?: number
    salesCount?: number
    createdAt?: Date | string
    updatedAt?: Date | string
    createdBy?: string | null
    updatedBy?: string | null
    category: ProductCategoryCreateNestedOneWithoutProductsInput
    reviews?: ReviewCreateNestedManyWithoutProductInput
    orderItems?: OrderItemCreateNestedManyWithoutProductInput
  }

  export type ProductUncheckedCreateWithoutStoreInput = {
    id?: string
    categoryId: string
    name: string
    slug: string
    description?: string | null
    shortDescription?: string | null
    strainName?: string | null
    strainType?: $Enums.StrainType | null
    brand?: string | null
    manufacturer?: string | null
    thcPercentage?: Decimal | DecimalJsLike | number | string | null
    cbdPercentage?: Decimal | DecimalJsLike | number | string | null
    thcaPercentage?: Decimal | DecimalJsLike | number | string | null
    cbdaPercentage?: Decimal | DecimalJsLike | number | string | null
    totalCannabinoids?: Decimal | DecimalJsLike | number | string | null
    basePrice: Decimal | DecimalJsLike | number | string
    salePrice?: Decimal | DecimalJsLike | number | string | null
    costPrice?: Decimal | DecimalJsLike | number | string | null
    weightGrams?: Decimal | DecimalJsLike | number | string | null
    sku: string
    barcode?: string | null
    stockQuantity?: number
    reservedQuantity?: number
    lowStockThreshold?: number
    metrcId?: string | null
    batchNumber?: string | null
    harvestDate?: Date | string | null
    packageDate?: Date | string | null
    expirationDate?: Date | string | null
    labTested?: boolean
    labTestResults?: NullableJsonNullValueInput | InputJsonValue
    testedDate?: Date | string | null
    testingLab?: string | null
    featuredImageUrl?: string | null
    galleryImages?: NullableJsonNullValueInput | InputJsonValue
    status?: $Enums.ProductStatus
    isFeatured?: boolean
    isMedicalOnly?: boolean
    ageRestriction?: number
    metaTitle?: string | null
    metaDescription?: string | null
    tags?: NullableJsonNullValueInput | InputJsonValue
    searchKeywords?: string | null
    viewCount?: number
    averageRating?: Decimal | DecimalJsLike | number | string
    reviewCount?: number
    salesCount?: number
    createdAt?: Date | string
    updatedAt?: Date | string
    createdBy?: string | null
    updatedBy?: string | null
    reviews?: ReviewUncheckedCreateNestedManyWithoutProductInput
    orderItems?: OrderItemUncheckedCreateNestedManyWithoutProductInput
  }

  export type ProductCreateOrConnectWithoutStoreInput = {
    where: ProductWhereUniqueInput
    create: XOR<ProductCreateWithoutStoreInput, ProductUncheckedCreateWithoutStoreInput>
  }

  export type ProductCreateManyStoreInputEnvelope = {
    data: ProductCreateManyStoreInput | ProductCreateManyStoreInput[]
    skipDuplicates?: boolean
  }

  export type OrderCreateWithoutStoreInput = {
    id?: string
    orderNumber: string
    orderType: $Enums.OrderType
    fulfillmentStatus?: $Enums.OrderStatus
    deliveryAddress?: NullableJsonNullValueInput | InputJsonValue
    deliveryInstructions?: string | null
    deliveryTimeRequested?: Date | string | null
    deliveryTimeActual?: Date | string | null
    deliveryPersonId?: string | null
    subtotal: Decimal | DecimalJsLike | number | string
    taxAmount?: Decimal | DecimalJsLike | number | string
    deliveryFee?: Decimal | DecimalJsLike | number | string
    serviceFee?: Decimal | DecimalJsLike | number | string
    discountAmount?: Decimal | DecimalJsLike | number | string
    tipAmount?: Decimal | DecimalJsLike | number | string
    totalAmount: Decimal | DecimalJsLike | number | string
    paymentStatus?: $Enums.PaymentStatus
    paymentMethod: $Enums.PaymentMethod
    paymentProvider?: string | null
    paymentIntentId?: string | null
    ageVerifiedAtDelivery?: Date | string | null
    idCheckedBy?: string | null
    customerNotes?: string | null
    internalNotes?: string | null
    metrcTransferManifest?: string | null
    complianceCheckPassed?: boolean
    complianceCheckedAt?: Date | string | null
    complianceCheckedBy?: string | null
    cancelledAt?: Date | string | null
    cancelledBy?: string | null
    cancellationReason?: string | null
    refundAmount?: Decimal | DecimalJsLike | number | string
    createdAt?: Date | string
    updatedAt?: Date | string
    user: UserCreateNestedOneWithoutOrdersInput
    items?: OrderItemCreateNestedManyWithoutOrderInput
    reviews?: ReviewCreateNestedManyWithoutOrderInput
  }

  export type OrderUncheckedCreateWithoutStoreInput = {
    id?: string
    orderNumber: string
    userId: string
    orderType: $Enums.OrderType
    fulfillmentStatus?: $Enums.OrderStatus
    deliveryAddress?: NullableJsonNullValueInput | InputJsonValue
    deliveryInstructions?: string | null
    deliveryTimeRequested?: Date | string | null
    deliveryTimeActual?: Date | string | null
    deliveryPersonId?: string | null
    subtotal: Decimal | DecimalJsLike | number | string
    taxAmount?: Decimal | DecimalJsLike | number | string
    deliveryFee?: Decimal | DecimalJsLike | number | string
    serviceFee?: Decimal | DecimalJsLike | number | string
    discountAmount?: Decimal | DecimalJsLike | number | string
    tipAmount?: Decimal | DecimalJsLike | number | string
    totalAmount: Decimal | DecimalJsLike | number | string
    paymentStatus?: $Enums.PaymentStatus
    paymentMethod: $Enums.PaymentMethod
    paymentProvider?: string | null
    paymentIntentId?: string | null
    ageVerifiedAtDelivery?: Date | string | null
    idCheckedBy?: string | null
    customerNotes?: string | null
    internalNotes?: string | null
    metrcTransferManifest?: string | null
    complianceCheckPassed?: boolean
    complianceCheckedAt?: Date | string | null
    complianceCheckedBy?: string | null
    cancelledAt?: Date | string | null
    cancelledBy?: string | null
    cancellationReason?: string | null
    refundAmount?: Decimal | DecimalJsLike | number | string
    createdAt?: Date | string
    updatedAt?: Date | string
    items?: OrderItemUncheckedCreateNestedManyWithoutOrderInput
    reviews?: ReviewUncheckedCreateNestedManyWithoutOrderInput
  }

  export type OrderCreateOrConnectWithoutStoreInput = {
    where: OrderWhereUniqueInput
    create: XOR<OrderCreateWithoutStoreInput, OrderUncheckedCreateWithoutStoreInput>
  }

  export type OrderCreateManyStoreInputEnvelope = {
    data: OrderCreateManyStoreInput | OrderCreateManyStoreInput[]
    skipDuplicates?: boolean
  }

  export type ReviewCreateWithoutStoreInput = {
    id?: string
    reviewableType: $Enums.ReviewableType
    rating: number
    title?: string | null
    content: string
    qualityRating?: number | null
    valueRating?: number | null
    serviceRating?: number | null
    effectsRating?: number | null
    effects?: NullableJsonNullValueInput | InputJsonValue
    medicalBenefits?: NullableJsonNullValueInput | InputJsonValue
    sideEffects?: NullableJsonNullValueInput | InputJsonValue
    images?: NullableJsonNullValueInput | InputJsonValue
    status?: $Enums.ReviewStatus
    moderatedAt?: Date | string | null
    moderatedBy?: string | null
    moderationReason?: string | null
    verifiedPurchase?: boolean
    helpfulCount?: number
    totalVotes?: number
    createdAt?: Date | string
    updatedAt?: Date | string
    user: UserCreateNestedOneWithoutReviewsInput
    order?: OrderCreateNestedOneWithoutReviewsInput
    product?: ProductCreateNestedOneWithoutReviewsInput
  }

  export type ReviewUncheckedCreateWithoutStoreInput = {
    id?: string
    userId: string
    reviewableType: $Enums.ReviewableType
    rating: number
    title?: string | null
    content: string
    qualityRating?: number | null
    valueRating?: number | null
    serviceRating?: number | null
    effectsRating?: number | null
    effects?: NullableJsonNullValueInput | InputJsonValue
    medicalBenefits?: NullableJsonNullValueInput | InputJsonValue
    sideEffects?: NullableJsonNullValueInput | InputJsonValue
    images?: NullableJsonNullValueInput | InputJsonValue
    status?: $Enums.ReviewStatus
    moderatedAt?: Date | string | null
    moderatedBy?: string | null
    moderationReason?: string | null
    verifiedPurchase?: boolean
    orderId?: string | null
    helpfulCount?: number
    totalVotes?: number
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type ReviewCreateOrConnectWithoutStoreInput = {
    where: ReviewWhereUniqueInput
    create: XOR<ReviewCreateWithoutStoreInput, ReviewUncheckedCreateWithoutStoreInput>
  }

  export type ReviewCreateManyStoreInputEnvelope = {
    data: ReviewCreateManyStoreInput | ReviewCreateManyStoreInput[]
    skipDuplicates?: boolean
  }

  export type UserUpsertWithoutStoresInput = {
    update: XOR<UserUpdateWithoutStoresInput, UserUncheckedUpdateWithoutStoresInput>
    create: XOR<UserCreateWithoutStoresInput, UserUncheckedCreateWithoutStoresInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutStoresInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutStoresInput, UserUncheckedUpdateWithoutStoresInput>
  }

  export type UserUpdateWithoutStoresInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    emailVerified?: BoolFieldUpdateOperationsInput | boolean
    passwordHash?: StringFieldUpdateOperationsInput | string
    role?: EnumUserRoleFieldUpdateOperationsInput | $Enums.UserRole
    firstName?: NullableStringFieldUpdateOperationsInput | string | null
    lastName?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    dateOfBirth?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: EnumUserStatusFieldUpdateOperationsInput | $Enums.UserStatus
    lastLoginAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    failedLoginAttempts?: IntFieldUpdateOperationsInput | number
    lockedUntil?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    ageVerified?: BoolFieldUpdateOperationsInput | boolean
    ageVerificationMethod?: NullableEnumAgeVerificationMethodFieldUpdateOperationsInput | $Enums.AgeVerificationMethod | null
    ageVerifiedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    termsAcceptedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    privacyAcceptedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    marketingConsent?: BoolFieldUpdateOperationsInput | boolean
    gdprConsent?: BoolFieldUpdateOperationsInput | boolean
    ccpaOptOut?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    addresses?: UserAddressUpdateManyWithoutUserNestedInput
    sessions?: UserSessionUpdateManyWithoutUserNestedInput
    orders?: OrderUpdateManyWithoutUserNestedInput
    reviews?: ReviewUpdateManyWithoutUserNestedInput
    professional?: ProfessionalUpdateOneWithoutUserNestedInput
    storeStaff?: StoreStaffUpdateManyWithoutUserNestedInput
    consultationsAsPatient?: ConsultationUpdateManyWithoutPatientNestedInput
    ageVerifier?: UserUpdateOneWithoutAgeVerificationsNestedInput
    ageVerifications?: UserUpdateManyWithoutAgeVerifierNestedInput
    blogPosts?: BlogPostUpdateManyWithoutAuthorNestedInput
    factCheckedPosts?: BlogPostUpdateManyWithoutFactCheckerNestedInput
  }

  export type UserUncheckedUpdateWithoutStoresInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    emailVerified?: BoolFieldUpdateOperationsInput | boolean
    passwordHash?: StringFieldUpdateOperationsInput | string
    role?: EnumUserRoleFieldUpdateOperationsInput | $Enums.UserRole
    firstName?: NullableStringFieldUpdateOperationsInput | string | null
    lastName?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    dateOfBirth?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: EnumUserStatusFieldUpdateOperationsInput | $Enums.UserStatus
    lastLoginAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    failedLoginAttempts?: IntFieldUpdateOperationsInput | number
    lockedUntil?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    ageVerified?: BoolFieldUpdateOperationsInput | boolean
    ageVerificationMethod?: NullableEnumAgeVerificationMethodFieldUpdateOperationsInput | $Enums.AgeVerificationMethod | null
    ageVerifiedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    ageVerifiedBy?: NullableStringFieldUpdateOperationsInput | string | null
    termsAcceptedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    privacyAcceptedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    marketingConsent?: BoolFieldUpdateOperationsInput | boolean
    gdprConsent?: BoolFieldUpdateOperationsInput | boolean
    ccpaOptOut?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    addresses?: UserAddressUncheckedUpdateManyWithoutUserNestedInput
    sessions?: UserSessionUncheckedUpdateManyWithoutUserNestedInput
    orders?: OrderUncheckedUpdateManyWithoutUserNestedInput
    reviews?: ReviewUncheckedUpdateManyWithoutUserNestedInput
    professional?: ProfessionalUncheckedUpdateOneWithoutUserNestedInput
    storeStaff?: StoreStaffUncheckedUpdateManyWithoutUserNestedInput
    consultationsAsPatient?: ConsultationUncheckedUpdateManyWithoutPatientNestedInput
    ageVerifications?: UserUncheckedUpdateManyWithoutAgeVerifierNestedInput
    blogPosts?: BlogPostUncheckedUpdateManyWithoutAuthorNestedInput
    factCheckedPosts?: BlogPostUncheckedUpdateManyWithoutFactCheckerNestedInput
  }

  export type StoreStaffUpsertWithWhereUniqueWithoutStoreInput = {
    where: StoreStaffWhereUniqueInput
    update: XOR<StoreStaffUpdateWithoutStoreInput, StoreStaffUncheckedUpdateWithoutStoreInput>
    create: XOR<StoreStaffCreateWithoutStoreInput, StoreStaffUncheckedCreateWithoutStoreInput>
  }

  export type StoreStaffUpdateWithWhereUniqueWithoutStoreInput = {
    where: StoreStaffWhereUniqueInput
    data: XOR<StoreStaffUpdateWithoutStoreInput, StoreStaffUncheckedUpdateWithoutStoreInput>
  }

  export type StoreStaffUpdateManyWithWhereWithoutStoreInput = {
    where: StoreStaffScalarWhereInput
    data: XOR<StoreStaffUpdateManyMutationInput, StoreStaffUncheckedUpdateManyWithoutStoreInput>
  }

  export type ProductUpsertWithWhereUniqueWithoutStoreInput = {
    where: ProductWhereUniqueInput
    update: XOR<ProductUpdateWithoutStoreInput, ProductUncheckedUpdateWithoutStoreInput>
    create: XOR<ProductCreateWithoutStoreInput, ProductUncheckedCreateWithoutStoreInput>
  }

  export type ProductUpdateWithWhereUniqueWithoutStoreInput = {
    where: ProductWhereUniqueInput
    data: XOR<ProductUpdateWithoutStoreInput, ProductUncheckedUpdateWithoutStoreInput>
  }

  export type ProductUpdateManyWithWhereWithoutStoreInput = {
    where: ProductScalarWhereInput
    data: XOR<ProductUpdateManyMutationInput, ProductUncheckedUpdateManyWithoutStoreInput>
  }

  export type ProductScalarWhereInput = {
    AND?: ProductScalarWhereInput | ProductScalarWhereInput[]
    OR?: ProductScalarWhereInput[]
    NOT?: ProductScalarWhereInput | ProductScalarWhereInput[]
    id?: StringFilter<"Product"> | string
    storeId?: StringFilter<"Product"> | string
    categoryId?: StringFilter<"Product"> | string
    name?: StringFilter<"Product"> | string
    slug?: StringFilter<"Product"> | string
    description?: StringNullableFilter<"Product"> | string | null
    shortDescription?: StringNullableFilter<"Product"> | string | null
    strainName?: StringNullableFilter<"Product"> | string | null
    strainType?: EnumStrainTypeNullableFilter<"Product"> | $Enums.StrainType | null
    brand?: StringNullableFilter<"Product"> | string | null
    manufacturer?: StringNullableFilter<"Product"> | string | null
    thcPercentage?: DecimalNullableFilter<"Product"> | Decimal | DecimalJsLike | number | string | null
    cbdPercentage?: DecimalNullableFilter<"Product"> | Decimal | DecimalJsLike | number | string | null
    thcaPercentage?: DecimalNullableFilter<"Product"> | Decimal | DecimalJsLike | number | string | null
    cbdaPercentage?: DecimalNullableFilter<"Product"> | Decimal | DecimalJsLike | number | string | null
    totalCannabinoids?: DecimalNullableFilter<"Product"> | Decimal | DecimalJsLike | number | string | null
    basePrice?: DecimalFilter<"Product"> | Decimal | DecimalJsLike | number | string
    salePrice?: DecimalNullableFilter<"Product"> | Decimal | DecimalJsLike | number | string | null
    costPrice?: DecimalNullableFilter<"Product"> | Decimal | DecimalJsLike | number | string | null
    weightGrams?: DecimalNullableFilter<"Product"> | Decimal | DecimalJsLike | number | string | null
    sku?: StringFilter<"Product"> | string
    barcode?: StringNullableFilter<"Product"> | string | null
    stockQuantity?: IntFilter<"Product"> | number
    reservedQuantity?: IntFilter<"Product"> | number
    lowStockThreshold?: IntFilter<"Product"> | number
    metrcId?: StringNullableFilter<"Product"> | string | null
    batchNumber?: StringNullableFilter<"Product"> | string | null
    harvestDate?: DateTimeNullableFilter<"Product"> | Date | string | null
    packageDate?: DateTimeNullableFilter<"Product"> | Date | string | null
    expirationDate?: DateTimeNullableFilter<"Product"> | Date | string | null
    labTested?: BoolFilter<"Product"> | boolean
    labTestResults?: JsonNullableFilter<"Product">
    testedDate?: DateTimeNullableFilter<"Product"> | Date | string | null
    testingLab?: StringNullableFilter<"Product"> | string | null
    featuredImageUrl?: StringNullableFilter<"Product"> | string | null
    galleryImages?: JsonNullableFilter<"Product">
    status?: EnumProductStatusFilter<"Product"> | $Enums.ProductStatus
    isFeatured?: BoolFilter<"Product"> | boolean
    isMedicalOnly?: BoolFilter<"Product"> | boolean
    ageRestriction?: IntFilter<"Product"> | number
    metaTitle?: StringNullableFilter<"Product"> | string | null
    metaDescription?: StringNullableFilter<"Product"> | string | null
    tags?: JsonNullableFilter<"Product">
    searchKeywords?: StringNullableFilter<"Product"> | string | null
    viewCount?: IntFilter<"Product"> | number
    averageRating?: DecimalFilter<"Product"> | Decimal | DecimalJsLike | number | string
    reviewCount?: IntFilter<"Product"> | number
    salesCount?: IntFilter<"Product"> | number
    createdAt?: DateTimeFilter<"Product"> | Date | string
    updatedAt?: DateTimeFilter<"Product"> | Date | string
    createdBy?: StringNullableFilter<"Product"> | string | null
    updatedBy?: StringNullableFilter<"Product"> | string | null
  }

  export type OrderUpsertWithWhereUniqueWithoutStoreInput = {
    where: OrderWhereUniqueInput
    update: XOR<OrderUpdateWithoutStoreInput, OrderUncheckedUpdateWithoutStoreInput>
    create: XOR<OrderCreateWithoutStoreInput, OrderUncheckedCreateWithoutStoreInput>
  }

  export type OrderUpdateWithWhereUniqueWithoutStoreInput = {
    where: OrderWhereUniqueInput
    data: XOR<OrderUpdateWithoutStoreInput, OrderUncheckedUpdateWithoutStoreInput>
  }

  export type OrderUpdateManyWithWhereWithoutStoreInput = {
    where: OrderScalarWhereInput
    data: XOR<OrderUpdateManyMutationInput, OrderUncheckedUpdateManyWithoutStoreInput>
  }

  export type ReviewUpsertWithWhereUniqueWithoutStoreInput = {
    where: ReviewWhereUniqueInput
    update: XOR<ReviewUpdateWithoutStoreInput, ReviewUncheckedUpdateWithoutStoreInput>
    create: XOR<ReviewCreateWithoutStoreInput, ReviewUncheckedCreateWithoutStoreInput>
  }

  export type ReviewUpdateWithWhereUniqueWithoutStoreInput = {
    where: ReviewWhereUniqueInput
    data: XOR<ReviewUpdateWithoutStoreInput, ReviewUncheckedUpdateWithoutStoreInput>
  }

  export type ReviewUpdateManyWithWhereWithoutStoreInput = {
    where: ReviewScalarWhereInput
    data: XOR<ReviewUpdateManyMutationInput, ReviewUncheckedUpdateManyWithoutStoreInput>
  }

  export type StoreCreateWithoutStaffInput = {
    id?: string
    name: string
    slug: string
    description?: string | null
    email?: string | null
    phone?: string | null
    website?: string | null
    addressLine1: string
    addressLine2?: string | null
    city: string
    state: string
    postalCode: string
    latitude: Decimal | DecimalJsLike | number | string
    longitude: Decimal | DecimalJsLike | number | string
    businessType: $Enums.BusinessType
    licenseNumber: string
    licenseType: string
    licenseState: string
    licenseExpiresAt: Date | string
    features?: NullableJsonNullValueInput | InputJsonValue
    paymentMethods?: NullableJsonNullValueInput | InputJsonValue
    deliveryRadius?: number | null
    minimumOrder?: Decimal | DecimalJsLike | number | string | null
    deliveryFee?: Decimal | DecimalJsLike | number | string | null
    operatingHours?: NullableJsonNullValueInput | InputJsonValue
    status?: $Enums.StoreStatus
    verified?: boolean
    verifiedAt?: Date | string | null
    verifiedBy?: string | null
    logoUrl?: string | null
    coverImageUrl?: string | null
    galleryImages?: NullableJsonNullValueInput | InputJsonValue
    metaTitle?: string | null
    metaDescription?: string | null
    socialMedia?: NullableJsonNullValueInput | InputJsonValue
    metrcLicenseId?: string | null
    metrcLastSync?: Date | string | null
    complianceStatus?: $Enums.ComplianceStatus
    trackTraceSystem?: $Enums.TrackTraceSystem | null
    totalProducts?: number
    averageRating?: Decimal | DecimalJsLike | number | string
    totalReviews?: number
    totalOrders?: number
    createdAt?: Date | string
    updatedAt?: Date | string
    createdBy?: string | null
    updatedBy?: string | null
    owner: UserCreateNestedOneWithoutStoresInput
    products?: ProductCreateNestedManyWithoutStoreInput
    orders?: OrderCreateNestedManyWithoutStoreInput
    reviews?: ReviewCreateNestedManyWithoutStoreInput
  }

  export type StoreUncheckedCreateWithoutStaffInput = {
    id?: string
    ownerId: string
    name: string
    slug: string
    description?: string | null
    email?: string | null
    phone?: string | null
    website?: string | null
    addressLine1: string
    addressLine2?: string | null
    city: string
    state: string
    postalCode: string
    latitude: Decimal | DecimalJsLike | number | string
    longitude: Decimal | DecimalJsLike | number | string
    businessType: $Enums.BusinessType
    licenseNumber: string
    licenseType: string
    licenseState: string
    licenseExpiresAt: Date | string
    features?: NullableJsonNullValueInput | InputJsonValue
    paymentMethods?: NullableJsonNullValueInput | InputJsonValue
    deliveryRadius?: number | null
    minimumOrder?: Decimal | DecimalJsLike | number | string | null
    deliveryFee?: Decimal | DecimalJsLike | number | string | null
    operatingHours?: NullableJsonNullValueInput | InputJsonValue
    status?: $Enums.StoreStatus
    verified?: boolean
    verifiedAt?: Date | string | null
    verifiedBy?: string | null
    logoUrl?: string | null
    coverImageUrl?: string | null
    galleryImages?: NullableJsonNullValueInput | InputJsonValue
    metaTitle?: string | null
    metaDescription?: string | null
    socialMedia?: NullableJsonNullValueInput | InputJsonValue
    metrcLicenseId?: string | null
    metrcLastSync?: Date | string | null
    complianceStatus?: $Enums.ComplianceStatus
    trackTraceSystem?: $Enums.TrackTraceSystem | null
    totalProducts?: number
    averageRating?: Decimal | DecimalJsLike | number | string
    totalReviews?: number
    totalOrders?: number
    createdAt?: Date | string
    updatedAt?: Date | string
    createdBy?: string | null
    updatedBy?: string | null
    products?: ProductUncheckedCreateNestedManyWithoutStoreInput
    orders?: OrderUncheckedCreateNestedManyWithoutStoreInput
    reviews?: ReviewUncheckedCreateNestedManyWithoutStoreInput
  }

  export type StoreCreateOrConnectWithoutStaffInput = {
    where: StoreWhereUniqueInput
    create: XOR<StoreCreateWithoutStaffInput, StoreUncheckedCreateWithoutStaffInput>
  }

  export type UserCreateWithoutStoreStaffInput = {
    id?: string
    email: string
    emailVerified?: boolean
    passwordHash: string
    role?: $Enums.UserRole
    firstName?: string | null
    lastName?: string | null
    phone?: string | null
    dateOfBirth?: Date | string | null
    status?: $Enums.UserStatus
    lastLoginAt?: Date | string | null
    failedLoginAttempts?: number
    lockedUntil?: Date | string | null
    ageVerified?: boolean
    ageVerificationMethod?: $Enums.AgeVerificationMethod | null
    ageVerifiedAt?: Date | string | null
    termsAcceptedAt?: Date | string | null
    privacyAcceptedAt?: Date | string | null
    marketingConsent?: boolean
    gdprConsent?: boolean
    ccpaOptOut?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    createdBy?: string | null
    updatedBy?: string | null
    addresses?: UserAddressCreateNestedManyWithoutUserInput
    sessions?: UserSessionCreateNestedManyWithoutUserInput
    stores?: StoreCreateNestedManyWithoutOwnerInput
    orders?: OrderCreateNestedManyWithoutUserInput
    reviews?: ReviewCreateNestedManyWithoutUserInput
    professional?: ProfessionalCreateNestedOneWithoutUserInput
    consultationsAsPatient?: ConsultationCreateNestedManyWithoutPatientInput
    ageVerifier?: UserCreateNestedOneWithoutAgeVerificationsInput
    ageVerifications?: UserCreateNestedManyWithoutAgeVerifierInput
    blogPosts?: BlogPostCreateNestedManyWithoutAuthorInput
    factCheckedPosts?: BlogPostCreateNestedManyWithoutFactCheckerInput
  }

  export type UserUncheckedCreateWithoutStoreStaffInput = {
    id?: string
    email: string
    emailVerified?: boolean
    passwordHash: string
    role?: $Enums.UserRole
    firstName?: string | null
    lastName?: string | null
    phone?: string | null
    dateOfBirth?: Date | string | null
    status?: $Enums.UserStatus
    lastLoginAt?: Date | string | null
    failedLoginAttempts?: number
    lockedUntil?: Date | string | null
    ageVerified?: boolean
    ageVerificationMethod?: $Enums.AgeVerificationMethod | null
    ageVerifiedAt?: Date | string | null
    ageVerifiedBy?: string | null
    termsAcceptedAt?: Date | string | null
    privacyAcceptedAt?: Date | string | null
    marketingConsent?: boolean
    gdprConsent?: boolean
    ccpaOptOut?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    createdBy?: string | null
    updatedBy?: string | null
    addresses?: UserAddressUncheckedCreateNestedManyWithoutUserInput
    sessions?: UserSessionUncheckedCreateNestedManyWithoutUserInput
    stores?: StoreUncheckedCreateNestedManyWithoutOwnerInput
    orders?: OrderUncheckedCreateNestedManyWithoutUserInput
    reviews?: ReviewUncheckedCreateNestedManyWithoutUserInput
    professional?: ProfessionalUncheckedCreateNestedOneWithoutUserInput
    consultationsAsPatient?: ConsultationUncheckedCreateNestedManyWithoutPatientInput
    ageVerifications?: UserUncheckedCreateNestedManyWithoutAgeVerifierInput
    blogPosts?: BlogPostUncheckedCreateNestedManyWithoutAuthorInput
    factCheckedPosts?: BlogPostUncheckedCreateNestedManyWithoutFactCheckerInput
  }

  export type UserCreateOrConnectWithoutStoreStaffInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutStoreStaffInput, UserUncheckedCreateWithoutStoreStaffInput>
  }

  export type StoreUpsertWithoutStaffInput = {
    update: XOR<StoreUpdateWithoutStaffInput, StoreUncheckedUpdateWithoutStaffInput>
    create: XOR<StoreCreateWithoutStaffInput, StoreUncheckedCreateWithoutStaffInput>
    where?: StoreWhereInput
  }

  export type StoreUpdateToOneWithWhereWithoutStaffInput = {
    where?: StoreWhereInput
    data: XOR<StoreUpdateWithoutStaffInput, StoreUncheckedUpdateWithoutStaffInput>
  }

  export type StoreUpdateWithoutStaffInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    website?: NullableStringFieldUpdateOperationsInput | string | null
    addressLine1?: StringFieldUpdateOperationsInput | string
    addressLine2?: NullableStringFieldUpdateOperationsInput | string | null
    city?: StringFieldUpdateOperationsInput | string
    state?: StringFieldUpdateOperationsInput | string
    postalCode?: StringFieldUpdateOperationsInput | string
    latitude?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    longitude?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    businessType?: EnumBusinessTypeFieldUpdateOperationsInput | $Enums.BusinessType
    licenseNumber?: StringFieldUpdateOperationsInput | string
    licenseType?: StringFieldUpdateOperationsInput | string
    licenseState?: StringFieldUpdateOperationsInput | string
    licenseExpiresAt?: DateTimeFieldUpdateOperationsInput | Date | string
    features?: NullableJsonNullValueInput | InputJsonValue
    paymentMethods?: NullableJsonNullValueInput | InputJsonValue
    deliveryRadius?: NullableIntFieldUpdateOperationsInput | number | null
    minimumOrder?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    deliveryFee?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    operatingHours?: NullableJsonNullValueInput | InputJsonValue
    status?: EnumStoreStatusFieldUpdateOperationsInput | $Enums.StoreStatus
    verified?: BoolFieldUpdateOperationsInput | boolean
    verifiedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    verifiedBy?: NullableStringFieldUpdateOperationsInput | string | null
    logoUrl?: NullableStringFieldUpdateOperationsInput | string | null
    coverImageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    galleryImages?: NullableJsonNullValueInput | InputJsonValue
    metaTitle?: NullableStringFieldUpdateOperationsInput | string | null
    metaDescription?: NullableStringFieldUpdateOperationsInput | string | null
    socialMedia?: NullableJsonNullValueInput | InputJsonValue
    metrcLicenseId?: NullableStringFieldUpdateOperationsInput | string | null
    metrcLastSync?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    complianceStatus?: EnumComplianceStatusFieldUpdateOperationsInput | $Enums.ComplianceStatus
    trackTraceSystem?: NullableEnumTrackTraceSystemFieldUpdateOperationsInput | $Enums.TrackTraceSystem | null
    totalProducts?: IntFieldUpdateOperationsInput | number
    averageRating?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    totalReviews?: IntFieldUpdateOperationsInput | number
    totalOrders?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    owner?: UserUpdateOneRequiredWithoutStoresNestedInput
    products?: ProductUpdateManyWithoutStoreNestedInput
    orders?: OrderUpdateManyWithoutStoreNestedInput
    reviews?: ReviewUpdateManyWithoutStoreNestedInput
  }

  export type StoreUncheckedUpdateWithoutStaffInput = {
    id?: StringFieldUpdateOperationsInput | string
    ownerId?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    website?: NullableStringFieldUpdateOperationsInput | string | null
    addressLine1?: StringFieldUpdateOperationsInput | string
    addressLine2?: NullableStringFieldUpdateOperationsInput | string | null
    city?: StringFieldUpdateOperationsInput | string
    state?: StringFieldUpdateOperationsInput | string
    postalCode?: StringFieldUpdateOperationsInput | string
    latitude?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    longitude?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    businessType?: EnumBusinessTypeFieldUpdateOperationsInput | $Enums.BusinessType
    licenseNumber?: StringFieldUpdateOperationsInput | string
    licenseType?: StringFieldUpdateOperationsInput | string
    licenseState?: StringFieldUpdateOperationsInput | string
    licenseExpiresAt?: DateTimeFieldUpdateOperationsInput | Date | string
    features?: NullableJsonNullValueInput | InputJsonValue
    paymentMethods?: NullableJsonNullValueInput | InputJsonValue
    deliveryRadius?: NullableIntFieldUpdateOperationsInput | number | null
    minimumOrder?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    deliveryFee?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    operatingHours?: NullableJsonNullValueInput | InputJsonValue
    status?: EnumStoreStatusFieldUpdateOperationsInput | $Enums.StoreStatus
    verified?: BoolFieldUpdateOperationsInput | boolean
    verifiedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    verifiedBy?: NullableStringFieldUpdateOperationsInput | string | null
    logoUrl?: NullableStringFieldUpdateOperationsInput | string | null
    coverImageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    galleryImages?: NullableJsonNullValueInput | InputJsonValue
    metaTitle?: NullableStringFieldUpdateOperationsInput | string | null
    metaDescription?: NullableStringFieldUpdateOperationsInput | string | null
    socialMedia?: NullableJsonNullValueInput | InputJsonValue
    metrcLicenseId?: NullableStringFieldUpdateOperationsInput | string | null
    metrcLastSync?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    complianceStatus?: EnumComplianceStatusFieldUpdateOperationsInput | $Enums.ComplianceStatus
    trackTraceSystem?: NullableEnumTrackTraceSystemFieldUpdateOperationsInput | $Enums.TrackTraceSystem | null
    totalProducts?: IntFieldUpdateOperationsInput | number
    averageRating?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    totalReviews?: IntFieldUpdateOperationsInput | number
    totalOrders?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    products?: ProductUncheckedUpdateManyWithoutStoreNestedInput
    orders?: OrderUncheckedUpdateManyWithoutStoreNestedInput
    reviews?: ReviewUncheckedUpdateManyWithoutStoreNestedInput
  }

  export type UserUpsertWithoutStoreStaffInput = {
    update: XOR<UserUpdateWithoutStoreStaffInput, UserUncheckedUpdateWithoutStoreStaffInput>
    create: XOR<UserCreateWithoutStoreStaffInput, UserUncheckedCreateWithoutStoreStaffInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutStoreStaffInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutStoreStaffInput, UserUncheckedUpdateWithoutStoreStaffInput>
  }

  export type UserUpdateWithoutStoreStaffInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    emailVerified?: BoolFieldUpdateOperationsInput | boolean
    passwordHash?: StringFieldUpdateOperationsInput | string
    role?: EnumUserRoleFieldUpdateOperationsInput | $Enums.UserRole
    firstName?: NullableStringFieldUpdateOperationsInput | string | null
    lastName?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    dateOfBirth?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: EnumUserStatusFieldUpdateOperationsInput | $Enums.UserStatus
    lastLoginAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    failedLoginAttempts?: IntFieldUpdateOperationsInput | number
    lockedUntil?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    ageVerified?: BoolFieldUpdateOperationsInput | boolean
    ageVerificationMethod?: NullableEnumAgeVerificationMethodFieldUpdateOperationsInput | $Enums.AgeVerificationMethod | null
    ageVerifiedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    termsAcceptedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    privacyAcceptedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    marketingConsent?: BoolFieldUpdateOperationsInput | boolean
    gdprConsent?: BoolFieldUpdateOperationsInput | boolean
    ccpaOptOut?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    addresses?: UserAddressUpdateManyWithoutUserNestedInput
    sessions?: UserSessionUpdateManyWithoutUserNestedInput
    stores?: StoreUpdateManyWithoutOwnerNestedInput
    orders?: OrderUpdateManyWithoutUserNestedInput
    reviews?: ReviewUpdateManyWithoutUserNestedInput
    professional?: ProfessionalUpdateOneWithoutUserNestedInput
    consultationsAsPatient?: ConsultationUpdateManyWithoutPatientNestedInput
    ageVerifier?: UserUpdateOneWithoutAgeVerificationsNestedInput
    ageVerifications?: UserUpdateManyWithoutAgeVerifierNestedInput
    blogPosts?: BlogPostUpdateManyWithoutAuthorNestedInput
    factCheckedPosts?: BlogPostUpdateManyWithoutFactCheckerNestedInput
  }

  export type UserUncheckedUpdateWithoutStoreStaffInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    emailVerified?: BoolFieldUpdateOperationsInput | boolean
    passwordHash?: StringFieldUpdateOperationsInput | string
    role?: EnumUserRoleFieldUpdateOperationsInput | $Enums.UserRole
    firstName?: NullableStringFieldUpdateOperationsInput | string | null
    lastName?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    dateOfBirth?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: EnumUserStatusFieldUpdateOperationsInput | $Enums.UserStatus
    lastLoginAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    failedLoginAttempts?: IntFieldUpdateOperationsInput | number
    lockedUntil?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    ageVerified?: BoolFieldUpdateOperationsInput | boolean
    ageVerificationMethod?: NullableEnumAgeVerificationMethodFieldUpdateOperationsInput | $Enums.AgeVerificationMethod | null
    ageVerifiedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    ageVerifiedBy?: NullableStringFieldUpdateOperationsInput | string | null
    termsAcceptedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    privacyAcceptedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    marketingConsent?: BoolFieldUpdateOperationsInput | boolean
    gdprConsent?: BoolFieldUpdateOperationsInput | boolean
    ccpaOptOut?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    addresses?: UserAddressUncheckedUpdateManyWithoutUserNestedInput
    sessions?: UserSessionUncheckedUpdateManyWithoutUserNestedInput
    stores?: StoreUncheckedUpdateManyWithoutOwnerNestedInput
    orders?: OrderUncheckedUpdateManyWithoutUserNestedInput
    reviews?: ReviewUncheckedUpdateManyWithoutUserNestedInput
    professional?: ProfessionalUncheckedUpdateOneWithoutUserNestedInput
    consultationsAsPatient?: ConsultationUncheckedUpdateManyWithoutPatientNestedInput
    ageVerifications?: UserUncheckedUpdateManyWithoutAgeVerifierNestedInput
    blogPosts?: BlogPostUncheckedUpdateManyWithoutAuthorNestedInput
    factCheckedPosts?: BlogPostUncheckedUpdateManyWithoutFactCheckerNestedInput
  }

  export type ProductCategoryCreateWithoutChildrenInput = {
    id?: string
    name: string
    slug: string
    description?: string | null
    iconName?: string | null
    colorHex?: string | null
    sortOrder?: number
    productType: $Enums.ProductType
    thcCategory?: string | null
    consumptionMethod?: string | null
    metaTitle?: string | null
    metaDescription?: string | null
    isActive?: boolean
    requiresCompliance?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    parent?: ProductCategoryCreateNestedOneWithoutChildrenInput
    products?: ProductCreateNestedManyWithoutCategoryInput
  }

  export type ProductCategoryUncheckedCreateWithoutChildrenInput = {
    id?: string
    parentId?: string | null
    name: string
    slug: string
    description?: string | null
    iconName?: string | null
    colorHex?: string | null
    sortOrder?: number
    productType: $Enums.ProductType
    thcCategory?: string | null
    consumptionMethod?: string | null
    metaTitle?: string | null
    metaDescription?: string | null
    isActive?: boolean
    requiresCompliance?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    products?: ProductUncheckedCreateNestedManyWithoutCategoryInput
  }

  export type ProductCategoryCreateOrConnectWithoutChildrenInput = {
    where: ProductCategoryWhereUniqueInput
    create: XOR<ProductCategoryCreateWithoutChildrenInput, ProductCategoryUncheckedCreateWithoutChildrenInput>
  }

  export type ProductCategoryCreateWithoutParentInput = {
    id?: string
    name: string
    slug: string
    description?: string | null
    iconName?: string | null
    colorHex?: string | null
    sortOrder?: number
    productType: $Enums.ProductType
    thcCategory?: string | null
    consumptionMethod?: string | null
    metaTitle?: string | null
    metaDescription?: string | null
    isActive?: boolean
    requiresCompliance?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    children?: ProductCategoryCreateNestedManyWithoutParentInput
    products?: ProductCreateNestedManyWithoutCategoryInput
  }

  export type ProductCategoryUncheckedCreateWithoutParentInput = {
    id?: string
    name: string
    slug: string
    description?: string | null
    iconName?: string | null
    colorHex?: string | null
    sortOrder?: number
    productType: $Enums.ProductType
    thcCategory?: string | null
    consumptionMethod?: string | null
    metaTitle?: string | null
    metaDescription?: string | null
    isActive?: boolean
    requiresCompliance?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    children?: ProductCategoryUncheckedCreateNestedManyWithoutParentInput
    products?: ProductUncheckedCreateNestedManyWithoutCategoryInput
  }

  export type ProductCategoryCreateOrConnectWithoutParentInput = {
    where: ProductCategoryWhereUniqueInput
    create: XOR<ProductCategoryCreateWithoutParentInput, ProductCategoryUncheckedCreateWithoutParentInput>
  }

  export type ProductCategoryCreateManyParentInputEnvelope = {
    data: ProductCategoryCreateManyParentInput | ProductCategoryCreateManyParentInput[]
    skipDuplicates?: boolean
  }

  export type ProductCreateWithoutCategoryInput = {
    id?: string
    name: string
    slug: string
    description?: string | null
    shortDescription?: string | null
    strainName?: string | null
    strainType?: $Enums.StrainType | null
    brand?: string | null
    manufacturer?: string | null
    thcPercentage?: Decimal | DecimalJsLike | number | string | null
    cbdPercentage?: Decimal | DecimalJsLike | number | string | null
    thcaPercentage?: Decimal | DecimalJsLike | number | string | null
    cbdaPercentage?: Decimal | DecimalJsLike | number | string | null
    totalCannabinoids?: Decimal | DecimalJsLike | number | string | null
    basePrice: Decimal | DecimalJsLike | number | string
    salePrice?: Decimal | DecimalJsLike | number | string | null
    costPrice?: Decimal | DecimalJsLike | number | string | null
    weightGrams?: Decimal | DecimalJsLike | number | string | null
    sku: string
    barcode?: string | null
    stockQuantity?: number
    reservedQuantity?: number
    lowStockThreshold?: number
    metrcId?: string | null
    batchNumber?: string | null
    harvestDate?: Date | string | null
    packageDate?: Date | string | null
    expirationDate?: Date | string | null
    labTested?: boolean
    labTestResults?: NullableJsonNullValueInput | InputJsonValue
    testedDate?: Date | string | null
    testingLab?: string | null
    featuredImageUrl?: string | null
    galleryImages?: NullableJsonNullValueInput | InputJsonValue
    status?: $Enums.ProductStatus
    isFeatured?: boolean
    isMedicalOnly?: boolean
    ageRestriction?: number
    metaTitle?: string | null
    metaDescription?: string | null
    tags?: NullableJsonNullValueInput | InputJsonValue
    searchKeywords?: string | null
    viewCount?: number
    averageRating?: Decimal | DecimalJsLike | number | string
    reviewCount?: number
    salesCount?: number
    createdAt?: Date | string
    updatedAt?: Date | string
    createdBy?: string | null
    updatedBy?: string | null
    store: StoreCreateNestedOneWithoutProductsInput
    reviews?: ReviewCreateNestedManyWithoutProductInput
    orderItems?: OrderItemCreateNestedManyWithoutProductInput
  }

  export type ProductUncheckedCreateWithoutCategoryInput = {
    id?: string
    storeId: string
    name: string
    slug: string
    description?: string | null
    shortDescription?: string | null
    strainName?: string | null
    strainType?: $Enums.StrainType | null
    brand?: string | null
    manufacturer?: string | null
    thcPercentage?: Decimal | DecimalJsLike | number | string | null
    cbdPercentage?: Decimal | DecimalJsLike | number | string | null
    thcaPercentage?: Decimal | DecimalJsLike | number | string | null
    cbdaPercentage?: Decimal | DecimalJsLike | number | string | null
    totalCannabinoids?: Decimal | DecimalJsLike | number | string | null
    basePrice: Decimal | DecimalJsLike | number | string
    salePrice?: Decimal | DecimalJsLike | number | string | null
    costPrice?: Decimal | DecimalJsLike | number | string | null
    weightGrams?: Decimal | DecimalJsLike | number | string | null
    sku: string
    barcode?: string | null
    stockQuantity?: number
    reservedQuantity?: number
    lowStockThreshold?: number
    metrcId?: string | null
    batchNumber?: string | null
    harvestDate?: Date | string | null
    packageDate?: Date | string | null
    expirationDate?: Date | string | null
    labTested?: boolean
    labTestResults?: NullableJsonNullValueInput | InputJsonValue
    testedDate?: Date | string | null
    testingLab?: string | null
    featuredImageUrl?: string | null
    galleryImages?: NullableJsonNullValueInput | InputJsonValue
    status?: $Enums.ProductStatus
    isFeatured?: boolean
    isMedicalOnly?: boolean
    ageRestriction?: number
    metaTitle?: string | null
    metaDescription?: string | null
    tags?: NullableJsonNullValueInput | InputJsonValue
    searchKeywords?: string | null
    viewCount?: number
    averageRating?: Decimal | DecimalJsLike | number | string
    reviewCount?: number
    salesCount?: number
    createdAt?: Date | string
    updatedAt?: Date | string
    createdBy?: string | null
    updatedBy?: string | null
    reviews?: ReviewUncheckedCreateNestedManyWithoutProductInput
    orderItems?: OrderItemUncheckedCreateNestedManyWithoutProductInput
  }

  export type ProductCreateOrConnectWithoutCategoryInput = {
    where: ProductWhereUniqueInput
    create: XOR<ProductCreateWithoutCategoryInput, ProductUncheckedCreateWithoutCategoryInput>
  }

  export type ProductCreateManyCategoryInputEnvelope = {
    data: ProductCreateManyCategoryInput | ProductCreateManyCategoryInput[]
    skipDuplicates?: boolean
  }

  export type ProductCategoryUpsertWithoutChildrenInput = {
    update: XOR<ProductCategoryUpdateWithoutChildrenInput, ProductCategoryUncheckedUpdateWithoutChildrenInput>
    create: XOR<ProductCategoryCreateWithoutChildrenInput, ProductCategoryUncheckedCreateWithoutChildrenInput>
    where?: ProductCategoryWhereInput
  }

  export type ProductCategoryUpdateToOneWithWhereWithoutChildrenInput = {
    where?: ProductCategoryWhereInput
    data: XOR<ProductCategoryUpdateWithoutChildrenInput, ProductCategoryUncheckedUpdateWithoutChildrenInput>
  }

  export type ProductCategoryUpdateWithoutChildrenInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    iconName?: NullableStringFieldUpdateOperationsInput | string | null
    colorHex?: NullableStringFieldUpdateOperationsInput | string | null
    sortOrder?: IntFieldUpdateOperationsInput | number
    productType?: EnumProductTypeFieldUpdateOperationsInput | $Enums.ProductType
    thcCategory?: NullableStringFieldUpdateOperationsInput | string | null
    consumptionMethod?: NullableStringFieldUpdateOperationsInput | string | null
    metaTitle?: NullableStringFieldUpdateOperationsInput | string | null
    metaDescription?: NullableStringFieldUpdateOperationsInput | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    requiresCompliance?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    parent?: ProductCategoryUpdateOneWithoutChildrenNestedInput
    products?: ProductUpdateManyWithoutCategoryNestedInput
  }

  export type ProductCategoryUncheckedUpdateWithoutChildrenInput = {
    id?: StringFieldUpdateOperationsInput | string
    parentId?: NullableStringFieldUpdateOperationsInput | string | null
    name?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    iconName?: NullableStringFieldUpdateOperationsInput | string | null
    colorHex?: NullableStringFieldUpdateOperationsInput | string | null
    sortOrder?: IntFieldUpdateOperationsInput | number
    productType?: EnumProductTypeFieldUpdateOperationsInput | $Enums.ProductType
    thcCategory?: NullableStringFieldUpdateOperationsInput | string | null
    consumptionMethod?: NullableStringFieldUpdateOperationsInput | string | null
    metaTitle?: NullableStringFieldUpdateOperationsInput | string | null
    metaDescription?: NullableStringFieldUpdateOperationsInput | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    requiresCompliance?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    products?: ProductUncheckedUpdateManyWithoutCategoryNestedInput
  }

  export type ProductCategoryUpsertWithWhereUniqueWithoutParentInput = {
    where: ProductCategoryWhereUniqueInput
    update: XOR<ProductCategoryUpdateWithoutParentInput, ProductCategoryUncheckedUpdateWithoutParentInput>
    create: XOR<ProductCategoryCreateWithoutParentInput, ProductCategoryUncheckedCreateWithoutParentInput>
  }

  export type ProductCategoryUpdateWithWhereUniqueWithoutParentInput = {
    where: ProductCategoryWhereUniqueInput
    data: XOR<ProductCategoryUpdateWithoutParentInput, ProductCategoryUncheckedUpdateWithoutParentInput>
  }

  export type ProductCategoryUpdateManyWithWhereWithoutParentInput = {
    where: ProductCategoryScalarWhereInput
    data: XOR<ProductCategoryUpdateManyMutationInput, ProductCategoryUncheckedUpdateManyWithoutParentInput>
  }

  export type ProductCategoryScalarWhereInput = {
    AND?: ProductCategoryScalarWhereInput | ProductCategoryScalarWhereInput[]
    OR?: ProductCategoryScalarWhereInput[]
    NOT?: ProductCategoryScalarWhereInput | ProductCategoryScalarWhereInput[]
    id?: StringFilter<"ProductCategory"> | string
    parentId?: StringNullableFilter<"ProductCategory"> | string | null
    name?: StringFilter<"ProductCategory"> | string
    slug?: StringFilter<"ProductCategory"> | string
    description?: StringNullableFilter<"ProductCategory"> | string | null
    iconName?: StringNullableFilter<"ProductCategory"> | string | null
    colorHex?: StringNullableFilter<"ProductCategory"> | string | null
    sortOrder?: IntFilter<"ProductCategory"> | number
    productType?: EnumProductTypeFilter<"ProductCategory"> | $Enums.ProductType
    thcCategory?: StringNullableFilter<"ProductCategory"> | string | null
    consumptionMethod?: StringNullableFilter<"ProductCategory"> | string | null
    metaTitle?: StringNullableFilter<"ProductCategory"> | string | null
    metaDescription?: StringNullableFilter<"ProductCategory"> | string | null
    isActive?: BoolFilter<"ProductCategory"> | boolean
    requiresCompliance?: BoolFilter<"ProductCategory"> | boolean
    createdAt?: DateTimeFilter<"ProductCategory"> | Date | string
    updatedAt?: DateTimeFilter<"ProductCategory"> | Date | string
  }

  export type ProductUpsertWithWhereUniqueWithoutCategoryInput = {
    where: ProductWhereUniqueInput
    update: XOR<ProductUpdateWithoutCategoryInput, ProductUncheckedUpdateWithoutCategoryInput>
    create: XOR<ProductCreateWithoutCategoryInput, ProductUncheckedCreateWithoutCategoryInput>
  }

  export type ProductUpdateWithWhereUniqueWithoutCategoryInput = {
    where: ProductWhereUniqueInput
    data: XOR<ProductUpdateWithoutCategoryInput, ProductUncheckedUpdateWithoutCategoryInput>
  }

  export type ProductUpdateManyWithWhereWithoutCategoryInput = {
    where: ProductScalarWhereInput
    data: XOR<ProductUpdateManyMutationInput, ProductUncheckedUpdateManyWithoutCategoryInput>
  }

  export type StoreCreateWithoutProductsInput = {
    id?: string
    name: string
    slug: string
    description?: string | null
    email?: string | null
    phone?: string | null
    website?: string | null
    addressLine1: string
    addressLine2?: string | null
    city: string
    state: string
    postalCode: string
    latitude: Decimal | DecimalJsLike | number | string
    longitude: Decimal | DecimalJsLike | number | string
    businessType: $Enums.BusinessType
    licenseNumber: string
    licenseType: string
    licenseState: string
    licenseExpiresAt: Date | string
    features?: NullableJsonNullValueInput | InputJsonValue
    paymentMethods?: NullableJsonNullValueInput | InputJsonValue
    deliveryRadius?: number | null
    minimumOrder?: Decimal | DecimalJsLike | number | string | null
    deliveryFee?: Decimal | DecimalJsLike | number | string | null
    operatingHours?: NullableJsonNullValueInput | InputJsonValue
    status?: $Enums.StoreStatus
    verified?: boolean
    verifiedAt?: Date | string | null
    verifiedBy?: string | null
    logoUrl?: string | null
    coverImageUrl?: string | null
    galleryImages?: NullableJsonNullValueInput | InputJsonValue
    metaTitle?: string | null
    metaDescription?: string | null
    socialMedia?: NullableJsonNullValueInput | InputJsonValue
    metrcLicenseId?: string | null
    metrcLastSync?: Date | string | null
    complianceStatus?: $Enums.ComplianceStatus
    trackTraceSystem?: $Enums.TrackTraceSystem | null
    totalProducts?: number
    averageRating?: Decimal | DecimalJsLike | number | string
    totalReviews?: number
    totalOrders?: number
    createdAt?: Date | string
    updatedAt?: Date | string
    createdBy?: string | null
    updatedBy?: string | null
    owner: UserCreateNestedOneWithoutStoresInput
    staff?: StoreStaffCreateNestedManyWithoutStoreInput
    orders?: OrderCreateNestedManyWithoutStoreInput
    reviews?: ReviewCreateNestedManyWithoutStoreInput
  }

  export type StoreUncheckedCreateWithoutProductsInput = {
    id?: string
    ownerId: string
    name: string
    slug: string
    description?: string | null
    email?: string | null
    phone?: string | null
    website?: string | null
    addressLine1: string
    addressLine2?: string | null
    city: string
    state: string
    postalCode: string
    latitude: Decimal | DecimalJsLike | number | string
    longitude: Decimal | DecimalJsLike | number | string
    businessType: $Enums.BusinessType
    licenseNumber: string
    licenseType: string
    licenseState: string
    licenseExpiresAt: Date | string
    features?: NullableJsonNullValueInput | InputJsonValue
    paymentMethods?: NullableJsonNullValueInput | InputJsonValue
    deliveryRadius?: number | null
    minimumOrder?: Decimal | DecimalJsLike | number | string | null
    deliveryFee?: Decimal | DecimalJsLike | number | string | null
    operatingHours?: NullableJsonNullValueInput | InputJsonValue
    status?: $Enums.StoreStatus
    verified?: boolean
    verifiedAt?: Date | string | null
    verifiedBy?: string | null
    logoUrl?: string | null
    coverImageUrl?: string | null
    galleryImages?: NullableJsonNullValueInput | InputJsonValue
    metaTitle?: string | null
    metaDescription?: string | null
    socialMedia?: NullableJsonNullValueInput | InputJsonValue
    metrcLicenseId?: string | null
    metrcLastSync?: Date | string | null
    complianceStatus?: $Enums.ComplianceStatus
    trackTraceSystem?: $Enums.TrackTraceSystem | null
    totalProducts?: number
    averageRating?: Decimal | DecimalJsLike | number | string
    totalReviews?: number
    totalOrders?: number
    createdAt?: Date | string
    updatedAt?: Date | string
    createdBy?: string | null
    updatedBy?: string | null
    staff?: StoreStaffUncheckedCreateNestedManyWithoutStoreInput
    orders?: OrderUncheckedCreateNestedManyWithoutStoreInput
    reviews?: ReviewUncheckedCreateNestedManyWithoutStoreInput
  }

  export type StoreCreateOrConnectWithoutProductsInput = {
    where: StoreWhereUniqueInput
    create: XOR<StoreCreateWithoutProductsInput, StoreUncheckedCreateWithoutProductsInput>
  }

  export type ProductCategoryCreateWithoutProductsInput = {
    id?: string
    name: string
    slug: string
    description?: string | null
    iconName?: string | null
    colorHex?: string | null
    sortOrder?: number
    productType: $Enums.ProductType
    thcCategory?: string | null
    consumptionMethod?: string | null
    metaTitle?: string | null
    metaDescription?: string | null
    isActive?: boolean
    requiresCompliance?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    parent?: ProductCategoryCreateNestedOneWithoutChildrenInput
    children?: ProductCategoryCreateNestedManyWithoutParentInput
  }

  export type ProductCategoryUncheckedCreateWithoutProductsInput = {
    id?: string
    parentId?: string | null
    name: string
    slug: string
    description?: string | null
    iconName?: string | null
    colorHex?: string | null
    sortOrder?: number
    productType: $Enums.ProductType
    thcCategory?: string | null
    consumptionMethod?: string | null
    metaTitle?: string | null
    metaDescription?: string | null
    isActive?: boolean
    requiresCompliance?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    children?: ProductCategoryUncheckedCreateNestedManyWithoutParentInput
  }

  export type ProductCategoryCreateOrConnectWithoutProductsInput = {
    where: ProductCategoryWhereUniqueInput
    create: XOR<ProductCategoryCreateWithoutProductsInput, ProductCategoryUncheckedCreateWithoutProductsInput>
  }

  export type ReviewCreateWithoutProductInput = {
    id?: string
    reviewableType: $Enums.ReviewableType
    rating: number
    title?: string | null
    content: string
    qualityRating?: number | null
    valueRating?: number | null
    serviceRating?: number | null
    effectsRating?: number | null
    effects?: NullableJsonNullValueInput | InputJsonValue
    medicalBenefits?: NullableJsonNullValueInput | InputJsonValue
    sideEffects?: NullableJsonNullValueInput | InputJsonValue
    images?: NullableJsonNullValueInput | InputJsonValue
    status?: $Enums.ReviewStatus
    moderatedAt?: Date | string | null
    moderatedBy?: string | null
    moderationReason?: string | null
    verifiedPurchase?: boolean
    helpfulCount?: number
    totalVotes?: number
    createdAt?: Date | string
    updatedAt?: Date | string
    user: UserCreateNestedOneWithoutReviewsInput
    order?: OrderCreateNestedOneWithoutReviewsInput
    store?: StoreCreateNestedOneWithoutReviewsInput
  }

  export type ReviewUncheckedCreateWithoutProductInput = {
    id?: string
    userId: string
    reviewableType: $Enums.ReviewableType
    rating: number
    title?: string | null
    content: string
    qualityRating?: number | null
    valueRating?: number | null
    serviceRating?: number | null
    effectsRating?: number | null
    effects?: NullableJsonNullValueInput | InputJsonValue
    medicalBenefits?: NullableJsonNullValueInput | InputJsonValue
    sideEffects?: NullableJsonNullValueInput | InputJsonValue
    images?: NullableJsonNullValueInput | InputJsonValue
    status?: $Enums.ReviewStatus
    moderatedAt?: Date | string | null
    moderatedBy?: string | null
    moderationReason?: string | null
    verifiedPurchase?: boolean
    orderId?: string | null
    helpfulCount?: number
    totalVotes?: number
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type ReviewCreateOrConnectWithoutProductInput = {
    where: ReviewWhereUniqueInput
    create: XOR<ReviewCreateWithoutProductInput, ReviewUncheckedCreateWithoutProductInput>
  }

  export type ReviewCreateManyProductInputEnvelope = {
    data: ReviewCreateManyProductInput | ReviewCreateManyProductInput[]
    skipDuplicates?: boolean
  }

  export type OrderItemCreateWithoutProductInput = {
    id?: string
    quantity: number
    unitPrice: Decimal | DecimalJsLike | number | string
    totalPrice: Decimal | DecimalJsLike | number | string
    productName: string
    productSku?: string | null
    productBrand?: string | null
    thcPercentage?: Decimal | DecimalJsLike | number | string | null
    cbdPercentage?: Decimal | DecimalJsLike | number | string | null
    weightGrams?: Decimal | DecimalJsLike | number | string | null
    metrcPackageId?: string | null
    batchNumber?: string | null
    customerNotes?: string | null
    createdAt?: Date | string
    order: OrderCreateNestedOneWithoutItemsInput
  }

  export type OrderItemUncheckedCreateWithoutProductInput = {
    id?: string
    orderId: string
    quantity: number
    unitPrice: Decimal | DecimalJsLike | number | string
    totalPrice: Decimal | DecimalJsLike | number | string
    productName: string
    productSku?: string | null
    productBrand?: string | null
    thcPercentage?: Decimal | DecimalJsLike | number | string | null
    cbdPercentage?: Decimal | DecimalJsLike | number | string | null
    weightGrams?: Decimal | DecimalJsLike | number | string | null
    metrcPackageId?: string | null
    batchNumber?: string | null
    customerNotes?: string | null
    createdAt?: Date | string
  }

  export type OrderItemCreateOrConnectWithoutProductInput = {
    where: OrderItemWhereUniqueInput
    create: XOR<OrderItemCreateWithoutProductInput, OrderItemUncheckedCreateWithoutProductInput>
  }

  export type OrderItemCreateManyProductInputEnvelope = {
    data: OrderItemCreateManyProductInput | OrderItemCreateManyProductInput[]
    skipDuplicates?: boolean
  }

  export type StoreUpsertWithoutProductsInput = {
    update: XOR<StoreUpdateWithoutProductsInput, StoreUncheckedUpdateWithoutProductsInput>
    create: XOR<StoreCreateWithoutProductsInput, StoreUncheckedCreateWithoutProductsInput>
    where?: StoreWhereInput
  }

  export type StoreUpdateToOneWithWhereWithoutProductsInput = {
    where?: StoreWhereInput
    data: XOR<StoreUpdateWithoutProductsInput, StoreUncheckedUpdateWithoutProductsInput>
  }

  export type StoreUpdateWithoutProductsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    website?: NullableStringFieldUpdateOperationsInput | string | null
    addressLine1?: StringFieldUpdateOperationsInput | string
    addressLine2?: NullableStringFieldUpdateOperationsInput | string | null
    city?: StringFieldUpdateOperationsInput | string
    state?: StringFieldUpdateOperationsInput | string
    postalCode?: StringFieldUpdateOperationsInput | string
    latitude?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    longitude?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    businessType?: EnumBusinessTypeFieldUpdateOperationsInput | $Enums.BusinessType
    licenseNumber?: StringFieldUpdateOperationsInput | string
    licenseType?: StringFieldUpdateOperationsInput | string
    licenseState?: StringFieldUpdateOperationsInput | string
    licenseExpiresAt?: DateTimeFieldUpdateOperationsInput | Date | string
    features?: NullableJsonNullValueInput | InputJsonValue
    paymentMethods?: NullableJsonNullValueInput | InputJsonValue
    deliveryRadius?: NullableIntFieldUpdateOperationsInput | number | null
    minimumOrder?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    deliveryFee?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    operatingHours?: NullableJsonNullValueInput | InputJsonValue
    status?: EnumStoreStatusFieldUpdateOperationsInput | $Enums.StoreStatus
    verified?: BoolFieldUpdateOperationsInput | boolean
    verifiedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    verifiedBy?: NullableStringFieldUpdateOperationsInput | string | null
    logoUrl?: NullableStringFieldUpdateOperationsInput | string | null
    coverImageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    galleryImages?: NullableJsonNullValueInput | InputJsonValue
    metaTitle?: NullableStringFieldUpdateOperationsInput | string | null
    metaDescription?: NullableStringFieldUpdateOperationsInput | string | null
    socialMedia?: NullableJsonNullValueInput | InputJsonValue
    metrcLicenseId?: NullableStringFieldUpdateOperationsInput | string | null
    metrcLastSync?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    complianceStatus?: EnumComplianceStatusFieldUpdateOperationsInput | $Enums.ComplianceStatus
    trackTraceSystem?: NullableEnumTrackTraceSystemFieldUpdateOperationsInput | $Enums.TrackTraceSystem | null
    totalProducts?: IntFieldUpdateOperationsInput | number
    averageRating?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    totalReviews?: IntFieldUpdateOperationsInput | number
    totalOrders?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    owner?: UserUpdateOneRequiredWithoutStoresNestedInput
    staff?: StoreStaffUpdateManyWithoutStoreNestedInput
    orders?: OrderUpdateManyWithoutStoreNestedInput
    reviews?: ReviewUpdateManyWithoutStoreNestedInput
  }

  export type StoreUncheckedUpdateWithoutProductsInput = {
    id?: StringFieldUpdateOperationsInput | string
    ownerId?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    website?: NullableStringFieldUpdateOperationsInput | string | null
    addressLine1?: StringFieldUpdateOperationsInput | string
    addressLine2?: NullableStringFieldUpdateOperationsInput | string | null
    city?: StringFieldUpdateOperationsInput | string
    state?: StringFieldUpdateOperationsInput | string
    postalCode?: StringFieldUpdateOperationsInput | string
    latitude?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    longitude?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    businessType?: EnumBusinessTypeFieldUpdateOperationsInput | $Enums.BusinessType
    licenseNumber?: StringFieldUpdateOperationsInput | string
    licenseType?: StringFieldUpdateOperationsInput | string
    licenseState?: StringFieldUpdateOperationsInput | string
    licenseExpiresAt?: DateTimeFieldUpdateOperationsInput | Date | string
    features?: NullableJsonNullValueInput | InputJsonValue
    paymentMethods?: NullableJsonNullValueInput | InputJsonValue
    deliveryRadius?: NullableIntFieldUpdateOperationsInput | number | null
    minimumOrder?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    deliveryFee?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    operatingHours?: NullableJsonNullValueInput | InputJsonValue
    status?: EnumStoreStatusFieldUpdateOperationsInput | $Enums.StoreStatus
    verified?: BoolFieldUpdateOperationsInput | boolean
    verifiedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    verifiedBy?: NullableStringFieldUpdateOperationsInput | string | null
    logoUrl?: NullableStringFieldUpdateOperationsInput | string | null
    coverImageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    galleryImages?: NullableJsonNullValueInput | InputJsonValue
    metaTitle?: NullableStringFieldUpdateOperationsInput | string | null
    metaDescription?: NullableStringFieldUpdateOperationsInput | string | null
    socialMedia?: NullableJsonNullValueInput | InputJsonValue
    metrcLicenseId?: NullableStringFieldUpdateOperationsInput | string | null
    metrcLastSync?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    complianceStatus?: EnumComplianceStatusFieldUpdateOperationsInput | $Enums.ComplianceStatus
    trackTraceSystem?: NullableEnumTrackTraceSystemFieldUpdateOperationsInput | $Enums.TrackTraceSystem | null
    totalProducts?: IntFieldUpdateOperationsInput | number
    averageRating?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    totalReviews?: IntFieldUpdateOperationsInput | number
    totalOrders?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    staff?: StoreStaffUncheckedUpdateManyWithoutStoreNestedInput
    orders?: OrderUncheckedUpdateManyWithoutStoreNestedInput
    reviews?: ReviewUncheckedUpdateManyWithoutStoreNestedInput
  }

  export type ProductCategoryUpsertWithoutProductsInput = {
    update: XOR<ProductCategoryUpdateWithoutProductsInput, ProductCategoryUncheckedUpdateWithoutProductsInput>
    create: XOR<ProductCategoryCreateWithoutProductsInput, ProductCategoryUncheckedCreateWithoutProductsInput>
    where?: ProductCategoryWhereInput
  }

  export type ProductCategoryUpdateToOneWithWhereWithoutProductsInput = {
    where?: ProductCategoryWhereInput
    data: XOR<ProductCategoryUpdateWithoutProductsInput, ProductCategoryUncheckedUpdateWithoutProductsInput>
  }

  export type ProductCategoryUpdateWithoutProductsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    iconName?: NullableStringFieldUpdateOperationsInput | string | null
    colorHex?: NullableStringFieldUpdateOperationsInput | string | null
    sortOrder?: IntFieldUpdateOperationsInput | number
    productType?: EnumProductTypeFieldUpdateOperationsInput | $Enums.ProductType
    thcCategory?: NullableStringFieldUpdateOperationsInput | string | null
    consumptionMethod?: NullableStringFieldUpdateOperationsInput | string | null
    metaTitle?: NullableStringFieldUpdateOperationsInput | string | null
    metaDescription?: NullableStringFieldUpdateOperationsInput | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    requiresCompliance?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    parent?: ProductCategoryUpdateOneWithoutChildrenNestedInput
    children?: ProductCategoryUpdateManyWithoutParentNestedInput
  }

  export type ProductCategoryUncheckedUpdateWithoutProductsInput = {
    id?: StringFieldUpdateOperationsInput | string
    parentId?: NullableStringFieldUpdateOperationsInput | string | null
    name?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    iconName?: NullableStringFieldUpdateOperationsInput | string | null
    colorHex?: NullableStringFieldUpdateOperationsInput | string | null
    sortOrder?: IntFieldUpdateOperationsInput | number
    productType?: EnumProductTypeFieldUpdateOperationsInput | $Enums.ProductType
    thcCategory?: NullableStringFieldUpdateOperationsInput | string | null
    consumptionMethod?: NullableStringFieldUpdateOperationsInput | string | null
    metaTitle?: NullableStringFieldUpdateOperationsInput | string | null
    metaDescription?: NullableStringFieldUpdateOperationsInput | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    requiresCompliance?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    children?: ProductCategoryUncheckedUpdateManyWithoutParentNestedInput
  }

  export type ReviewUpsertWithWhereUniqueWithoutProductInput = {
    where: ReviewWhereUniqueInput
    update: XOR<ReviewUpdateWithoutProductInput, ReviewUncheckedUpdateWithoutProductInput>
    create: XOR<ReviewCreateWithoutProductInput, ReviewUncheckedCreateWithoutProductInput>
  }

  export type ReviewUpdateWithWhereUniqueWithoutProductInput = {
    where: ReviewWhereUniqueInput
    data: XOR<ReviewUpdateWithoutProductInput, ReviewUncheckedUpdateWithoutProductInput>
  }

  export type ReviewUpdateManyWithWhereWithoutProductInput = {
    where: ReviewScalarWhereInput
    data: XOR<ReviewUpdateManyMutationInput, ReviewUncheckedUpdateManyWithoutProductInput>
  }

  export type OrderItemUpsertWithWhereUniqueWithoutProductInput = {
    where: OrderItemWhereUniqueInput
    update: XOR<OrderItemUpdateWithoutProductInput, OrderItemUncheckedUpdateWithoutProductInput>
    create: XOR<OrderItemCreateWithoutProductInput, OrderItemUncheckedCreateWithoutProductInput>
  }

  export type OrderItemUpdateWithWhereUniqueWithoutProductInput = {
    where: OrderItemWhereUniqueInput
    data: XOR<OrderItemUpdateWithoutProductInput, OrderItemUncheckedUpdateWithoutProductInput>
  }

  export type OrderItemUpdateManyWithWhereWithoutProductInput = {
    where: OrderItemScalarWhereInput
    data: XOR<OrderItemUpdateManyMutationInput, OrderItemUncheckedUpdateManyWithoutProductInput>
  }

  export type OrderItemScalarWhereInput = {
    AND?: OrderItemScalarWhereInput | OrderItemScalarWhereInput[]
    OR?: OrderItemScalarWhereInput[]
    NOT?: OrderItemScalarWhereInput | OrderItemScalarWhereInput[]
    id?: StringFilter<"OrderItem"> | string
    orderId?: StringFilter<"OrderItem"> | string
    productId?: StringFilter<"OrderItem"> | string
    quantity?: IntFilter<"OrderItem"> | number
    unitPrice?: DecimalFilter<"OrderItem"> | Decimal | DecimalJsLike | number | string
    totalPrice?: DecimalFilter<"OrderItem"> | Decimal | DecimalJsLike | number | string
    productName?: StringFilter<"OrderItem"> | string
    productSku?: StringNullableFilter<"OrderItem"> | string | null
    productBrand?: StringNullableFilter<"OrderItem"> | string | null
    thcPercentage?: DecimalNullableFilter<"OrderItem"> | Decimal | DecimalJsLike | number | string | null
    cbdPercentage?: DecimalNullableFilter<"OrderItem"> | Decimal | DecimalJsLike | number | string | null
    weightGrams?: DecimalNullableFilter<"OrderItem"> | Decimal | DecimalJsLike | number | string | null
    metrcPackageId?: StringNullableFilter<"OrderItem"> | string | null
    batchNumber?: StringNullableFilter<"OrderItem"> | string | null
    customerNotes?: StringNullableFilter<"OrderItem"> | string | null
    createdAt?: DateTimeFilter<"OrderItem"> | Date | string
  }

  export type UserCreateWithoutOrdersInput = {
    id?: string
    email: string
    emailVerified?: boolean
    passwordHash: string
    role?: $Enums.UserRole
    firstName?: string | null
    lastName?: string | null
    phone?: string | null
    dateOfBirth?: Date | string | null
    status?: $Enums.UserStatus
    lastLoginAt?: Date | string | null
    failedLoginAttempts?: number
    lockedUntil?: Date | string | null
    ageVerified?: boolean
    ageVerificationMethod?: $Enums.AgeVerificationMethod | null
    ageVerifiedAt?: Date | string | null
    termsAcceptedAt?: Date | string | null
    privacyAcceptedAt?: Date | string | null
    marketingConsent?: boolean
    gdprConsent?: boolean
    ccpaOptOut?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    createdBy?: string | null
    updatedBy?: string | null
    addresses?: UserAddressCreateNestedManyWithoutUserInput
    sessions?: UserSessionCreateNestedManyWithoutUserInput
    stores?: StoreCreateNestedManyWithoutOwnerInput
    reviews?: ReviewCreateNestedManyWithoutUserInput
    professional?: ProfessionalCreateNestedOneWithoutUserInput
    storeStaff?: StoreStaffCreateNestedManyWithoutUserInput
    consultationsAsPatient?: ConsultationCreateNestedManyWithoutPatientInput
    ageVerifier?: UserCreateNestedOneWithoutAgeVerificationsInput
    ageVerifications?: UserCreateNestedManyWithoutAgeVerifierInput
    blogPosts?: BlogPostCreateNestedManyWithoutAuthorInput
    factCheckedPosts?: BlogPostCreateNestedManyWithoutFactCheckerInput
  }

  export type UserUncheckedCreateWithoutOrdersInput = {
    id?: string
    email: string
    emailVerified?: boolean
    passwordHash: string
    role?: $Enums.UserRole
    firstName?: string | null
    lastName?: string | null
    phone?: string | null
    dateOfBirth?: Date | string | null
    status?: $Enums.UserStatus
    lastLoginAt?: Date | string | null
    failedLoginAttempts?: number
    lockedUntil?: Date | string | null
    ageVerified?: boolean
    ageVerificationMethod?: $Enums.AgeVerificationMethod | null
    ageVerifiedAt?: Date | string | null
    ageVerifiedBy?: string | null
    termsAcceptedAt?: Date | string | null
    privacyAcceptedAt?: Date | string | null
    marketingConsent?: boolean
    gdprConsent?: boolean
    ccpaOptOut?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    createdBy?: string | null
    updatedBy?: string | null
    addresses?: UserAddressUncheckedCreateNestedManyWithoutUserInput
    sessions?: UserSessionUncheckedCreateNestedManyWithoutUserInput
    stores?: StoreUncheckedCreateNestedManyWithoutOwnerInput
    reviews?: ReviewUncheckedCreateNestedManyWithoutUserInput
    professional?: ProfessionalUncheckedCreateNestedOneWithoutUserInput
    storeStaff?: StoreStaffUncheckedCreateNestedManyWithoutUserInput
    consultationsAsPatient?: ConsultationUncheckedCreateNestedManyWithoutPatientInput
    ageVerifications?: UserUncheckedCreateNestedManyWithoutAgeVerifierInput
    blogPosts?: BlogPostUncheckedCreateNestedManyWithoutAuthorInput
    factCheckedPosts?: BlogPostUncheckedCreateNestedManyWithoutFactCheckerInput
  }

  export type UserCreateOrConnectWithoutOrdersInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutOrdersInput, UserUncheckedCreateWithoutOrdersInput>
  }

  export type StoreCreateWithoutOrdersInput = {
    id?: string
    name: string
    slug: string
    description?: string | null
    email?: string | null
    phone?: string | null
    website?: string | null
    addressLine1: string
    addressLine2?: string | null
    city: string
    state: string
    postalCode: string
    latitude: Decimal | DecimalJsLike | number | string
    longitude: Decimal | DecimalJsLike | number | string
    businessType: $Enums.BusinessType
    licenseNumber: string
    licenseType: string
    licenseState: string
    licenseExpiresAt: Date | string
    features?: NullableJsonNullValueInput | InputJsonValue
    paymentMethods?: NullableJsonNullValueInput | InputJsonValue
    deliveryRadius?: number | null
    minimumOrder?: Decimal | DecimalJsLike | number | string | null
    deliveryFee?: Decimal | DecimalJsLike | number | string | null
    operatingHours?: NullableJsonNullValueInput | InputJsonValue
    status?: $Enums.StoreStatus
    verified?: boolean
    verifiedAt?: Date | string | null
    verifiedBy?: string | null
    logoUrl?: string | null
    coverImageUrl?: string | null
    galleryImages?: NullableJsonNullValueInput | InputJsonValue
    metaTitle?: string | null
    metaDescription?: string | null
    socialMedia?: NullableJsonNullValueInput | InputJsonValue
    metrcLicenseId?: string | null
    metrcLastSync?: Date | string | null
    complianceStatus?: $Enums.ComplianceStatus
    trackTraceSystem?: $Enums.TrackTraceSystem | null
    totalProducts?: number
    averageRating?: Decimal | DecimalJsLike | number | string
    totalReviews?: number
    totalOrders?: number
    createdAt?: Date | string
    updatedAt?: Date | string
    createdBy?: string | null
    updatedBy?: string | null
    owner: UserCreateNestedOneWithoutStoresInput
    staff?: StoreStaffCreateNestedManyWithoutStoreInput
    products?: ProductCreateNestedManyWithoutStoreInput
    reviews?: ReviewCreateNestedManyWithoutStoreInput
  }

  export type StoreUncheckedCreateWithoutOrdersInput = {
    id?: string
    ownerId: string
    name: string
    slug: string
    description?: string | null
    email?: string | null
    phone?: string | null
    website?: string | null
    addressLine1: string
    addressLine2?: string | null
    city: string
    state: string
    postalCode: string
    latitude: Decimal | DecimalJsLike | number | string
    longitude: Decimal | DecimalJsLike | number | string
    businessType: $Enums.BusinessType
    licenseNumber: string
    licenseType: string
    licenseState: string
    licenseExpiresAt: Date | string
    features?: NullableJsonNullValueInput | InputJsonValue
    paymentMethods?: NullableJsonNullValueInput | InputJsonValue
    deliveryRadius?: number | null
    minimumOrder?: Decimal | DecimalJsLike | number | string | null
    deliveryFee?: Decimal | DecimalJsLike | number | string | null
    operatingHours?: NullableJsonNullValueInput | InputJsonValue
    status?: $Enums.StoreStatus
    verified?: boolean
    verifiedAt?: Date | string | null
    verifiedBy?: string | null
    logoUrl?: string | null
    coverImageUrl?: string | null
    galleryImages?: NullableJsonNullValueInput | InputJsonValue
    metaTitle?: string | null
    metaDescription?: string | null
    socialMedia?: NullableJsonNullValueInput | InputJsonValue
    metrcLicenseId?: string | null
    metrcLastSync?: Date | string | null
    complianceStatus?: $Enums.ComplianceStatus
    trackTraceSystem?: $Enums.TrackTraceSystem | null
    totalProducts?: number
    averageRating?: Decimal | DecimalJsLike | number | string
    totalReviews?: number
    totalOrders?: number
    createdAt?: Date | string
    updatedAt?: Date | string
    createdBy?: string | null
    updatedBy?: string | null
    staff?: StoreStaffUncheckedCreateNestedManyWithoutStoreInput
    products?: ProductUncheckedCreateNestedManyWithoutStoreInput
    reviews?: ReviewUncheckedCreateNestedManyWithoutStoreInput
  }

  export type StoreCreateOrConnectWithoutOrdersInput = {
    where: StoreWhereUniqueInput
    create: XOR<StoreCreateWithoutOrdersInput, StoreUncheckedCreateWithoutOrdersInput>
  }

  export type OrderItemCreateWithoutOrderInput = {
    id?: string
    quantity: number
    unitPrice: Decimal | DecimalJsLike | number | string
    totalPrice: Decimal | DecimalJsLike | number | string
    productName: string
    productSku?: string | null
    productBrand?: string | null
    thcPercentage?: Decimal | DecimalJsLike | number | string | null
    cbdPercentage?: Decimal | DecimalJsLike | number | string | null
    weightGrams?: Decimal | DecimalJsLike | number | string | null
    metrcPackageId?: string | null
    batchNumber?: string | null
    customerNotes?: string | null
    createdAt?: Date | string
    product: ProductCreateNestedOneWithoutOrderItemsInput
  }

  export type OrderItemUncheckedCreateWithoutOrderInput = {
    id?: string
    productId: string
    quantity: number
    unitPrice: Decimal | DecimalJsLike | number | string
    totalPrice: Decimal | DecimalJsLike | number | string
    productName: string
    productSku?: string | null
    productBrand?: string | null
    thcPercentage?: Decimal | DecimalJsLike | number | string | null
    cbdPercentage?: Decimal | DecimalJsLike | number | string | null
    weightGrams?: Decimal | DecimalJsLike | number | string | null
    metrcPackageId?: string | null
    batchNumber?: string | null
    customerNotes?: string | null
    createdAt?: Date | string
  }

  export type OrderItemCreateOrConnectWithoutOrderInput = {
    where: OrderItemWhereUniqueInput
    create: XOR<OrderItemCreateWithoutOrderInput, OrderItemUncheckedCreateWithoutOrderInput>
  }

  export type OrderItemCreateManyOrderInputEnvelope = {
    data: OrderItemCreateManyOrderInput | OrderItemCreateManyOrderInput[]
    skipDuplicates?: boolean
  }

  export type ReviewCreateWithoutOrderInput = {
    id?: string
    reviewableType: $Enums.ReviewableType
    rating: number
    title?: string | null
    content: string
    qualityRating?: number | null
    valueRating?: number | null
    serviceRating?: number | null
    effectsRating?: number | null
    effects?: NullableJsonNullValueInput | InputJsonValue
    medicalBenefits?: NullableJsonNullValueInput | InputJsonValue
    sideEffects?: NullableJsonNullValueInput | InputJsonValue
    images?: NullableJsonNullValueInput | InputJsonValue
    status?: $Enums.ReviewStatus
    moderatedAt?: Date | string | null
    moderatedBy?: string | null
    moderationReason?: string | null
    verifiedPurchase?: boolean
    helpfulCount?: number
    totalVotes?: number
    createdAt?: Date | string
    updatedAt?: Date | string
    user: UserCreateNestedOneWithoutReviewsInput
    store?: StoreCreateNestedOneWithoutReviewsInput
    product?: ProductCreateNestedOneWithoutReviewsInput
  }

  export type ReviewUncheckedCreateWithoutOrderInput = {
    id?: string
    userId: string
    reviewableType: $Enums.ReviewableType
    reviewableId: string
    rating: number
    title?: string | null
    content: string
    qualityRating?: number | null
    valueRating?: number | null
    serviceRating?: number | null
    effectsRating?: number | null
    effects?: NullableJsonNullValueInput | InputJsonValue
    medicalBenefits?: NullableJsonNullValueInput | InputJsonValue
    sideEffects?: NullableJsonNullValueInput | InputJsonValue
    images?: NullableJsonNullValueInput | InputJsonValue
    status?: $Enums.ReviewStatus
    moderatedAt?: Date | string | null
    moderatedBy?: string | null
    moderationReason?: string | null
    verifiedPurchase?: boolean
    helpfulCount?: number
    totalVotes?: number
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type ReviewCreateOrConnectWithoutOrderInput = {
    where: ReviewWhereUniqueInput
    create: XOR<ReviewCreateWithoutOrderInput, ReviewUncheckedCreateWithoutOrderInput>
  }

  export type ReviewCreateManyOrderInputEnvelope = {
    data: ReviewCreateManyOrderInput | ReviewCreateManyOrderInput[]
    skipDuplicates?: boolean
  }

  export type UserUpsertWithoutOrdersInput = {
    update: XOR<UserUpdateWithoutOrdersInput, UserUncheckedUpdateWithoutOrdersInput>
    create: XOR<UserCreateWithoutOrdersInput, UserUncheckedCreateWithoutOrdersInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutOrdersInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutOrdersInput, UserUncheckedUpdateWithoutOrdersInput>
  }

  export type UserUpdateWithoutOrdersInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    emailVerified?: BoolFieldUpdateOperationsInput | boolean
    passwordHash?: StringFieldUpdateOperationsInput | string
    role?: EnumUserRoleFieldUpdateOperationsInput | $Enums.UserRole
    firstName?: NullableStringFieldUpdateOperationsInput | string | null
    lastName?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    dateOfBirth?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: EnumUserStatusFieldUpdateOperationsInput | $Enums.UserStatus
    lastLoginAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    failedLoginAttempts?: IntFieldUpdateOperationsInput | number
    lockedUntil?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    ageVerified?: BoolFieldUpdateOperationsInput | boolean
    ageVerificationMethod?: NullableEnumAgeVerificationMethodFieldUpdateOperationsInput | $Enums.AgeVerificationMethod | null
    ageVerifiedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    termsAcceptedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    privacyAcceptedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    marketingConsent?: BoolFieldUpdateOperationsInput | boolean
    gdprConsent?: BoolFieldUpdateOperationsInput | boolean
    ccpaOptOut?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    addresses?: UserAddressUpdateManyWithoutUserNestedInput
    sessions?: UserSessionUpdateManyWithoutUserNestedInput
    stores?: StoreUpdateManyWithoutOwnerNestedInput
    reviews?: ReviewUpdateManyWithoutUserNestedInput
    professional?: ProfessionalUpdateOneWithoutUserNestedInput
    storeStaff?: StoreStaffUpdateManyWithoutUserNestedInput
    consultationsAsPatient?: ConsultationUpdateManyWithoutPatientNestedInput
    ageVerifier?: UserUpdateOneWithoutAgeVerificationsNestedInput
    ageVerifications?: UserUpdateManyWithoutAgeVerifierNestedInput
    blogPosts?: BlogPostUpdateManyWithoutAuthorNestedInput
    factCheckedPosts?: BlogPostUpdateManyWithoutFactCheckerNestedInput
  }

  export type UserUncheckedUpdateWithoutOrdersInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    emailVerified?: BoolFieldUpdateOperationsInput | boolean
    passwordHash?: StringFieldUpdateOperationsInput | string
    role?: EnumUserRoleFieldUpdateOperationsInput | $Enums.UserRole
    firstName?: NullableStringFieldUpdateOperationsInput | string | null
    lastName?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    dateOfBirth?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: EnumUserStatusFieldUpdateOperationsInput | $Enums.UserStatus
    lastLoginAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    failedLoginAttempts?: IntFieldUpdateOperationsInput | number
    lockedUntil?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    ageVerified?: BoolFieldUpdateOperationsInput | boolean
    ageVerificationMethod?: NullableEnumAgeVerificationMethodFieldUpdateOperationsInput | $Enums.AgeVerificationMethod | null
    ageVerifiedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    ageVerifiedBy?: NullableStringFieldUpdateOperationsInput | string | null
    termsAcceptedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    privacyAcceptedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    marketingConsent?: BoolFieldUpdateOperationsInput | boolean
    gdprConsent?: BoolFieldUpdateOperationsInput | boolean
    ccpaOptOut?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    addresses?: UserAddressUncheckedUpdateManyWithoutUserNestedInput
    sessions?: UserSessionUncheckedUpdateManyWithoutUserNestedInput
    stores?: StoreUncheckedUpdateManyWithoutOwnerNestedInput
    reviews?: ReviewUncheckedUpdateManyWithoutUserNestedInput
    professional?: ProfessionalUncheckedUpdateOneWithoutUserNestedInput
    storeStaff?: StoreStaffUncheckedUpdateManyWithoutUserNestedInput
    consultationsAsPatient?: ConsultationUncheckedUpdateManyWithoutPatientNestedInput
    ageVerifications?: UserUncheckedUpdateManyWithoutAgeVerifierNestedInput
    blogPosts?: BlogPostUncheckedUpdateManyWithoutAuthorNestedInput
    factCheckedPosts?: BlogPostUncheckedUpdateManyWithoutFactCheckerNestedInput
  }

  export type StoreUpsertWithoutOrdersInput = {
    update: XOR<StoreUpdateWithoutOrdersInput, StoreUncheckedUpdateWithoutOrdersInput>
    create: XOR<StoreCreateWithoutOrdersInput, StoreUncheckedCreateWithoutOrdersInput>
    where?: StoreWhereInput
  }

  export type StoreUpdateToOneWithWhereWithoutOrdersInput = {
    where?: StoreWhereInput
    data: XOR<StoreUpdateWithoutOrdersInput, StoreUncheckedUpdateWithoutOrdersInput>
  }

  export type StoreUpdateWithoutOrdersInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    website?: NullableStringFieldUpdateOperationsInput | string | null
    addressLine1?: StringFieldUpdateOperationsInput | string
    addressLine2?: NullableStringFieldUpdateOperationsInput | string | null
    city?: StringFieldUpdateOperationsInput | string
    state?: StringFieldUpdateOperationsInput | string
    postalCode?: StringFieldUpdateOperationsInput | string
    latitude?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    longitude?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    businessType?: EnumBusinessTypeFieldUpdateOperationsInput | $Enums.BusinessType
    licenseNumber?: StringFieldUpdateOperationsInput | string
    licenseType?: StringFieldUpdateOperationsInput | string
    licenseState?: StringFieldUpdateOperationsInput | string
    licenseExpiresAt?: DateTimeFieldUpdateOperationsInput | Date | string
    features?: NullableJsonNullValueInput | InputJsonValue
    paymentMethods?: NullableJsonNullValueInput | InputJsonValue
    deliveryRadius?: NullableIntFieldUpdateOperationsInput | number | null
    minimumOrder?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    deliveryFee?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    operatingHours?: NullableJsonNullValueInput | InputJsonValue
    status?: EnumStoreStatusFieldUpdateOperationsInput | $Enums.StoreStatus
    verified?: BoolFieldUpdateOperationsInput | boolean
    verifiedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    verifiedBy?: NullableStringFieldUpdateOperationsInput | string | null
    logoUrl?: NullableStringFieldUpdateOperationsInput | string | null
    coverImageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    galleryImages?: NullableJsonNullValueInput | InputJsonValue
    metaTitle?: NullableStringFieldUpdateOperationsInput | string | null
    metaDescription?: NullableStringFieldUpdateOperationsInput | string | null
    socialMedia?: NullableJsonNullValueInput | InputJsonValue
    metrcLicenseId?: NullableStringFieldUpdateOperationsInput | string | null
    metrcLastSync?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    complianceStatus?: EnumComplianceStatusFieldUpdateOperationsInput | $Enums.ComplianceStatus
    trackTraceSystem?: NullableEnumTrackTraceSystemFieldUpdateOperationsInput | $Enums.TrackTraceSystem | null
    totalProducts?: IntFieldUpdateOperationsInput | number
    averageRating?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    totalReviews?: IntFieldUpdateOperationsInput | number
    totalOrders?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    owner?: UserUpdateOneRequiredWithoutStoresNestedInput
    staff?: StoreStaffUpdateManyWithoutStoreNestedInput
    products?: ProductUpdateManyWithoutStoreNestedInput
    reviews?: ReviewUpdateManyWithoutStoreNestedInput
  }

  export type StoreUncheckedUpdateWithoutOrdersInput = {
    id?: StringFieldUpdateOperationsInput | string
    ownerId?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    website?: NullableStringFieldUpdateOperationsInput | string | null
    addressLine1?: StringFieldUpdateOperationsInput | string
    addressLine2?: NullableStringFieldUpdateOperationsInput | string | null
    city?: StringFieldUpdateOperationsInput | string
    state?: StringFieldUpdateOperationsInput | string
    postalCode?: StringFieldUpdateOperationsInput | string
    latitude?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    longitude?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    businessType?: EnumBusinessTypeFieldUpdateOperationsInput | $Enums.BusinessType
    licenseNumber?: StringFieldUpdateOperationsInput | string
    licenseType?: StringFieldUpdateOperationsInput | string
    licenseState?: StringFieldUpdateOperationsInput | string
    licenseExpiresAt?: DateTimeFieldUpdateOperationsInput | Date | string
    features?: NullableJsonNullValueInput | InputJsonValue
    paymentMethods?: NullableJsonNullValueInput | InputJsonValue
    deliveryRadius?: NullableIntFieldUpdateOperationsInput | number | null
    minimumOrder?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    deliveryFee?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    operatingHours?: NullableJsonNullValueInput | InputJsonValue
    status?: EnumStoreStatusFieldUpdateOperationsInput | $Enums.StoreStatus
    verified?: BoolFieldUpdateOperationsInput | boolean
    verifiedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    verifiedBy?: NullableStringFieldUpdateOperationsInput | string | null
    logoUrl?: NullableStringFieldUpdateOperationsInput | string | null
    coverImageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    galleryImages?: NullableJsonNullValueInput | InputJsonValue
    metaTitle?: NullableStringFieldUpdateOperationsInput | string | null
    metaDescription?: NullableStringFieldUpdateOperationsInput | string | null
    socialMedia?: NullableJsonNullValueInput | InputJsonValue
    metrcLicenseId?: NullableStringFieldUpdateOperationsInput | string | null
    metrcLastSync?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    complianceStatus?: EnumComplianceStatusFieldUpdateOperationsInput | $Enums.ComplianceStatus
    trackTraceSystem?: NullableEnumTrackTraceSystemFieldUpdateOperationsInput | $Enums.TrackTraceSystem | null
    totalProducts?: IntFieldUpdateOperationsInput | number
    averageRating?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    totalReviews?: IntFieldUpdateOperationsInput | number
    totalOrders?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    staff?: StoreStaffUncheckedUpdateManyWithoutStoreNestedInput
    products?: ProductUncheckedUpdateManyWithoutStoreNestedInput
    reviews?: ReviewUncheckedUpdateManyWithoutStoreNestedInput
  }

  export type OrderItemUpsertWithWhereUniqueWithoutOrderInput = {
    where: OrderItemWhereUniqueInput
    update: XOR<OrderItemUpdateWithoutOrderInput, OrderItemUncheckedUpdateWithoutOrderInput>
    create: XOR<OrderItemCreateWithoutOrderInput, OrderItemUncheckedCreateWithoutOrderInput>
  }

  export type OrderItemUpdateWithWhereUniqueWithoutOrderInput = {
    where: OrderItemWhereUniqueInput
    data: XOR<OrderItemUpdateWithoutOrderInput, OrderItemUncheckedUpdateWithoutOrderInput>
  }

  export type OrderItemUpdateManyWithWhereWithoutOrderInput = {
    where: OrderItemScalarWhereInput
    data: XOR<OrderItemUpdateManyMutationInput, OrderItemUncheckedUpdateManyWithoutOrderInput>
  }

  export type ReviewUpsertWithWhereUniqueWithoutOrderInput = {
    where: ReviewWhereUniqueInput
    update: XOR<ReviewUpdateWithoutOrderInput, ReviewUncheckedUpdateWithoutOrderInput>
    create: XOR<ReviewCreateWithoutOrderInput, ReviewUncheckedCreateWithoutOrderInput>
  }

  export type ReviewUpdateWithWhereUniqueWithoutOrderInput = {
    where: ReviewWhereUniqueInput
    data: XOR<ReviewUpdateWithoutOrderInput, ReviewUncheckedUpdateWithoutOrderInput>
  }

  export type ReviewUpdateManyWithWhereWithoutOrderInput = {
    where: ReviewScalarWhereInput
    data: XOR<ReviewUpdateManyMutationInput, ReviewUncheckedUpdateManyWithoutOrderInput>
  }

  export type OrderCreateWithoutItemsInput = {
    id?: string
    orderNumber: string
    orderType: $Enums.OrderType
    fulfillmentStatus?: $Enums.OrderStatus
    deliveryAddress?: NullableJsonNullValueInput | InputJsonValue
    deliveryInstructions?: string | null
    deliveryTimeRequested?: Date | string | null
    deliveryTimeActual?: Date | string | null
    deliveryPersonId?: string | null
    subtotal: Decimal | DecimalJsLike | number | string
    taxAmount?: Decimal | DecimalJsLike | number | string
    deliveryFee?: Decimal | DecimalJsLike | number | string
    serviceFee?: Decimal | DecimalJsLike | number | string
    discountAmount?: Decimal | DecimalJsLike | number | string
    tipAmount?: Decimal | DecimalJsLike | number | string
    totalAmount: Decimal | DecimalJsLike | number | string
    paymentStatus?: $Enums.PaymentStatus
    paymentMethod: $Enums.PaymentMethod
    paymentProvider?: string | null
    paymentIntentId?: string | null
    ageVerifiedAtDelivery?: Date | string | null
    idCheckedBy?: string | null
    customerNotes?: string | null
    internalNotes?: string | null
    metrcTransferManifest?: string | null
    complianceCheckPassed?: boolean
    complianceCheckedAt?: Date | string | null
    complianceCheckedBy?: string | null
    cancelledAt?: Date | string | null
    cancelledBy?: string | null
    cancellationReason?: string | null
    refundAmount?: Decimal | DecimalJsLike | number | string
    createdAt?: Date | string
    updatedAt?: Date | string
    user: UserCreateNestedOneWithoutOrdersInput
    store: StoreCreateNestedOneWithoutOrdersInput
    reviews?: ReviewCreateNestedManyWithoutOrderInput
  }

  export type OrderUncheckedCreateWithoutItemsInput = {
    id?: string
    orderNumber: string
    userId: string
    storeId: string
    orderType: $Enums.OrderType
    fulfillmentStatus?: $Enums.OrderStatus
    deliveryAddress?: NullableJsonNullValueInput | InputJsonValue
    deliveryInstructions?: string | null
    deliveryTimeRequested?: Date | string | null
    deliveryTimeActual?: Date | string | null
    deliveryPersonId?: string | null
    subtotal: Decimal | DecimalJsLike | number | string
    taxAmount?: Decimal | DecimalJsLike | number | string
    deliveryFee?: Decimal | DecimalJsLike | number | string
    serviceFee?: Decimal | DecimalJsLike | number | string
    discountAmount?: Decimal | DecimalJsLike | number | string
    tipAmount?: Decimal | DecimalJsLike | number | string
    totalAmount: Decimal | DecimalJsLike | number | string
    paymentStatus?: $Enums.PaymentStatus
    paymentMethod: $Enums.PaymentMethod
    paymentProvider?: string | null
    paymentIntentId?: string | null
    ageVerifiedAtDelivery?: Date | string | null
    idCheckedBy?: string | null
    customerNotes?: string | null
    internalNotes?: string | null
    metrcTransferManifest?: string | null
    complianceCheckPassed?: boolean
    complianceCheckedAt?: Date | string | null
    complianceCheckedBy?: string | null
    cancelledAt?: Date | string | null
    cancelledBy?: string | null
    cancellationReason?: string | null
    refundAmount?: Decimal | DecimalJsLike | number | string
    createdAt?: Date | string
    updatedAt?: Date | string
    reviews?: ReviewUncheckedCreateNestedManyWithoutOrderInput
  }

  export type OrderCreateOrConnectWithoutItemsInput = {
    where: OrderWhereUniqueInput
    create: XOR<OrderCreateWithoutItemsInput, OrderUncheckedCreateWithoutItemsInput>
  }

  export type ProductCreateWithoutOrderItemsInput = {
    id?: string
    name: string
    slug: string
    description?: string | null
    shortDescription?: string | null
    strainName?: string | null
    strainType?: $Enums.StrainType | null
    brand?: string | null
    manufacturer?: string | null
    thcPercentage?: Decimal | DecimalJsLike | number | string | null
    cbdPercentage?: Decimal | DecimalJsLike | number | string | null
    thcaPercentage?: Decimal | DecimalJsLike | number | string | null
    cbdaPercentage?: Decimal | DecimalJsLike | number | string | null
    totalCannabinoids?: Decimal | DecimalJsLike | number | string | null
    basePrice: Decimal | DecimalJsLike | number | string
    salePrice?: Decimal | DecimalJsLike | number | string | null
    costPrice?: Decimal | DecimalJsLike | number | string | null
    weightGrams?: Decimal | DecimalJsLike | number | string | null
    sku: string
    barcode?: string | null
    stockQuantity?: number
    reservedQuantity?: number
    lowStockThreshold?: number
    metrcId?: string | null
    batchNumber?: string | null
    harvestDate?: Date | string | null
    packageDate?: Date | string | null
    expirationDate?: Date | string | null
    labTested?: boolean
    labTestResults?: NullableJsonNullValueInput | InputJsonValue
    testedDate?: Date | string | null
    testingLab?: string | null
    featuredImageUrl?: string | null
    galleryImages?: NullableJsonNullValueInput | InputJsonValue
    status?: $Enums.ProductStatus
    isFeatured?: boolean
    isMedicalOnly?: boolean
    ageRestriction?: number
    metaTitle?: string | null
    metaDescription?: string | null
    tags?: NullableJsonNullValueInput | InputJsonValue
    searchKeywords?: string | null
    viewCount?: number
    averageRating?: Decimal | DecimalJsLike | number | string
    reviewCount?: number
    salesCount?: number
    createdAt?: Date | string
    updatedAt?: Date | string
    createdBy?: string | null
    updatedBy?: string | null
    store: StoreCreateNestedOneWithoutProductsInput
    category: ProductCategoryCreateNestedOneWithoutProductsInput
    reviews?: ReviewCreateNestedManyWithoutProductInput
  }

  export type ProductUncheckedCreateWithoutOrderItemsInput = {
    id?: string
    storeId: string
    categoryId: string
    name: string
    slug: string
    description?: string | null
    shortDescription?: string | null
    strainName?: string | null
    strainType?: $Enums.StrainType | null
    brand?: string | null
    manufacturer?: string | null
    thcPercentage?: Decimal | DecimalJsLike | number | string | null
    cbdPercentage?: Decimal | DecimalJsLike | number | string | null
    thcaPercentage?: Decimal | DecimalJsLike | number | string | null
    cbdaPercentage?: Decimal | DecimalJsLike | number | string | null
    totalCannabinoids?: Decimal | DecimalJsLike | number | string | null
    basePrice: Decimal | DecimalJsLike | number | string
    salePrice?: Decimal | DecimalJsLike | number | string | null
    costPrice?: Decimal | DecimalJsLike | number | string | null
    weightGrams?: Decimal | DecimalJsLike | number | string | null
    sku: string
    barcode?: string | null
    stockQuantity?: number
    reservedQuantity?: number
    lowStockThreshold?: number
    metrcId?: string | null
    batchNumber?: string | null
    harvestDate?: Date | string | null
    packageDate?: Date | string | null
    expirationDate?: Date | string | null
    labTested?: boolean
    labTestResults?: NullableJsonNullValueInput | InputJsonValue
    testedDate?: Date | string | null
    testingLab?: string | null
    featuredImageUrl?: string | null
    galleryImages?: NullableJsonNullValueInput | InputJsonValue
    status?: $Enums.ProductStatus
    isFeatured?: boolean
    isMedicalOnly?: boolean
    ageRestriction?: number
    metaTitle?: string | null
    metaDescription?: string | null
    tags?: NullableJsonNullValueInput | InputJsonValue
    searchKeywords?: string | null
    viewCount?: number
    averageRating?: Decimal | DecimalJsLike | number | string
    reviewCount?: number
    salesCount?: number
    createdAt?: Date | string
    updatedAt?: Date | string
    createdBy?: string | null
    updatedBy?: string | null
    reviews?: ReviewUncheckedCreateNestedManyWithoutProductInput
  }

  export type ProductCreateOrConnectWithoutOrderItemsInput = {
    where: ProductWhereUniqueInput
    create: XOR<ProductCreateWithoutOrderItemsInput, ProductUncheckedCreateWithoutOrderItemsInput>
  }

  export type OrderUpsertWithoutItemsInput = {
    update: XOR<OrderUpdateWithoutItemsInput, OrderUncheckedUpdateWithoutItemsInput>
    create: XOR<OrderCreateWithoutItemsInput, OrderUncheckedCreateWithoutItemsInput>
    where?: OrderWhereInput
  }

  export type OrderUpdateToOneWithWhereWithoutItemsInput = {
    where?: OrderWhereInput
    data: XOR<OrderUpdateWithoutItemsInput, OrderUncheckedUpdateWithoutItemsInput>
  }

  export type OrderUpdateWithoutItemsInput = {
    id?: StringFieldUpdateOperationsInput | string
    orderNumber?: StringFieldUpdateOperationsInput | string
    orderType?: EnumOrderTypeFieldUpdateOperationsInput | $Enums.OrderType
    fulfillmentStatus?: EnumOrderStatusFieldUpdateOperationsInput | $Enums.OrderStatus
    deliveryAddress?: NullableJsonNullValueInput | InputJsonValue
    deliveryInstructions?: NullableStringFieldUpdateOperationsInput | string | null
    deliveryTimeRequested?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deliveryTimeActual?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deliveryPersonId?: NullableStringFieldUpdateOperationsInput | string | null
    subtotal?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    taxAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    deliveryFee?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    serviceFee?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    discountAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    tipAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    totalAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    paymentStatus?: EnumPaymentStatusFieldUpdateOperationsInput | $Enums.PaymentStatus
    paymentMethod?: EnumPaymentMethodFieldUpdateOperationsInput | $Enums.PaymentMethod
    paymentProvider?: NullableStringFieldUpdateOperationsInput | string | null
    paymentIntentId?: NullableStringFieldUpdateOperationsInput | string | null
    ageVerifiedAtDelivery?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    idCheckedBy?: NullableStringFieldUpdateOperationsInput | string | null
    customerNotes?: NullableStringFieldUpdateOperationsInput | string | null
    internalNotes?: NullableStringFieldUpdateOperationsInput | string | null
    metrcTransferManifest?: NullableStringFieldUpdateOperationsInput | string | null
    complianceCheckPassed?: BoolFieldUpdateOperationsInput | boolean
    complianceCheckedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    complianceCheckedBy?: NullableStringFieldUpdateOperationsInput | string | null
    cancelledAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    cancelledBy?: NullableStringFieldUpdateOperationsInput | string | null
    cancellationReason?: NullableStringFieldUpdateOperationsInput | string | null
    refundAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    user?: UserUpdateOneRequiredWithoutOrdersNestedInput
    store?: StoreUpdateOneRequiredWithoutOrdersNestedInput
    reviews?: ReviewUpdateManyWithoutOrderNestedInput
  }

  export type OrderUncheckedUpdateWithoutItemsInput = {
    id?: StringFieldUpdateOperationsInput | string
    orderNumber?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    storeId?: StringFieldUpdateOperationsInput | string
    orderType?: EnumOrderTypeFieldUpdateOperationsInput | $Enums.OrderType
    fulfillmentStatus?: EnumOrderStatusFieldUpdateOperationsInput | $Enums.OrderStatus
    deliveryAddress?: NullableJsonNullValueInput | InputJsonValue
    deliveryInstructions?: NullableStringFieldUpdateOperationsInput | string | null
    deliveryTimeRequested?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deliveryTimeActual?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deliveryPersonId?: NullableStringFieldUpdateOperationsInput | string | null
    subtotal?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    taxAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    deliveryFee?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    serviceFee?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    discountAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    tipAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    totalAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    paymentStatus?: EnumPaymentStatusFieldUpdateOperationsInput | $Enums.PaymentStatus
    paymentMethod?: EnumPaymentMethodFieldUpdateOperationsInput | $Enums.PaymentMethod
    paymentProvider?: NullableStringFieldUpdateOperationsInput | string | null
    paymentIntentId?: NullableStringFieldUpdateOperationsInput | string | null
    ageVerifiedAtDelivery?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    idCheckedBy?: NullableStringFieldUpdateOperationsInput | string | null
    customerNotes?: NullableStringFieldUpdateOperationsInput | string | null
    internalNotes?: NullableStringFieldUpdateOperationsInput | string | null
    metrcTransferManifest?: NullableStringFieldUpdateOperationsInput | string | null
    complianceCheckPassed?: BoolFieldUpdateOperationsInput | boolean
    complianceCheckedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    complianceCheckedBy?: NullableStringFieldUpdateOperationsInput | string | null
    cancelledAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    cancelledBy?: NullableStringFieldUpdateOperationsInput | string | null
    cancellationReason?: NullableStringFieldUpdateOperationsInput | string | null
    refundAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    reviews?: ReviewUncheckedUpdateManyWithoutOrderNestedInput
  }

  export type ProductUpsertWithoutOrderItemsInput = {
    update: XOR<ProductUpdateWithoutOrderItemsInput, ProductUncheckedUpdateWithoutOrderItemsInput>
    create: XOR<ProductCreateWithoutOrderItemsInput, ProductUncheckedCreateWithoutOrderItemsInput>
    where?: ProductWhereInput
  }

  export type ProductUpdateToOneWithWhereWithoutOrderItemsInput = {
    where?: ProductWhereInput
    data: XOR<ProductUpdateWithoutOrderItemsInput, ProductUncheckedUpdateWithoutOrderItemsInput>
  }

  export type ProductUpdateWithoutOrderItemsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    shortDescription?: NullableStringFieldUpdateOperationsInput | string | null
    strainName?: NullableStringFieldUpdateOperationsInput | string | null
    strainType?: NullableEnumStrainTypeFieldUpdateOperationsInput | $Enums.StrainType | null
    brand?: NullableStringFieldUpdateOperationsInput | string | null
    manufacturer?: NullableStringFieldUpdateOperationsInput | string | null
    thcPercentage?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    cbdPercentage?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    thcaPercentage?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    cbdaPercentage?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    totalCannabinoids?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    basePrice?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    salePrice?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    costPrice?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    weightGrams?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    sku?: StringFieldUpdateOperationsInput | string
    barcode?: NullableStringFieldUpdateOperationsInput | string | null
    stockQuantity?: IntFieldUpdateOperationsInput | number
    reservedQuantity?: IntFieldUpdateOperationsInput | number
    lowStockThreshold?: IntFieldUpdateOperationsInput | number
    metrcId?: NullableStringFieldUpdateOperationsInput | string | null
    batchNumber?: NullableStringFieldUpdateOperationsInput | string | null
    harvestDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    packageDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    expirationDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    labTested?: BoolFieldUpdateOperationsInput | boolean
    labTestResults?: NullableJsonNullValueInput | InputJsonValue
    testedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    testingLab?: NullableStringFieldUpdateOperationsInput | string | null
    featuredImageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    galleryImages?: NullableJsonNullValueInput | InputJsonValue
    status?: EnumProductStatusFieldUpdateOperationsInput | $Enums.ProductStatus
    isFeatured?: BoolFieldUpdateOperationsInput | boolean
    isMedicalOnly?: BoolFieldUpdateOperationsInput | boolean
    ageRestriction?: IntFieldUpdateOperationsInput | number
    metaTitle?: NullableStringFieldUpdateOperationsInput | string | null
    metaDescription?: NullableStringFieldUpdateOperationsInput | string | null
    tags?: NullableJsonNullValueInput | InputJsonValue
    searchKeywords?: NullableStringFieldUpdateOperationsInput | string | null
    viewCount?: IntFieldUpdateOperationsInput | number
    averageRating?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    reviewCount?: IntFieldUpdateOperationsInput | number
    salesCount?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    store?: StoreUpdateOneRequiredWithoutProductsNestedInput
    category?: ProductCategoryUpdateOneRequiredWithoutProductsNestedInput
    reviews?: ReviewUpdateManyWithoutProductNestedInput
  }

  export type ProductUncheckedUpdateWithoutOrderItemsInput = {
    id?: StringFieldUpdateOperationsInput | string
    storeId?: StringFieldUpdateOperationsInput | string
    categoryId?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    shortDescription?: NullableStringFieldUpdateOperationsInput | string | null
    strainName?: NullableStringFieldUpdateOperationsInput | string | null
    strainType?: NullableEnumStrainTypeFieldUpdateOperationsInput | $Enums.StrainType | null
    brand?: NullableStringFieldUpdateOperationsInput | string | null
    manufacturer?: NullableStringFieldUpdateOperationsInput | string | null
    thcPercentage?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    cbdPercentage?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    thcaPercentage?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    cbdaPercentage?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    totalCannabinoids?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    basePrice?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    salePrice?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    costPrice?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    weightGrams?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    sku?: StringFieldUpdateOperationsInput | string
    barcode?: NullableStringFieldUpdateOperationsInput | string | null
    stockQuantity?: IntFieldUpdateOperationsInput | number
    reservedQuantity?: IntFieldUpdateOperationsInput | number
    lowStockThreshold?: IntFieldUpdateOperationsInput | number
    metrcId?: NullableStringFieldUpdateOperationsInput | string | null
    batchNumber?: NullableStringFieldUpdateOperationsInput | string | null
    harvestDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    packageDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    expirationDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    labTested?: BoolFieldUpdateOperationsInput | boolean
    labTestResults?: NullableJsonNullValueInput | InputJsonValue
    testedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    testingLab?: NullableStringFieldUpdateOperationsInput | string | null
    featuredImageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    galleryImages?: NullableJsonNullValueInput | InputJsonValue
    status?: EnumProductStatusFieldUpdateOperationsInput | $Enums.ProductStatus
    isFeatured?: BoolFieldUpdateOperationsInput | boolean
    isMedicalOnly?: BoolFieldUpdateOperationsInput | boolean
    ageRestriction?: IntFieldUpdateOperationsInput | number
    metaTitle?: NullableStringFieldUpdateOperationsInput | string | null
    metaDescription?: NullableStringFieldUpdateOperationsInput | string | null
    tags?: NullableJsonNullValueInput | InputJsonValue
    searchKeywords?: NullableStringFieldUpdateOperationsInput | string | null
    viewCount?: IntFieldUpdateOperationsInput | number
    averageRating?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    reviewCount?: IntFieldUpdateOperationsInput | number
    salesCount?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    reviews?: ReviewUncheckedUpdateManyWithoutProductNestedInput
  }

  export type UserCreateWithoutReviewsInput = {
    id?: string
    email: string
    emailVerified?: boolean
    passwordHash: string
    role?: $Enums.UserRole
    firstName?: string | null
    lastName?: string | null
    phone?: string | null
    dateOfBirth?: Date | string | null
    status?: $Enums.UserStatus
    lastLoginAt?: Date | string | null
    failedLoginAttempts?: number
    lockedUntil?: Date | string | null
    ageVerified?: boolean
    ageVerificationMethod?: $Enums.AgeVerificationMethod | null
    ageVerifiedAt?: Date | string | null
    termsAcceptedAt?: Date | string | null
    privacyAcceptedAt?: Date | string | null
    marketingConsent?: boolean
    gdprConsent?: boolean
    ccpaOptOut?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    createdBy?: string | null
    updatedBy?: string | null
    addresses?: UserAddressCreateNestedManyWithoutUserInput
    sessions?: UserSessionCreateNestedManyWithoutUserInput
    stores?: StoreCreateNestedManyWithoutOwnerInput
    orders?: OrderCreateNestedManyWithoutUserInput
    professional?: ProfessionalCreateNestedOneWithoutUserInput
    storeStaff?: StoreStaffCreateNestedManyWithoutUserInput
    consultationsAsPatient?: ConsultationCreateNestedManyWithoutPatientInput
    ageVerifier?: UserCreateNestedOneWithoutAgeVerificationsInput
    ageVerifications?: UserCreateNestedManyWithoutAgeVerifierInput
    blogPosts?: BlogPostCreateNestedManyWithoutAuthorInput
    factCheckedPosts?: BlogPostCreateNestedManyWithoutFactCheckerInput
  }

  export type UserUncheckedCreateWithoutReviewsInput = {
    id?: string
    email: string
    emailVerified?: boolean
    passwordHash: string
    role?: $Enums.UserRole
    firstName?: string | null
    lastName?: string | null
    phone?: string | null
    dateOfBirth?: Date | string | null
    status?: $Enums.UserStatus
    lastLoginAt?: Date | string | null
    failedLoginAttempts?: number
    lockedUntil?: Date | string | null
    ageVerified?: boolean
    ageVerificationMethod?: $Enums.AgeVerificationMethod | null
    ageVerifiedAt?: Date | string | null
    ageVerifiedBy?: string | null
    termsAcceptedAt?: Date | string | null
    privacyAcceptedAt?: Date | string | null
    marketingConsent?: boolean
    gdprConsent?: boolean
    ccpaOptOut?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    createdBy?: string | null
    updatedBy?: string | null
    addresses?: UserAddressUncheckedCreateNestedManyWithoutUserInput
    sessions?: UserSessionUncheckedCreateNestedManyWithoutUserInput
    stores?: StoreUncheckedCreateNestedManyWithoutOwnerInput
    orders?: OrderUncheckedCreateNestedManyWithoutUserInput
    professional?: ProfessionalUncheckedCreateNestedOneWithoutUserInput
    storeStaff?: StoreStaffUncheckedCreateNestedManyWithoutUserInput
    consultationsAsPatient?: ConsultationUncheckedCreateNestedManyWithoutPatientInput
    ageVerifications?: UserUncheckedCreateNestedManyWithoutAgeVerifierInput
    blogPosts?: BlogPostUncheckedCreateNestedManyWithoutAuthorInput
    factCheckedPosts?: BlogPostUncheckedCreateNestedManyWithoutFactCheckerInput
  }

  export type UserCreateOrConnectWithoutReviewsInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutReviewsInput, UserUncheckedCreateWithoutReviewsInput>
  }

  export type OrderCreateWithoutReviewsInput = {
    id?: string
    orderNumber: string
    orderType: $Enums.OrderType
    fulfillmentStatus?: $Enums.OrderStatus
    deliveryAddress?: NullableJsonNullValueInput | InputJsonValue
    deliveryInstructions?: string | null
    deliveryTimeRequested?: Date | string | null
    deliveryTimeActual?: Date | string | null
    deliveryPersonId?: string | null
    subtotal: Decimal | DecimalJsLike | number | string
    taxAmount?: Decimal | DecimalJsLike | number | string
    deliveryFee?: Decimal | DecimalJsLike | number | string
    serviceFee?: Decimal | DecimalJsLike | number | string
    discountAmount?: Decimal | DecimalJsLike | number | string
    tipAmount?: Decimal | DecimalJsLike | number | string
    totalAmount: Decimal | DecimalJsLike | number | string
    paymentStatus?: $Enums.PaymentStatus
    paymentMethod: $Enums.PaymentMethod
    paymentProvider?: string | null
    paymentIntentId?: string | null
    ageVerifiedAtDelivery?: Date | string | null
    idCheckedBy?: string | null
    customerNotes?: string | null
    internalNotes?: string | null
    metrcTransferManifest?: string | null
    complianceCheckPassed?: boolean
    complianceCheckedAt?: Date | string | null
    complianceCheckedBy?: string | null
    cancelledAt?: Date | string | null
    cancelledBy?: string | null
    cancellationReason?: string | null
    refundAmount?: Decimal | DecimalJsLike | number | string
    createdAt?: Date | string
    updatedAt?: Date | string
    user: UserCreateNestedOneWithoutOrdersInput
    store: StoreCreateNestedOneWithoutOrdersInput
    items?: OrderItemCreateNestedManyWithoutOrderInput
  }

  export type OrderUncheckedCreateWithoutReviewsInput = {
    id?: string
    orderNumber: string
    userId: string
    storeId: string
    orderType: $Enums.OrderType
    fulfillmentStatus?: $Enums.OrderStatus
    deliveryAddress?: NullableJsonNullValueInput | InputJsonValue
    deliveryInstructions?: string | null
    deliveryTimeRequested?: Date | string | null
    deliveryTimeActual?: Date | string | null
    deliveryPersonId?: string | null
    subtotal: Decimal | DecimalJsLike | number | string
    taxAmount?: Decimal | DecimalJsLike | number | string
    deliveryFee?: Decimal | DecimalJsLike | number | string
    serviceFee?: Decimal | DecimalJsLike | number | string
    discountAmount?: Decimal | DecimalJsLike | number | string
    tipAmount?: Decimal | DecimalJsLike | number | string
    totalAmount: Decimal | DecimalJsLike | number | string
    paymentStatus?: $Enums.PaymentStatus
    paymentMethod: $Enums.PaymentMethod
    paymentProvider?: string | null
    paymentIntentId?: string | null
    ageVerifiedAtDelivery?: Date | string | null
    idCheckedBy?: string | null
    customerNotes?: string | null
    internalNotes?: string | null
    metrcTransferManifest?: string | null
    complianceCheckPassed?: boolean
    complianceCheckedAt?: Date | string | null
    complianceCheckedBy?: string | null
    cancelledAt?: Date | string | null
    cancelledBy?: string | null
    cancellationReason?: string | null
    refundAmount?: Decimal | DecimalJsLike | number | string
    createdAt?: Date | string
    updatedAt?: Date | string
    items?: OrderItemUncheckedCreateNestedManyWithoutOrderInput
  }

  export type OrderCreateOrConnectWithoutReviewsInput = {
    where: OrderWhereUniqueInput
    create: XOR<OrderCreateWithoutReviewsInput, OrderUncheckedCreateWithoutReviewsInput>
  }

  export type StoreCreateWithoutReviewsInput = {
    id?: string
    name: string
    slug: string
    description?: string | null
    email?: string | null
    phone?: string | null
    website?: string | null
    addressLine1: string
    addressLine2?: string | null
    city: string
    state: string
    postalCode: string
    latitude: Decimal | DecimalJsLike | number | string
    longitude: Decimal | DecimalJsLike | number | string
    businessType: $Enums.BusinessType
    licenseNumber: string
    licenseType: string
    licenseState: string
    licenseExpiresAt: Date | string
    features?: NullableJsonNullValueInput | InputJsonValue
    paymentMethods?: NullableJsonNullValueInput | InputJsonValue
    deliveryRadius?: number | null
    minimumOrder?: Decimal | DecimalJsLike | number | string | null
    deliveryFee?: Decimal | DecimalJsLike | number | string | null
    operatingHours?: NullableJsonNullValueInput | InputJsonValue
    status?: $Enums.StoreStatus
    verified?: boolean
    verifiedAt?: Date | string | null
    verifiedBy?: string | null
    logoUrl?: string | null
    coverImageUrl?: string | null
    galleryImages?: NullableJsonNullValueInput | InputJsonValue
    metaTitle?: string | null
    metaDescription?: string | null
    socialMedia?: NullableJsonNullValueInput | InputJsonValue
    metrcLicenseId?: string | null
    metrcLastSync?: Date | string | null
    complianceStatus?: $Enums.ComplianceStatus
    trackTraceSystem?: $Enums.TrackTraceSystem | null
    totalProducts?: number
    averageRating?: Decimal | DecimalJsLike | number | string
    totalReviews?: number
    totalOrders?: number
    createdAt?: Date | string
    updatedAt?: Date | string
    createdBy?: string | null
    updatedBy?: string | null
    owner: UserCreateNestedOneWithoutStoresInput
    staff?: StoreStaffCreateNestedManyWithoutStoreInput
    products?: ProductCreateNestedManyWithoutStoreInput
    orders?: OrderCreateNestedManyWithoutStoreInput
  }

  export type StoreUncheckedCreateWithoutReviewsInput = {
    id?: string
    ownerId: string
    name: string
    slug: string
    description?: string | null
    email?: string | null
    phone?: string | null
    website?: string | null
    addressLine1: string
    addressLine2?: string | null
    city: string
    state: string
    postalCode: string
    latitude: Decimal | DecimalJsLike | number | string
    longitude: Decimal | DecimalJsLike | number | string
    businessType: $Enums.BusinessType
    licenseNumber: string
    licenseType: string
    licenseState: string
    licenseExpiresAt: Date | string
    features?: NullableJsonNullValueInput | InputJsonValue
    paymentMethods?: NullableJsonNullValueInput | InputJsonValue
    deliveryRadius?: number | null
    minimumOrder?: Decimal | DecimalJsLike | number | string | null
    deliveryFee?: Decimal | DecimalJsLike | number | string | null
    operatingHours?: NullableJsonNullValueInput | InputJsonValue
    status?: $Enums.StoreStatus
    verified?: boolean
    verifiedAt?: Date | string | null
    verifiedBy?: string | null
    logoUrl?: string | null
    coverImageUrl?: string | null
    galleryImages?: NullableJsonNullValueInput | InputJsonValue
    metaTitle?: string | null
    metaDescription?: string | null
    socialMedia?: NullableJsonNullValueInput | InputJsonValue
    metrcLicenseId?: string | null
    metrcLastSync?: Date | string | null
    complianceStatus?: $Enums.ComplianceStatus
    trackTraceSystem?: $Enums.TrackTraceSystem | null
    totalProducts?: number
    averageRating?: Decimal | DecimalJsLike | number | string
    totalReviews?: number
    totalOrders?: number
    createdAt?: Date | string
    updatedAt?: Date | string
    createdBy?: string | null
    updatedBy?: string | null
    staff?: StoreStaffUncheckedCreateNestedManyWithoutStoreInput
    products?: ProductUncheckedCreateNestedManyWithoutStoreInput
    orders?: OrderUncheckedCreateNestedManyWithoutStoreInput
  }

  export type StoreCreateOrConnectWithoutReviewsInput = {
    where: StoreWhereUniqueInput
    create: XOR<StoreCreateWithoutReviewsInput, StoreUncheckedCreateWithoutReviewsInput>
  }

  export type ProductCreateWithoutReviewsInput = {
    id?: string
    name: string
    slug: string
    description?: string | null
    shortDescription?: string | null
    strainName?: string | null
    strainType?: $Enums.StrainType | null
    brand?: string | null
    manufacturer?: string | null
    thcPercentage?: Decimal | DecimalJsLike | number | string | null
    cbdPercentage?: Decimal | DecimalJsLike | number | string | null
    thcaPercentage?: Decimal | DecimalJsLike | number | string | null
    cbdaPercentage?: Decimal | DecimalJsLike | number | string | null
    totalCannabinoids?: Decimal | DecimalJsLike | number | string | null
    basePrice: Decimal | DecimalJsLike | number | string
    salePrice?: Decimal | DecimalJsLike | number | string | null
    costPrice?: Decimal | DecimalJsLike | number | string | null
    weightGrams?: Decimal | DecimalJsLike | number | string | null
    sku: string
    barcode?: string | null
    stockQuantity?: number
    reservedQuantity?: number
    lowStockThreshold?: number
    metrcId?: string | null
    batchNumber?: string | null
    harvestDate?: Date | string | null
    packageDate?: Date | string | null
    expirationDate?: Date | string | null
    labTested?: boolean
    labTestResults?: NullableJsonNullValueInput | InputJsonValue
    testedDate?: Date | string | null
    testingLab?: string | null
    featuredImageUrl?: string | null
    galleryImages?: NullableJsonNullValueInput | InputJsonValue
    status?: $Enums.ProductStatus
    isFeatured?: boolean
    isMedicalOnly?: boolean
    ageRestriction?: number
    metaTitle?: string | null
    metaDescription?: string | null
    tags?: NullableJsonNullValueInput | InputJsonValue
    searchKeywords?: string | null
    viewCount?: number
    averageRating?: Decimal | DecimalJsLike | number | string
    reviewCount?: number
    salesCount?: number
    createdAt?: Date | string
    updatedAt?: Date | string
    createdBy?: string | null
    updatedBy?: string | null
    store: StoreCreateNestedOneWithoutProductsInput
    category: ProductCategoryCreateNestedOneWithoutProductsInput
    orderItems?: OrderItemCreateNestedManyWithoutProductInput
  }

  export type ProductUncheckedCreateWithoutReviewsInput = {
    id?: string
    storeId: string
    categoryId: string
    name: string
    slug: string
    description?: string | null
    shortDescription?: string | null
    strainName?: string | null
    strainType?: $Enums.StrainType | null
    brand?: string | null
    manufacturer?: string | null
    thcPercentage?: Decimal | DecimalJsLike | number | string | null
    cbdPercentage?: Decimal | DecimalJsLike | number | string | null
    thcaPercentage?: Decimal | DecimalJsLike | number | string | null
    cbdaPercentage?: Decimal | DecimalJsLike | number | string | null
    totalCannabinoids?: Decimal | DecimalJsLike | number | string | null
    basePrice: Decimal | DecimalJsLike | number | string
    salePrice?: Decimal | DecimalJsLike | number | string | null
    costPrice?: Decimal | DecimalJsLike | number | string | null
    weightGrams?: Decimal | DecimalJsLike | number | string | null
    sku: string
    barcode?: string | null
    stockQuantity?: number
    reservedQuantity?: number
    lowStockThreshold?: number
    metrcId?: string | null
    batchNumber?: string | null
    harvestDate?: Date | string | null
    packageDate?: Date | string | null
    expirationDate?: Date | string | null
    labTested?: boolean
    labTestResults?: NullableJsonNullValueInput | InputJsonValue
    testedDate?: Date | string | null
    testingLab?: string | null
    featuredImageUrl?: string | null
    galleryImages?: NullableJsonNullValueInput | InputJsonValue
    status?: $Enums.ProductStatus
    isFeatured?: boolean
    isMedicalOnly?: boolean
    ageRestriction?: number
    metaTitle?: string | null
    metaDescription?: string | null
    tags?: NullableJsonNullValueInput | InputJsonValue
    searchKeywords?: string | null
    viewCount?: number
    averageRating?: Decimal | DecimalJsLike | number | string
    reviewCount?: number
    salesCount?: number
    createdAt?: Date | string
    updatedAt?: Date | string
    createdBy?: string | null
    updatedBy?: string | null
    orderItems?: OrderItemUncheckedCreateNestedManyWithoutProductInput
  }

  export type ProductCreateOrConnectWithoutReviewsInput = {
    where: ProductWhereUniqueInput
    create: XOR<ProductCreateWithoutReviewsInput, ProductUncheckedCreateWithoutReviewsInput>
  }

  export type UserUpsertWithoutReviewsInput = {
    update: XOR<UserUpdateWithoutReviewsInput, UserUncheckedUpdateWithoutReviewsInput>
    create: XOR<UserCreateWithoutReviewsInput, UserUncheckedCreateWithoutReviewsInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutReviewsInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutReviewsInput, UserUncheckedUpdateWithoutReviewsInput>
  }

  export type UserUpdateWithoutReviewsInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    emailVerified?: BoolFieldUpdateOperationsInput | boolean
    passwordHash?: StringFieldUpdateOperationsInput | string
    role?: EnumUserRoleFieldUpdateOperationsInput | $Enums.UserRole
    firstName?: NullableStringFieldUpdateOperationsInput | string | null
    lastName?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    dateOfBirth?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: EnumUserStatusFieldUpdateOperationsInput | $Enums.UserStatus
    lastLoginAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    failedLoginAttempts?: IntFieldUpdateOperationsInput | number
    lockedUntil?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    ageVerified?: BoolFieldUpdateOperationsInput | boolean
    ageVerificationMethod?: NullableEnumAgeVerificationMethodFieldUpdateOperationsInput | $Enums.AgeVerificationMethod | null
    ageVerifiedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    termsAcceptedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    privacyAcceptedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    marketingConsent?: BoolFieldUpdateOperationsInput | boolean
    gdprConsent?: BoolFieldUpdateOperationsInput | boolean
    ccpaOptOut?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    addresses?: UserAddressUpdateManyWithoutUserNestedInput
    sessions?: UserSessionUpdateManyWithoutUserNestedInput
    stores?: StoreUpdateManyWithoutOwnerNestedInput
    orders?: OrderUpdateManyWithoutUserNestedInput
    professional?: ProfessionalUpdateOneWithoutUserNestedInput
    storeStaff?: StoreStaffUpdateManyWithoutUserNestedInput
    consultationsAsPatient?: ConsultationUpdateManyWithoutPatientNestedInput
    ageVerifier?: UserUpdateOneWithoutAgeVerificationsNestedInput
    ageVerifications?: UserUpdateManyWithoutAgeVerifierNestedInput
    blogPosts?: BlogPostUpdateManyWithoutAuthorNestedInput
    factCheckedPosts?: BlogPostUpdateManyWithoutFactCheckerNestedInput
  }

  export type UserUncheckedUpdateWithoutReviewsInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    emailVerified?: BoolFieldUpdateOperationsInput | boolean
    passwordHash?: StringFieldUpdateOperationsInput | string
    role?: EnumUserRoleFieldUpdateOperationsInput | $Enums.UserRole
    firstName?: NullableStringFieldUpdateOperationsInput | string | null
    lastName?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    dateOfBirth?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: EnumUserStatusFieldUpdateOperationsInput | $Enums.UserStatus
    lastLoginAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    failedLoginAttempts?: IntFieldUpdateOperationsInput | number
    lockedUntil?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    ageVerified?: BoolFieldUpdateOperationsInput | boolean
    ageVerificationMethod?: NullableEnumAgeVerificationMethodFieldUpdateOperationsInput | $Enums.AgeVerificationMethod | null
    ageVerifiedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    ageVerifiedBy?: NullableStringFieldUpdateOperationsInput | string | null
    termsAcceptedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    privacyAcceptedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    marketingConsent?: BoolFieldUpdateOperationsInput | boolean
    gdprConsent?: BoolFieldUpdateOperationsInput | boolean
    ccpaOptOut?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    addresses?: UserAddressUncheckedUpdateManyWithoutUserNestedInput
    sessions?: UserSessionUncheckedUpdateManyWithoutUserNestedInput
    stores?: StoreUncheckedUpdateManyWithoutOwnerNestedInput
    orders?: OrderUncheckedUpdateManyWithoutUserNestedInput
    professional?: ProfessionalUncheckedUpdateOneWithoutUserNestedInput
    storeStaff?: StoreStaffUncheckedUpdateManyWithoutUserNestedInput
    consultationsAsPatient?: ConsultationUncheckedUpdateManyWithoutPatientNestedInput
    ageVerifications?: UserUncheckedUpdateManyWithoutAgeVerifierNestedInput
    blogPosts?: BlogPostUncheckedUpdateManyWithoutAuthorNestedInput
    factCheckedPosts?: BlogPostUncheckedUpdateManyWithoutFactCheckerNestedInput
  }

  export type OrderUpsertWithoutReviewsInput = {
    update: XOR<OrderUpdateWithoutReviewsInput, OrderUncheckedUpdateWithoutReviewsInput>
    create: XOR<OrderCreateWithoutReviewsInput, OrderUncheckedCreateWithoutReviewsInput>
    where?: OrderWhereInput
  }

  export type OrderUpdateToOneWithWhereWithoutReviewsInput = {
    where?: OrderWhereInput
    data: XOR<OrderUpdateWithoutReviewsInput, OrderUncheckedUpdateWithoutReviewsInput>
  }

  export type OrderUpdateWithoutReviewsInput = {
    id?: StringFieldUpdateOperationsInput | string
    orderNumber?: StringFieldUpdateOperationsInput | string
    orderType?: EnumOrderTypeFieldUpdateOperationsInput | $Enums.OrderType
    fulfillmentStatus?: EnumOrderStatusFieldUpdateOperationsInput | $Enums.OrderStatus
    deliveryAddress?: NullableJsonNullValueInput | InputJsonValue
    deliveryInstructions?: NullableStringFieldUpdateOperationsInput | string | null
    deliveryTimeRequested?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deliveryTimeActual?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deliveryPersonId?: NullableStringFieldUpdateOperationsInput | string | null
    subtotal?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    taxAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    deliveryFee?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    serviceFee?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    discountAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    tipAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    totalAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    paymentStatus?: EnumPaymentStatusFieldUpdateOperationsInput | $Enums.PaymentStatus
    paymentMethod?: EnumPaymentMethodFieldUpdateOperationsInput | $Enums.PaymentMethod
    paymentProvider?: NullableStringFieldUpdateOperationsInput | string | null
    paymentIntentId?: NullableStringFieldUpdateOperationsInput | string | null
    ageVerifiedAtDelivery?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    idCheckedBy?: NullableStringFieldUpdateOperationsInput | string | null
    customerNotes?: NullableStringFieldUpdateOperationsInput | string | null
    internalNotes?: NullableStringFieldUpdateOperationsInput | string | null
    metrcTransferManifest?: NullableStringFieldUpdateOperationsInput | string | null
    complianceCheckPassed?: BoolFieldUpdateOperationsInput | boolean
    complianceCheckedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    complianceCheckedBy?: NullableStringFieldUpdateOperationsInput | string | null
    cancelledAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    cancelledBy?: NullableStringFieldUpdateOperationsInput | string | null
    cancellationReason?: NullableStringFieldUpdateOperationsInput | string | null
    refundAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    user?: UserUpdateOneRequiredWithoutOrdersNestedInput
    store?: StoreUpdateOneRequiredWithoutOrdersNestedInput
    items?: OrderItemUpdateManyWithoutOrderNestedInput
  }

  export type OrderUncheckedUpdateWithoutReviewsInput = {
    id?: StringFieldUpdateOperationsInput | string
    orderNumber?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    storeId?: StringFieldUpdateOperationsInput | string
    orderType?: EnumOrderTypeFieldUpdateOperationsInput | $Enums.OrderType
    fulfillmentStatus?: EnumOrderStatusFieldUpdateOperationsInput | $Enums.OrderStatus
    deliveryAddress?: NullableJsonNullValueInput | InputJsonValue
    deliveryInstructions?: NullableStringFieldUpdateOperationsInput | string | null
    deliveryTimeRequested?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deliveryTimeActual?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deliveryPersonId?: NullableStringFieldUpdateOperationsInput | string | null
    subtotal?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    taxAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    deliveryFee?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    serviceFee?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    discountAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    tipAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    totalAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    paymentStatus?: EnumPaymentStatusFieldUpdateOperationsInput | $Enums.PaymentStatus
    paymentMethod?: EnumPaymentMethodFieldUpdateOperationsInput | $Enums.PaymentMethod
    paymentProvider?: NullableStringFieldUpdateOperationsInput | string | null
    paymentIntentId?: NullableStringFieldUpdateOperationsInput | string | null
    ageVerifiedAtDelivery?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    idCheckedBy?: NullableStringFieldUpdateOperationsInput | string | null
    customerNotes?: NullableStringFieldUpdateOperationsInput | string | null
    internalNotes?: NullableStringFieldUpdateOperationsInput | string | null
    metrcTransferManifest?: NullableStringFieldUpdateOperationsInput | string | null
    complianceCheckPassed?: BoolFieldUpdateOperationsInput | boolean
    complianceCheckedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    complianceCheckedBy?: NullableStringFieldUpdateOperationsInput | string | null
    cancelledAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    cancelledBy?: NullableStringFieldUpdateOperationsInput | string | null
    cancellationReason?: NullableStringFieldUpdateOperationsInput | string | null
    refundAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    items?: OrderItemUncheckedUpdateManyWithoutOrderNestedInput
  }

  export type StoreUpsertWithoutReviewsInput = {
    update: XOR<StoreUpdateWithoutReviewsInput, StoreUncheckedUpdateWithoutReviewsInput>
    create: XOR<StoreCreateWithoutReviewsInput, StoreUncheckedCreateWithoutReviewsInput>
    where?: StoreWhereInput
  }

  export type StoreUpdateToOneWithWhereWithoutReviewsInput = {
    where?: StoreWhereInput
    data: XOR<StoreUpdateWithoutReviewsInput, StoreUncheckedUpdateWithoutReviewsInput>
  }

  export type StoreUpdateWithoutReviewsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    website?: NullableStringFieldUpdateOperationsInput | string | null
    addressLine1?: StringFieldUpdateOperationsInput | string
    addressLine2?: NullableStringFieldUpdateOperationsInput | string | null
    city?: StringFieldUpdateOperationsInput | string
    state?: StringFieldUpdateOperationsInput | string
    postalCode?: StringFieldUpdateOperationsInput | string
    latitude?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    longitude?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    businessType?: EnumBusinessTypeFieldUpdateOperationsInput | $Enums.BusinessType
    licenseNumber?: StringFieldUpdateOperationsInput | string
    licenseType?: StringFieldUpdateOperationsInput | string
    licenseState?: StringFieldUpdateOperationsInput | string
    licenseExpiresAt?: DateTimeFieldUpdateOperationsInput | Date | string
    features?: NullableJsonNullValueInput | InputJsonValue
    paymentMethods?: NullableJsonNullValueInput | InputJsonValue
    deliveryRadius?: NullableIntFieldUpdateOperationsInput | number | null
    minimumOrder?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    deliveryFee?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    operatingHours?: NullableJsonNullValueInput | InputJsonValue
    status?: EnumStoreStatusFieldUpdateOperationsInput | $Enums.StoreStatus
    verified?: BoolFieldUpdateOperationsInput | boolean
    verifiedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    verifiedBy?: NullableStringFieldUpdateOperationsInput | string | null
    logoUrl?: NullableStringFieldUpdateOperationsInput | string | null
    coverImageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    galleryImages?: NullableJsonNullValueInput | InputJsonValue
    metaTitle?: NullableStringFieldUpdateOperationsInput | string | null
    metaDescription?: NullableStringFieldUpdateOperationsInput | string | null
    socialMedia?: NullableJsonNullValueInput | InputJsonValue
    metrcLicenseId?: NullableStringFieldUpdateOperationsInput | string | null
    metrcLastSync?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    complianceStatus?: EnumComplianceStatusFieldUpdateOperationsInput | $Enums.ComplianceStatus
    trackTraceSystem?: NullableEnumTrackTraceSystemFieldUpdateOperationsInput | $Enums.TrackTraceSystem | null
    totalProducts?: IntFieldUpdateOperationsInput | number
    averageRating?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    totalReviews?: IntFieldUpdateOperationsInput | number
    totalOrders?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    owner?: UserUpdateOneRequiredWithoutStoresNestedInput
    staff?: StoreStaffUpdateManyWithoutStoreNestedInput
    products?: ProductUpdateManyWithoutStoreNestedInput
    orders?: OrderUpdateManyWithoutStoreNestedInput
  }

  export type StoreUncheckedUpdateWithoutReviewsInput = {
    id?: StringFieldUpdateOperationsInput | string
    ownerId?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    website?: NullableStringFieldUpdateOperationsInput | string | null
    addressLine1?: StringFieldUpdateOperationsInput | string
    addressLine2?: NullableStringFieldUpdateOperationsInput | string | null
    city?: StringFieldUpdateOperationsInput | string
    state?: StringFieldUpdateOperationsInput | string
    postalCode?: StringFieldUpdateOperationsInput | string
    latitude?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    longitude?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    businessType?: EnumBusinessTypeFieldUpdateOperationsInput | $Enums.BusinessType
    licenseNumber?: StringFieldUpdateOperationsInput | string
    licenseType?: StringFieldUpdateOperationsInput | string
    licenseState?: StringFieldUpdateOperationsInput | string
    licenseExpiresAt?: DateTimeFieldUpdateOperationsInput | Date | string
    features?: NullableJsonNullValueInput | InputJsonValue
    paymentMethods?: NullableJsonNullValueInput | InputJsonValue
    deliveryRadius?: NullableIntFieldUpdateOperationsInput | number | null
    minimumOrder?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    deliveryFee?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    operatingHours?: NullableJsonNullValueInput | InputJsonValue
    status?: EnumStoreStatusFieldUpdateOperationsInput | $Enums.StoreStatus
    verified?: BoolFieldUpdateOperationsInput | boolean
    verifiedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    verifiedBy?: NullableStringFieldUpdateOperationsInput | string | null
    logoUrl?: NullableStringFieldUpdateOperationsInput | string | null
    coverImageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    galleryImages?: NullableJsonNullValueInput | InputJsonValue
    metaTitle?: NullableStringFieldUpdateOperationsInput | string | null
    metaDescription?: NullableStringFieldUpdateOperationsInput | string | null
    socialMedia?: NullableJsonNullValueInput | InputJsonValue
    metrcLicenseId?: NullableStringFieldUpdateOperationsInput | string | null
    metrcLastSync?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    complianceStatus?: EnumComplianceStatusFieldUpdateOperationsInput | $Enums.ComplianceStatus
    trackTraceSystem?: NullableEnumTrackTraceSystemFieldUpdateOperationsInput | $Enums.TrackTraceSystem | null
    totalProducts?: IntFieldUpdateOperationsInput | number
    averageRating?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    totalReviews?: IntFieldUpdateOperationsInput | number
    totalOrders?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    staff?: StoreStaffUncheckedUpdateManyWithoutStoreNestedInput
    products?: ProductUncheckedUpdateManyWithoutStoreNestedInput
    orders?: OrderUncheckedUpdateManyWithoutStoreNestedInput
  }

  export type ProductUpsertWithoutReviewsInput = {
    update: XOR<ProductUpdateWithoutReviewsInput, ProductUncheckedUpdateWithoutReviewsInput>
    create: XOR<ProductCreateWithoutReviewsInput, ProductUncheckedCreateWithoutReviewsInput>
    where?: ProductWhereInput
  }

  export type ProductUpdateToOneWithWhereWithoutReviewsInput = {
    where?: ProductWhereInput
    data: XOR<ProductUpdateWithoutReviewsInput, ProductUncheckedUpdateWithoutReviewsInput>
  }

  export type ProductUpdateWithoutReviewsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    shortDescription?: NullableStringFieldUpdateOperationsInput | string | null
    strainName?: NullableStringFieldUpdateOperationsInput | string | null
    strainType?: NullableEnumStrainTypeFieldUpdateOperationsInput | $Enums.StrainType | null
    brand?: NullableStringFieldUpdateOperationsInput | string | null
    manufacturer?: NullableStringFieldUpdateOperationsInput | string | null
    thcPercentage?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    cbdPercentage?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    thcaPercentage?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    cbdaPercentage?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    totalCannabinoids?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    basePrice?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    salePrice?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    costPrice?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    weightGrams?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    sku?: StringFieldUpdateOperationsInput | string
    barcode?: NullableStringFieldUpdateOperationsInput | string | null
    stockQuantity?: IntFieldUpdateOperationsInput | number
    reservedQuantity?: IntFieldUpdateOperationsInput | number
    lowStockThreshold?: IntFieldUpdateOperationsInput | number
    metrcId?: NullableStringFieldUpdateOperationsInput | string | null
    batchNumber?: NullableStringFieldUpdateOperationsInput | string | null
    harvestDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    packageDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    expirationDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    labTested?: BoolFieldUpdateOperationsInput | boolean
    labTestResults?: NullableJsonNullValueInput | InputJsonValue
    testedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    testingLab?: NullableStringFieldUpdateOperationsInput | string | null
    featuredImageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    galleryImages?: NullableJsonNullValueInput | InputJsonValue
    status?: EnumProductStatusFieldUpdateOperationsInput | $Enums.ProductStatus
    isFeatured?: BoolFieldUpdateOperationsInput | boolean
    isMedicalOnly?: BoolFieldUpdateOperationsInput | boolean
    ageRestriction?: IntFieldUpdateOperationsInput | number
    metaTitle?: NullableStringFieldUpdateOperationsInput | string | null
    metaDescription?: NullableStringFieldUpdateOperationsInput | string | null
    tags?: NullableJsonNullValueInput | InputJsonValue
    searchKeywords?: NullableStringFieldUpdateOperationsInput | string | null
    viewCount?: IntFieldUpdateOperationsInput | number
    averageRating?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    reviewCount?: IntFieldUpdateOperationsInput | number
    salesCount?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    store?: StoreUpdateOneRequiredWithoutProductsNestedInput
    category?: ProductCategoryUpdateOneRequiredWithoutProductsNestedInput
    orderItems?: OrderItemUpdateManyWithoutProductNestedInput
  }

  export type ProductUncheckedUpdateWithoutReviewsInput = {
    id?: StringFieldUpdateOperationsInput | string
    storeId?: StringFieldUpdateOperationsInput | string
    categoryId?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    shortDescription?: NullableStringFieldUpdateOperationsInput | string | null
    strainName?: NullableStringFieldUpdateOperationsInput | string | null
    strainType?: NullableEnumStrainTypeFieldUpdateOperationsInput | $Enums.StrainType | null
    brand?: NullableStringFieldUpdateOperationsInput | string | null
    manufacturer?: NullableStringFieldUpdateOperationsInput | string | null
    thcPercentage?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    cbdPercentage?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    thcaPercentage?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    cbdaPercentage?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    totalCannabinoids?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    basePrice?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    salePrice?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    costPrice?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    weightGrams?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    sku?: StringFieldUpdateOperationsInput | string
    barcode?: NullableStringFieldUpdateOperationsInput | string | null
    stockQuantity?: IntFieldUpdateOperationsInput | number
    reservedQuantity?: IntFieldUpdateOperationsInput | number
    lowStockThreshold?: IntFieldUpdateOperationsInput | number
    metrcId?: NullableStringFieldUpdateOperationsInput | string | null
    batchNumber?: NullableStringFieldUpdateOperationsInput | string | null
    harvestDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    packageDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    expirationDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    labTested?: BoolFieldUpdateOperationsInput | boolean
    labTestResults?: NullableJsonNullValueInput | InputJsonValue
    testedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    testingLab?: NullableStringFieldUpdateOperationsInput | string | null
    featuredImageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    galleryImages?: NullableJsonNullValueInput | InputJsonValue
    status?: EnumProductStatusFieldUpdateOperationsInput | $Enums.ProductStatus
    isFeatured?: BoolFieldUpdateOperationsInput | boolean
    isMedicalOnly?: BoolFieldUpdateOperationsInput | boolean
    ageRestriction?: IntFieldUpdateOperationsInput | number
    metaTitle?: NullableStringFieldUpdateOperationsInput | string | null
    metaDescription?: NullableStringFieldUpdateOperationsInput | string | null
    tags?: NullableJsonNullValueInput | InputJsonValue
    searchKeywords?: NullableStringFieldUpdateOperationsInput | string | null
    viewCount?: IntFieldUpdateOperationsInput | number
    averageRating?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    reviewCount?: IntFieldUpdateOperationsInput | number
    salesCount?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    orderItems?: OrderItemUncheckedUpdateManyWithoutProductNestedInput
  }

  export type UserCreateWithoutProfessionalInput = {
    id?: string
    email: string
    emailVerified?: boolean
    passwordHash: string
    role?: $Enums.UserRole
    firstName?: string | null
    lastName?: string | null
    phone?: string | null
    dateOfBirth?: Date | string | null
    status?: $Enums.UserStatus
    lastLoginAt?: Date | string | null
    failedLoginAttempts?: number
    lockedUntil?: Date | string | null
    ageVerified?: boolean
    ageVerificationMethod?: $Enums.AgeVerificationMethod | null
    ageVerifiedAt?: Date | string | null
    termsAcceptedAt?: Date | string | null
    privacyAcceptedAt?: Date | string | null
    marketingConsent?: boolean
    gdprConsent?: boolean
    ccpaOptOut?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    createdBy?: string | null
    updatedBy?: string | null
    addresses?: UserAddressCreateNestedManyWithoutUserInput
    sessions?: UserSessionCreateNestedManyWithoutUserInput
    stores?: StoreCreateNestedManyWithoutOwnerInput
    orders?: OrderCreateNestedManyWithoutUserInput
    reviews?: ReviewCreateNestedManyWithoutUserInput
    storeStaff?: StoreStaffCreateNestedManyWithoutUserInput
    consultationsAsPatient?: ConsultationCreateNestedManyWithoutPatientInput
    ageVerifier?: UserCreateNestedOneWithoutAgeVerificationsInput
    ageVerifications?: UserCreateNestedManyWithoutAgeVerifierInput
    blogPosts?: BlogPostCreateNestedManyWithoutAuthorInput
    factCheckedPosts?: BlogPostCreateNestedManyWithoutFactCheckerInput
  }

  export type UserUncheckedCreateWithoutProfessionalInput = {
    id?: string
    email: string
    emailVerified?: boolean
    passwordHash: string
    role?: $Enums.UserRole
    firstName?: string | null
    lastName?: string | null
    phone?: string | null
    dateOfBirth?: Date | string | null
    status?: $Enums.UserStatus
    lastLoginAt?: Date | string | null
    failedLoginAttempts?: number
    lockedUntil?: Date | string | null
    ageVerified?: boolean
    ageVerificationMethod?: $Enums.AgeVerificationMethod | null
    ageVerifiedAt?: Date | string | null
    ageVerifiedBy?: string | null
    termsAcceptedAt?: Date | string | null
    privacyAcceptedAt?: Date | string | null
    marketingConsent?: boolean
    gdprConsent?: boolean
    ccpaOptOut?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    createdBy?: string | null
    updatedBy?: string | null
    addresses?: UserAddressUncheckedCreateNestedManyWithoutUserInput
    sessions?: UserSessionUncheckedCreateNestedManyWithoutUserInput
    stores?: StoreUncheckedCreateNestedManyWithoutOwnerInput
    orders?: OrderUncheckedCreateNestedManyWithoutUserInput
    reviews?: ReviewUncheckedCreateNestedManyWithoutUserInput
    storeStaff?: StoreStaffUncheckedCreateNestedManyWithoutUserInput
    consultationsAsPatient?: ConsultationUncheckedCreateNestedManyWithoutPatientInput
    ageVerifications?: UserUncheckedCreateNestedManyWithoutAgeVerifierInput
    blogPosts?: BlogPostUncheckedCreateNestedManyWithoutAuthorInput
    factCheckedPosts?: BlogPostUncheckedCreateNestedManyWithoutFactCheckerInput
  }

  export type UserCreateOrConnectWithoutProfessionalInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutProfessionalInput, UserUncheckedCreateWithoutProfessionalInput>
  }

  export type ConsultationCreateWithoutProfessionalInput = {
    id?: string
    consultationType: $Enums.ConsultationType
    sessionType: $Enums.SessionType
    scheduledAt: Date | string
    durationMinutes?: number
    timezone: string
    status?: string
    meetingUrl?: string | null
    meetingId?: string | null
    meetingPassword?: string | null
    chiefComplaint?: string | null
    symptoms?: NullableJsonNullValueInput | InputJsonValue
    currentMedications?: NullableJsonNullValueInput | InputJsonValue
    cannabisExperience?: string | null
    previousCannabisUse?: string | null
    assessment?: string | null
    recommendations?: string | null
    prescribedProducts?: NullableJsonNullValueInput | InputJsonValue
    followUpNeeded?: boolean
    followUpDate?: Date | string | null
    consultationFee: Decimal | DecimalJsLike | number | string
    paymentStatus?: string
    paymentId?: string | null
    medicalConsentSigned?: boolean
    privacyConsentSigned?: boolean
    consultationAgreementSigned?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    patient: UserCreateNestedOneWithoutConsultationsAsPatientInput
  }

  export type ConsultationUncheckedCreateWithoutProfessionalInput = {
    id?: string
    patientId: string
    consultationType: $Enums.ConsultationType
    sessionType: $Enums.SessionType
    scheduledAt: Date | string
    durationMinutes?: number
    timezone: string
    status?: string
    meetingUrl?: string | null
    meetingId?: string | null
    meetingPassword?: string | null
    chiefComplaint?: string | null
    symptoms?: NullableJsonNullValueInput | InputJsonValue
    currentMedications?: NullableJsonNullValueInput | InputJsonValue
    cannabisExperience?: string | null
    previousCannabisUse?: string | null
    assessment?: string | null
    recommendations?: string | null
    prescribedProducts?: NullableJsonNullValueInput | InputJsonValue
    followUpNeeded?: boolean
    followUpDate?: Date | string | null
    consultationFee: Decimal | DecimalJsLike | number | string
    paymentStatus?: string
    paymentId?: string | null
    medicalConsentSigned?: boolean
    privacyConsentSigned?: boolean
    consultationAgreementSigned?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type ConsultationCreateOrConnectWithoutProfessionalInput = {
    where: ConsultationWhereUniqueInput
    create: XOR<ConsultationCreateWithoutProfessionalInput, ConsultationUncheckedCreateWithoutProfessionalInput>
  }

  export type ConsultationCreateManyProfessionalInputEnvelope = {
    data: ConsultationCreateManyProfessionalInput | ConsultationCreateManyProfessionalInput[]
    skipDuplicates?: boolean
  }

  export type UserUpsertWithoutProfessionalInput = {
    update: XOR<UserUpdateWithoutProfessionalInput, UserUncheckedUpdateWithoutProfessionalInput>
    create: XOR<UserCreateWithoutProfessionalInput, UserUncheckedCreateWithoutProfessionalInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutProfessionalInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutProfessionalInput, UserUncheckedUpdateWithoutProfessionalInput>
  }

  export type UserUpdateWithoutProfessionalInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    emailVerified?: BoolFieldUpdateOperationsInput | boolean
    passwordHash?: StringFieldUpdateOperationsInput | string
    role?: EnumUserRoleFieldUpdateOperationsInput | $Enums.UserRole
    firstName?: NullableStringFieldUpdateOperationsInput | string | null
    lastName?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    dateOfBirth?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: EnumUserStatusFieldUpdateOperationsInput | $Enums.UserStatus
    lastLoginAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    failedLoginAttempts?: IntFieldUpdateOperationsInput | number
    lockedUntil?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    ageVerified?: BoolFieldUpdateOperationsInput | boolean
    ageVerificationMethod?: NullableEnumAgeVerificationMethodFieldUpdateOperationsInput | $Enums.AgeVerificationMethod | null
    ageVerifiedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    termsAcceptedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    privacyAcceptedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    marketingConsent?: BoolFieldUpdateOperationsInput | boolean
    gdprConsent?: BoolFieldUpdateOperationsInput | boolean
    ccpaOptOut?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    addresses?: UserAddressUpdateManyWithoutUserNestedInput
    sessions?: UserSessionUpdateManyWithoutUserNestedInput
    stores?: StoreUpdateManyWithoutOwnerNestedInput
    orders?: OrderUpdateManyWithoutUserNestedInput
    reviews?: ReviewUpdateManyWithoutUserNestedInput
    storeStaff?: StoreStaffUpdateManyWithoutUserNestedInput
    consultationsAsPatient?: ConsultationUpdateManyWithoutPatientNestedInput
    ageVerifier?: UserUpdateOneWithoutAgeVerificationsNestedInput
    ageVerifications?: UserUpdateManyWithoutAgeVerifierNestedInput
    blogPosts?: BlogPostUpdateManyWithoutAuthorNestedInput
    factCheckedPosts?: BlogPostUpdateManyWithoutFactCheckerNestedInput
  }

  export type UserUncheckedUpdateWithoutProfessionalInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    emailVerified?: BoolFieldUpdateOperationsInput | boolean
    passwordHash?: StringFieldUpdateOperationsInput | string
    role?: EnumUserRoleFieldUpdateOperationsInput | $Enums.UserRole
    firstName?: NullableStringFieldUpdateOperationsInput | string | null
    lastName?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    dateOfBirth?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: EnumUserStatusFieldUpdateOperationsInput | $Enums.UserStatus
    lastLoginAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    failedLoginAttempts?: IntFieldUpdateOperationsInput | number
    lockedUntil?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    ageVerified?: BoolFieldUpdateOperationsInput | boolean
    ageVerificationMethod?: NullableEnumAgeVerificationMethodFieldUpdateOperationsInput | $Enums.AgeVerificationMethod | null
    ageVerifiedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    ageVerifiedBy?: NullableStringFieldUpdateOperationsInput | string | null
    termsAcceptedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    privacyAcceptedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    marketingConsent?: BoolFieldUpdateOperationsInput | boolean
    gdprConsent?: BoolFieldUpdateOperationsInput | boolean
    ccpaOptOut?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    addresses?: UserAddressUncheckedUpdateManyWithoutUserNestedInput
    sessions?: UserSessionUncheckedUpdateManyWithoutUserNestedInput
    stores?: StoreUncheckedUpdateManyWithoutOwnerNestedInput
    orders?: OrderUncheckedUpdateManyWithoutUserNestedInput
    reviews?: ReviewUncheckedUpdateManyWithoutUserNestedInput
    storeStaff?: StoreStaffUncheckedUpdateManyWithoutUserNestedInput
    consultationsAsPatient?: ConsultationUncheckedUpdateManyWithoutPatientNestedInput
    ageVerifications?: UserUncheckedUpdateManyWithoutAgeVerifierNestedInput
    blogPosts?: BlogPostUncheckedUpdateManyWithoutAuthorNestedInput
    factCheckedPosts?: BlogPostUncheckedUpdateManyWithoutFactCheckerNestedInput
  }

  export type ConsultationUpsertWithWhereUniqueWithoutProfessionalInput = {
    where: ConsultationWhereUniqueInput
    update: XOR<ConsultationUpdateWithoutProfessionalInput, ConsultationUncheckedUpdateWithoutProfessionalInput>
    create: XOR<ConsultationCreateWithoutProfessionalInput, ConsultationUncheckedCreateWithoutProfessionalInput>
  }

  export type ConsultationUpdateWithWhereUniqueWithoutProfessionalInput = {
    where: ConsultationWhereUniqueInput
    data: XOR<ConsultationUpdateWithoutProfessionalInput, ConsultationUncheckedUpdateWithoutProfessionalInput>
  }

  export type ConsultationUpdateManyWithWhereWithoutProfessionalInput = {
    where: ConsultationScalarWhereInput
    data: XOR<ConsultationUpdateManyMutationInput, ConsultationUncheckedUpdateManyWithoutProfessionalInput>
  }

  export type UserCreateWithoutConsultationsAsPatientInput = {
    id?: string
    email: string
    emailVerified?: boolean
    passwordHash: string
    role?: $Enums.UserRole
    firstName?: string | null
    lastName?: string | null
    phone?: string | null
    dateOfBirth?: Date | string | null
    status?: $Enums.UserStatus
    lastLoginAt?: Date | string | null
    failedLoginAttempts?: number
    lockedUntil?: Date | string | null
    ageVerified?: boolean
    ageVerificationMethod?: $Enums.AgeVerificationMethod | null
    ageVerifiedAt?: Date | string | null
    termsAcceptedAt?: Date | string | null
    privacyAcceptedAt?: Date | string | null
    marketingConsent?: boolean
    gdprConsent?: boolean
    ccpaOptOut?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    createdBy?: string | null
    updatedBy?: string | null
    addresses?: UserAddressCreateNestedManyWithoutUserInput
    sessions?: UserSessionCreateNestedManyWithoutUserInput
    stores?: StoreCreateNestedManyWithoutOwnerInput
    orders?: OrderCreateNestedManyWithoutUserInput
    reviews?: ReviewCreateNestedManyWithoutUserInput
    professional?: ProfessionalCreateNestedOneWithoutUserInput
    storeStaff?: StoreStaffCreateNestedManyWithoutUserInput
    ageVerifier?: UserCreateNestedOneWithoutAgeVerificationsInput
    ageVerifications?: UserCreateNestedManyWithoutAgeVerifierInput
    blogPosts?: BlogPostCreateNestedManyWithoutAuthorInput
    factCheckedPosts?: BlogPostCreateNestedManyWithoutFactCheckerInput
  }

  export type UserUncheckedCreateWithoutConsultationsAsPatientInput = {
    id?: string
    email: string
    emailVerified?: boolean
    passwordHash: string
    role?: $Enums.UserRole
    firstName?: string | null
    lastName?: string | null
    phone?: string | null
    dateOfBirth?: Date | string | null
    status?: $Enums.UserStatus
    lastLoginAt?: Date | string | null
    failedLoginAttempts?: number
    lockedUntil?: Date | string | null
    ageVerified?: boolean
    ageVerificationMethod?: $Enums.AgeVerificationMethod | null
    ageVerifiedAt?: Date | string | null
    ageVerifiedBy?: string | null
    termsAcceptedAt?: Date | string | null
    privacyAcceptedAt?: Date | string | null
    marketingConsent?: boolean
    gdprConsent?: boolean
    ccpaOptOut?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    createdBy?: string | null
    updatedBy?: string | null
    addresses?: UserAddressUncheckedCreateNestedManyWithoutUserInput
    sessions?: UserSessionUncheckedCreateNestedManyWithoutUserInput
    stores?: StoreUncheckedCreateNestedManyWithoutOwnerInput
    orders?: OrderUncheckedCreateNestedManyWithoutUserInput
    reviews?: ReviewUncheckedCreateNestedManyWithoutUserInput
    professional?: ProfessionalUncheckedCreateNestedOneWithoutUserInput
    storeStaff?: StoreStaffUncheckedCreateNestedManyWithoutUserInput
    ageVerifications?: UserUncheckedCreateNestedManyWithoutAgeVerifierInput
    blogPosts?: BlogPostUncheckedCreateNestedManyWithoutAuthorInput
    factCheckedPosts?: BlogPostUncheckedCreateNestedManyWithoutFactCheckerInput
  }

  export type UserCreateOrConnectWithoutConsultationsAsPatientInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutConsultationsAsPatientInput, UserUncheckedCreateWithoutConsultationsAsPatientInput>
  }

  export type ProfessionalCreateWithoutConsultationsInput = {
    id?: string
    professionalType: $Enums.ProfessionalType
    licenseNumber: string
    licenseState: string
    licenseExpiresAt: Date | string
    specializations?: NullableJsonNullValueInput | InputJsonValue
    certifications?: NullableJsonNullValueInput | InputJsonValue
    practiceName?: string | null
    practiceAddress?: NullableJsonNullValueInput | InputJsonValue
    practicePhone?: string | null
    practiceWebsite?: string | null
    cannabisExperienceYears?: number | null
    cannabisCertifications?: NullableJsonNullValueInput | InputJsonValue
    preferredProducts?: NullableJsonNullValueInput | InputJsonValue
    treatmentApproaches?: NullableJsonNullValueInput | InputJsonValue
    consultationTypes?: NullableJsonNullValueInput | InputJsonValue
    hourlyRate?: Decimal | DecimalJsLike | number | string | null
    acceptsInsurance?: boolean
    insuranceProviders?: NullableJsonNullValueInput | InputJsonValue
    verified?: boolean
    verifiedAt?: Date | string | null
    verifiedBy?: string | null
    verificationDocuments?: NullableJsonNullValueInput | InputJsonValue
    consultationCount?: number
    averageRating?: Decimal | DecimalJsLike | number | string
    reviewCount?: number
    status?: string
    acceptingNewPatients?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    user: UserCreateNestedOneWithoutProfessionalInput
  }

  export type ProfessionalUncheckedCreateWithoutConsultationsInput = {
    id?: string
    userId: string
    professionalType: $Enums.ProfessionalType
    licenseNumber: string
    licenseState: string
    licenseExpiresAt: Date | string
    specializations?: NullableJsonNullValueInput | InputJsonValue
    certifications?: NullableJsonNullValueInput | InputJsonValue
    practiceName?: string | null
    practiceAddress?: NullableJsonNullValueInput | InputJsonValue
    practicePhone?: string | null
    practiceWebsite?: string | null
    cannabisExperienceYears?: number | null
    cannabisCertifications?: NullableJsonNullValueInput | InputJsonValue
    preferredProducts?: NullableJsonNullValueInput | InputJsonValue
    treatmentApproaches?: NullableJsonNullValueInput | InputJsonValue
    consultationTypes?: NullableJsonNullValueInput | InputJsonValue
    hourlyRate?: Decimal | DecimalJsLike | number | string | null
    acceptsInsurance?: boolean
    insuranceProviders?: NullableJsonNullValueInput | InputJsonValue
    verified?: boolean
    verifiedAt?: Date | string | null
    verifiedBy?: string | null
    verificationDocuments?: NullableJsonNullValueInput | InputJsonValue
    consultationCount?: number
    averageRating?: Decimal | DecimalJsLike | number | string
    reviewCount?: number
    status?: string
    acceptingNewPatients?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type ProfessionalCreateOrConnectWithoutConsultationsInput = {
    where: ProfessionalWhereUniqueInput
    create: XOR<ProfessionalCreateWithoutConsultationsInput, ProfessionalUncheckedCreateWithoutConsultationsInput>
  }

  export type UserUpsertWithoutConsultationsAsPatientInput = {
    update: XOR<UserUpdateWithoutConsultationsAsPatientInput, UserUncheckedUpdateWithoutConsultationsAsPatientInput>
    create: XOR<UserCreateWithoutConsultationsAsPatientInput, UserUncheckedCreateWithoutConsultationsAsPatientInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutConsultationsAsPatientInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutConsultationsAsPatientInput, UserUncheckedUpdateWithoutConsultationsAsPatientInput>
  }

  export type UserUpdateWithoutConsultationsAsPatientInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    emailVerified?: BoolFieldUpdateOperationsInput | boolean
    passwordHash?: StringFieldUpdateOperationsInput | string
    role?: EnumUserRoleFieldUpdateOperationsInput | $Enums.UserRole
    firstName?: NullableStringFieldUpdateOperationsInput | string | null
    lastName?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    dateOfBirth?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: EnumUserStatusFieldUpdateOperationsInput | $Enums.UserStatus
    lastLoginAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    failedLoginAttempts?: IntFieldUpdateOperationsInput | number
    lockedUntil?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    ageVerified?: BoolFieldUpdateOperationsInput | boolean
    ageVerificationMethod?: NullableEnumAgeVerificationMethodFieldUpdateOperationsInput | $Enums.AgeVerificationMethod | null
    ageVerifiedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    termsAcceptedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    privacyAcceptedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    marketingConsent?: BoolFieldUpdateOperationsInput | boolean
    gdprConsent?: BoolFieldUpdateOperationsInput | boolean
    ccpaOptOut?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    addresses?: UserAddressUpdateManyWithoutUserNestedInput
    sessions?: UserSessionUpdateManyWithoutUserNestedInput
    stores?: StoreUpdateManyWithoutOwnerNestedInput
    orders?: OrderUpdateManyWithoutUserNestedInput
    reviews?: ReviewUpdateManyWithoutUserNestedInput
    professional?: ProfessionalUpdateOneWithoutUserNestedInput
    storeStaff?: StoreStaffUpdateManyWithoutUserNestedInput
    ageVerifier?: UserUpdateOneWithoutAgeVerificationsNestedInput
    ageVerifications?: UserUpdateManyWithoutAgeVerifierNestedInput
    blogPosts?: BlogPostUpdateManyWithoutAuthorNestedInput
    factCheckedPosts?: BlogPostUpdateManyWithoutFactCheckerNestedInput
  }

  export type UserUncheckedUpdateWithoutConsultationsAsPatientInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    emailVerified?: BoolFieldUpdateOperationsInput | boolean
    passwordHash?: StringFieldUpdateOperationsInput | string
    role?: EnumUserRoleFieldUpdateOperationsInput | $Enums.UserRole
    firstName?: NullableStringFieldUpdateOperationsInput | string | null
    lastName?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    dateOfBirth?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: EnumUserStatusFieldUpdateOperationsInput | $Enums.UserStatus
    lastLoginAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    failedLoginAttempts?: IntFieldUpdateOperationsInput | number
    lockedUntil?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    ageVerified?: BoolFieldUpdateOperationsInput | boolean
    ageVerificationMethod?: NullableEnumAgeVerificationMethodFieldUpdateOperationsInput | $Enums.AgeVerificationMethod | null
    ageVerifiedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    ageVerifiedBy?: NullableStringFieldUpdateOperationsInput | string | null
    termsAcceptedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    privacyAcceptedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    marketingConsent?: BoolFieldUpdateOperationsInput | boolean
    gdprConsent?: BoolFieldUpdateOperationsInput | boolean
    ccpaOptOut?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    addresses?: UserAddressUncheckedUpdateManyWithoutUserNestedInput
    sessions?: UserSessionUncheckedUpdateManyWithoutUserNestedInput
    stores?: StoreUncheckedUpdateManyWithoutOwnerNestedInput
    orders?: OrderUncheckedUpdateManyWithoutUserNestedInput
    reviews?: ReviewUncheckedUpdateManyWithoutUserNestedInput
    professional?: ProfessionalUncheckedUpdateOneWithoutUserNestedInput
    storeStaff?: StoreStaffUncheckedUpdateManyWithoutUserNestedInput
    ageVerifications?: UserUncheckedUpdateManyWithoutAgeVerifierNestedInput
    blogPosts?: BlogPostUncheckedUpdateManyWithoutAuthorNestedInput
    factCheckedPosts?: BlogPostUncheckedUpdateManyWithoutFactCheckerNestedInput
  }

  export type ProfessionalUpsertWithoutConsultationsInput = {
    update: XOR<ProfessionalUpdateWithoutConsultationsInput, ProfessionalUncheckedUpdateWithoutConsultationsInput>
    create: XOR<ProfessionalCreateWithoutConsultationsInput, ProfessionalUncheckedCreateWithoutConsultationsInput>
    where?: ProfessionalWhereInput
  }

  export type ProfessionalUpdateToOneWithWhereWithoutConsultationsInput = {
    where?: ProfessionalWhereInput
    data: XOR<ProfessionalUpdateWithoutConsultationsInput, ProfessionalUncheckedUpdateWithoutConsultationsInput>
  }

  export type ProfessionalUpdateWithoutConsultationsInput = {
    id?: StringFieldUpdateOperationsInput | string
    professionalType?: EnumProfessionalTypeFieldUpdateOperationsInput | $Enums.ProfessionalType
    licenseNumber?: StringFieldUpdateOperationsInput | string
    licenseState?: StringFieldUpdateOperationsInput | string
    licenseExpiresAt?: DateTimeFieldUpdateOperationsInput | Date | string
    specializations?: NullableJsonNullValueInput | InputJsonValue
    certifications?: NullableJsonNullValueInput | InputJsonValue
    practiceName?: NullableStringFieldUpdateOperationsInput | string | null
    practiceAddress?: NullableJsonNullValueInput | InputJsonValue
    practicePhone?: NullableStringFieldUpdateOperationsInput | string | null
    practiceWebsite?: NullableStringFieldUpdateOperationsInput | string | null
    cannabisExperienceYears?: NullableIntFieldUpdateOperationsInput | number | null
    cannabisCertifications?: NullableJsonNullValueInput | InputJsonValue
    preferredProducts?: NullableJsonNullValueInput | InputJsonValue
    treatmentApproaches?: NullableJsonNullValueInput | InputJsonValue
    consultationTypes?: NullableJsonNullValueInput | InputJsonValue
    hourlyRate?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    acceptsInsurance?: BoolFieldUpdateOperationsInput | boolean
    insuranceProviders?: NullableJsonNullValueInput | InputJsonValue
    verified?: BoolFieldUpdateOperationsInput | boolean
    verifiedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    verifiedBy?: NullableStringFieldUpdateOperationsInput | string | null
    verificationDocuments?: NullableJsonNullValueInput | InputJsonValue
    consultationCount?: IntFieldUpdateOperationsInput | number
    averageRating?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    reviewCount?: IntFieldUpdateOperationsInput | number
    status?: StringFieldUpdateOperationsInput | string
    acceptingNewPatients?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    user?: UserUpdateOneRequiredWithoutProfessionalNestedInput
  }

  export type ProfessionalUncheckedUpdateWithoutConsultationsInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    professionalType?: EnumProfessionalTypeFieldUpdateOperationsInput | $Enums.ProfessionalType
    licenseNumber?: StringFieldUpdateOperationsInput | string
    licenseState?: StringFieldUpdateOperationsInput | string
    licenseExpiresAt?: DateTimeFieldUpdateOperationsInput | Date | string
    specializations?: NullableJsonNullValueInput | InputJsonValue
    certifications?: NullableJsonNullValueInput | InputJsonValue
    practiceName?: NullableStringFieldUpdateOperationsInput | string | null
    practiceAddress?: NullableJsonNullValueInput | InputJsonValue
    practicePhone?: NullableStringFieldUpdateOperationsInput | string | null
    practiceWebsite?: NullableStringFieldUpdateOperationsInput | string | null
    cannabisExperienceYears?: NullableIntFieldUpdateOperationsInput | number | null
    cannabisCertifications?: NullableJsonNullValueInput | InputJsonValue
    preferredProducts?: NullableJsonNullValueInput | InputJsonValue
    treatmentApproaches?: NullableJsonNullValueInput | InputJsonValue
    consultationTypes?: NullableJsonNullValueInput | InputJsonValue
    hourlyRate?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    acceptsInsurance?: BoolFieldUpdateOperationsInput | boolean
    insuranceProviders?: NullableJsonNullValueInput | InputJsonValue
    verified?: BoolFieldUpdateOperationsInput | boolean
    verifiedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    verifiedBy?: NullableStringFieldUpdateOperationsInput | string | null
    verificationDocuments?: NullableJsonNullValueInput | InputJsonValue
    consultationCount?: IntFieldUpdateOperationsInput | number
    averageRating?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    reviewCount?: IntFieldUpdateOperationsInput | number
    status?: StringFieldUpdateOperationsInput | string
    acceptingNewPatients?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type UserCreateWithoutBlogPostsInput = {
    id?: string
    email: string
    emailVerified?: boolean
    passwordHash: string
    role?: $Enums.UserRole
    firstName?: string | null
    lastName?: string | null
    phone?: string | null
    dateOfBirth?: Date | string | null
    status?: $Enums.UserStatus
    lastLoginAt?: Date | string | null
    failedLoginAttempts?: number
    lockedUntil?: Date | string | null
    ageVerified?: boolean
    ageVerificationMethod?: $Enums.AgeVerificationMethod | null
    ageVerifiedAt?: Date | string | null
    termsAcceptedAt?: Date | string | null
    privacyAcceptedAt?: Date | string | null
    marketingConsent?: boolean
    gdprConsent?: boolean
    ccpaOptOut?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    createdBy?: string | null
    updatedBy?: string | null
    addresses?: UserAddressCreateNestedManyWithoutUserInput
    sessions?: UserSessionCreateNestedManyWithoutUserInput
    stores?: StoreCreateNestedManyWithoutOwnerInput
    orders?: OrderCreateNestedManyWithoutUserInput
    reviews?: ReviewCreateNestedManyWithoutUserInput
    professional?: ProfessionalCreateNestedOneWithoutUserInput
    storeStaff?: StoreStaffCreateNestedManyWithoutUserInput
    consultationsAsPatient?: ConsultationCreateNestedManyWithoutPatientInput
    ageVerifier?: UserCreateNestedOneWithoutAgeVerificationsInput
    ageVerifications?: UserCreateNestedManyWithoutAgeVerifierInput
    factCheckedPosts?: BlogPostCreateNestedManyWithoutFactCheckerInput
  }

  export type UserUncheckedCreateWithoutBlogPostsInput = {
    id?: string
    email: string
    emailVerified?: boolean
    passwordHash: string
    role?: $Enums.UserRole
    firstName?: string | null
    lastName?: string | null
    phone?: string | null
    dateOfBirth?: Date | string | null
    status?: $Enums.UserStatus
    lastLoginAt?: Date | string | null
    failedLoginAttempts?: number
    lockedUntil?: Date | string | null
    ageVerified?: boolean
    ageVerificationMethod?: $Enums.AgeVerificationMethod | null
    ageVerifiedAt?: Date | string | null
    ageVerifiedBy?: string | null
    termsAcceptedAt?: Date | string | null
    privacyAcceptedAt?: Date | string | null
    marketingConsent?: boolean
    gdprConsent?: boolean
    ccpaOptOut?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    createdBy?: string | null
    updatedBy?: string | null
    addresses?: UserAddressUncheckedCreateNestedManyWithoutUserInput
    sessions?: UserSessionUncheckedCreateNestedManyWithoutUserInput
    stores?: StoreUncheckedCreateNestedManyWithoutOwnerInput
    orders?: OrderUncheckedCreateNestedManyWithoutUserInput
    reviews?: ReviewUncheckedCreateNestedManyWithoutUserInput
    professional?: ProfessionalUncheckedCreateNestedOneWithoutUserInput
    storeStaff?: StoreStaffUncheckedCreateNestedManyWithoutUserInput
    consultationsAsPatient?: ConsultationUncheckedCreateNestedManyWithoutPatientInput
    ageVerifications?: UserUncheckedCreateNestedManyWithoutAgeVerifierInput
    factCheckedPosts?: BlogPostUncheckedCreateNestedManyWithoutFactCheckerInput
  }

  export type UserCreateOrConnectWithoutBlogPostsInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutBlogPostsInput, UserUncheckedCreateWithoutBlogPostsInput>
  }

  export type UserCreateWithoutFactCheckedPostsInput = {
    id?: string
    email: string
    emailVerified?: boolean
    passwordHash: string
    role?: $Enums.UserRole
    firstName?: string | null
    lastName?: string | null
    phone?: string | null
    dateOfBirth?: Date | string | null
    status?: $Enums.UserStatus
    lastLoginAt?: Date | string | null
    failedLoginAttempts?: number
    lockedUntil?: Date | string | null
    ageVerified?: boolean
    ageVerificationMethod?: $Enums.AgeVerificationMethod | null
    ageVerifiedAt?: Date | string | null
    termsAcceptedAt?: Date | string | null
    privacyAcceptedAt?: Date | string | null
    marketingConsent?: boolean
    gdprConsent?: boolean
    ccpaOptOut?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    createdBy?: string | null
    updatedBy?: string | null
    addresses?: UserAddressCreateNestedManyWithoutUserInput
    sessions?: UserSessionCreateNestedManyWithoutUserInput
    stores?: StoreCreateNestedManyWithoutOwnerInput
    orders?: OrderCreateNestedManyWithoutUserInput
    reviews?: ReviewCreateNestedManyWithoutUserInput
    professional?: ProfessionalCreateNestedOneWithoutUserInput
    storeStaff?: StoreStaffCreateNestedManyWithoutUserInput
    consultationsAsPatient?: ConsultationCreateNestedManyWithoutPatientInput
    ageVerifier?: UserCreateNestedOneWithoutAgeVerificationsInput
    ageVerifications?: UserCreateNestedManyWithoutAgeVerifierInput
    blogPosts?: BlogPostCreateNestedManyWithoutAuthorInput
  }

  export type UserUncheckedCreateWithoutFactCheckedPostsInput = {
    id?: string
    email: string
    emailVerified?: boolean
    passwordHash: string
    role?: $Enums.UserRole
    firstName?: string | null
    lastName?: string | null
    phone?: string | null
    dateOfBirth?: Date | string | null
    status?: $Enums.UserStatus
    lastLoginAt?: Date | string | null
    failedLoginAttempts?: number
    lockedUntil?: Date | string | null
    ageVerified?: boolean
    ageVerificationMethod?: $Enums.AgeVerificationMethod | null
    ageVerifiedAt?: Date | string | null
    ageVerifiedBy?: string | null
    termsAcceptedAt?: Date | string | null
    privacyAcceptedAt?: Date | string | null
    marketingConsent?: boolean
    gdprConsent?: boolean
    ccpaOptOut?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    createdBy?: string | null
    updatedBy?: string | null
    addresses?: UserAddressUncheckedCreateNestedManyWithoutUserInput
    sessions?: UserSessionUncheckedCreateNestedManyWithoutUserInput
    stores?: StoreUncheckedCreateNestedManyWithoutOwnerInput
    orders?: OrderUncheckedCreateNestedManyWithoutUserInput
    reviews?: ReviewUncheckedCreateNestedManyWithoutUserInput
    professional?: ProfessionalUncheckedCreateNestedOneWithoutUserInput
    storeStaff?: StoreStaffUncheckedCreateNestedManyWithoutUserInput
    consultationsAsPatient?: ConsultationUncheckedCreateNestedManyWithoutPatientInput
    ageVerifications?: UserUncheckedCreateNestedManyWithoutAgeVerifierInput
    blogPosts?: BlogPostUncheckedCreateNestedManyWithoutAuthorInput
  }

  export type UserCreateOrConnectWithoutFactCheckedPostsInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutFactCheckedPostsInput, UserUncheckedCreateWithoutFactCheckedPostsInput>
  }

  export type UserUpsertWithoutBlogPostsInput = {
    update: XOR<UserUpdateWithoutBlogPostsInput, UserUncheckedUpdateWithoutBlogPostsInput>
    create: XOR<UserCreateWithoutBlogPostsInput, UserUncheckedCreateWithoutBlogPostsInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutBlogPostsInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutBlogPostsInput, UserUncheckedUpdateWithoutBlogPostsInput>
  }

  export type UserUpdateWithoutBlogPostsInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    emailVerified?: BoolFieldUpdateOperationsInput | boolean
    passwordHash?: StringFieldUpdateOperationsInput | string
    role?: EnumUserRoleFieldUpdateOperationsInput | $Enums.UserRole
    firstName?: NullableStringFieldUpdateOperationsInput | string | null
    lastName?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    dateOfBirth?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: EnumUserStatusFieldUpdateOperationsInput | $Enums.UserStatus
    lastLoginAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    failedLoginAttempts?: IntFieldUpdateOperationsInput | number
    lockedUntil?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    ageVerified?: BoolFieldUpdateOperationsInput | boolean
    ageVerificationMethod?: NullableEnumAgeVerificationMethodFieldUpdateOperationsInput | $Enums.AgeVerificationMethod | null
    ageVerifiedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    termsAcceptedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    privacyAcceptedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    marketingConsent?: BoolFieldUpdateOperationsInput | boolean
    gdprConsent?: BoolFieldUpdateOperationsInput | boolean
    ccpaOptOut?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    addresses?: UserAddressUpdateManyWithoutUserNestedInput
    sessions?: UserSessionUpdateManyWithoutUserNestedInput
    stores?: StoreUpdateManyWithoutOwnerNestedInput
    orders?: OrderUpdateManyWithoutUserNestedInput
    reviews?: ReviewUpdateManyWithoutUserNestedInput
    professional?: ProfessionalUpdateOneWithoutUserNestedInput
    storeStaff?: StoreStaffUpdateManyWithoutUserNestedInput
    consultationsAsPatient?: ConsultationUpdateManyWithoutPatientNestedInput
    ageVerifier?: UserUpdateOneWithoutAgeVerificationsNestedInput
    ageVerifications?: UserUpdateManyWithoutAgeVerifierNestedInput
    factCheckedPosts?: BlogPostUpdateManyWithoutFactCheckerNestedInput
  }

  export type UserUncheckedUpdateWithoutBlogPostsInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    emailVerified?: BoolFieldUpdateOperationsInput | boolean
    passwordHash?: StringFieldUpdateOperationsInput | string
    role?: EnumUserRoleFieldUpdateOperationsInput | $Enums.UserRole
    firstName?: NullableStringFieldUpdateOperationsInput | string | null
    lastName?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    dateOfBirth?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: EnumUserStatusFieldUpdateOperationsInput | $Enums.UserStatus
    lastLoginAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    failedLoginAttempts?: IntFieldUpdateOperationsInput | number
    lockedUntil?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    ageVerified?: BoolFieldUpdateOperationsInput | boolean
    ageVerificationMethod?: NullableEnumAgeVerificationMethodFieldUpdateOperationsInput | $Enums.AgeVerificationMethod | null
    ageVerifiedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    ageVerifiedBy?: NullableStringFieldUpdateOperationsInput | string | null
    termsAcceptedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    privacyAcceptedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    marketingConsent?: BoolFieldUpdateOperationsInput | boolean
    gdprConsent?: BoolFieldUpdateOperationsInput | boolean
    ccpaOptOut?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    addresses?: UserAddressUncheckedUpdateManyWithoutUserNestedInput
    sessions?: UserSessionUncheckedUpdateManyWithoutUserNestedInput
    stores?: StoreUncheckedUpdateManyWithoutOwnerNestedInput
    orders?: OrderUncheckedUpdateManyWithoutUserNestedInput
    reviews?: ReviewUncheckedUpdateManyWithoutUserNestedInput
    professional?: ProfessionalUncheckedUpdateOneWithoutUserNestedInput
    storeStaff?: StoreStaffUncheckedUpdateManyWithoutUserNestedInput
    consultationsAsPatient?: ConsultationUncheckedUpdateManyWithoutPatientNestedInput
    ageVerifications?: UserUncheckedUpdateManyWithoutAgeVerifierNestedInput
    factCheckedPosts?: BlogPostUncheckedUpdateManyWithoutFactCheckerNestedInput
  }

  export type UserUpsertWithoutFactCheckedPostsInput = {
    update: XOR<UserUpdateWithoutFactCheckedPostsInput, UserUncheckedUpdateWithoutFactCheckedPostsInput>
    create: XOR<UserCreateWithoutFactCheckedPostsInput, UserUncheckedCreateWithoutFactCheckedPostsInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutFactCheckedPostsInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutFactCheckedPostsInput, UserUncheckedUpdateWithoutFactCheckedPostsInput>
  }

  export type UserUpdateWithoutFactCheckedPostsInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    emailVerified?: BoolFieldUpdateOperationsInput | boolean
    passwordHash?: StringFieldUpdateOperationsInput | string
    role?: EnumUserRoleFieldUpdateOperationsInput | $Enums.UserRole
    firstName?: NullableStringFieldUpdateOperationsInput | string | null
    lastName?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    dateOfBirth?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: EnumUserStatusFieldUpdateOperationsInput | $Enums.UserStatus
    lastLoginAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    failedLoginAttempts?: IntFieldUpdateOperationsInput | number
    lockedUntil?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    ageVerified?: BoolFieldUpdateOperationsInput | boolean
    ageVerificationMethod?: NullableEnumAgeVerificationMethodFieldUpdateOperationsInput | $Enums.AgeVerificationMethod | null
    ageVerifiedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    termsAcceptedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    privacyAcceptedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    marketingConsent?: BoolFieldUpdateOperationsInput | boolean
    gdprConsent?: BoolFieldUpdateOperationsInput | boolean
    ccpaOptOut?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    addresses?: UserAddressUpdateManyWithoutUserNestedInput
    sessions?: UserSessionUpdateManyWithoutUserNestedInput
    stores?: StoreUpdateManyWithoutOwnerNestedInput
    orders?: OrderUpdateManyWithoutUserNestedInput
    reviews?: ReviewUpdateManyWithoutUserNestedInput
    professional?: ProfessionalUpdateOneWithoutUserNestedInput
    storeStaff?: StoreStaffUpdateManyWithoutUserNestedInput
    consultationsAsPatient?: ConsultationUpdateManyWithoutPatientNestedInput
    ageVerifier?: UserUpdateOneWithoutAgeVerificationsNestedInput
    ageVerifications?: UserUpdateManyWithoutAgeVerifierNestedInput
    blogPosts?: BlogPostUpdateManyWithoutAuthorNestedInput
  }

  export type UserUncheckedUpdateWithoutFactCheckedPostsInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    emailVerified?: BoolFieldUpdateOperationsInput | boolean
    passwordHash?: StringFieldUpdateOperationsInput | string
    role?: EnumUserRoleFieldUpdateOperationsInput | $Enums.UserRole
    firstName?: NullableStringFieldUpdateOperationsInput | string | null
    lastName?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    dateOfBirth?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: EnumUserStatusFieldUpdateOperationsInput | $Enums.UserStatus
    lastLoginAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    failedLoginAttempts?: IntFieldUpdateOperationsInput | number
    lockedUntil?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    ageVerified?: BoolFieldUpdateOperationsInput | boolean
    ageVerificationMethod?: NullableEnumAgeVerificationMethodFieldUpdateOperationsInput | $Enums.AgeVerificationMethod | null
    ageVerifiedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    ageVerifiedBy?: NullableStringFieldUpdateOperationsInput | string | null
    termsAcceptedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    privacyAcceptedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    marketingConsent?: BoolFieldUpdateOperationsInput | boolean
    gdprConsent?: BoolFieldUpdateOperationsInput | boolean
    ccpaOptOut?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    addresses?: UserAddressUncheckedUpdateManyWithoutUserNestedInput
    sessions?: UserSessionUncheckedUpdateManyWithoutUserNestedInput
    stores?: StoreUncheckedUpdateManyWithoutOwnerNestedInput
    orders?: OrderUncheckedUpdateManyWithoutUserNestedInput
    reviews?: ReviewUncheckedUpdateManyWithoutUserNestedInput
    professional?: ProfessionalUncheckedUpdateOneWithoutUserNestedInput
    storeStaff?: StoreStaffUncheckedUpdateManyWithoutUserNestedInput
    consultationsAsPatient?: ConsultationUncheckedUpdateManyWithoutPatientNestedInput
    ageVerifications?: UserUncheckedUpdateManyWithoutAgeVerifierNestedInput
    blogPosts?: BlogPostUncheckedUpdateManyWithoutAuthorNestedInput
  }

  export type UserAddressCreateManyUserInput = {
    id?: string
    type: $Enums.AddressType
    addressLine1: string
    addressLine2?: string | null
    city: string
    state: string
    postalCode: string
    country?: string
    latitude?: Decimal | DecimalJsLike | number | string | null
    longitude?: Decimal | DecimalJsLike | number | string | null
    isDefault?: boolean
    verified?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type UserSessionCreateManyUserInput = {
    id?: string
    refreshTokenHash: string
    deviceFingerprint?: string | null
    ipAddress?: string | null
    userAgent?: string | null
    locationCountry?: string | null
    locationRegion?: string | null
    locationCity?: string | null
    isActive?: boolean
    expiresAt: Date | string
    lastUsedAt?: Date | string
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type StoreCreateManyOwnerInput = {
    id?: string
    name: string
    slug: string
    description?: string | null
    email?: string | null
    phone?: string | null
    website?: string | null
    addressLine1: string
    addressLine2?: string | null
    city: string
    state: string
    postalCode: string
    latitude: Decimal | DecimalJsLike | number | string
    longitude: Decimal | DecimalJsLike | number | string
    businessType: $Enums.BusinessType
    licenseNumber: string
    licenseType: string
    licenseState: string
    licenseExpiresAt: Date | string
    features?: NullableJsonNullValueInput | InputJsonValue
    paymentMethods?: NullableJsonNullValueInput | InputJsonValue
    deliveryRadius?: number | null
    minimumOrder?: Decimal | DecimalJsLike | number | string | null
    deliveryFee?: Decimal | DecimalJsLike | number | string | null
    operatingHours?: NullableJsonNullValueInput | InputJsonValue
    status?: $Enums.StoreStatus
    verified?: boolean
    verifiedAt?: Date | string | null
    verifiedBy?: string | null
    logoUrl?: string | null
    coverImageUrl?: string | null
    galleryImages?: NullableJsonNullValueInput | InputJsonValue
    metaTitle?: string | null
    metaDescription?: string | null
    socialMedia?: NullableJsonNullValueInput | InputJsonValue
    metrcLicenseId?: string | null
    metrcLastSync?: Date | string | null
    complianceStatus?: $Enums.ComplianceStatus
    trackTraceSystem?: $Enums.TrackTraceSystem | null
    totalProducts?: number
    averageRating?: Decimal | DecimalJsLike | number | string
    totalReviews?: number
    totalOrders?: number
    createdAt?: Date | string
    updatedAt?: Date | string
    createdBy?: string | null
    updatedBy?: string | null
  }

  export type OrderCreateManyUserInput = {
    id?: string
    orderNumber: string
    storeId: string
    orderType: $Enums.OrderType
    fulfillmentStatus?: $Enums.OrderStatus
    deliveryAddress?: NullableJsonNullValueInput | InputJsonValue
    deliveryInstructions?: string | null
    deliveryTimeRequested?: Date | string | null
    deliveryTimeActual?: Date | string | null
    deliveryPersonId?: string | null
    subtotal: Decimal | DecimalJsLike | number | string
    taxAmount?: Decimal | DecimalJsLike | number | string
    deliveryFee?: Decimal | DecimalJsLike | number | string
    serviceFee?: Decimal | DecimalJsLike | number | string
    discountAmount?: Decimal | DecimalJsLike | number | string
    tipAmount?: Decimal | DecimalJsLike | number | string
    totalAmount: Decimal | DecimalJsLike | number | string
    paymentStatus?: $Enums.PaymentStatus
    paymentMethod: $Enums.PaymentMethod
    paymentProvider?: string | null
    paymentIntentId?: string | null
    ageVerifiedAtDelivery?: Date | string | null
    idCheckedBy?: string | null
    customerNotes?: string | null
    internalNotes?: string | null
    metrcTransferManifest?: string | null
    complianceCheckPassed?: boolean
    complianceCheckedAt?: Date | string | null
    complianceCheckedBy?: string | null
    cancelledAt?: Date | string | null
    cancelledBy?: string | null
    cancellationReason?: string | null
    refundAmount?: Decimal | DecimalJsLike | number | string
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type ReviewCreateManyUserInput = {
    id?: string
    reviewableType: $Enums.ReviewableType
    reviewableId: string
    rating: number
    title?: string | null
    content: string
    qualityRating?: number | null
    valueRating?: number | null
    serviceRating?: number | null
    effectsRating?: number | null
    effects?: NullableJsonNullValueInput | InputJsonValue
    medicalBenefits?: NullableJsonNullValueInput | InputJsonValue
    sideEffects?: NullableJsonNullValueInput | InputJsonValue
    images?: NullableJsonNullValueInput | InputJsonValue
    status?: $Enums.ReviewStatus
    moderatedAt?: Date | string | null
    moderatedBy?: string | null
    moderationReason?: string | null
    verifiedPurchase?: boolean
    orderId?: string | null
    helpfulCount?: number
    totalVotes?: number
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type StoreStaffCreateManyUserInput = {
    id?: string
    storeId: string
    role: string
    permissions?: NullableJsonNullValueInput | InputJsonValue
    employeeId?: string | null
    startDate: Date | string
    endDate?: Date | string | null
    hourlyWage?: Decimal | DecimalJsLike | number | string | null
    commissionRate?: Decimal | DecimalJsLike | number | string | null
    status?: string
    canAccessPos?: boolean
    canManageInventory?: boolean
    canProcessOrders?: boolean
    complianceTrainingCompleted?: boolean
    trainingCompletedAt?: Date | string | null
    trainingExpiresAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    createdBy?: string | null
  }

  export type ConsultationCreateManyPatientInput = {
    id?: string
    professionalId: string
    consultationType: $Enums.ConsultationType
    sessionType: $Enums.SessionType
    scheduledAt: Date | string
    durationMinutes?: number
    timezone: string
    status?: string
    meetingUrl?: string | null
    meetingId?: string | null
    meetingPassword?: string | null
    chiefComplaint?: string | null
    symptoms?: NullableJsonNullValueInput | InputJsonValue
    currentMedications?: NullableJsonNullValueInput | InputJsonValue
    cannabisExperience?: string | null
    previousCannabisUse?: string | null
    assessment?: string | null
    recommendations?: string | null
    prescribedProducts?: NullableJsonNullValueInput | InputJsonValue
    followUpNeeded?: boolean
    followUpDate?: Date | string | null
    consultationFee: Decimal | DecimalJsLike | number | string
    paymentStatus?: string
    paymentId?: string | null
    medicalConsentSigned?: boolean
    privacyConsentSigned?: boolean
    consultationAgreementSigned?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type UserCreateManyAgeVerifierInput = {
    id?: string
    email: string
    emailVerified?: boolean
    passwordHash: string
    role?: $Enums.UserRole
    firstName?: string | null
    lastName?: string | null
    phone?: string | null
    dateOfBirth?: Date | string | null
    status?: $Enums.UserStatus
    lastLoginAt?: Date | string | null
    failedLoginAttempts?: number
    lockedUntil?: Date | string | null
    ageVerified?: boolean
    ageVerificationMethod?: $Enums.AgeVerificationMethod | null
    ageVerifiedAt?: Date | string | null
    termsAcceptedAt?: Date | string | null
    privacyAcceptedAt?: Date | string | null
    marketingConsent?: boolean
    gdprConsent?: boolean
    ccpaOptOut?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    createdBy?: string | null
    updatedBy?: string | null
  }

  export type BlogPostCreateManyAuthorInput = {
    id?: string
    title: string
    slug: string
    excerpt?: string | null
    content: string
    featuredImageUrl?: string | null
    category: $Enums.BlogCategory
    tags?: NullableJsonNullValueInput | InputJsonValue
    metaTitle?: string | null
    metaDescription?: string | null
    metaKeywords?: string | null
    status?: $Enums.BlogStatus
    publishedAt?: Date | string | null
    scheduledFor?: Date | string | null
    viewCount?: number
    likeCount?: number
    commentCount?: number
    shareCount?: number
    factChecked?: boolean
    factCheckedBy?: string | null
    factCheckedAt?: Date | string | null
    medicalDisclaimer?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type BlogPostCreateManyFactCheckerInput = {
    id?: string
    authorId: string
    title: string
    slug: string
    excerpt?: string | null
    content: string
    featuredImageUrl?: string | null
    category: $Enums.BlogCategory
    tags?: NullableJsonNullValueInput | InputJsonValue
    metaTitle?: string | null
    metaDescription?: string | null
    metaKeywords?: string | null
    status?: $Enums.BlogStatus
    publishedAt?: Date | string | null
    scheduledFor?: Date | string | null
    viewCount?: number
    likeCount?: number
    commentCount?: number
    shareCount?: number
    factChecked?: boolean
    factCheckedAt?: Date | string | null
    medicalDisclaimer?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type UserAddressUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    type?: EnumAddressTypeFieldUpdateOperationsInput | $Enums.AddressType
    addressLine1?: StringFieldUpdateOperationsInput | string
    addressLine2?: NullableStringFieldUpdateOperationsInput | string | null
    city?: StringFieldUpdateOperationsInput | string
    state?: StringFieldUpdateOperationsInput | string
    postalCode?: StringFieldUpdateOperationsInput | string
    country?: StringFieldUpdateOperationsInput | string
    latitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    longitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    isDefault?: BoolFieldUpdateOperationsInput | boolean
    verified?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type UserAddressUncheckedUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    type?: EnumAddressTypeFieldUpdateOperationsInput | $Enums.AddressType
    addressLine1?: StringFieldUpdateOperationsInput | string
    addressLine2?: NullableStringFieldUpdateOperationsInput | string | null
    city?: StringFieldUpdateOperationsInput | string
    state?: StringFieldUpdateOperationsInput | string
    postalCode?: StringFieldUpdateOperationsInput | string
    country?: StringFieldUpdateOperationsInput | string
    latitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    longitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    isDefault?: BoolFieldUpdateOperationsInput | boolean
    verified?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type UserAddressUncheckedUpdateManyWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    type?: EnumAddressTypeFieldUpdateOperationsInput | $Enums.AddressType
    addressLine1?: StringFieldUpdateOperationsInput | string
    addressLine2?: NullableStringFieldUpdateOperationsInput | string | null
    city?: StringFieldUpdateOperationsInput | string
    state?: StringFieldUpdateOperationsInput | string
    postalCode?: StringFieldUpdateOperationsInput | string
    country?: StringFieldUpdateOperationsInput | string
    latitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    longitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    isDefault?: BoolFieldUpdateOperationsInput | boolean
    verified?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type UserSessionUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    refreshTokenHash?: StringFieldUpdateOperationsInput | string
    deviceFingerprint?: NullableStringFieldUpdateOperationsInput | string | null
    ipAddress?: NullableStringFieldUpdateOperationsInput | string | null
    userAgent?: NullableStringFieldUpdateOperationsInput | string | null
    locationCountry?: NullableStringFieldUpdateOperationsInput | string | null
    locationRegion?: NullableStringFieldUpdateOperationsInput | string | null
    locationCity?: NullableStringFieldUpdateOperationsInput | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    expiresAt?: DateTimeFieldUpdateOperationsInput | Date | string
    lastUsedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type UserSessionUncheckedUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    refreshTokenHash?: StringFieldUpdateOperationsInput | string
    deviceFingerprint?: NullableStringFieldUpdateOperationsInput | string | null
    ipAddress?: NullableStringFieldUpdateOperationsInput | string | null
    userAgent?: NullableStringFieldUpdateOperationsInput | string | null
    locationCountry?: NullableStringFieldUpdateOperationsInput | string | null
    locationRegion?: NullableStringFieldUpdateOperationsInput | string | null
    locationCity?: NullableStringFieldUpdateOperationsInput | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    expiresAt?: DateTimeFieldUpdateOperationsInput | Date | string
    lastUsedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type UserSessionUncheckedUpdateManyWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    refreshTokenHash?: StringFieldUpdateOperationsInput | string
    deviceFingerprint?: NullableStringFieldUpdateOperationsInput | string | null
    ipAddress?: NullableStringFieldUpdateOperationsInput | string | null
    userAgent?: NullableStringFieldUpdateOperationsInput | string | null
    locationCountry?: NullableStringFieldUpdateOperationsInput | string | null
    locationRegion?: NullableStringFieldUpdateOperationsInput | string | null
    locationCity?: NullableStringFieldUpdateOperationsInput | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    expiresAt?: DateTimeFieldUpdateOperationsInput | Date | string
    lastUsedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type StoreUpdateWithoutOwnerInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    website?: NullableStringFieldUpdateOperationsInput | string | null
    addressLine1?: StringFieldUpdateOperationsInput | string
    addressLine2?: NullableStringFieldUpdateOperationsInput | string | null
    city?: StringFieldUpdateOperationsInput | string
    state?: StringFieldUpdateOperationsInput | string
    postalCode?: StringFieldUpdateOperationsInput | string
    latitude?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    longitude?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    businessType?: EnumBusinessTypeFieldUpdateOperationsInput | $Enums.BusinessType
    licenseNumber?: StringFieldUpdateOperationsInput | string
    licenseType?: StringFieldUpdateOperationsInput | string
    licenseState?: StringFieldUpdateOperationsInput | string
    licenseExpiresAt?: DateTimeFieldUpdateOperationsInput | Date | string
    features?: NullableJsonNullValueInput | InputJsonValue
    paymentMethods?: NullableJsonNullValueInput | InputJsonValue
    deliveryRadius?: NullableIntFieldUpdateOperationsInput | number | null
    minimumOrder?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    deliveryFee?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    operatingHours?: NullableJsonNullValueInput | InputJsonValue
    status?: EnumStoreStatusFieldUpdateOperationsInput | $Enums.StoreStatus
    verified?: BoolFieldUpdateOperationsInput | boolean
    verifiedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    verifiedBy?: NullableStringFieldUpdateOperationsInput | string | null
    logoUrl?: NullableStringFieldUpdateOperationsInput | string | null
    coverImageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    galleryImages?: NullableJsonNullValueInput | InputJsonValue
    metaTitle?: NullableStringFieldUpdateOperationsInput | string | null
    metaDescription?: NullableStringFieldUpdateOperationsInput | string | null
    socialMedia?: NullableJsonNullValueInput | InputJsonValue
    metrcLicenseId?: NullableStringFieldUpdateOperationsInput | string | null
    metrcLastSync?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    complianceStatus?: EnumComplianceStatusFieldUpdateOperationsInput | $Enums.ComplianceStatus
    trackTraceSystem?: NullableEnumTrackTraceSystemFieldUpdateOperationsInput | $Enums.TrackTraceSystem | null
    totalProducts?: IntFieldUpdateOperationsInput | number
    averageRating?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    totalReviews?: IntFieldUpdateOperationsInput | number
    totalOrders?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    staff?: StoreStaffUpdateManyWithoutStoreNestedInput
    products?: ProductUpdateManyWithoutStoreNestedInput
    orders?: OrderUpdateManyWithoutStoreNestedInput
    reviews?: ReviewUpdateManyWithoutStoreNestedInput
  }

  export type StoreUncheckedUpdateWithoutOwnerInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    website?: NullableStringFieldUpdateOperationsInput | string | null
    addressLine1?: StringFieldUpdateOperationsInput | string
    addressLine2?: NullableStringFieldUpdateOperationsInput | string | null
    city?: StringFieldUpdateOperationsInput | string
    state?: StringFieldUpdateOperationsInput | string
    postalCode?: StringFieldUpdateOperationsInput | string
    latitude?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    longitude?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    businessType?: EnumBusinessTypeFieldUpdateOperationsInput | $Enums.BusinessType
    licenseNumber?: StringFieldUpdateOperationsInput | string
    licenseType?: StringFieldUpdateOperationsInput | string
    licenseState?: StringFieldUpdateOperationsInput | string
    licenseExpiresAt?: DateTimeFieldUpdateOperationsInput | Date | string
    features?: NullableJsonNullValueInput | InputJsonValue
    paymentMethods?: NullableJsonNullValueInput | InputJsonValue
    deliveryRadius?: NullableIntFieldUpdateOperationsInput | number | null
    minimumOrder?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    deliveryFee?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    operatingHours?: NullableJsonNullValueInput | InputJsonValue
    status?: EnumStoreStatusFieldUpdateOperationsInput | $Enums.StoreStatus
    verified?: BoolFieldUpdateOperationsInput | boolean
    verifiedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    verifiedBy?: NullableStringFieldUpdateOperationsInput | string | null
    logoUrl?: NullableStringFieldUpdateOperationsInput | string | null
    coverImageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    galleryImages?: NullableJsonNullValueInput | InputJsonValue
    metaTitle?: NullableStringFieldUpdateOperationsInput | string | null
    metaDescription?: NullableStringFieldUpdateOperationsInput | string | null
    socialMedia?: NullableJsonNullValueInput | InputJsonValue
    metrcLicenseId?: NullableStringFieldUpdateOperationsInput | string | null
    metrcLastSync?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    complianceStatus?: EnumComplianceStatusFieldUpdateOperationsInput | $Enums.ComplianceStatus
    trackTraceSystem?: NullableEnumTrackTraceSystemFieldUpdateOperationsInput | $Enums.TrackTraceSystem | null
    totalProducts?: IntFieldUpdateOperationsInput | number
    averageRating?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    totalReviews?: IntFieldUpdateOperationsInput | number
    totalOrders?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    staff?: StoreStaffUncheckedUpdateManyWithoutStoreNestedInput
    products?: ProductUncheckedUpdateManyWithoutStoreNestedInput
    orders?: OrderUncheckedUpdateManyWithoutStoreNestedInput
    reviews?: ReviewUncheckedUpdateManyWithoutStoreNestedInput
  }

  export type StoreUncheckedUpdateManyWithoutOwnerInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    website?: NullableStringFieldUpdateOperationsInput | string | null
    addressLine1?: StringFieldUpdateOperationsInput | string
    addressLine2?: NullableStringFieldUpdateOperationsInput | string | null
    city?: StringFieldUpdateOperationsInput | string
    state?: StringFieldUpdateOperationsInput | string
    postalCode?: StringFieldUpdateOperationsInput | string
    latitude?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    longitude?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    businessType?: EnumBusinessTypeFieldUpdateOperationsInput | $Enums.BusinessType
    licenseNumber?: StringFieldUpdateOperationsInput | string
    licenseType?: StringFieldUpdateOperationsInput | string
    licenseState?: StringFieldUpdateOperationsInput | string
    licenseExpiresAt?: DateTimeFieldUpdateOperationsInput | Date | string
    features?: NullableJsonNullValueInput | InputJsonValue
    paymentMethods?: NullableJsonNullValueInput | InputJsonValue
    deliveryRadius?: NullableIntFieldUpdateOperationsInput | number | null
    minimumOrder?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    deliveryFee?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    operatingHours?: NullableJsonNullValueInput | InputJsonValue
    status?: EnumStoreStatusFieldUpdateOperationsInput | $Enums.StoreStatus
    verified?: BoolFieldUpdateOperationsInput | boolean
    verifiedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    verifiedBy?: NullableStringFieldUpdateOperationsInput | string | null
    logoUrl?: NullableStringFieldUpdateOperationsInput | string | null
    coverImageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    galleryImages?: NullableJsonNullValueInput | InputJsonValue
    metaTitle?: NullableStringFieldUpdateOperationsInput | string | null
    metaDescription?: NullableStringFieldUpdateOperationsInput | string | null
    socialMedia?: NullableJsonNullValueInput | InputJsonValue
    metrcLicenseId?: NullableStringFieldUpdateOperationsInput | string | null
    metrcLastSync?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    complianceStatus?: EnumComplianceStatusFieldUpdateOperationsInput | $Enums.ComplianceStatus
    trackTraceSystem?: NullableEnumTrackTraceSystemFieldUpdateOperationsInput | $Enums.TrackTraceSystem | null
    totalProducts?: IntFieldUpdateOperationsInput | number
    averageRating?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    totalReviews?: IntFieldUpdateOperationsInput | number
    totalOrders?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type OrderUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    orderNumber?: StringFieldUpdateOperationsInput | string
    orderType?: EnumOrderTypeFieldUpdateOperationsInput | $Enums.OrderType
    fulfillmentStatus?: EnumOrderStatusFieldUpdateOperationsInput | $Enums.OrderStatus
    deliveryAddress?: NullableJsonNullValueInput | InputJsonValue
    deliveryInstructions?: NullableStringFieldUpdateOperationsInput | string | null
    deliveryTimeRequested?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deliveryTimeActual?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deliveryPersonId?: NullableStringFieldUpdateOperationsInput | string | null
    subtotal?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    taxAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    deliveryFee?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    serviceFee?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    discountAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    tipAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    totalAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    paymentStatus?: EnumPaymentStatusFieldUpdateOperationsInput | $Enums.PaymentStatus
    paymentMethod?: EnumPaymentMethodFieldUpdateOperationsInput | $Enums.PaymentMethod
    paymentProvider?: NullableStringFieldUpdateOperationsInput | string | null
    paymentIntentId?: NullableStringFieldUpdateOperationsInput | string | null
    ageVerifiedAtDelivery?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    idCheckedBy?: NullableStringFieldUpdateOperationsInput | string | null
    customerNotes?: NullableStringFieldUpdateOperationsInput | string | null
    internalNotes?: NullableStringFieldUpdateOperationsInput | string | null
    metrcTransferManifest?: NullableStringFieldUpdateOperationsInput | string | null
    complianceCheckPassed?: BoolFieldUpdateOperationsInput | boolean
    complianceCheckedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    complianceCheckedBy?: NullableStringFieldUpdateOperationsInput | string | null
    cancelledAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    cancelledBy?: NullableStringFieldUpdateOperationsInput | string | null
    cancellationReason?: NullableStringFieldUpdateOperationsInput | string | null
    refundAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    store?: StoreUpdateOneRequiredWithoutOrdersNestedInput
    items?: OrderItemUpdateManyWithoutOrderNestedInput
    reviews?: ReviewUpdateManyWithoutOrderNestedInput
  }

  export type OrderUncheckedUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    orderNumber?: StringFieldUpdateOperationsInput | string
    storeId?: StringFieldUpdateOperationsInput | string
    orderType?: EnumOrderTypeFieldUpdateOperationsInput | $Enums.OrderType
    fulfillmentStatus?: EnumOrderStatusFieldUpdateOperationsInput | $Enums.OrderStatus
    deliveryAddress?: NullableJsonNullValueInput | InputJsonValue
    deliveryInstructions?: NullableStringFieldUpdateOperationsInput | string | null
    deliveryTimeRequested?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deliveryTimeActual?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deliveryPersonId?: NullableStringFieldUpdateOperationsInput | string | null
    subtotal?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    taxAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    deliveryFee?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    serviceFee?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    discountAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    tipAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    totalAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    paymentStatus?: EnumPaymentStatusFieldUpdateOperationsInput | $Enums.PaymentStatus
    paymentMethod?: EnumPaymentMethodFieldUpdateOperationsInput | $Enums.PaymentMethod
    paymentProvider?: NullableStringFieldUpdateOperationsInput | string | null
    paymentIntentId?: NullableStringFieldUpdateOperationsInput | string | null
    ageVerifiedAtDelivery?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    idCheckedBy?: NullableStringFieldUpdateOperationsInput | string | null
    customerNotes?: NullableStringFieldUpdateOperationsInput | string | null
    internalNotes?: NullableStringFieldUpdateOperationsInput | string | null
    metrcTransferManifest?: NullableStringFieldUpdateOperationsInput | string | null
    complianceCheckPassed?: BoolFieldUpdateOperationsInput | boolean
    complianceCheckedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    complianceCheckedBy?: NullableStringFieldUpdateOperationsInput | string | null
    cancelledAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    cancelledBy?: NullableStringFieldUpdateOperationsInput | string | null
    cancellationReason?: NullableStringFieldUpdateOperationsInput | string | null
    refundAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    items?: OrderItemUncheckedUpdateManyWithoutOrderNestedInput
    reviews?: ReviewUncheckedUpdateManyWithoutOrderNestedInput
  }

  export type OrderUncheckedUpdateManyWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    orderNumber?: StringFieldUpdateOperationsInput | string
    storeId?: StringFieldUpdateOperationsInput | string
    orderType?: EnumOrderTypeFieldUpdateOperationsInput | $Enums.OrderType
    fulfillmentStatus?: EnumOrderStatusFieldUpdateOperationsInput | $Enums.OrderStatus
    deliveryAddress?: NullableJsonNullValueInput | InputJsonValue
    deliveryInstructions?: NullableStringFieldUpdateOperationsInput | string | null
    deliveryTimeRequested?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deliveryTimeActual?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deliveryPersonId?: NullableStringFieldUpdateOperationsInput | string | null
    subtotal?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    taxAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    deliveryFee?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    serviceFee?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    discountAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    tipAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    totalAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    paymentStatus?: EnumPaymentStatusFieldUpdateOperationsInput | $Enums.PaymentStatus
    paymentMethod?: EnumPaymentMethodFieldUpdateOperationsInput | $Enums.PaymentMethod
    paymentProvider?: NullableStringFieldUpdateOperationsInput | string | null
    paymentIntentId?: NullableStringFieldUpdateOperationsInput | string | null
    ageVerifiedAtDelivery?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    idCheckedBy?: NullableStringFieldUpdateOperationsInput | string | null
    customerNotes?: NullableStringFieldUpdateOperationsInput | string | null
    internalNotes?: NullableStringFieldUpdateOperationsInput | string | null
    metrcTransferManifest?: NullableStringFieldUpdateOperationsInput | string | null
    complianceCheckPassed?: BoolFieldUpdateOperationsInput | boolean
    complianceCheckedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    complianceCheckedBy?: NullableStringFieldUpdateOperationsInput | string | null
    cancelledAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    cancelledBy?: NullableStringFieldUpdateOperationsInput | string | null
    cancellationReason?: NullableStringFieldUpdateOperationsInput | string | null
    refundAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ReviewUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    reviewableType?: EnumReviewableTypeFieldUpdateOperationsInput | $Enums.ReviewableType
    rating?: IntFieldUpdateOperationsInput | number
    title?: NullableStringFieldUpdateOperationsInput | string | null
    content?: StringFieldUpdateOperationsInput | string
    qualityRating?: NullableIntFieldUpdateOperationsInput | number | null
    valueRating?: NullableIntFieldUpdateOperationsInput | number | null
    serviceRating?: NullableIntFieldUpdateOperationsInput | number | null
    effectsRating?: NullableIntFieldUpdateOperationsInput | number | null
    effects?: NullableJsonNullValueInput | InputJsonValue
    medicalBenefits?: NullableJsonNullValueInput | InputJsonValue
    sideEffects?: NullableJsonNullValueInput | InputJsonValue
    images?: NullableJsonNullValueInput | InputJsonValue
    status?: EnumReviewStatusFieldUpdateOperationsInput | $Enums.ReviewStatus
    moderatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    moderatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    moderationReason?: NullableStringFieldUpdateOperationsInput | string | null
    verifiedPurchase?: BoolFieldUpdateOperationsInput | boolean
    helpfulCount?: IntFieldUpdateOperationsInput | number
    totalVotes?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    order?: OrderUpdateOneWithoutReviewsNestedInput
    store?: StoreUpdateOneWithoutReviewsNestedInput
    product?: ProductUpdateOneWithoutReviewsNestedInput
  }

  export type ReviewUncheckedUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    reviewableType?: EnumReviewableTypeFieldUpdateOperationsInput | $Enums.ReviewableType
    reviewableId?: StringFieldUpdateOperationsInput | string
    rating?: IntFieldUpdateOperationsInput | number
    title?: NullableStringFieldUpdateOperationsInput | string | null
    content?: StringFieldUpdateOperationsInput | string
    qualityRating?: NullableIntFieldUpdateOperationsInput | number | null
    valueRating?: NullableIntFieldUpdateOperationsInput | number | null
    serviceRating?: NullableIntFieldUpdateOperationsInput | number | null
    effectsRating?: NullableIntFieldUpdateOperationsInput | number | null
    effects?: NullableJsonNullValueInput | InputJsonValue
    medicalBenefits?: NullableJsonNullValueInput | InputJsonValue
    sideEffects?: NullableJsonNullValueInput | InputJsonValue
    images?: NullableJsonNullValueInput | InputJsonValue
    status?: EnumReviewStatusFieldUpdateOperationsInput | $Enums.ReviewStatus
    moderatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    moderatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    moderationReason?: NullableStringFieldUpdateOperationsInput | string | null
    verifiedPurchase?: BoolFieldUpdateOperationsInput | boolean
    orderId?: NullableStringFieldUpdateOperationsInput | string | null
    helpfulCount?: IntFieldUpdateOperationsInput | number
    totalVotes?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ReviewUncheckedUpdateManyWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    reviewableType?: EnumReviewableTypeFieldUpdateOperationsInput | $Enums.ReviewableType
    reviewableId?: StringFieldUpdateOperationsInput | string
    rating?: IntFieldUpdateOperationsInput | number
    title?: NullableStringFieldUpdateOperationsInput | string | null
    content?: StringFieldUpdateOperationsInput | string
    qualityRating?: NullableIntFieldUpdateOperationsInput | number | null
    valueRating?: NullableIntFieldUpdateOperationsInput | number | null
    serviceRating?: NullableIntFieldUpdateOperationsInput | number | null
    effectsRating?: NullableIntFieldUpdateOperationsInput | number | null
    effects?: NullableJsonNullValueInput | InputJsonValue
    medicalBenefits?: NullableJsonNullValueInput | InputJsonValue
    sideEffects?: NullableJsonNullValueInput | InputJsonValue
    images?: NullableJsonNullValueInput | InputJsonValue
    status?: EnumReviewStatusFieldUpdateOperationsInput | $Enums.ReviewStatus
    moderatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    moderatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    moderationReason?: NullableStringFieldUpdateOperationsInput | string | null
    verifiedPurchase?: BoolFieldUpdateOperationsInput | boolean
    orderId?: NullableStringFieldUpdateOperationsInput | string | null
    helpfulCount?: IntFieldUpdateOperationsInput | number
    totalVotes?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type StoreStaffUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    role?: StringFieldUpdateOperationsInput | string
    permissions?: NullableJsonNullValueInput | InputJsonValue
    employeeId?: NullableStringFieldUpdateOperationsInput | string | null
    startDate?: DateTimeFieldUpdateOperationsInput | Date | string
    endDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    hourlyWage?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    commissionRate?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    status?: StringFieldUpdateOperationsInput | string
    canAccessPos?: BoolFieldUpdateOperationsInput | boolean
    canManageInventory?: BoolFieldUpdateOperationsInput | boolean
    canProcessOrders?: BoolFieldUpdateOperationsInput | boolean
    complianceTrainingCompleted?: BoolFieldUpdateOperationsInput | boolean
    trainingCompletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    trainingExpiresAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    store?: StoreUpdateOneRequiredWithoutStaffNestedInput
  }

  export type StoreStaffUncheckedUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    storeId?: StringFieldUpdateOperationsInput | string
    role?: StringFieldUpdateOperationsInput | string
    permissions?: NullableJsonNullValueInput | InputJsonValue
    employeeId?: NullableStringFieldUpdateOperationsInput | string | null
    startDate?: DateTimeFieldUpdateOperationsInput | Date | string
    endDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    hourlyWage?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    commissionRate?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    status?: StringFieldUpdateOperationsInput | string
    canAccessPos?: BoolFieldUpdateOperationsInput | boolean
    canManageInventory?: BoolFieldUpdateOperationsInput | boolean
    canProcessOrders?: BoolFieldUpdateOperationsInput | boolean
    complianceTrainingCompleted?: BoolFieldUpdateOperationsInput | boolean
    trainingCompletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    trainingExpiresAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type StoreStaffUncheckedUpdateManyWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    storeId?: StringFieldUpdateOperationsInput | string
    role?: StringFieldUpdateOperationsInput | string
    permissions?: NullableJsonNullValueInput | InputJsonValue
    employeeId?: NullableStringFieldUpdateOperationsInput | string | null
    startDate?: DateTimeFieldUpdateOperationsInput | Date | string
    endDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    hourlyWage?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    commissionRate?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    status?: StringFieldUpdateOperationsInput | string
    canAccessPos?: BoolFieldUpdateOperationsInput | boolean
    canManageInventory?: BoolFieldUpdateOperationsInput | boolean
    canProcessOrders?: BoolFieldUpdateOperationsInput | boolean
    complianceTrainingCompleted?: BoolFieldUpdateOperationsInput | boolean
    trainingCompletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    trainingExpiresAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type ConsultationUpdateWithoutPatientInput = {
    id?: StringFieldUpdateOperationsInput | string
    consultationType?: EnumConsultationTypeFieldUpdateOperationsInput | $Enums.ConsultationType
    sessionType?: EnumSessionTypeFieldUpdateOperationsInput | $Enums.SessionType
    scheduledAt?: DateTimeFieldUpdateOperationsInput | Date | string
    durationMinutes?: IntFieldUpdateOperationsInput | number
    timezone?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    meetingUrl?: NullableStringFieldUpdateOperationsInput | string | null
    meetingId?: NullableStringFieldUpdateOperationsInput | string | null
    meetingPassword?: NullableStringFieldUpdateOperationsInput | string | null
    chiefComplaint?: NullableStringFieldUpdateOperationsInput | string | null
    symptoms?: NullableJsonNullValueInput | InputJsonValue
    currentMedications?: NullableJsonNullValueInput | InputJsonValue
    cannabisExperience?: NullableStringFieldUpdateOperationsInput | string | null
    previousCannabisUse?: NullableStringFieldUpdateOperationsInput | string | null
    assessment?: NullableStringFieldUpdateOperationsInput | string | null
    recommendations?: NullableStringFieldUpdateOperationsInput | string | null
    prescribedProducts?: NullableJsonNullValueInput | InputJsonValue
    followUpNeeded?: BoolFieldUpdateOperationsInput | boolean
    followUpDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    consultationFee?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    paymentStatus?: StringFieldUpdateOperationsInput | string
    paymentId?: NullableStringFieldUpdateOperationsInput | string | null
    medicalConsentSigned?: BoolFieldUpdateOperationsInput | boolean
    privacyConsentSigned?: BoolFieldUpdateOperationsInput | boolean
    consultationAgreementSigned?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    professional?: ProfessionalUpdateOneRequiredWithoutConsultationsNestedInput
  }

  export type ConsultationUncheckedUpdateWithoutPatientInput = {
    id?: StringFieldUpdateOperationsInput | string
    professionalId?: StringFieldUpdateOperationsInput | string
    consultationType?: EnumConsultationTypeFieldUpdateOperationsInput | $Enums.ConsultationType
    sessionType?: EnumSessionTypeFieldUpdateOperationsInput | $Enums.SessionType
    scheduledAt?: DateTimeFieldUpdateOperationsInput | Date | string
    durationMinutes?: IntFieldUpdateOperationsInput | number
    timezone?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    meetingUrl?: NullableStringFieldUpdateOperationsInput | string | null
    meetingId?: NullableStringFieldUpdateOperationsInput | string | null
    meetingPassword?: NullableStringFieldUpdateOperationsInput | string | null
    chiefComplaint?: NullableStringFieldUpdateOperationsInput | string | null
    symptoms?: NullableJsonNullValueInput | InputJsonValue
    currentMedications?: NullableJsonNullValueInput | InputJsonValue
    cannabisExperience?: NullableStringFieldUpdateOperationsInput | string | null
    previousCannabisUse?: NullableStringFieldUpdateOperationsInput | string | null
    assessment?: NullableStringFieldUpdateOperationsInput | string | null
    recommendations?: NullableStringFieldUpdateOperationsInput | string | null
    prescribedProducts?: NullableJsonNullValueInput | InputJsonValue
    followUpNeeded?: BoolFieldUpdateOperationsInput | boolean
    followUpDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    consultationFee?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    paymentStatus?: StringFieldUpdateOperationsInput | string
    paymentId?: NullableStringFieldUpdateOperationsInput | string | null
    medicalConsentSigned?: BoolFieldUpdateOperationsInput | boolean
    privacyConsentSigned?: BoolFieldUpdateOperationsInput | boolean
    consultationAgreementSigned?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ConsultationUncheckedUpdateManyWithoutPatientInput = {
    id?: StringFieldUpdateOperationsInput | string
    professionalId?: StringFieldUpdateOperationsInput | string
    consultationType?: EnumConsultationTypeFieldUpdateOperationsInput | $Enums.ConsultationType
    sessionType?: EnumSessionTypeFieldUpdateOperationsInput | $Enums.SessionType
    scheduledAt?: DateTimeFieldUpdateOperationsInput | Date | string
    durationMinutes?: IntFieldUpdateOperationsInput | number
    timezone?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    meetingUrl?: NullableStringFieldUpdateOperationsInput | string | null
    meetingId?: NullableStringFieldUpdateOperationsInput | string | null
    meetingPassword?: NullableStringFieldUpdateOperationsInput | string | null
    chiefComplaint?: NullableStringFieldUpdateOperationsInput | string | null
    symptoms?: NullableJsonNullValueInput | InputJsonValue
    currentMedications?: NullableJsonNullValueInput | InputJsonValue
    cannabisExperience?: NullableStringFieldUpdateOperationsInput | string | null
    previousCannabisUse?: NullableStringFieldUpdateOperationsInput | string | null
    assessment?: NullableStringFieldUpdateOperationsInput | string | null
    recommendations?: NullableStringFieldUpdateOperationsInput | string | null
    prescribedProducts?: NullableJsonNullValueInput | InputJsonValue
    followUpNeeded?: BoolFieldUpdateOperationsInput | boolean
    followUpDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    consultationFee?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    paymentStatus?: StringFieldUpdateOperationsInput | string
    paymentId?: NullableStringFieldUpdateOperationsInput | string | null
    medicalConsentSigned?: BoolFieldUpdateOperationsInput | boolean
    privacyConsentSigned?: BoolFieldUpdateOperationsInput | boolean
    consultationAgreementSigned?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type UserUpdateWithoutAgeVerifierInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    emailVerified?: BoolFieldUpdateOperationsInput | boolean
    passwordHash?: StringFieldUpdateOperationsInput | string
    role?: EnumUserRoleFieldUpdateOperationsInput | $Enums.UserRole
    firstName?: NullableStringFieldUpdateOperationsInput | string | null
    lastName?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    dateOfBirth?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: EnumUserStatusFieldUpdateOperationsInput | $Enums.UserStatus
    lastLoginAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    failedLoginAttempts?: IntFieldUpdateOperationsInput | number
    lockedUntil?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    ageVerified?: BoolFieldUpdateOperationsInput | boolean
    ageVerificationMethod?: NullableEnumAgeVerificationMethodFieldUpdateOperationsInput | $Enums.AgeVerificationMethod | null
    ageVerifiedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    termsAcceptedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    privacyAcceptedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    marketingConsent?: BoolFieldUpdateOperationsInput | boolean
    gdprConsent?: BoolFieldUpdateOperationsInput | boolean
    ccpaOptOut?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    addresses?: UserAddressUpdateManyWithoutUserNestedInput
    sessions?: UserSessionUpdateManyWithoutUserNestedInput
    stores?: StoreUpdateManyWithoutOwnerNestedInput
    orders?: OrderUpdateManyWithoutUserNestedInput
    reviews?: ReviewUpdateManyWithoutUserNestedInput
    professional?: ProfessionalUpdateOneWithoutUserNestedInput
    storeStaff?: StoreStaffUpdateManyWithoutUserNestedInput
    consultationsAsPatient?: ConsultationUpdateManyWithoutPatientNestedInput
    ageVerifications?: UserUpdateManyWithoutAgeVerifierNestedInput
    blogPosts?: BlogPostUpdateManyWithoutAuthorNestedInput
    factCheckedPosts?: BlogPostUpdateManyWithoutFactCheckerNestedInput
  }

  export type UserUncheckedUpdateWithoutAgeVerifierInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    emailVerified?: BoolFieldUpdateOperationsInput | boolean
    passwordHash?: StringFieldUpdateOperationsInput | string
    role?: EnumUserRoleFieldUpdateOperationsInput | $Enums.UserRole
    firstName?: NullableStringFieldUpdateOperationsInput | string | null
    lastName?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    dateOfBirth?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: EnumUserStatusFieldUpdateOperationsInput | $Enums.UserStatus
    lastLoginAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    failedLoginAttempts?: IntFieldUpdateOperationsInput | number
    lockedUntil?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    ageVerified?: BoolFieldUpdateOperationsInput | boolean
    ageVerificationMethod?: NullableEnumAgeVerificationMethodFieldUpdateOperationsInput | $Enums.AgeVerificationMethod | null
    ageVerifiedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    termsAcceptedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    privacyAcceptedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    marketingConsent?: BoolFieldUpdateOperationsInput | boolean
    gdprConsent?: BoolFieldUpdateOperationsInput | boolean
    ccpaOptOut?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    addresses?: UserAddressUncheckedUpdateManyWithoutUserNestedInput
    sessions?: UserSessionUncheckedUpdateManyWithoutUserNestedInput
    stores?: StoreUncheckedUpdateManyWithoutOwnerNestedInput
    orders?: OrderUncheckedUpdateManyWithoutUserNestedInput
    reviews?: ReviewUncheckedUpdateManyWithoutUserNestedInput
    professional?: ProfessionalUncheckedUpdateOneWithoutUserNestedInput
    storeStaff?: StoreStaffUncheckedUpdateManyWithoutUserNestedInput
    consultationsAsPatient?: ConsultationUncheckedUpdateManyWithoutPatientNestedInput
    ageVerifications?: UserUncheckedUpdateManyWithoutAgeVerifierNestedInput
    blogPosts?: BlogPostUncheckedUpdateManyWithoutAuthorNestedInput
    factCheckedPosts?: BlogPostUncheckedUpdateManyWithoutFactCheckerNestedInput
  }

  export type UserUncheckedUpdateManyWithoutAgeVerifierInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    emailVerified?: BoolFieldUpdateOperationsInput | boolean
    passwordHash?: StringFieldUpdateOperationsInput | string
    role?: EnumUserRoleFieldUpdateOperationsInput | $Enums.UserRole
    firstName?: NullableStringFieldUpdateOperationsInput | string | null
    lastName?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    dateOfBirth?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: EnumUserStatusFieldUpdateOperationsInput | $Enums.UserStatus
    lastLoginAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    failedLoginAttempts?: IntFieldUpdateOperationsInput | number
    lockedUntil?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    ageVerified?: BoolFieldUpdateOperationsInput | boolean
    ageVerificationMethod?: NullableEnumAgeVerificationMethodFieldUpdateOperationsInput | $Enums.AgeVerificationMethod | null
    ageVerifiedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    termsAcceptedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    privacyAcceptedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    marketingConsent?: BoolFieldUpdateOperationsInput | boolean
    gdprConsent?: BoolFieldUpdateOperationsInput | boolean
    ccpaOptOut?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type BlogPostUpdateWithoutAuthorInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    excerpt?: NullableStringFieldUpdateOperationsInput | string | null
    content?: StringFieldUpdateOperationsInput | string
    featuredImageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    category?: EnumBlogCategoryFieldUpdateOperationsInput | $Enums.BlogCategory
    tags?: NullableJsonNullValueInput | InputJsonValue
    metaTitle?: NullableStringFieldUpdateOperationsInput | string | null
    metaDescription?: NullableStringFieldUpdateOperationsInput | string | null
    metaKeywords?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumBlogStatusFieldUpdateOperationsInput | $Enums.BlogStatus
    publishedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    scheduledFor?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    viewCount?: IntFieldUpdateOperationsInput | number
    likeCount?: IntFieldUpdateOperationsInput | number
    commentCount?: IntFieldUpdateOperationsInput | number
    shareCount?: IntFieldUpdateOperationsInput | number
    factChecked?: BoolFieldUpdateOperationsInput | boolean
    factCheckedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    medicalDisclaimer?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    factChecker?: UserUpdateOneWithoutFactCheckedPostsNestedInput
  }

  export type BlogPostUncheckedUpdateWithoutAuthorInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    excerpt?: NullableStringFieldUpdateOperationsInput | string | null
    content?: StringFieldUpdateOperationsInput | string
    featuredImageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    category?: EnumBlogCategoryFieldUpdateOperationsInput | $Enums.BlogCategory
    tags?: NullableJsonNullValueInput | InputJsonValue
    metaTitle?: NullableStringFieldUpdateOperationsInput | string | null
    metaDescription?: NullableStringFieldUpdateOperationsInput | string | null
    metaKeywords?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumBlogStatusFieldUpdateOperationsInput | $Enums.BlogStatus
    publishedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    scheduledFor?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    viewCount?: IntFieldUpdateOperationsInput | number
    likeCount?: IntFieldUpdateOperationsInput | number
    commentCount?: IntFieldUpdateOperationsInput | number
    shareCount?: IntFieldUpdateOperationsInput | number
    factChecked?: BoolFieldUpdateOperationsInput | boolean
    factCheckedBy?: NullableStringFieldUpdateOperationsInput | string | null
    factCheckedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    medicalDisclaimer?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type BlogPostUncheckedUpdateManyWithoutAuthorInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    excerpt?: NullableStringFieldUpdateOperationsInput | string | null
    content?: StringFieldUpdateOperationsInput | string
    featuredImageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    category?: EnumBlogCategoryFieldUpdateOperationsInput | $Enums.BlogCategory
    tags?: NullableJsonNullValueInput | InputJsonValue
    metaTitle?: NullableStringFieldUpdateOperationsInput | string | null
    metaDescription?: NullableStringFieldUpdateOperationsInput | string | null
    metaKeywords?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumBlogStatusFieldUpdateOperationsInput | $Enums.BlogStatus
    publishedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    scheduledFor?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    viewCount?: IntFieldUpdateOperationsInput | number
    likeCount?: IntFieldUpdateOperationsInput | number
    commentCount?: IntFieldUpdateOperationsInput | number
    shareCount?: IntFieldUpdateOperationsInput | number
    factChecked?: BoolFieldUpdateOperationsInput | boolean
    factCheckedBy?: NullableStringFieldUpdateOperationsInput | string | null
    factCheckedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    medicalDisclaimer?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type BlogPostUpdateWithoutFactCheckerInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    excerpt?: NullableStringFieldUpdateOperationsInput | string | null
    content?: StringFieldUpdateOperationsInput | string
    featuredImageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    category?: EnumBlogCategoryFieldUpdateOperationsInput | $Enums.BlogCategory
    tags?: NullableJsonNullValueInput | InputJsonValue
    metaTitle?: NullableStringFieldUpdateOperationsInput | string | null
    metaDescription?: NullableStringFieldUpdateOperationsInput | string | null
    metaKeywords?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumBlogStatusFieldUpdateOperationsInput | $Enums.BlogStatus
    publishedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    scheduledFor?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    viewCount?: IntFieldUpdateOperationsInput | number
    likeCount?: IntFieldUpdateOperationsInput | number
    commentCount?: IntFieldUpdateOperationsInput | number
    shareCount?: IntFieldUpdateOperationsInput | number
    factChecked?: BoolFieldUpdateOperationsInput | boolean
    factCheckedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    medicalDisclaimer?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    author?: UserUpdateOneRequiredWithoutBlogPostsNestedInput
  }

  export type BlogPostUncheckedUpdateWithoutFactCheckerInput = {
    id?: StringFieldUpdateOperationsInput | string
    authorId?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    excerpt?: NullableStringFieldUpdateOperationsInput | string | null
    content?: StringFieldUpdateOperationsInput | string
    featuredImageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    category?: EnumBlogCategoryFieldUpdateOperationsInput | $Enums.BlogCategory
    tags?: NullableJsonNullValueInput | InputJsonValue
    metaTitle?: NullableStringFieldUpdateOperationsInput | string | null
    metaDescription?: NullableStringFieldUpdateOperationsInput | string | null
    metaKeywords?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumBlogStatusFieldUpdateOperationsInput | $Enums.BlogStatus
    publishedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    scheduledFor?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    viewCount?: IntFieldUpdateOperationsInput | number
    likeCount?: IntFieldUpdateOperationsInput | number
    commentCount?: IntFieldUpdateOperationsInput | number
    shareCount?: IntFieldUpdateOperationsInput | number
    factChecked?: BoolFieldUpdateOperationsInput | boolean
    factCheckedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    medicalDisclaimer?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type BlogPostUncheckedUpdateManyWithoutFactCheckerInput = {
    id?: StringFieldUpdateOperationsInput | string
    authorId?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    excerpt?: NullableStringFieldUpdateOperationsInput | string | null
    content?: StringFieldUpdateOperationsInput | string
    featuredImageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    category?: EnumBlogCategoryFieldUpdateOperationsInput | $Enums.BlogCategory
    tags?: NullableJsonNullValueInput | InputJsonValue
    metaTitle?: NullableStringFieldUpdateOperationsInput | string | null
    metaDescription?: NullableStringFieldUpdateOperationsInput | string | null
    metaKeywords?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumBlogStatusFieldUpdateOperationsInput | $Enums.BlogStatus
    publishedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    scheduledFor?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    viewCount?: IntFieldUpdateOperationsInput | number
    likeCount?: IntFieldUpdateOperationsInput | number
    commentCount?: IntFieldUpdateOperationsInput | number
    shareCount?: IntFieldUpdateOperationsInput | number
    factChecked?: BoolFieldUpdateOperationsInput | boolean
    factCheckedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    medicalDisclaimer?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type StoreStaffCreateManyStoreInput = {
    id?: string
    userId: string
    role: string
    permissions?: NullableJsonNullValueInput | InputJsonValue
    employeeId?: string | null
    startDate: Date | string
    endDate?: Date | string | null
    hourlyWage?: Decimal | DecimalJsLike | number | string | null
    commissionRate?: Decimal | DecimalJsLike | number | string | null
    status?: string
    canAccessPos?: boolean
    canManageInventory?: boolean
    canProcessOrders?: boolean
    complianceTrainingCompleted?: boolean
    trainingCompletedAt?: Date | string | null
    trainingExpiresAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    createdBy?: string | null
  }

  export type ProductCreateManyStoreInput = {
    id?: string
    categoryId: string
    name: string
    slug: string
    description?: string | null
    shortDescription?: string | null
    strainName?: string | null
    strainType?: $Enums.StrainType | null
    brand?: string | null
    manufacturer?: string | null
    thcPercentage?: Decimal | DecimalJsLike | number | string | null
    cbdPercentage?: Decimal | DecimalJsLike | number | string | null
    thcaPercentage?: Decimal | DecimalJsLike | number | string | null
    cbdaPercentage?: Decimal | DecimalJsLike | number | string | null
    totalCannabinoids?: Decimal | DecimalJsLike | number | string | null
    basePrice: Decimal | DecimalJsLike | number | string
    salePrice?: Decimal | DecimalJsLike | number | string | null
    costPrice?: Decimal | DecimalJsLike | number | string | null
    weightGrams?: Decimal | DecimalJsLike | number | string | null
    sku: string
    barcode?: string | null
    stockQuantity?: number
    reservedQuantity?: number
    lowStockThreshold?: number
    metrcId?: string | null
    batchNumber?: string | null
    harvestDate?: Date | string | null
    packageDate?: Date | string | null
    expirationDate?: Date | string | null
    labTested?: boolean
    labTestResults?: NullableJsonNullValueInput | InputJsonValue
    testedDate?: Date | string | null
    testingLab?: string | null
    featuredImageUrl?: string | null
    galleryImages?: NullableJsonNullValueInput | InputJsonValue
    status?: $Enums.ProductStatus
    isFeatured?: boolean
    isMedicalOnly?: boolean
    ageRestriction?: number
    metaTitle?: string | null
    metaDescription?: string | null
    tags?: NullableJsonNullValueInput | InputJsonValue
    searchKeywords?: string | null
    viewCount?: number
    averageRating?: Decimal | DecimalJsLike | number | string
    reviewCount?: number
    salesCount?: number
    createdAt?: Date | string
    updatedAt?: Date | string
    createdBy?: string | null
    updatedBy?: string | null
  }

  export type OrderCreateManyStoreInput = {
    id?: string
    orderNumber: string
    userId: string
    orderType: $Enums.OrderType
    fulfillmentStatus?: $Enums.OrderStatus
    deliveryAddress?: NullableJsonNullValueInput | InputJsonValue
    deliveryInstructions?: string | null
    deliveryTimeRequested?: Date | string | null
    deliveryTimeActual?: Date | string | null
    deliveryPersonId?: string | null
    subtotal: Decimal | DecimalJsLike | number | string
    taxAmount?: Decimal | DecimalJsLike | number | string
    deliveryFee?: Decimal | DecimalJsLike | number | string
    serviceFee?: Decimal | DecimalJsLike | number | string
    discountAmount?: Decimal | DecimalJsLike | number | string
    tipAmount?: Decimal | DecimalJsLike | number | string
    totalAmount: Decimal | DecimalJsLike | number | string
    paymentStatus?: $Enums.PaymentStatus
    paymentMethod: $Enums.PaymentMethod
    paymentProvider?: string | null
    paymentIntentId?: string | null
    ageVerifiedAtDelivery?: Date | string | null
    idCheckedBy?: string | null
    customerNotes?: string | null
    internalNotes?: string | null
    metrcTransferManifest?: string | null
    complianceCheckPassed?: boolean
    complianceCheckedAt?: Date | string | null
    complianceCheckedBy?: string | null
    cancelledAt?: Date | string | null
    cancelledBy?: string | null
    cancellationReason?: string | null
    refundAmount?: Decimal | DecimalJsLike | number | string
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type ReviewCreateManyStoreInput = {
    id?: string
    userId: string
    reviewableType: $Enums.ReviewableType
    rating: number
    title?: string | null
    content: string
    qualityRating?: number | null
    valueRating?: number | null
    serviceRating?: number | null
    effectsRating?: number | null
    effects?: NullableJsonNullValueInput | InputJsonValue
    medicalBenefits?: NullableJsonNullValueInput | InputJsonValue
    sideEffects?: NullableJsonNullValueInput | InputJsonValue
    images?: NullableJsonNullValueInput | InputJsonValue
    status?: $Enums.ReviewStatus
    moderatedAt?: Date | string | null
    moderatedBy?: string | null
    moderationReason?: string | null
    verifiedPurchase?: boolean
    orderId?: string | null
    helpfulCount?: number
    totalVotes?: number
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type StoreStaffUpdateWithoutStoreInput = {
    id?: StringFieldUpdateOperationsInput | string
    role?: StringFieldUpdateOperationsInput | string
    permissions?: NullableJsonNullValueInput | InputJsonValue
    employeeId?: NullableStringFieldUpdateOperationsInput | string | null
    startDate?: DateTimeFieldUpdateOperationsInput | Date | string
    endDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    hourlyWage?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    commissionRate?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    status?: StringFieldUpdateOperationsInput | string
    canAccessPos?: BoolFieldUpdateOperationsInput | boolean
    canManageInventory?: BoolFieldUpdateOperationsInput | boolean
    canProcessOrders?: BoolFieldUpdateOperationsInput | boolean
    complianceTrainingCompleted?: BoolFieldUpdateOperationsInput | boolean
    trainingCompletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    trainingExpiresAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    user?: UserUpdateOneRequiredWithoutStoreStaffNestedInput
  }

  export type StoreStaffUncheckedUpdateWithoutStoreInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    role?: StringFieldUpdateOperationsInput | string
    permissions?: NullableJsonNullValueInput | InputJsonValue
    employeeId?: NullableStringFieldUpdateOperationsInput | string | null
    startDate?: DateTimeFieldUpdateOperationsInput | Date | string
    endDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    hourlyWage?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    commissionRate?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    status?: StringFieldUpdateOperationsInput | string
    canAccessPos?: BoolFieldUpdateOperationsInput | boolean
    canManageInventory?: BoolFieldUpdateOperationsInput | boolean
    canProcessOrders?: BoolFieldUpdateOperationsInput | boolean
    complianceTrainingCompleted?: BoolFieldUpdateOperationsInput | boolean
    trainingCompletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    trainingExpiresAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type StoreStaffUncheckedUpdateManyWithoutStoreInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    role?: StringFieldUpdateOperationsInput | string
    permissions?: NullableJsonNullValueInput | InputJsonValue
    employeeId?: NullableStringFieldUpdateOperationsInput | string | null
    startDate?: DateTimeFieldUpdateOperationsInput | Date | string
    endDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    hourlyWage?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    commissionRate?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    status?: StringFieldUpdateOperationsInput | string
    canAccessPos?: BoolFieldUpdateOperationsInput | boolean
    canManageInventory?: BoolFieldUpdateOperationsInput | boolean
    canProcessOrders?: BoolFieldUpdateOperationsInput | boolean
    complianceTrainingCompleted?: BoolFieldUpdateOperationsInput | boolean
    trainingCompletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    trainingExpiresAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type ProductUpdateWithoutStoreInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    shortDescription?: NullableStringFieldUpdateOperationsInput | string | null
    strainName?: NullableStringFieldUpdateOperationsInput | string | null
    strainType?: NullableEnumStrainTypeFieldUpdateOperationsInput | $Enums.StrainType | null
    brand?: NullableStringFieldUpdateOperationsInput | string | null
    manufacturer?: NullableStringFieldUpdateOperationsInput | string | null
    thcPercentage?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    cbdPercentage?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    thcaPercentage?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    cbdaPercentage?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    totalCannabinoids?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    basePrice?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    salePrice?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    costPrice?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    weightGrams?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    sku?: StringFieldUpdateOperationsInput | string
    barcode?: NullableStringFieldUpdateOperationsInput | string | null
    stockQuantity?: IntFieldUpdateOperationsInput | number
    reservedQuantity?: IntFieldUpdateOperationsInput | number
    lowStockThreshold?: IntFieldUpdateOperationsInput | number
    metrcId?: NullableStringFieldUpdateOperationsInput | string | null
    batchNumber?: NullableStringFieldUpdateOperationsInput | string | null
    harvestDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    packageDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    expirationDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    labTested?: BoolFieldUpdateOperationsInput | boolean
    labTestResults?: NullableJsonNullValueInput | InputJsonValue
    testedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    testingLab?: NullableStringFieldUpdateOperationsInput | string | null
    featuredImageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    galleryImages?: NullableJsonNullValueInput | InputJsonValue
    status?: EnumProductStatusFieldUpdateOperationsInput | $Enums.ProductStatus
    isFeatured?: BoolFieldUpdateOperationsInput | boolean
    isMedicalOnly?: BoolFieldUpdateOperationsInput | boolean
    ageRestriction?: IntFieldUpdateOperationsInput | number
    metaTitle?: NullableStringFieldUpdateOperationsInput | string | null
    metaDescription?: NullableStringFieldUpdateOperationsInput | string | null
    tags?: NullableJsonNullValueInput | InputJsonValue
    searchKeywords?: NullableStringFieldUpdateOperationsInput | string | null
    viewCount?: IntFieldUpdateOperationsInput | number
    averageRating?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    reviewCount?: IntFieldUpdateOperationsInput | number
    salesCount?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    category?: ProductCategoryUpdateOneRequiredWithoutProductsNestedInput
    reviews?: ReviewUpdateManyWithoutProductNestedInput
    orderItems?: OrderItemUpdateManyWithoutProductNestedInput
  }

  export type ProductUncheckedUpdateWithoutStoreInput = {
    id?: StringFieldUpdateOperationsInput | string
    categoryId?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    shortDescription?: NullableStringFieldUpdateOperationsInput | string | null
    strainName?: NullableStringFieldUpdateOperationsInput | string | null
    strainType?: NullableEnumStrainTypeFieldUpdateOperationsInput | $Enums.StrainType | null
    brand?: NullableStringFieldUpdateOperationsInput | string | null
    manufacturer?: NullableStringFieldUpdateOperationsInput | string | null
    thcPercentage?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    cbdPercentage?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    thcaPercentage?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    cbdaPercentage?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    totalCannabinoids?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    basePrice?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    salePrice?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    costPrice?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    weightGrams?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    sku?: StringFieldUpdateOperationsInput | string
    barcode?: NullableStringFieldUpdateOperationsInput | string | null
    stockQuantity?: IntFieldUpdateOperationsInput | number
    reservedQuantity?: IntFieldUpdateOperationsInput | number
    lowStockThreshold?: IntFieldUpdateOperationsInput | number
    metrcId?: NullableStringFieldUpdateOperationsInput | string | null
    batchNumber?: NullableStringFieldUpdateOperationsInput | string | null
    harvestDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    packageDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    expirationDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    labTested?: BoolFieldUpdateOperationsInput | boolean
    labTestResults?: NullableJsonNullValueInput | InputJsonValue
    testedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    testingLab?: NullableStringFieldUpdateOperationsInput | string | null
    featuredImageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    galleryImages?: NullableJsonNullValueInput | InputJsonValue
    status?: EnumProductStatusFieldUpdateOperationsInput | $Enums.ProductStatus
    isFeatured?: BoolFieldUpdateOperationsInput | boolean
    isMedicalOnly?: BoolFieldUpdateOperationsInput | boolean
    ageRestriction?: IntFieldUpdateOperationsInput | number
    metaTitle?: NullableStringFieldUpdateOperationsInput | string | null
    metaDescription?: NullableStringFieldUpdateOperationsInput | string | null
    tags?: NullableJsonNullValueInput | InputJsonValue
    searchKeywords?: NullableStringFieldUpdateOperationsInput | string | null
    viewCount?: IntFieldUpdateOperationsInput | number
    averageRating?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    reviewCount?: IntFieldUpdateOperationsInput | number
    salesCount?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    reviews?: ReviewUncheckedUpdateManyWithoutProductNestedInput
    orderItems?: OrderItemUncheckedUpdateManyWithoutProductNestedInput
  }

  export type ProductUncheckedUpdateManyWithoutStoreInput = {
    id?: StringFieldUpdateOperationsInput | string
    categoryId?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    shortDescription?: NullableStringFieldUpdateOperationsInput | string | null
    strainName?: NullableStringFieldUpdateOperationsInput | string | null
    strainType?: NullableEnumStrainTypeFieldUpdateOperationsInput | $Enums.StrainType | null
    brand?: NullableStringFieldUpdateOperationsInput | string | null
    manufacturer?: NullableStringFieldUpdateOperationsInput | string | null
    thcPercentage?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    cbdPercentage?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    thcaPercentage?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    cbdaPercentage?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    totalCannabinoids?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    basePrice?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    salePrice?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    costPrice?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    weightGrams?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    sku?: StringFieldUpdateOperationsInput | string
    barcode?: NullableStringFieldUpdateOperationsInput | string | null
    stockQuantity?: IntFieldUpdateOperationsInput | number
    reservedQuantity?: IntFieldUpdateOperationsInput | number
    lowStockThreshold?: IntFieldUpdateOperationsInput | number
    metrcId?: NullableStringFieldUpdateOperationsInput | string | null
    batchNumber?: NullableStringFieldUpdateOperationsInput | string | null
    harvestDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    packageDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    expirationDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    labTested?: BoolFieldUpdateOperationsInput | boolean
    labTestResults?: NullableJsonNullValueInput | InputJsonValue
    testedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    testingLab?: NullableStringFieldUpdateOperationsInput | string | null
    featuredImageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    galleryImages?: NullableJsonNullValueInput | InputJsonValue
    status?: EnumProductStatusFieldUpdateOperationsInput | $Enums.ProductStatus
    isFeatured?: BoolFieldUpdateOperationsInput | boolean
    isMedicalOnly?: BoolFieldUpdateOperationsInput | boolean
    ageRestriction?: IntFieldUpdateOperationsInput | number
    metaTitle?: NullableStringFieldUpdateOperationsInput | string | null
    metaDescription?: NullableStringFieldUpdateOperationsInput | string | null
    tags?: NullableJsonNullValueInput | InputJsonValue
    searchKeywords?: NullableStringFieldUpdateOperationsInput | string | null
    viewCount?: IntFieldUpdateOperationsInput | number
    averageRating?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    reviewCount?: IntFieldUpdateOperationsInput | number
    salesCount?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type OrderUpdateWithoutStoreInput = {
    id?: StringFieldUpdateOperationsInput | string
    orderNumber?: StringFieldUpdateOperationsInput | string
    orderType?: EnumOrderTypeFieldUpdateOperationsInput | $Enums.OrderType
    fulfillmentStatus?: EnumOrderStatusFieldUpdateOperationsInput | $Enums.OrderStatus
    deliveryAddress?: NullableJsonNullValueInput | InputJsonValue
    deliveryInstructions?: NullableStringFieldUpdateOperationsInput | string | null
    deliveryTimeRequested?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deliveryTimeActual?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deliveryPersonId?: NullableStringFieldUpdateOperationsInput | string | null
    subtotal?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    taxAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    deliveryFee?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    serviceFee?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    discountAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    tipAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    totalAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    paymentStatus?: EnumPaymentStatusFieldUpdateOperationsInput | $Enums.PaymentStatus
    paymentMethod?: EnumPaymentMethodFieldUpdateOperationsInput | $Enums.PaymentMethod
    paymentProvider?: NullableStringFieldUpdateOperationsInput | string | null
    paymentIntentId?: NullableStringFieldUpdateOperationsInput | string | null
    ageVerifiedAtDelivery?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    idCheckedBy?: NullableStringFieldUpdateOperationsInput | string | null
    customerNotes?: NullableStringFieldUpdateOperationsInput | string | null
    internalNotes?: NullableStringFieldUpdateOperationsInput | string | null
    metrcTransferManifest?: NullableStringFieldUpdateOperationsInput | string | null
    complianceCheckPassed?: BoolFieldUpdateOperationsInput | boolean
    complianceCheckedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    complianceCheckedBy?: NullableStringFieldUpdateOperationsInput | string | null
    cancelledAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    cancelledBy?: NullableStringFieldUpdateOperationsInput | string | null
    cancellationReason?: NullableStringFieldUpdateOperationsInput | string | null
    refundAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    user?: UserUpdateOneRequiredWithoutOrdersNestedInput
    items?: OrderItemUpdateManyWithoutOrderNestedInput
    reviews?: ReviewUpdateManyWithoutOrderNestedInput
  }

  export type OrderUncheckedUpdateWithoutStoreInput = {
    id?: StringFieldUpdateOperationsInput | string
    orderNumber?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    orderType?: EnumOrderTypeFieldUpdateOperationsInput | $Enums.OrderType
    fulfillmentStatus?: EnumOrderStatusFieldUpdateOperationsInput | $Enums.OrderStatus
    deliveryAddress?: NullableJsonNullValueInput | InputJsonValue
    deliveryInstructions?: NullableStringFieldUpdateOperationsInput | string | null
    deliveryTimeRequested?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deliveryTimeActual?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deliveryPersonId?: NullableStringFieldUpdateOperationsInput | string | null
    subtotal?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    taxAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    deliveryFee?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    serviceFee?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    discountAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    tipAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    totalAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    paymentStatus?: EnumPaymentStatusFieldUpdateOperationsInput | $Enums.PaymentStatus
    paymentMethod?: EnumPaymentMethodFieldUpdateOperationsInput | $Enums.PaymentMethod
    paymentProvider?: NullableStringFieldUpdateOperationsInput | string | null
    paymentIntentId?: NullableStringFieldUpdateOperationsInput | string | null
    ageVerifiedAtDelivery?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    idCheckedBy?: NullableStringFieldUpdateOperationsInput | string | null
    customerNotes?: NullableStringFieldUpdateOperationsInput | string | null
    internalNotes?: NullableStringFieldUpdateOperationsInput | string | null
    metrcTransferManifest?: NullableStringFieldUpdateOperationsInput | string | null
    complianceCheckPassed?: BoolFieldUpdateOperationsInput | boolean
    complianceCheckedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    complianceCheckedBy?: NullableStringFieldUpdateOperationsInput | string | null
    cancelledAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    cancelledBy?: NullableStringFieldUpdateOperationsInput | string | null
    cancellationReason?: NullableStringFieldUpdateOperationsInput | string | null
    refundAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    items?: OrderItemUncheckedUpdateManyWithoutOrderNestedInput
    reviews?: ReviewUncheckedUpdateManyWithoutOrderNestedInput
  }

  export type OrderUncheckedUpdateManyWithoutStoreInput = {
    id?: StringFieldUpdateOperationsInput | string
    orderNumber?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    orderType?: EnumOrderTypeFieldUpdateOperationsInput | $Enums.OrderType
    fulfillmentStatus?: EnumOrderStatusFieldUpdateOperationsInput | $Enums.OrderStatus
    deliveryAddress?: NullableJsonNullValueInput | InputJsonValue
    deliveryInstructions?: NullableStringFieldUpdateOperationsInput | string | null
    deliveryTimeRequested?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deliveryTimeActual?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deliveryPersonId?: NullableStringFieldUpdateOperationsInput | string | null
    subtotal?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    taxAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    deliveryFee?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    serviceFee?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    discountAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    tipAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    totalAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    paymentStatus?: EnumPaymentStatusFieldUpdateOperationsInput | $Enums.PaymentStatus
    paymentMethod?: EnumPaymentMethodFieldUpdateOperationsInput | $Enums.PaymentMethod
    paymentProvider?: NullableStringFieldUpdateOperationsInput | string | null
    paymentIntentId?: NullableStringFieldUpdateOperationsInput | string | null
    ageVerifiedAtDelivery?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    idCheckedBy?: NullableStringFieldUpdateOperationsInput | string | null
    customerNotes?: NullableStringFieldUpdateOperationsInput | string | null
    internalNotes?: NullableStringFieldUpdateOperationsInput | string | null
    metrcTransferManifest?: NullableStringFieldUpdateOperationsInput | string | null
    complianceCheckPassed?: BoolFieldUpdateOperationsInput | boolean
    complianceCheckedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    complianceCheckedBy?: NullableStringFieldUpdateOperationsInput | string | null
    cancelledAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    cancelledBy?: NullableStringFieldUpdateOperationsInput | string | null
    cancellationReason?: NullableStringFieldUpdateOperationsInput | string | null
    refundAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ReviewUpdateWithoutStoreInput = {
    id?: StringFieldUpdateOperationsInput | string
    reviewableType?: EnumReviewableTypeFieldUpdateOperationsInput | $Enums.ReviewableType
    rating?: IntFieldUpdateOperationsInput | number
    title?: NullableStringFieldUpdateOperationsInput | string | null
    content?: StringFieldUpdateOperationsInput | string
    qualityRating?: NullableIntFieldUpdateOperationsInput | number | null
    valueRating?: NullableIntFieldUpdateOperationsInput | number | null
    serviceRating?: NullableIntFieldUpdateOperationsInput | number | null
    effectsRating?: NullableIntFieldUpdateOperationsInput | number | null
    effects?: NullableJsonNullValueInput | InputJsonValue
    medicalBenefits?: NullableJsonNullValueInput | InputJsonValue
    sideEffects?: NullableJsonNullValueInput | InputJsonValue
    images?: NullableJsonNullValueInput | InputJsonValue
    status?: EnumReviewStatusFieldUpdateOperationsInput | $Enums.ReviewStatus
    moderatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    moderatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    moderationReason?: NullableStringFieldUpdateOperationsInput | string | null
    verifiedPurchase?: BoolFieldUpdateOperationsInput | boolean
    helpfulCount?: IntFieldUpdateOperationsInput | number
    totalVotes?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    user?: UserUpdateOneRequiredWithoutReviewsNestedInput
    order?: OrderUpdateOneWithoutReviewsNestedInput
    product?: ProductUpdateOneWithoutReviewsNestedInput
  }

  export type ReviewUncheckedUpdateWithoutStoreInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    reviewableType?: EnumReviewableTypeFieldUpdateOperationsInput | $Enums.ReviewableType
    rating?: IntFieldUpdateOperationsInput | number
    title?: NullableStringFieldUpdateOperationsInput | string | null
    content?: StringFieldUpdateOperationsInput | string
    qualityRating?: NullableIntFieldUpdateOperationsInput | number | null
    valueRating?: NullableIntFieldUpdateOperationsInput | number | null
    serviceRating?: NullableIntFieldUpdateOperationsInput | number | null
    effectsRating?: NullableIntFieldUpdateOperationsInput | number | null
    effects?: NullableJsonNullValueInput | InputJsonValue
    medicalBenefits?: NullableJsonNullValueInput | InputJsonValue
    sideEffects?: NullableJsonNullValueInput | InputJsonValue
    images?: NullableJsonNullValueInput | InputJsonValue
    status?: EnumReviewStatusFieldUpdateOperationsInput | $Enums.ReviewStatus
    moderatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    moderatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    moderationReason?: NullableStringFieldUpdateOperationsInput | string | null
    verifiedPurchase?: BoolFieldUpdateOperationsInput | boolean
    orderId?: NullableStringFieldUpdateOperationsInput | string | null
    helpfulCount?: IntFieldUpdateOperationsInput | number
    totalVotes?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ReviewUncheckedUpdateManyWithoutStoreInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    reviewableType?: EnumReviewableTypeFieldUpdateOperationsInput | $Enums.ReviewableType
    rating?: IntFieldUpdateOperationsInput | number
    title?: NullableStringFieldUpdateOperationsInput | string | null
    content?: StringFieldUpdateOperationsInput | string
    qualityRating?: NullableIntFieldUpdateOperationsInput | number | null
    valueRating?: NullableIntFieldUpdateOperationsInput | number | null
    serviceRating?: NullableIntFieldUpdateOperationsInput | number | null
    effectsRating?: NullableIntFieldUpdateOperationsInput | number | null
    effects?: NullableJsonNullValueInput | InputJsonValue
    medicalBenefits?: NullableJsonNullValueInput | InputJsonValue
    sideEffects?: NullableJsonNullValueInput | InputJsonValue
    images?: NullableJsonNullValueInput | InputJsonValue
    status?: EnumReviewStatusFieldUpdateOperationsInput | $Enums.ReviewStatus
    moderatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    moderatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    moderationReason?: NullableStringFieldUpdateOperationsInput | string | null
    verifiedPurchase?: BoolFieldUpdateOperationsInput | boolean
    orderId?: NullableStringFieldUpdateOperationsInput | string | null
    helpfulCount?: IntFieldUpdateOperationsInput | number
    totalVotes?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ProductCategoryCreateManyParentInput = {
    id?: string
    name: string
    slug: string
    description?: string | null
    iconName?: string | null
    colorHex?: string | null
    sortOrder?: number
    productType: $Enums.ProductType
    thcCategory?: string | null
    consumptionMethod?: string | null
    metaTitle?: string | null
    metaDescription?: string | null
    isActive?: boolean
    requiresCompliance?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type ProductCreateManyCategoryInput = {
    id?: string
    storeId: string
    name: string
    slug: string
    description?: string | null
    shortDescription?: string | null
    strainName?: string | null
    strainType?: $Enums.StrainType | null
    brand?: string | null
    manufacturer?: string | null
    thcPercentage?: Decimal | DecimalJsLike | number | string | null
    cbdPercentage?: Decimal | DecimalJsLike | number | string | null
    thcaPercentage?: Decimal | DecimalJsLike | number | string | null
    cbdaPercentage?: Decimal | DecimalJsLike | number | string | null
    totalCannabinoids?: Decimal | DecimalJsLike | number | string | null
    basePrice: Decimal | DecimalJsLike | number | string
    salePrice?: Decimal | DecimalJsLike | number | string | null
    costPrice?: Decimal | DecimalJsLike | number | string | null
    weightGrams?: Decimal | DecimalJsLike | number | string | null
    sku: string
    barcode?: string | null
    stockQuantity?: number
    reservedQuantity?: number
    lowStockThreshold?: number
    metrcId?: string | null
    batchNumber?: string | null
    harvestDate?: Date | string | null
    packageDate?: Date | string | null
    expirationDate?: Date | string | null
    labTested?: boolean
    labTestResults?: NullableJsonNullValueInput | InputJsonValue
    testedDate?: Date | string | null
    testingLab?: string | null
    featuredImageUrl?: string | null
    galleryImages?: NullableJsonNullValueInput | InputJsonValue
    status?: $Enums.ProductStatus
    isFeatured?: boolean
    isMedicalOnly?: boolean
    ageRestriction?: number
    metaTitle?: string | null
    metaDescription?: string | null
    tags?: NullableJsonNullValueInput | InputJsonValue
    searchKeywords?: string | null
    viewCount?: number
    averageRating?: Decimal | DecimalJsLike | number | string
    reviewCount?: number
    salesCount?: number
    createdAt?: Date | string
    updatedAt?: Date | string
    createdBy?: string | null
    updatedBy?: string | null
  }

  export type ProductCategoryUpdateWithoutParentInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    iconName?: NullableStringFieldUpdateOperationsInput | string | null
    colorHex?: NullableStringFieldUpdateOperationsInput | string | null
    sortOrder?: IntFieldUpdateOperationsInput | number
    productType?: EnumProductTypeFieldUpdateOperationsInput | $Enums.ProductType
    thcCategory?: NullableStringFieldUpdateOperationsInput | string | null
    consumptionMethod?: NullableStringFieldUpdateOperationsInput | string | null
    metaTitle?: NullableStringFieldUpdateOperationsInput | string | null
    metaDescription?: NullableStringFieldUpdateOperationsInput | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    requiresCompliance?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    children?: ProductCategoryUpdateManyWithoutParentNestedInput
    products?: ProductUpdateManyWithoutCategoryNestedInput
  }

  export type ProductCategoryUncheckedUpdateWithoutParentInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    iconName?: NullableStringFieldUpdateOperationsInput | string | null
    colorHex?: NullableStringFieldUpdateOperationsInput | string | null
    sortOrder?: IntFieldUpdateOperationsInput | number
    productType?: EnumProductTypeFieldUpdateOperationsInput | $Enums.ProductType
    thcCategory?: NullableStringFieldUpdateOperationsInput | string | null
    consumptionMethod?: NullableStringFieldUpdateOperationsInput | string | null
    metaTitle?: NullableStringFieldUpdateOperationsInput | string | null
    metaDescription?: NullableStringFieldUpdateOperationsInput | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    requiresCompliance?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    children?: ProductCategoryUncheckedUpdateManyWithoutParentNestedInput
    products?: ProductUncheckedUpdateManyWithoutCategoryNestedInput
  }

  export type ProductCategoryUncheckedUpdateManyWithoutParentInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    iconName?: NullableStringFieldUpdateOperationsInput | string | null
    colorHex?: NullableStringFieldUpdateOperationsInput | string | null
    sortOrder?: IntFieldUpdateOperationsInput | number
    productType?: EnumProductTypeFieldUpdateOperationsInput | $Enums.ProductType
    thcCategory?: NullableStringFieldUpdateOperationsInput | string | null
    consumptionMethod?: NullableStringFieldUpdateOperationsInput | string | null
    metaTitle?: NullableStringFieldUpdateOperationsInput | string | null
    metaDescription?: NullableStringFieldUpdateOperationsInput | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    requiresCompliance?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ProductUpdateWithoutCategoryInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    shortDescription?: NullableStringFieldUpdateOperationsInput | string | null
    strainName?: NullableStringFieldUpdateOperationsInput | string | null
    strainType?: NullableEnumStrainTypeFieldUpdateOperationsInput | $Enums.StrainType | null
    brand?: NullableStringFieldUpdateOperationsInput | string | null
    manufacturer?: NullableStringFieldUpdateOperationsInput | string | null
    thcPercentage?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    cbdPercentage?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    thcaPercentage?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    cbdaPercentage?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    totalCannabinoids?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    basePrice?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    salePrice?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    costPrice?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    weightGrams?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    sku?: StringFieldUpdateOperationsInput | string
    barcode?: NullableStringFieldUpdateOperationsInput | string | null
    stockQuantity?: IntFieldUpdateOperationsInput | number
    reservedQuantity?: IntFieldUpdateOperationsInput | number
    lowStockThreshold?: IntFieldUpdateOperationsInput | number
    metrcId?: NullableStringFieldUpdateOperationsInput | string | null
    batchNumber?: NullableStringFieldUpdateOperationsInput | string | null
    harvestDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    packageDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    expirationDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    labTested?: BoolFieldUpdateOperationsInput | boolean
    labTestResults?: NullableJsonNullValueInput | InputJsonValue
    testedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    testingLab?: NullableStringFieldUpdateOperationsInput | string | null
    featuredImageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    galleryImages?: NullableJsonNullValueInput | InputJsonValue
    status?: EnumProductStatusFieldUpdateOperationsInput | $Enums.ProductStatus
    isFeatured?: BoolFieldUpdateOperationsInput | boolean
    isMedicalOnly?: BoolFieldUpdateOperationsInput | boolean
    ageRestriction?: IntFieldUpdateOperationsInput | number
    metaTitle?: NullableStringFieldUpdateOperationsInput | string | null
    metaDescription?: NullableStringFieldUpdateOperationsInput | string | null
    tags?: NullableJsonNullValueInput | InputJsonValue
    searchKeywords?: NullableStringFieldUpdateOperationsInput | string | null
    viewCount?: IntFieldUpdateOperationsInput | number
    averageRating?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    reviewCount?: IntFieldUpdateOperationsInput | number
    salesCount?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    store?: StoreUpdateOneRequiredWithoutProductsNestedInput
    reviews?: ReviewUpdateManyWithoutProductNestedInput
    orderItems?: OrderItemUpdateManyWithoutProductNestedInput
  }

  export type ProductUncheckedUpdateWithoutCategoryInput = {
    id?: StringFieldUpdateOperationsInput | string
    storeId?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    shortDescription?: NullableStringFieldUpdateOperationsInput | string | null
    strainName?: NullableStringFieldUpdateOperationsInput | string | null
    strainType?: NullableEnumStrainTypeFieldUpdateOperationsInput | $Enums.StrainType | null
    brand?: NullableStringFieldUpdateOperationsInput | string | null
    manufacturer?: NullableStringFieldUpdateOperationsInput | string | null
    thcPercentage?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    cbdPercentage?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    thcaPercentage?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    cbdaPercentage?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    totalCannabinoids?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    basePrice?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    salePrice?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    costPrice?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    weightGrams?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    sku?: StringFieldUpdateOperationsInput | string
    barcode?: NullableStringFieldUpdateOperationsInput | string | null
    stockQuantity?: IntFieldUpdateOperationsInput | number
    reservedQuantity?: IntFieldUpdateOperationsInput | number
    lowStockThreshold?: IntFieldUpdateOperationsInput | number
    metrcId?: NullableStringFieldUpdateOperationsInput | string | null
    batchNumber?: NullableStringFieldUpdateOperationsInput | string | null
    harvestDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    packageDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    expirationDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    labTested?: BoolFieldUpdateOperationsInput | boolean
    labTestResults?: NullableJsonNullValueInput | InputJsonValue
    testedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    testingLab?: NullableStringFieldUpdateOperationsInput | string | null
    featuredImageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    galleryImages?: NullableJsonNullValueInput | InputJsonValue
    status?: EnumProductStatusFieldUpdateOperationsInput | $Enums.ProductStatus
    isFeatured?: BoolFieldUpdateOperationsInput | boolean
    isMedicalOnly?: BoolFieldUpdateOperationsInput | boolean
    ageRestriction?: IntFieldUpdateOperationsInput | number
    metaTitle?: NullableStringFieldUpdateOperationsInput | string | null
    metaDescription?: NullableStringFieldUpdateOperationsInput | string | null
    tags?: NullableJsonNullValueInput | InputJsonValue
    searchKeywords?: NullableStringFieldUpdateOperationsInput | string | null
    viewCount?: IntFieldUpdateOperationsInput | number
    averageRating?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    reviewCount?: IntFieldUpdateOperationsInput | number
    salesCount?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    reviews?: ReviewUncheckedUpdateManyWithoutProductNestedInput
    orderItems?: OrderItemUncheckedUpdateManyWithoutProductNestedInput
  }

  export type ProductUncheckedUpdateManyWithoutCategoryInput = {
    id?: StringFieldUpdateOperationsInput | string
    storeId?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    shortDescription?: NullableStringFieldUpdateOperationsInput | string | null
    strainName?: NullableStringFieldUpdateOperationsInput | string | null
    strainType?: NullableEnumStrainTypeFieldUpdateOperationsInput | $Enums.StrainType | null
    brand?: NullableStringFieldUpdateOperationsInput | string | null
    manufacturer?: NullableStringFieldUpdateOperationsInput | string | null
    thcPercentage?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    cbdPercentage?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    thcaPercentage?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    cbdaPercentage?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    totalCannabinoids?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    basePrice?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    salePrice?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    costPrice?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    weightGrams?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    sku?: StringFieldUpdateOperationsInput | string
    barcode?: NullableStringFieldUpdateOperationsInput | string | null
    stockQuantity?: IntFieldUpdateOperationsInput | number
    reservedQuantity?: IntFieldUpdateOperationsInput | number
    lowStockThreshold?: IntFieldUpdateOperationsInput | number
    metrcId?: NullableStringFieldUpdateOperationsInput | string | null
    batchNumber?: NullableStringFieldUpdateOperationsInput | string | null
    harvestDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    packageDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    expirationDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    labTested?: BoolFieldUpdateOperationsInput | boolean
    labTestResults?: NullableJsonNullValueInput | InputJsonValue
    testedDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    testingLab?: NullableStringFieldUpdateOperationsInput | string | null
    featuredImageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    galleryImages?: NullableJsonNullValueInput | InputJsonValue
    status?: EnumProductStatusFieldUpdateOperationsInput | $Enums.ProductStatus
    isFeatured?: BoolFieldUpdateOperationsInput | boolean
    isMedicalOnly?: BoolFieldUpdateOperationsInput | boolean
    ageRestriction?: IntFieldUpdateOperationsInput | number
    metaTitle?: NullableStringFieldUpdateOperationsInput | string | null
    metaDescription?: NullableStringFieldUpdateOperationsInput | string | null
    tags?: NullableJsonNullValueInput | InputJsonValue
    searchKeywords?: NullableStringFieldUpdateOperationsInput | string | null
    viewCount?: IntFieldUpdateOperationsInput | number
    averageRating?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    reviewCount?: IntFieldUpdateOperationsInput | number
    salesCount?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type ReviewCreateManyProductInput = {
    id?: string
    userId: string
    reviewableType: $Enums.ReviewableType
    rating: number
    title?: string | null
    content: string
    qualityRating?: number | null
    valueRating?: number | null
    serviceRating?: number | null
    effectsRating?: number | null
    effects?: NullableJsonNullValueInput | InputJsonValue
    medicalBenefits?: NullableJsonNullValueInput | InputJsonValue
    sideEffects?: NullableJsonNullValueInput | InputJsonValue
    images?: NullableJsonNullValueInput | InputJsonValue
    status?: $Enums.ReviewStatus
    moderatedAt?: Date | string | null
    moderatedBy?: string | null
    moderationReason?: string | null
    verifiedPurchase?: boolean
    orderId?: string | null
    helpfulCount?: number
    totalVotes?: number
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type OrderItemCreateManyProductInput = {
    id?: string
    orderId: string
    quantity: number
    unitPrice: Decimal | DecimalJsLike | number | string
    totalPrice: Decimal | DecimalJsLike | number | string
    productName: string
    productSku?: string | null
    productBrand?: string | null
    thcPercentage?: Decimal | DecimalJsLike | number | string | null
    cbdPercentage?: Decimal | DecimalJsLike | number | string | null
    weightGrams?: Decimal | DecimalJsLike | number | string | null
    metrcPackageId?: string | null
    batchNumber?: string | null
    customerNotes?: string | null
    createdAt?: Date | string
  }

  export type ReviewUpdateWithoutProductInput = {
    id?: StringFieldUpdateOperationsInput | string
    reviewableType?: EnumReviewableTypeFieldUpdateOperationsInput | $Enums.ReviewableType
    rating?: IntFieldUpdateOperationsInput | number
    title?: NullableStringFieldUpdateOperationsInput | string | null
    content?: StringFieldUpdateOperationsInput | string
    qualityRating?: NullableIntFieldUpdateOperationsInput | number | null
    valueRating?: NullableIntFieldUpdateOperationsInput | number | null
    serviceRating?: NullableIntFieldUpdateOperationsInput | number | null
    effectsRating?: NullableIntFieldUpdateOperationsInput | number | null
    effects?: NullableJsonNullValueInput | InputJsonValue
    medicalBenefits?: NullableJsonNullValueInput | InputJsonValue
    sideEffects?: NullableJsonNullValueInput | InputJsonValue
    images?: NullableJsonNullValueInput | InputJsonValue
    status?: EnumReviewStatusFieldUpdateOperationsInput | $Enums.ReviewStatus
    moderatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    moderatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    moderationReason?: NullableStringFieldUpdateOperationsInput | string | null
    verifiedPurchase?: BoolFieldUpdateOperationsInput | boolean
    helpfulCount?: IntFieldUpdateOperationsInput | number
    totalVotes?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    user?: UserUpdateOneRequiredWithoutReviewsNestedInput
    order?: OrderUpdateOneWithoutReviewsNestedInput
    store?: StoreUpdateOneWithoutReviewsNestedInput
  }

  export type ReviewUncheckedUpdateWithoutProductInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    reviewableType?: EnumReviewableTypeFieldUpdateOperationsInput | $Enums.ReviewableType
    rating?: IntFieldUpdateOperationsInput | number
    title?: NullableStringFieldUpdateOperationsInput | string | null
    content?: StringFieldUpdateOperationsInput | string
    qualityRating?: NullableIntFieldUpdateOperationsInput | number | null
    valueRating?: NullableIntFieldUpdateOperationsInput | number | null
    serviceRating?: NullableIntFieldUpdateOperationsInput | number | null
    effectsRating?: NullableIntFieldUpdateOperationsInput | number | null
    effects?: NullableJsonNullValueInput | InputJsonValue
    medicalBenefits?: NullableJsonNullValueInput | InputJsonValue
    sideEffects?: NullableJsonNullValueInput | InputJsonValue
    images?: NullableJsonNullValueInput | InputJsonValue
    status?: EnumReviewStatusFieldUpdateOperationsInput | $Enums.ReviewStatus
    moderatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    moderatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    moderationReason?: NullableStringFieldUpdateOperationsInput | string | null
    verifiedPurchase?: BoolFieldUpdateOperationsInput | boolean
    orderId?: NullableStringFieldUpdateOperationsInput | string | null
    helpfulCount?: IntFieldUpdateOperationsInput | number
    totalVotes?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ReviewUncheckedUpdateManyWithoutProductInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    reviewableType?: EnumReviewableTypeFieldUpdateOperationsInput | $Enums.ReviewableType
    rating?: IntFieldUpdateOperationsInput | number
    title?: NullableStringFieldUpdateOperationsInput | string | null
    content?: StringFieldUpdateOperationsInput | string
    qualityRating?: NullableIntFieldUpdateOperationsInput | number | null
    valueRating?: NullableIntFieldUpdateOperationsInput | number | null
    serviceRating?: NullableIntFieldUpdateOperationsInput | number | null
    effectsRating?: NullableIntFieldUpdateOperationsInput | number | null
    effects?: NullableJsonNullValueInput | InputJsonValue
    medicalBenefits?: NullableJsonNullValueInput | InputJsonValue
    sideEffects?: NullableJsonNullValueInput | InputJsonValue
    images?: NullableJsonNullValueInput | InputJsonValue
    status?: EnumReviewStatusFieldUpdateOperationsInput | $Enums.ReviewStatus
    moderatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    moderatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    moderationReason?: NullableStringFieldUpdateOperationsInput | string | null
    verifiedPurchase?: BoolFieldUpdateOperationsInput | boolean
    orderId?: NullableStringFieldUpdateOperationsInput | string | null
    helpfulCount?: IntFieldUpdateOperationsInput | number
    totalVotes?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type OrderItemUpdateWithoutProductInput = {
    id?: StringFieldUpdateOperationsInput | string
    quantity?: IntFieldUpdateOperationsInput | number
    unitPrice?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    totalPrice?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    productName?: StringFieldUpdateOperationsInput | string
    productSku?: NullableStringFieldUpdateOperationsInput | string | null
    productBrand?: NullableStringFieldUpdateOperationsInput | string | null
    thcPercentage?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    cbdPercentage?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    weightGrams?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    metrcPackageId?: NullableStringFieldUpdateOperationsInput | string | null
    batchNumber?: NullableStringFieldUpdateOperationsInput | string | null
    customerNotes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    order?: OrderUpdateOneRequiredWithoutItemsNestedInput
  }

  export type OrderItemUncheckedUpdateWithoutProductInput = {
    id?: StringFieldUpdateOperationsInput | string
    orderId?: StringFieldUpdateOperationsInput | string
    quantity?: IntFieldUpdateOperationsInput | number
    unitPrice?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    totalPrice?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    productName?: StringFieldUpdateOperationsInput | string
    productSku?: NullableStringFieldUpdateOperationsInput | string | null
    productBrand?: NullableStringFieldUpdateOperationsInput | string | null
    thcPercentage?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    cbdPercentage?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    weightGrams?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    metrcPackageId?: NullableStringFieldUpdateOperationsInput | string | null
    batchNumber?: NullableStringFieldUpdateOperationsInput | string | null
    customerNotes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type OrderItemUncheckedUpdateManyWithoutProductInput = {
    id?: StringFieldUpdateOperationsInput | string
    orderId?: StringFieldUpdateOperationsInput | string
    quantity?: IntFieldUpdateOperationsInput | number
    unitPrice?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    totalPrice?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    productName?: StringFieldUpdateOperationsInput | string
    productSku?: NullableStringFieldUpdateOperationsInput | string | null
    productBrand?: NullableStringFieldUpdateOperationsInput | string | null
    thcPercentage?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    cbdPercentage?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    weightGrams?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    metrcPackageId?: NullableStringFieldUpdateOperationsInput | string | null
    batchNumber?: NullableStringFieldUpdateOperationsInput | string | null
    customerNotes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type OrderItemCreateManyOrderInput = {
    id?: string
    productId: string
    quantity: number
    unitPrice: Decimal | DecimalJsLike | number | string
    totalPrice: Decimal | DecimalJsLike | number | string
    productName: string
    productSku?: string | null
    productBrand?: string | null
    thcPercentage?: Decimal | DecimalJsLike | number | string | null
    cbdPercentage?: Decimal | DecimalJsLike | number | string | null
    weightGrams?: Decimal | DecimalJsLike | number | string | null
    metrcPackageId?: string | null
    batchNumber?: string | null
    customerNotes?: string | null
    createdAt?: Date | string
  }

  export type ReviewCreateManyOrderInput = {
    id?: string
    userId: string
    reviewableType: $Enums.ReviewableType
    reviewableId: string
    rating: number
    title?: string | null
    content: string
    qualityRating?: number | null
    valueRating?: number | null
    serviceRating?: number | null
    effectsRating?: number | null
    effects?: NullableJsonNullValueInput | InputJsonValue
    medicalBenefits?: NullableJsonNullValueInput | InputJsonValue
    sideEffects?: NullableJsonNullValueInput | InputJsonValue
    images?: NullableJsonNullValueInput | InputJsonValue
    status?: $Enums.ReviewStatus
    moderatedAt?: Date | string | null
    moderatedBy?: string | null
    moderationReason?: string | null
    verifiedPurchase?: boolean
    helpfulCount?: number
    totalVotes?: number
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type OrderItemUpdateWithoutOrderInput = {
    id?: StringFieldUpdateOperationsInput | string
    quantity?: IntFieldUpdateOperationsInput | number
    unitPrice?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    totalPrice?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    productName?: StringFieldUpdateOperationsInput | string
    productSku?: NullableStringFieldUpdateOperationsInput | string | null
    productBrand?: NullableStringFieldUpdateOperationsInput | string | null
    thcPercentage?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    cbdPercentage?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    weightGrams?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    metrcPackageId?: NullableStringFieldUpdateOperationsInput | string | null
    batchNumber?: NullableStringFieldUpdateOperationsInput | string | null
    customerNotes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    product?: ProductUpdateOneRequiredWithoutOrderItemsNestedInput
  }

  export type OrderItemUncheckedUpdateWithoutOrderInput = {
    id?: StringFieldUpdateOperationsInput | string
    productId?: StringFieldUpdateOperationsInput | string
    quantity?: IntFieldUpdateOperationsInput | number
    unitPrice?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    totalPrice?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    productName?: StringFieldUpdateOperationsInput | string
    productSku?: NullableStringFieldUpdateOperationsInput | string | null
    productBrand?: NullableStringFieldUpdateOperationsInput | string | null
    thcPercentage?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    cbdPercentage?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    weightGrams?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    metrcPackageId?: NullableStringFieldUpdateOperationsInput | string | null
    batchNumber?: NullableStringFieldUpdateOperationsInput | string | null
    customerNotes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type OrderItemUncheckedUpdateManyWithoutOrderInput = {
    id?: StringFieldUpdateOperationsInput | string
    productId?: StringFieldUpdateOperationsInput | string
    quantity?: IntFieldUpdateOperationsInput | number
    unitPrice?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    totalPrice?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    productName?: StringFieldUpdateOperationsInput | string
    productSku?: NullableStringFieldUpdateOperationsInput | string | null
    productBrand?: NullableStringFieldUpdateOperationsInput | string | null
    thcPercentage?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    cbdPercentage?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    weightGrams?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    metrcPackageId?: NullableStringFieldUpdateOperationsInput | string | null
    batchNumber?: NullableStringFieldUpdateOperationsInput | string | null
    customerNotes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ReviewUpdateWithoutOrderInput = {
    id?: StringFieldUpdateOperationsInput | string
    reviewableType?: EnumReviewableTypeFieldUpdateOperationsInput | $Enums.ReviewableType
    rating?: IntFieldUpdateOperationsInput | number
    title?: NullableStringFieldUpdateOperationsInput | string | null
    content?: StringFieldUpdateOperationsInput | string
    qualityRating?: NullableIntFieldUpdateOperationsInput | number | null
    valueRating?: NullableIntFieldUpdateOperationsInput | number | null
    serviceRating?: NullableIntFieldUpdateOperationsInput | number | null
    effectsRating?: NullableIntFieldUpdateOperationsInput | number | null
    effects?: NullableJsonNullValueInput | InputJsonValue
    medicalBenefits?: NullableJsonNullValueInput | InputJsonValue
    sideEffects?: NullableJsonNullValueInput | InputJsonValue
    images?: NullableJsonNullValueInput | InputJsonValue
    status?: EnumReviewStatusFieldUpdateOperationsInput | $Enums.ReviewStatus
    moderatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    moderatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    moderationReason?: NullableStringFieldUpdateOperationsInput | string | null
    verifiedPurchase?: BoolFieldUpdateOperationsInput | boolean
    helpfulCount?: IntFieldUpdateOperationsInput | number
    totalVotes?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    user?: UserUpdateOneRequiredWithoutReviewsNestedInput
    store?: StoreUpdateOneWithoutReviewsNestedInput
    product?: ProductUpdateOneWithoutReviewsNestedInput
  }

  export type ReviewUncheckedUpdateWithoutOrderInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    reviewableType?: EnumReviewableTypeFieldUpdateOperationsInput | $Enums.ReviewableType
    reviewableId?: StringFieldUpdateOperationsInput | string
    rating?: IntFieldUpdateOperationsInput | number
    title?: NullableStringFieldUpdateOperationsInput | string | null
    content?: StringFieldUpdateOperationsInput | string
    qualityRating?: NullableIntFieldUpdateOperationsInput | number | null
    valueRating?: NullableIntFieldUpdateOperationsInput | number | null
    serviceRating?: NullableIntFieldUpdateOperationsInput | number | null
    effectsRating?: NullableIntFieldUpdateOperationsInput | number | null
    effects?: NullableJsonNullValueInput | InputJsonValue
    medicalBenefits?: NullableJsonNullValueInput | InputJsonValue
    sideEffects?: NullableJsonNullValueInput | InputJsonValue
    images?: NullableJsonNullValueInput | InputJsonValue
    status?: EnumReviewStatusFieldUpdateOperationsInput | $Enums.ReviewStatus
    moderatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    moderatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    moderationReason?: NullableStringFieldUpdateOperationsInput | string | null
    verifiedPurchase?: BoolFieldUpdateOperationsInput | boolean
    helpfulCount?: IntFieldUpdateOperationsInput | number
    totalVotes?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ReviewUncheckedUpdateManyWithoutOrderInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    reviewableType?: EnumReviewableTypeFieldUpdateOperationsInput | $Enums.ReviewableType
    reviewableId?: StringFieldUpdateOperationsInput | string
    rating?: IntFieldUpdateOperationsInput | number
    title?: NullableStringFieldUpdateOperationsInput | string | null
    content?: StringFieldUpdateOperationsInput | string
    qualityRating?: NullableIntFieldUpdateOperationsInput | number | null
    valueRating?: NullableIntFieldUpdateOperationsInput | number | null
    serviceRating?: NullableIntFieldUpdateOperationsInput | number | null
    effectsRating?: NullableIntFieldUpdateOperationsInput | number | null
    effects?: NullableJsonNullValueInput | InputJsonValue
    medicalBenefits?: NullableJsonNullValueInput | InputJsonValue
    sideEffects?: NullableJsonNullValueInput | InputJsonValue
    images?: NullableJsonNullValueInput | InputJsonValue
    status?: EnumReviewStatusFieldUpdateOperationsInput | $Enums.ReviewStatus
    moderatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    moderatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    moderationReason?: NullableStringFieldUpdateOperationsInput | string | null
    verifiedPurchase?: BoolFieldUpdateOperationsInput | boolean
    helpfulCount?: IntFieldUpdateOperationsInput | number
    totalVotes?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ConsultationCreateManyProfessionalInput = {
    id?: string
    patientId: string
    consultationType: $Enums.ConsultationType
    sessionType: $Enums.SessionType
    scheduledAt: Date | string
    durationMinutes?: number
    timezone: string
    status?: string
    meetingUrl?: string | null
    meetingId?: string | null
    meetingPassword?: string | null
    chiefComplaint?: string | null
    symptoms?: NullableJsonNullValueInput | InputJsonValue
    currentMedications?: NullableJsonNullValueInput | InputJsonValue
    cannabisExperience?: string | null
    previousCannabisUse?: string | null
    assessment?: string | null
    recommendations?: string | null
    prescribedProducts?: NullableJsonNullValueInput | InputJsonValue
    followUpNeeded?: boolean
    followUpDate?: Date | string | null
    consultationFee: Decimal | DecimalJsLike | number | string
    paymentStatus?: string
    paymentId?: string | null
    medicalConsentSigned?: boolean
    privacyConsentSigned?: boolean
    consultationAgreementSigned?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type ConsultationUpdateWithoutProfessionalInput = {
    id?: StringFieldUpdateOperationsInput | string
    consultationType?: EnumConsultationTypeFieldUpdateOperationsInput | $Enums.ConsultationType
    sessionType?: EnumSessionTypeFieldUpdateOperationsInput | $Enums.SessionType
    scheduledAt?: DateTimeFieldUpdateOperationsInput | Date | string
    durationMinutes?: IntFieldUpdateOperationsInput | number
    timezone?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    meetingUrl?: NullableStringFieldUpdateOperationsInput | string | null
    meetingId?: NullableStringFieldUpdateOperationsInput | string | null
    meetingPassword?: NullableStringFieldUpdateOperationsInput | string | null
    chiefComplaint?: NullableStringFieldUpdateOperationsInput | string | null
    symptoms?: NullableJsonNullValueInput | InputJsonValue
    currentMedications?: NullableJsonNullValueInput | InputJsonValue
    cannabisExperience?: NullableStringFieldUpdateOperationsInput | string | null
    previousCannabisUse?: NullableStringFieldUpdateOperationsInput | string | null
    assessment?: NullableStringFieldUpdateOperationsInput | string | null
    recommendations?: NullableStringFieldUpdateOperationsInput | string | null
    prescribedProducts?: NullableJsonNullValueInput | InputJsonValue
    followUpNeeded?: BoolFieldUpdateOperationsInput | boolean
    followUpDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    consultationFee?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    paymentStatus?: StringFieldUpdateOperationsInput | string
    paymentId?: NullableStringFieldUpdateOperationsInput | string | null
    medicalConsentSigned?: BoolFieldUpdateOperationsInput | boolean
    privacyConsentSigned?: BoolFieldUpdateOperationsInput | boolean
    consultationAgreementSigned?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    patient?: UserUpdateOneRequiredWithoutConsultationsAsPatientNestedInput
  }

  export type ConsultationUncheckedUpdateWithoutProfessionalInput = {
    id?: StringFieldUpdateOperationsInput | string
    patientId?: StringFieldUpdateOperationsInput | string
    consultationType?: EnumConsultationTypeFieldUpdateOperationsInput | $Enums.ConsultationType
    sessionType?: EnumSessionTypeFieldUpdateOperationsInput | $Enums.SessionType
    scheduledAt?: DateTimeFieldUpdateOperationsInput | Date | string
    durationMinutes?: IntFieldUpdateOperationsInput | number
    timezone?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    meetingUrl?: NullableStringFieldUpdateOperationsInput | string | null
    meetingId?: NullableStringFieldUpdateOperationsInput | string | null
    meetingPassword?: NullableStringFieldUpdateOperationsInput | string | null
    chiefComplaint?: NullableStringFieldUpdateOperationsInput | string | null
    symptoms?: NullableJsonNullValueInput | InputJsonValue
    currentMedications?: NullableJsonNullValueInput | InputJsonValue
    cannabisExperience?: NullableStringFieldUpdateOperationsInput | string | null
    previousCannabisUse?: NullableStringFieldUpdateOperationsInput | string | null
    assessment?: NullableStringFieldUpdateOperationsInput | string | null
    recommendations?: NullableStringFieldUpdateOperationsInput | string | null
    prescribedProducts?: NullableJsonNullValueInput | InputJsonValue
    followUpNeeded?: BoolFieldUpdateOperationsInput | boolean
    followUpDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    consultationFee?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    paymentStatus?: StringFieldUpdateOperationsInput | string
    paymentId?: NullableStringFieldUpdateOperationsInput | string | null
    medicalConsentSigned?: BoolFieldUpdateOperationsInput | boolean
    privacyConsentSigned?: BoolFieldUpdateOperationsInput | boolean
    consultationAgreementSigned?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ConsultationUncheckedUpdateManyWithoutProfessionalInput = {
    id?: StringFieldUpdateOperationsInput | string
    patientId?: StringFieldUpdateOperationsInput | string
    consultationType?: EnumConsultationTypeFieldUpdateOperationsInput | $Enums.ConsultationType
    sessionType?: EnumSessionTypeFieldUpdateOperationsInput | $Enums.SessionType
    scheduledAt?: DateTimeFieldUpdateOperationsInput | Date | string
    durationMinutes?: IntFieldUpdateOperationsInput | number
    timezone?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    meetingUrl?: NullableStringFieldUpdateOperationsInput | string | null
    meetingId?: NullableStringFieldUpdateOperationsInput | string | null
    meetingPassword?: NullableStringFieldUpdateOperationsInput | string | null
    chiefComplaint?: NullableStringFieldUpdateOperationsInput | string | null
    symptoms?: NullableJsonNullValueInput | InputJsonValue
    currentMedications?: NullableJsonNullValueInput | InputJsonValue
    cannabisExperience?: NullableStringFieldUpdateOperationsInput | string | null
    previousCannabisUse?: NullableStringFieldUpdateOperationsInput | string | null
    assessment?: NullableStringFieldUpdateOperationsInput | string | null
    recommendations?: NullableStringFieldUpdateOperationsInput | string | null
    prescribedProducts?: NullableJsonNullValueInput | InputJsonValue
    followUpNeeded?: BoolFieldUpdateOperationsInput | boolean
    followUpDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    consultationFee?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    paymentStatus?: StringFieldUpdateOperationsInput | string
    paymentId?: NullableStringFieldUpdateOperationsInput | string | null
    medicalConsentSigned?: BoolFieldUpdateOperationsInput | boolean
    privacyConsentSigned?: BoolFieldUpdateOperationsInput | boolean
    consultationAgreementSigned?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }



  /**
   * Aliases for legacy arg types
   */
    /**
     * @deprecated Use UserCountOutputTypeDefaultArgs instead
     */
    export type UserCountOutputTypeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = UserCountOutputTypeDefaultArgs<ExtArgs>
    /**
     * @deprecated Use StoreCountOutputTypeDefaultArgs instead
     */
    export type StoreCountOutputTypeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = StoreCountOutputTypeDefaultArgs<ExtArgs>
    /**
     * @deprecated Use ProductCategoryCountOutputTypeDefaultArgs instead
     */
    export type ProductCategoryCountOutputTypeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = ProductCategoryCountOutputTypeDefaultArgs<ExtArgs>
    /**
     * @deprecated Use ProductCountOutputTypeDefaultArgs instead
     */
    export type ProductCountOutputTypeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = ProductCountOutputTypeDefaultArgs<ExtArgs>
    /**
     * @deprecated Use OrderCountOutputTypeDefaultArgs instead
     */
    export type OrderCountOutputTypeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = OrderCountOutputTypeDefaultArgs<ExtArgs>
    /**
     * @deprecated Use ProfessionalCountOutputTypeDefaultArgs instead
     */
    export type ProfessionalCountOutputTypeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = ProfessionalCountOutputTypeDefaultArgs<ExtArgs>
    /**
     * @deprecated Use UserDefaultArgs instead
     */
    export type UserArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = UserDefaultArgs<ExtArgs>
    /**
     * @deprecated Use UserAddressDefaultArgs instead
     */
    export type UserAddressArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = UserAddressDefaultArgs<ExtArgs>
    /**
     * @deprecated Use UserSessionDefaultArgs instead
     */
    export type UserSessionArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = UserSessionDefaultArgs<ExtArgs>
    /**
     * @deprecated Use StoreDefaultArgs instead
     */
    export type StoreArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = StoreDefaultArgs<ExtArgs>
    /**
     * @deprecated Use StoreStaffDefaultArgs instead
     */
    export type StoreStaffArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = StoreStaffDefaultArgs<ExtArgs>
    /**
     * @deprecated Use ProductCategoryDefaultArgs instead
     */
    export type ProductCategoryArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = ProductCategoryDefaultArgs<ExtArgs>
    /**
     * @deprecated Use ProductDefaultArgs instead
     */
    export type ProductArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = ProductDefaultArgs<ExtArgs>
    /**
     * @deprecated Use OrderDefaultArgs instead
     */
    export type OrderArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = OrderDefaultArgs<ExtArgs>
    /**
     * @deprecated Use OrderItemDefaultArgs instead
     */
    export type OrderItemArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = OrderItemDefaultArgs<ExtArgs>
    /**
     * @deprecated Use ReviewDefaultArgs instead
     */
    export type ReviewArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = ReviewDefaultArgs<ExtArgs>
    /**
     * @deprecated Use ProfessionalDefaultArgs instead
     */
    export type ProfessionalArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = ProfessionalDefaultArgs<ExtArgs>
    /**
     * @deprecated Use ConsultationDefaultArgs instead
     */
    export type ConsultationArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = ConsultationDefaultArgs<ExtArgs>
    /**
     * @deprecated Use BlogPostDefaultArgs instead
     */
    export type BlogPostArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = BlogPostDefaultArgs<ExtArgs>
    /**
     * @deprecated Use AuditLogDefaultArgs instead
     */
    export type AuditLogArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = AuditLogDefaultArgs<ExtArgs>

  /**
   * Batch Payload for updateMany & deleteMany & createMany
   */

  export type BatchPayload = {
    count: number
  }

  /**
   * DMMF
   */
  export const dmmf: runtime.BaseDMMF
}